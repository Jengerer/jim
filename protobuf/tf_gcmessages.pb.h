// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tf_gcmessages.proto

#ifndef PROTOBUF_tf_5fgcmessages_2eproto__INCLUDED
#define PROTOBUF_tf_5fgcmessages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "steammessages.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

class CMsgTFGoldenWrenchBroadcast;
class CMsgTFSaxxyBroadcast;
class CMsgTFIncrementKillCountResponse;
class CSOTFDuelSummary;
class CSOTFMapContribution;
class CMsgTFVoteKickBanPlayer;
class CMsgTFVoteKickBanPlayerResult;
class CMsgTFKickPlayer;
class CMsgTFStartedTraining;
class CMsgTFFreeTrialChooseMostHelpfulFriend;
class CMsgTFRequestTF2Friends;
class CMsgTFRequestTF2FriendsResponse;
class CSOTFPlayerInfo;
class CMsgTFThankedBySomeone;
class CMsgTFThankedSomeone;
class CMsgTFFreeTrialConvertedToPremium;
class CMsgSaxxyAwarded;
class CMsgReplayUploadedToYouTube;
class CMsgReplaySubmitContestEntry;
class CMsgReplaySubmitContestEntryResponse;
class CReplayCachedContestData;
class CMsgTFCoaching_AddToCoaches;
class CMsgTFCoaching_RemoveFromCoaches;
class CMsgTFCoaching_FindCoach;
class CMsgTFCoaching_FindCoachResponse;
class CMsgTFCoaching_AskCoach;
class CMsgTFCoaching_AskCoachResponse;
class CMsgTFCoaching_CoachJoinGame;
class CMsgTFCoaching_CoachJoining;
class CMsgTFCoaching_CoachJoined;
class CMsgTFCoaching_LikeCurrentCoach;
class CMsgTFCoaching_RemoveCurrentCoach;
class CMsgTFQuickplay_ScoreServers;
class CMsgTFQuickplay_ScoreServers_ServerInfo;
class CMsgTFQuickplay_ScoreServersResponse;
class CMsgTFQuickplay_ScoreServersResponse_ServerInfo;
class CMsgTFQuickplay_PlayerJoining;
class CMsgGC_GameServer_LevelInfo;
class CMsgGC_GameServer_AuthChallenge;
class CMsgGC_GameServer_AuthResult;
class CMsgGC_GameServer_AuthChallengeResponse;
class CMsgGC_GameServer_CreateIdentity;
class CMsgGC_GameServer_CreateIdentityResponse;
class CMsgGC_GameServer_List;
class CMsgGC_GameServer_ListResponse;
class CMsgGC_GameServer_ListResponse_GameServerIdentity;
class CMsgGC_GameServer_ResetIdentity;
class CMsgGC_GameServer_ResetIdentityResponse;

enum CMsgGC_GameServer_CreateIdentityResponse_EStatus {
  CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_GenericFailure = 0,
  CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_TooMany = -1,
  CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_NoPrivs = -2,
  CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_Created = 1
};
bool CMsgGC_GameServer_CreateIdentityResponse_EStatus_IsValid(int value);
const CMsgGC_GameServer_CreateIdentityResponse_EStatus CMsgGC_GameServer_CreateIdentityResponse_EStatus_EStatus_MIN = CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_NoPrivs;
const CMsgGC_GameServer_CreateIdentityResponse_EStatus CMsgGC_GameServer_CreateIdentityResponse_EStatus_EStatus_MAX = CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_Created;
const int CMsgGC_GameServer_CreateIdentityResponse_EStatus_EStatus_ARRAYSIZE = CMsgGC_GameServer_CreateIdentityResponse_EStatus_EStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGC_GameServer_CreateIdentityResponse_EStatus_descriptor();
inline const ::std::string& CMsgGC_GameServer_CreateIdentityResponse_EStatus_Name(CMsgGC_GameServer_CreateIdentityResponse_EStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGC_GameServer_CreateIdentityResponse_EStatus_descriptor(), value);
}
inline bool CMsgGC_GameServer_CreateIdentityResponse_EStatus_Parse(
    const ::std::string& name, CMsgGC_GameServer_CreateIdentityResponse_EStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGC_GameServer_CreateIdentityResponse_EStatus>(
    CMsgGC_GameServer_CreateIdentityResponse_EStatus_descriptor(), name, value);
}
// ===================================================================

class CMsgTFGoldenWrenchBroadcast : public ::google::protobuf::Message {
 public:
  CMsgTFGoldenWrenchBroadcast();
  virtual ~CMsgTFGoldenWrenchBroadcast();
  
  CMsgTFGoldenWrenchBroadcast(const CMsgTFGoldenWrenchBroadcast& from);
  
  inline CMsgTFGoldenWrenchBroadcast& operator=(const CMsgTFGoldenWrenchBroadcast& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFGoldenWrenchBroadcast& default_instance();
  
  void Swap(CMsgTFGoldenWrenchBroadcast* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFGoldenWrenchBroadcast* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFGoldenWrenchBroadcast& from);
  void MergeFrom(const CMsgTFGoldenWrenchBroadcast& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 wrench_number = 1;
  inline bool has_wrench_number() const;
  inline void clear_wrench_number();
  static const int kWrenchNumberFieldNumber = 1;
  inline ::google::protobuf::int32 wrench_number() const;
  inline void set_wrench_number(::google::protobuf::int32 value);
  
  // optional bool deleted = 2;
  inline bool has_deleted() const;
  inline void clear_deleted();
  static const int kDeletedFieldNumber = 2;
  inline bool deleted() const;
  inline void set_deleted(bool value);
  
  // optional string user_name = 3;
  inline bool has_user_name() const;
  inline void clear_user_name();
  static const int kUserNameFieldNumber = 3;
  inline const ::std::string& user_name() const;
  inline void set_user_name(const ::std::string& value);
  inline void set_user_name(const char* value);
  inline void set_user_name(const char* value, size_t size);
  inline ::std::string* mutable_user_name();
  inline ::std::string* release_user_name();
  
  // @@protoc_insertion_point(class_scope:CMsgTFGoldenWrenchBroadcast)
 private:
  inline void set_has_wrench_number();
  inline void clear_has_wrench_number();
  inline void set_has_deleted();
  inline void clear_has_deleted();
  inline void set_has_user_name();
  inline void clear_has_user_name();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 wrench_number_;
  bool deleted_;
  ::std::string* user_name_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgTFGoldenWrenchBroadcast* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFSaxxyBroadcast : public ::google::protobuf::Message {
 public:
  CMsgTFSaxxyBroadcast();
  virtual ~CMsgTFSaxxyBroadcast();
  
  CMsgTFSaxxyBroadcast(const CMsgTFSaxxyBroadcast& from);
  
  inline CMsgTFSaxxyBroadcast& operator=(const CMsgTFSaxxyBroadcast& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFSaxxyBroadcast& default_instance();
  
  void Swap(CMsgTFSaxxyBroadcast* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFSaxxyBroadcast* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFSaxxyBroadcast& from);
  void MergeFrom(const CMsgTFSaxxyBroadcast& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 category_number = 1;
  inline bool has_category_number() const;
  inline void clear_category_number();
  static const int kCategoryNumberFieldNumber = 1;
  inline ::google::protobuf::int32 category_number() const;
  inline void set_category_number(::google::protobuf::int32 value);
  
  // optional string user_name = 2;
  inline bool has_user_name() const;
  inline void clear_user_name();
  static const int kUserNameFieldNumber = 2;
  inline const ::std::string& user_name() const;
  inline void set_user_name(const ::std::string& value);
  inline void set_user_name(const char* value);
  inline void set_user_name(const char* value, size_t size);
  inline ::std::string* mutable_user_name();
  inline ::std::string* release_user_name();
  
  // @@protoc_insertion_point(class_scope:CMsgTFSaxxyBroadcast)
 private:
  inline void set_has_category_number();
  inline void clear_has_category_number();
  inline void set_has_user_name();
  inline void clear_has_user_name();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* user_name_;
  ::google::protobuf::int32 category_number_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgTFSaxxyBroadcast* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFIncrementKillCountResponse : public ::google::protobuf::Message {
 public:
  CMsgTFIncrementKillCountResponse();
  virtual ~CMsgTFIncrementKillCountResponse();
  
  CMsgTFIncrementKillCountResponse(const CMsgTFIncrementKillCountResponse& from);
  
  inline CMsgTFIncrementKillCountResponse& operator=(const CMsgTFIncrementKillCountResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFIncrementKillCountResponse& default_instance();
  
  void Swap(CMsgTFIncrementKillCountResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFIncrementKillCountResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFIncrementKillCountResponse& from);
  void MergeFrom(const CMsgTFIncrementKillCountResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 killer_account_id = 1;
  inline bool has_killer_account_id() const;
  inline void clear_killer_account_id();
  static const int kKillerAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 killer_account_id() const;
  inline void set_killer_account_id(::google::protobuf::uint32 value);
  
  // optional uint32 num_kills = 2;
  inline bool has_num_kills() const;
  inline void clear_num_kills();
  static const int kNumKillsFieldNumber = 2;
  inline ::google::protobuf::uint32 num_kills() const;
  inline void set_num_kills(::google::protobuf::uint32 value);
  
  // optional uint32 item_def = 3;
  inline bool has_item_def() const;
  inline void clear_item_def();
  static const int kItemDefFieldNumber = 3;
  inline ::google::protobuf::uint32 item_def() const;
  inline void set_item_def(::google::protobuf::uint32 value);
  
  // optional uint32 new_rank = 4;
  inline bool has_new_rank() const;
  inline void clear_new_rank();
  static const int kNewRankFieldNumber = 4;
  inline ::google::protobuf::uint32 new_rank() const;
  inline void set_new_rank(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgTFIncrementKillCountResponse)
 private:
  inline void set_has_killer_account_id();
  inline void clear_has_killer_account_id();
  inline void set_has_num_kills();
  inline void clear_has_num_kills();
  inline void set_has_item_def();
  inline void clear_has_item_def();
  inline void set_has_new_rank();
  inline void clear_has_new_rank();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 killer_account_id_;
  ::google::protobuf::uint32 num_kills_;
  ::google::protobuf::uint32 item_def_;
  ::google::protobuf::uint32 new_rank_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgTFIncrementKillCountResponse* default_instance_;
};
// -------------------------------------------------------------------

class CSOTFDuelSummary : public ::google::protobuf::Message {
 public:
  CSOTFDuelSummary();
  virtual ~CSOTFDuelSummary();
  
  CSOTFDuelSummary(const CSOTFDuelSummary& from);
  
  inline CSOTFDuelSummary& operator=(const CSOTFDuelSummary& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFDuelSummary& default_instance();
  
  void Swap(CSOTFDuelSummary* other);
  
  // implements Message ----------------------------------------------
  
  CSOTFDuelSummary* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOTFDuelSummary& from);
  void MergeFrom(const CSOTFDuelSummary& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);
  
  // optional uint32 duel_wins = 2;
  inline bool has_duel_wins() const;
  inline void clear_duel_wins();
  static const int kDuelWinsFieldNumber = 2;
  inline ::google::protobuf::uint32 duel_wins() const;
  inline void set_duel_wins(::google::protobuf::uint32 value);
  
  // optional uint32 duel_losses = 3;
  inline bool has_duel_losses() const;
  inline void clear_duel_losses();
  static const int kDuelLossesFieldNumber = 3;
  inline ::google::protobuf::uint32 duel_losses() const;
  inline void set_duel_losses(::google::protobuf::uint32 value);
  
  // optional uint32 last_duel_account_id = 4;
  inline bool has_last_duel_account_id() const;
  inline void clear_last_duel_account_id();
  static const int kLastDuelAccountIdFieldNumber = 4;
  inline ::google::protobuf::uint32 last_duel_account_id() const;
  inline void set_last_duel_account_id(::google::protobuf::uint32 value);
  
  // optional uint32 last_duel_timestamp = 5;
  inline bool has_last_duel_timestamp() const;
  inline void clear_last_duel_timestamp();
  static const int kLastDuelTimestampFieldNumber = 5;
  inline ::google::protobuf::uint32 last_duel_timestamp() const;
  inline void set_last_duel_timestamp(::google::protobuf::uint32 value);
  
  // optional uint32 last_duel_status = 6;
  inline bool has_last_duel_status() const;
  inline void clear_last_duel_status();
  static const int kLastDuelStatusFieldNumber = 6;
  inline ::google::protobuf::uint32 last_duel_status() const;
  inline void set_last_duel_status(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSOTFDuelSummary)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_duel_wins();
  inline void clear_has_duel_wins();
  inline void set_has_duel_losses();
  inline void clear_has_duel_losses();
  inline void set_has_last_duel_account_id();
  inline void clear_has_last_duel_account_id();
  inline void set_has_last_duel_timestamp();
  inline void clear_has_last_duel_timestamp();
  inline void set_has_last_duel_status();
  inline void clear_has_last_duel_status();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 duel_wins_;
  ::google::protobuf::uint32 duel_losses_;
  ::google::protobuf::uint32 last_duel_account_id_;
  ::google::protobuf::uint32 last_duel_timestamp_;
  ::google::protobuf::uint32 last_duel_status_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CSOTFDuelSummary* default_instance_;
};
// -------------------------------------------------------------------

class CSOTFMapContribution : public ::google::protobuf::Message {
 public:
  CSOTFMapContribution();
  virtual ~CSOTFMapContribution();
  
  CSOTFMapContribution(const CSOTFMapContribution& from);
  
  inline CSOTFMapContribution& operator=(const CSOTFMapContribution& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFMapContribution& default_instance();
  
  void Swap(CSOTFMapContribution* other);
  
  // implements Message ----------------------------------------------
  
  CSOTFMapContribution* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOTFMapContribution& from);
  void MergeFrom(const CSOTFMapContribution& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);
  
  // optional uint32 def_index = 2;
  inline bool has_def_index() const;
  inline void clear_def_index();
  static const int kDefIndexFieldNumber = 2;
  inline ::google::protobuf::uint32 def_index() const;
  inline void set_def_index(::google::protobuf::uint32 value);
  
  // optional uint32 contribution_level = 3;
  inline bool has_contribution_level() const;
  inline void clear_contribution_level();
  static const int kContributionLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 contribution_level() const;
  inline void set_contribution_level(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSOTFMapContribution)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_def_index();
  inline void clear_has_def_index();
  inline void set_has_contribution_level();
  inline void clear_has_contribution_level();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 def_index_;
  ::google::protobuf::uint32 contribution_level_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CSOTFMapContribution* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFVoteKickBanPlayer : public ::google::protobuf::Message {
 public:
  CMsgTFVoteKickBanPlayer();
  virtual ~CMsgTFVoteKickBanPlayer();
  
  CMsgTFVoteKickBanPlayer(const CMsgTFVoteKickBanPlayer& from);
  
  inline CMsgTFVoteKickBanPlayer& operator=(const CMsgTFVoteKickBanPlayer& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFVoteKickBanPlayer& default_instance();
  
  void Swap(CMsgTFVoteKickBanPlayer* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFVoteKickBanPlayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFVoteKickBanPlayer& from);
  void MergeFrom(const CMsgTFVoteKickBanPlayer& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 account_id_subject = 1;
  inline bool has_account_id_subject() const;
  inline void clear_account_id_subject();
  static const int kAccountIdSubjectFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id_subject() const;
  inline void set_account_id_subject(::google::protobuf::uint32 value);
  
  // optional uint32 kick_reason = 2;
  inline bool has_kick_reason() const;
  inline void clear_kick_reason();
  static const int kKickReasonFieldNumber = 2;
  inline ::google::protobuf::uint32 kick_reason() const;
  inline void set_kick_reason(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgTFVoteKickBanPlayer)
 private:
  inline void set_has_account_id_subject();
  inline void clear_has_account_id_subject();
  inline void set_has_kick_reason();
  inline void clear_has_kick_reason();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 account_id_subject_;
  ::google::protobuf::uint32 kick_reason_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgTFVoteKickBanPlayer* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFVoteKickBanPlayerResult : public ::google::protobuf::Message {
 public:
  CMsgTFVoteKickBanPlayerResult();
  virtual ~CMsgTFVoteKickBanPlayerResult();
  
  CMsgTFVoteKickBanPlayerResult(const CMsgTFVoteKickBanPlayerResult& from);
  
  inline CMsgTFVoteKickBanPlayerResult& operator=(const CMsgTFVoteKickBanPlayerResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFVoteKickBanPlayerResult& default_instance();
  
  void Swap(CMsgTFVoteKickBanPlayerResult* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFVoteKickBanPlayerResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFVoteKickBanPlayerResult& from);
  void MergeFrom(const CMsgTFVoteKickBanPlayerResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 account_id_initiator = 1;
  inline bool has_account_id_initiator() const;
  inline void clear_account_id_initiator();
  static const int kAccountIdInitiatorFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id_initiator() const;
  inline void set_account_id_initiator(::google::protobuf::uint32 value);
  
  // optional uint32 account_id_subject = 2;
  inline bool has_account_id_subject() const;
  inline void clear_account_id_subject();
  static const int kAccountIdSubjectFieldNumber = 2;
  inline ::google::protobuf::uint32 account_id_subject() const;
  inline void set_account_id_subject(::google::protobuf::uint32 value);
  
  // optional uint32 kick_reason = 3;
  inline bool has_kick_reason() const;
  inline void clear_kick_reason();
  static const int kKickReasonFieldNumber = 3;
  inline ::google::protobuf::uint32 kick_reason() const;
  inline void set_kick_reason(::google::protobuf::uint32 value);
  
  // optional bool kick_successful = 4;
  inline bool has_kick_successful() const;
  inline void clear_kick_successful();
  static const int kKickSuccessfulFieldNumber = 4;
  inline bool kick_successful() const;
  inline void set_kick_successful(bool value);
  
  // optional uint32 num_yes_votes = 5;
  inline bool has_num_yes_votes() const;
  inline void clear_num_yes_votes();
  static const int kNumYesVotesFieldNumber = 5;
  inline ::google::protobuf::uint32 num_yes_votes() const;
  inline void set_num_yes_votes(::google::protobuf::uint32 value);
  
  // optional uint32 num_no_votes = 6;
  inline bool has_num_no_votes() const;
  inline void clear_num_no_votes();
  static const int kNumNoVotesFieldNumber = 6;
  inline ::google::protobuf::uint32 num_no_votes() const;
  inline void set_num_no_votes(::google::protobuf::uint32 value);
  
  // optional uint32 num_possible_votes = 7;
  inline bool has_num_possible_votes() const;
  inline void clear_num_possible_votes();
  static const int kNumPossibleVotesFieldNumber = 7;
  inline ::google::protobuf::uint32 num_possible_votes() const;
  inline void set_num_possible_votes(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgTFVoteKickBanPlayerResult)
 private:
  inline void set_has_account_id_initiator();
  inline void clear_has_account_id_initiator();
  inline void set_has_account_id_subject();
  inline void clear_has_account_id_subject();
  inline void set_has_kick_reason();
  inline void clear_has_kick_reason();
  inline void set_has_kick_successful();
  inline void clear_has_kick_successful();
  inline void set_has_num_yes_votes();
  inline void clear_has_num_yes_votes();
  inline void set_has_num_no_votes();
  inline void clear_has_num_no_votes();
  inline void set_has_num_possible_votes();
  inline void clear_has_num_possible_votes();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 account_id_initiator_;
  ::google::protobuf::uint32 account_id_subject_;
  ::google::protobuf::uint32 kick_reason_;
  bool kick_successful_;
  ::google::protobuf::uint32 num_yes_votes_;
  ::google::protobuf::uint32 num_no_votes_;
  ::google::protobuf::uint32 num_possible_votes_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgTFVoteKickBanPlayerResult* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFKickPlayer : public ::google::protobuf::Message {
 public:
  CMsgTFKickPlayer();
  virtual ~CMsgTFKickPlayer();
  
  CMsgTFKickPlayer(const CMsgTFKickPlayer& from);
  
  inline CMsgTFKickPlayer& operator=(const CMsgTFKickPlayer& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFKickPlayer& default_instance();
  
  void Swap(CMsgTFKickPlayer* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFKickPlayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFKickPlayer& from);
  void MergeFrom(const CMsgTFKickPlayer& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 account_id_player = 1;
  inline bool has_account_id_player() const;
  inline void clear_account_id_player();
  static const int kAccountIdPlayerFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id_player() const;
  inline void set_account_id_player(::google::protobuf::uint32 value);
  
  // optional uint32 kick_reason = 2;
  inline bool has_kick_reason() const;
  inline void clear_kick_reason();
  static const int kKickReasonFieldNumber = 2;
  inline ::google::protobuf::uint32 kick_reason() const;
  inline void set_kick_reason(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgTFKickPlayer)
 private:
  inline void set_has_account_id_player();
  inline void clear_has_account_id_player();
  inline void set_has_kick_reason();
  inline void clear_has_kick_reason();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 account_id_player_;
  ::google::protobuf::uint32 kick_reason_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgTFKickPlayer* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFStartedTraining : public ::google::protobuf::Message {
 public:
  CMsgTFStartedTraining();
  virtual ~CMsgTFStartedTraining();
  
  CMsgTFStartedTraining(const CMsgTFStartedTraining& from);
  
  inline CMsgTFStartedTraining& operator=(const CMsgTFStartedTraining& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFStartedTraining& default_instance();
  
  void Swap(CMsgTFStartedTraining* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFStartedTraining* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFStartedTraining& from);
  void MergeFrom(const CMsgTFStartedTraining& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CMsgTFStartedTraining)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgTFStartedTraining* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFFreeTrialChooseMostHelpfulFriend : public ::google::protobuf::Message {
 public:
  CMsgTFFreeTrialChooseMostHelpfulFriend();
  virtual ~CMsgTFFreeTrialChooseMostHelpfulFriend();
  
  CMsgTFFreeTrialChooseMostHelpfulFriend(const CMsgTFFreeTrialChooseMostHelpfulFriend& from);
  
  inline CMsgTFFreeTrialChooseMostHelpfulFriend& operator=(const CMsgTFFreeTrialChooseMostHelpfulFriend& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFFreeTrialChooseMostHelpfulFriend& default_instance();
  
  void Swap(CMsgTFFreeTrialChooseMostHelpfulFriend* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFFreeTrialChooseMostHelpfulFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFFreeTrialChooseMostHelpfulFriend& from);
  void MergeFrom(const CMsgTFFreeTrialChooseMostHelpfulFriend& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 account_id_friend = 1;
  inline bool has_account_id_friend() const;
  inline void clear_account_id_friend();
  static const int kAccountIdFriendFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id_friend() const;
  inline void set_account_id_friend(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgTFFreeTrialChooseMostHelpfulFriend)
 private:
  inline void set_has_account_id_friend();
  inline void clear_has_account_id_friend();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 account_id_friend_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgTFFreeTrialChooseMostHelpfulFriend* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFRequestTF2Friends : public ::google::protobuf::Message {
 public:
  CMsgTFRequestTF2Friends();
  virtual ~CMsgTFRequestTF2Friends();
  
  CMsgTFRequestTF2Friends(const CMsgTFRequestTF2Friends& from);
  
  inline CMsgTFRequestTF2Friends& operator=(const CMsgTFRequestTF2Friends& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFRequestTF2Friends& default_instance();
  
  void Swap(CMsgTFRequestTF2Friends* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFRequestTF2Friends* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFRequestTF2Friends& from);
  void MergeFrom(const CMsgTFRequestTF2Friends& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 account_ids = 1;
  inline int account_ids_size() const;
  inline void clear_account_ids();
  static const int kAccountIdsFieldNumber = 1;
  inline ::google::protobuf::uint32 account_ids(int index) const;
  inline void set_account_ids(int index, ::google::protobuf::uint32 value);
  inline void add_account_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      account_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_account_ids();
  
  // @@protoc_insertion_point(class_scope:CMsgTFRequestTF2Friends)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > account_ids_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgTFRequestTF2Friends* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFRequestTF2FriendsResponse : public ::google::protobuf::Message {
 public:
  CMsgTFRequestTF2FriendsResponse();
  virtual ~CMsgTFRequestTF2FriendsResponse();
  
  CMsgTFRequestTF2FriendsResponse(const CMsgTFRequestTF2FriendsResponse& from);
  
  inline CMsgTFRequestTF2FriendsResponse& operator=(const CMsgTFRequestTF2FriendsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFRequestTF2FriendsResponse& default_instance();
  
  void Swap(CMsgTFRequestTF2FriendsResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFRequestTF2FriendsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFRequestTF2FriendsResponse& from);
  void MergeFrom(const CMsgTFRequestTF2FriendsResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 account_ids = 1;
  inline int account_ids_size() const;
  inline void clear_account_ids();
  static const int kAccountIdsFieldNumber = 1;
  inline ::google::protobuf::uint32 account_ids(int index) const;
  inline void set_account_ids(int index, ::google::protobuf::uint32 value);
  inline void add_account_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      account_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_account_ids();
  
  // @@protoc_insertion_point(class_scope:CMsgTFRequestTF2FriendsResponse)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > account_ids_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgTFRequestTF2FriendsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CSOTFPlayerInfo : public ::google::protobuf::Message {
 public:
  CSOTFPlayerInfo();
  virtual ~CSOTFPlayerInfo();
  
  CSOTFPlayerInfo(const CSOTFPlayerInfo& from);
  
  inline CSOTFPlayerInfo& operator=(const CSOTFPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFPlayerInfo& default_instance();
  
  void Swap(CSOTFPlayerInfo* other);
  
  // implements Message ----------------------------------------------
  
  CSOTFPlayerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOTFPlayerInfo& from);
  void MergeFrom(const CSOTFPlayerInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 num_new_users_helped = 1;
  inline bool has_num_new_users_helped() const;
  inline void clear_num_new_users_helped();
  static const int kNumNewUsersHelpedFieldNumber = 1;
  inline ::google::protobuf::uint32 num_new_users_helped() const;
  inline void set_num_new_users_helped(::google::protobuf::uint32 value);
  
  // optional bool trial_account = 2 [default = false];
  inline bool has_trial_account() const;
  inline void clear_trial_account();
  static const int kTrialAccountFieldNumber = 2;
  inline bool trial_account() const;
  inline void set_trial_account(bool value);
  
  // @@protoc_insertion_point(class_scope:CSOTFPlayerInfo)
 private:
  inline void set_has_num_new_users_helped();
  inline void clear_has_num_new_users_helped();
  inline void set_has_trial_account();
  inline void clear_has_trial_account();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 num_new_users_helped_;
  bool trial_account_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CSOTFPlayerInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFThankedBySomeone : public ::google::protobuf::Message {
 public:
  CMsgTFThankedBySomeone();
  virtual ~CMsgTFThankedBySomeone();
  
  CMsgTFThankedBySomeone(const CMsgTFThankedBySomeone& from);
  
  inline CMsgTFThankedBySomeone& operator=(const CMsgTFThankedBySomeone& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFThankedBySomeone& default_instance();
  
  void Swap(CMsgTFThankedBySomeone* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFThankedBySomeone* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFThankedBySomeone& from);
  void MergeFrom(const CMsgTFThankedBySomeone& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 thanker_steam_id = 1;
  inline bool has_thanker_steam_id() const;
  inline void clear_thanker_steam_id();
  static const int kThankerSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 thanker_steam_id() const;
  inline void set_thanker_steam_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:CMsgTFThankedBySomeone)
 private:
  inline void set_has_thanker_steam_id();
  inline void clear_has_thanker_steam_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 thanker_steam_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgTFThankedBySomeone* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFThankedSomeone : public ::google::protobuf::Message {
 public:
  CMsgTFThankedSomeone();
  virtual ~CMsgTFThankedSomeone();
  
  CMsgTFThankedSomeone(const CMsgTFThankedSomeone& from);
  
  inline CMsgTFThankedSomeone& operator=(const CMsgTFThankedSomeone& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFThankedSomeone& default_instance();
  
  void Swap(CMsgTFThankedSomeone* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFThankedSomeone* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFThankedSomeone& from);
  void MergeFrom(const CMsgTFThankedSomeone& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CMsgTFThankedSomeone)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgTFThankedSomeone* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFFreeTrialConvertedToPremium : public ::google::protobuf::Message {
 public:
  CMsgTFFreeTrialConvertedToPremium();
  virtual ~CMsgTFFreeTrialConvertedToPremium();
  
  CMsgTFFreeTrialConvertedToPremium(const CMsgTFFreeTrialConvertedToPremium& from);
  
  inline CMsgTFFreeTrialConvertedToPremium& operator=(const CMsgTFFreeTrialConvertedToPremium& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFFreeTrialConvertedToPremium& default_instance();
  
  void Swap(CMsgTFFreeTrialConvertedToPremium* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFFreeTrialConvertedToPremium* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFFreeTrialConvertedToPremium& from);
  void MergeFrom(const CMsgTFFreeTrialConvertedToPremium& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CMsgTFFreeTrialConvertedToPremium)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgTFFreeTrialConvertedToPremium* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSaxxyAwarded : public ::google::protobuf::Message {
 public:
  CMsgSaxxyAwarded();
  virtual ~CMsgSaxxyAwarded();
  
  CMsgSaxxyAwarded(const CMsgSaxxyAwarded& from);
  
  inline CMsgSaxxyAwarded& operator=(const CMsgSaxxyAwarded& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSaxxyAwarded& default_instance();
  
  void Swap(CMsgSaxxyAwarded* other);
  
  // implements Message ----------------------------------------------
  
  CMsgSaxxyAwarded* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSaxxyAwarded& from);
  void MergeFrom(const CMsgSaxxyAwarded& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 category = 1;
  inline bool has_category() const;
  inline void clear_category();
  static const int kCategoryFieldNumber = 1;
  inline ::google::protobuf::uint32 category() const;
  inline void set_category(::google::protobuf::uint32 value);
  
  // repeated string winner_names = 2;
  inline int winner_names_size() const;
  inline void clear_winner_names();
  static const int kWinnerNamesFieldNumber = 2;
  inline const ::std::string& winner_names(int index) const;
  inline ::std::string* mutable_winner_names(int index);
  inline void set_winner_names(int index, const ::std::string& value);
  inline void set_winner_names(int index, const char* value);
  inline void set_winner_names(int index, const char* value, size_t size);
  inline ::std::string* add_winner_names();
  inline void add_winner_names(const ::std::string& value);
  inline void add_winner_names(const char* value);
  inline void add_winner_names(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& winner_names() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_winner_names();
  
  // @@protoc_insertion_point(class_scope:CMsgSaxxyAwarded)
 private:
  inline void set_has_category();
  inline void clear_has_category();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::std::string> winner_names_;
  ::google::protobuf::uint32 category_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgSaxxyAwarded* default_instance_;
};
// -------------------------------------------------------------------

class CMsgReplayUploadedToYouTube : public ::google::protobuf::Message {
 public:
  CMsgReplayUploadedToYouTube();
  virtual ~CMsgReplayUploadedToYouTube();
  
  CMsgReplayUploadedToYouTube(const CMsgReplayUploadedToYouTube& from);
  
  inline CMsgReplayUploadedToYouTube& operator=(const CMsgReplayUploadedToYouTube& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgReplayUploadedToYouTube& default_instance();
  
  void Swap(CMsgReplayUploadedToYouTube* other);
  
  // implements Message ----------------------------------------------
  
  CMsgReplayUploadedToYouTube* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgReplayUploadedToYouTube& from);
  void MergeFrom(const CMsgReplayUploadedToYouTube& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string youtube_url = 1;
  inline bool has_youtube_url() const;
  inline void clear_youtube_url();
  static const int kYoutubeUrlFieldNumber = 1;
  inline const ::std::string& youtube_url() const;
  inline void set_youtube_url(const ::std::string& value);
  inline void set_youtube_url(const char* value);
  inline void set_youtube_url(const char* value, size_t size);
  inline ::std::string* mutable_youtube_url();
  inline ::std::string* release_youtube_url();
  
  // optional string youtube_account_name = 2;
  inline bool has_youtube_account_name() const;
  inline void clear_youtube_account_name();
  static const int kYoutubeAccountNameFieldNumber = 2;
  inline const ::std::string& youtube_account_name() const;
  inline void set_youtube_account_name(const ::std::string& value);
  inline void set_youtube_account_name(const char* value);
  inline void set_youtube_account_name(const char* value, size_t size);
  inline ::std::string* mutable_youtube_account_name();
  inline ::std::string* release_youtube_account_name();
  
  // optional uint64 session_id = 3;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 3;
  inline ::google::protobuf::uint64 session_id() const;
  inline void set_session_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:CMsgReplayUploadedToYouTube)
 private:
  inline void set_has_youtube_url();
  inline void clear_has_youtube_url();
  inline void set_has_youtube_account_name();
  inline void clear_has_youtube_account_name();
  inline void set_has_session_id();
  inline void clear_has_session_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* youtube_url_;
  ::std::string* youtube_account_name_;
  ::google::protobuf::uint64 session_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgReplayUploadedToYouTube* default_instance_;
};
// -------------------------------------------------------------------

class CMsgReplaySubmitContestEntry : public ::google::protobuf::Message {
 public:
  CMsgReplaySubmitContestEntry();
  virtual ~CMsgReplaySubmitContestEntry();
  
  CMsgReplaySubmitContestEntry(const CMsgReplaySubmitContestEntry& from);
  
  inline CMsgReplaySubmitContestEntry& operator=(const CMsgReplaySubmitContestEntry& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgReplaySubmitContestEntry& default_instance();
  
  void Swap(CMsgReplaySubmitContestEntry* other);
  
  // implements Message ----------------------------------------------
  
  CMsgReplaySubmitContestEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgReplaySubmitContestEntry& from);
  void MergeFrom(const CMsgReplaySubmitContestEntry& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string youtube_url = 1;
  inline bool has_youtube_url() const;
  inline void clear_youtube_url();
  static const int kYoutubeUrlFieldNumber = 1;
  inline const ::std::string& youtube_url() const;
  inline void set_youtube_url(const ::std::string& value);
  inline void set_youtube_url(const char* value);
  inline void set_youtube_url(const char* value, size_t size);
  inline ::std::string* mutable_youtube_url();
  inline ::std::string* release_youtube_url();
  
  // optional uint32 category = 2;
  inline bool has_category() const;
  inline void clear_category();
  static const int kCategoryFieldNumber = 2;
  inline ::google::protobuf::uint32 category() const;
  inline void set_category(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgReplaySubmitContestEntry)
 private:
  inline void set_has_youtube_url();
  inline void clear_has_youtube_url();
  inline void set_has_category();
  inline void clear_has_category();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* youtube_url_;
  ::google::protobuf::uint32 category_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgReplaySubmitContestEntry* default_instance_;
};
// -------------------------------------------------------------------

class CMsgReplaySubmitContestEntryResponse : public ::google::protobuf::Message {
 public:
  CMsgReplaySubmitContestEntryResponse();
  virtual ~CMsgReplaySubmitContestEntryResponse();
  
  CMsgReplaySubmitContestEntryResponse(const CMsgReplaySubmitContestEntryResponse& from);
  
  inline CMsgReplaySubmitContestEntryResponse& operator=(const CMsgReplaySubmitContestEntryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgReplaySubmitContestEntryResponse& default_instance();
  
  void Swap(CMsgReplaySubmitContestEntryResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMsgReplaySubmitContestEntryResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgReplaySubmitContestEntryResponse& from);
  void MergeFrom(const CMsgReplaySubmitContestEntryResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool success = 1;
  inline bool has_success() const;
  inline void clear_success();
  static const int kSuccessFieldNumber = 1;
  inline bool success() const;
  inline void set_success(bool value);
  
  // @@protoc_insertion_point(class_scope:CMsgReplaySubmitContestEntryResponse)
 private:
  inline void set_has_success();
  inline void clear_has_success();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool success_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgReplaySubmitContestEntryResponse* default_instance_;
};
// -------------------------------------------------------------------

class CReplayCachedContestData : public ::google::protobuf::Message {
 public:
  CReplayCachedContestData();
  virtual ~CReplayCachedContestData();
  
  CReplayCachedContestData(const CReplayCachedContestData& from);
  
  inline CReplayCachedContestData& operator=(const CReplayCachedContestData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CReplayCachedContestData& default_instance();
  
  void Swap(CReplayCachedContestData* other);
  
  // implements Message ----------------------------------------------
  
  CReplayCachedContestData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CReplayCachedContestData& from);
  void MergeFrom(const CReplayCachedContestData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional fixed32 timestamp = 1;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  inline ::google::protobuf::uint32 timestamp() const;
  inline void set_timestamp(::google::protobuf::uint32 value);
  
  // optional uint32 num_votes_last_day = 2;
  inline bool has_num_votes_last_day() const;
  inline void clear_num_votes_last_day();
  static const int kNumVotesLastDayFieldNumber = 2;
  inline ::google::protobuf::uint32 num_votes_last_day() const;
  inline void set_num_votes_last_day(::google::protobuf::uint32 value);
  
  // repeated uint32 video_entry_ids = 3;
  inline int video_entry_ids_size() const;
  inline void clear_video_entry_ids();
  static const int kVideoEntryIdsFieldNumber = 3;
  inline ::google::protobuf::uint32 video_entry_ids(int index) const;
  inline void set_video_entry_ids(int index, ::google::protobuf::uint32 value);
  inline void add_video_entry_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      video_entry_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_video_entry_ids();
  
  // optional uint32 num_flags_last_day = 4;
  inline bool has_num_flags_last_day() const;
  inline void clear_num_flags_last_day();
  static const int kNumFlagsLastDayFieldNumber = 4;
  inline ::google::protobuf::uint32 num_flags_last_day() const;
  inline void set_num_flags_last_day(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CReplayCachedContestData)
 private:
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_num_votes_last_day();
  inline void clear_has_num_votes_last_day();
  inline void set_has_num_flags_last_day();
  inline void clear_has_num_flags_last_day();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 timestamp_;
  ::google::protobuf::uint32 num_votes_last_day_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > video_entry_ids_;
  ::google::protobuf::uint32 num_flags_last_day_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CReplayCachedContestData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFCoaching_AddToCoaches : public ::google::protobuf::Message {
 public:
  CMsgTFCoaching_AddToCoaches();
  virtual ~CMsgTFCoaching_AddToCoaches();
  
  CMsgTFCoaching_AddToCoaches(const CMsgTFCoaching_AddToCoaches& from);
  
  inline CMsgTFCoaching_AddToCoaches& operator=(const CMsgTFCoaching_AddToCoaches& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_AddToCoaches& default_instance();
  
  void Swap(CMsgTFCoaching_AddToCoaches* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFCoaching_AddToCoaches* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFCoaching_AddToCoaches& from);
  void MergeFrom(const CMsgTFCoaching_AddToCoaches& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_AddToCoaches)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgTFCoaching_AddToCoaches* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFCoaching_RemoveFromCoaches : public ::google::protobuf::Message {
 public:
  CMsgTFCoaching_RemoveFromCoaches();
  virtual ~CMsgTFCoaching_RemoveFromCoaches();
  
  CMsgTFCoaching_RemoveFromCoaches(const CMsgTFCoaching_RemoveFromCoaches& from);
  
  inline CMsgTFCoaching_RemoveFromCoaches& operator=(const CMsgTFCoaching_RemoveFromCoaches& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_RemoveFromCoaches& default_instance();
  
  void Swap(CMsgTFCoaching_RemoveFromCoaches* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFCoaching_RemoveFromCoaches* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFCoaching_RemoveFromCoaches& from);
  void MergeFrom(const CMsgTFCoaching_RemoveFromCoaches& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_RemoveFromCoaches)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgTFCoaching_RemoveFromCoaches* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFCoaching_FindCoach : public ::google::protobuf::Message {
 public:
  CMsgTFCoaching_FindCoach();
  virtual ~CMsgTFCoaching_FindCoach();
  
  CMsgTFCoaching_FindCoach(const CMsgTFCoaching_FindCoach& from);
  
  inline CMsgTFCoaching_FindCoach& operator=(const CMsgTFCoaching_FindCoach& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_FindCoach& default_instance();
  
  void Swap(CMsgTFCoaching_FindCoach* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFCoaching_FindCoach* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFCoaching_FindCoach& from);
  void MergeFrom(const CMsgTFCoaching_FindCoach& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 account_id_friend_as_coach = 1;
  inline bool has_account_id_friend_as_coach() const;
  inline void clear_account_id_friend_as_coach();
  static const int kAccountIdFriendAsCoachFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id_friend_as_coach() const;
  inline void set_account_id_friend_as_coach(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_FindCoach)
 private:
  inline void set_has_account_id_friend_as_coach();
  inline void clear_has_account_id_friend_as_coach();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 account_id_friend_as_coach_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgTFCoaching_FindCoach* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFCoaching_FindCoachResponse : public ::google::protobuf::Message {
 public:
  CMsgTFCoaching_FindCoachResponse();
  virtual ~CMsgTFCoaching_FindCoachResponse();
  
  CMsgTFCoaching_FindCoachResponse(const CMsgTFCoaching_FindCoachResponse& from);
  
  inline CMsgTFCoaching_FindCoachResponse& operator=(const CMsgTFCoaching_FindCoachResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_FindCoachResponse& default_instance();
  
  void Swap(CMsgTFCoaching_FindCoachResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFCoaching_FindCoachResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFCoaching_FindCoachResponse& from);
  void MergeFrom(const CMsgTFCoaching_FindCoachResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool found_coach = 1;
  inline bool has_found_coach() const;
  inline void clear_found_coach();
  static const int kFoundCoachFieldNumber = 1;
  inline bool found_coach() const;
  inline void set_found_coach(bool value);
  
  // optional uint32 num_likes = 2;
  inline bool has_num_likes() const;
  inline void clear_num_likes();
  static const int kNumLikesFieldNumber = 2;
  inline ::google::protobuf::uint32 num_likes() const;
  inline void set_num_likes(::google::protobuf::uint32 value);
  
  // optional string coach_name = 3;
  inline bool has_coach_name() const;
  inline void clear_coach_name();
  static const int kCoachNameFieldNumber = 3;
  inline const ::std::string& coach_name() const;
  inline void set_coach_name(const ::std::string& value);
  inline void set_coach_name(const char* value);
  inline void set_coach_name(const char* value, size_t size);
  inline ::std::string* mutable_coach_name();
  inline ::std::string* release_coach_name();
  
  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_FindCoachResponse)
 private:
  inline void set_has_found_coach();
  inline void clear_has_found_coach();
  inline void set_has_num_likes();
  inline void clear_has_num_likes();
  inline void set_has_coach_name();
  inline void clear_has_coach_name();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool found_coach_;
  ::google::protobuf::uint32 num_likes_;
  ::std::string* coach_name_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgTFCoaching_FindCoachResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFCoaching_AskCoach : public ::google::protobuf::Message {
 public:
  CMsgTFCoaching_AskCoach();
  virtual ~CMsgTFCoaching_AskCoach();
  
  CMsgTFCoaching_AskCoach(const CMsgTFCoaching_AskCoach& from);
  
  inline CMsgTFCoaching_AskCoach& operator=(const CMsgTFCoaching_AskCoach& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_AskCoach& default_instance();
  
  void Swap(CMsgTFCoaching_AskCoach* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFCoaching_AskCoach* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFCoaching_AskCoach& from);
  void MergeFrom(const CMsgTFCoaching_AskCoach& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 account_id_student = 1;
  inline bool has_account_id_student() const;
  inline void clear_account_id_student();
  static const int kAccountIdStudentFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id_student() const;
  inline void set_account_id_student(::google::protobuf::uint32 value);
  
  // optional bool student_is_friend = 2;
  inline bool has_student_is_friend() const;
  inline void clear_student_is_friend();
  static const int kStudentIsFriendFieldNumber = 2;
  inline bool student_is_friend() const;
  inline void set_student_is_friend(bool value);
  
  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_AskCoach)
 private:
  inline void set_has_account_id_student();
  inline void clear_has_account_id_student();
  inline void set_has_student_is_friend();
  inline void clear_has_student_is_friend();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 account_id_student_;
  bool student_is_friend_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgTFCoaching_AskCoach* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFCoaching_AskCoachResponse : public ::google::protobuf::Message {
 public:
  CMsgTFCoaching_AskCoachResponse();
  virtual ~CMsgTFCoaching_AskCoachResponse();
  
  CMsgTFCoaching_AskCoachResponse(const CMsgTFCoaching_AskCoachResponse& from);
  
  inline CMsgTFCoaching_AskCoachResponse& operator=(const CMsgTFCoaching_AskCoachResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_AskCoachResponse& default_instance();
  
  void Swap(CMsgTFCoaching_AskCoachResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFCoaching_AskCoachResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFCoaching_AskCoachResponse& from);
  void MergeFrom(const CMsgTFCoaching_AskCoachResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool accept_coaching_assignment = 1;
  inline bool has_accept_coaching_assignment() const;
  inline void clear_accept_coaching_assignment();
  static const int kAcceptCoachingAssignmentFieldNumber = 1;
  inline bool accept_coaching_assignment() const;
  inline void set_accept_coaching_assignment(bool value);
  
  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_AskCoachResponse)
 private:
  inline void set_has_accept_coaching_assignment();
  inline void clear_has_accept_coaching_assignment();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool accept_coaching_assignment_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgTFCoaching_AskCoachResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFCoaching_CoachJoinGame : public ::google::protobuf::Message {
 public:
  CMsgTFCoaching_CoachJoinGame();
  virtual ~CMsgTFCoaching_CoachJoinGame();
  
  CMsgTFCoaching_CoachJoinGame(const CMsgTFCoaching_CoachJoinGame& from);
  
  inline CMsgTFCoaching_CoachJoinGame& operator=(const CMsgTFCoaching_CoachJoinGame& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_CoachJoinGame& default_instance();
  
  void Swap(CMsgTFCoaching_CoachJoinGame* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFCoaching_CoachJoinGame* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFCoaching_CoachJoinGame& from);
  void MergeFrom(const CMsgTFCoaching_CoachJoinGame& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool join_game = 1;
  inline bool has_join_game() const;
  inline void clear_join_game();
  static const int kJoinGameFieldNumber = 1;
  inline bool join_game() const;
  inline void set_join_game(bool value);
  
  // optional uint32 server_address = 2;
  inline bool has_server_address() const;
  inline void clear_server_address();
  static const int kServerAddressFieldNumber = 2;
  inline ::google::protobuf::uint32 server_address() const;
  inline void set_server_address(::google::protobuf::uint32 value);
  
  // optional uint32 server_port = 3;
  inline bool has_server_port() const;
  inline void clear_server_port();
  static const int kServerPortFieldNumber = 3;
  inline ::google::protobuf::uint32 server_port() const;
  inline void set_server_port(::google::protobuf::uint32 value);
  
  // optional uint32 account_id_student = 4;
  inline bool has_account_id_student() const;
  inline void clear_account_id_student();
  static const int kAccountIdStudentFieldNumber = 4;
  inline ::google::protobuf::uint32 account_id_student() const;
  inline void set_account_id_student(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_CoachJoinGame)
 private:
  inline void set_has_join_game();
  inline void clear_has_join_game();
  inline void set_has_server_address();
  inline void clear_has_server_address();
  inline void set_has_server_port();
  inline void clear_has_server_port();
  inline void set_has_account_id_student();
  inline void clear_has_account_id_student();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool join_game_;
  ::google::protobuf::uint32 server_address_;
  ::google::protobuf::uint32 server_port_;
  ::google::protobuf::uint32 account_id_student_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgTFCoaching_CoachJoinGame* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFCoaching_CoachJoining : public ::google::protobuf::Message {
 public:
  CMsgTFCoaching_CoachJoining();
  virtual ~CMsgTFCoaching_CoachJoining();
  
  CMsgTFCoaching_CoachJoining(const CMsgTFCoaching_CoachJoining& from);
  
  inline CMsgTFCoaching_CoachJoining& operator=(const CMsgTFCoaching_CoachJoining& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_CoachJoining& default_instance();
  
  void Swap(CMsgTFCoaching_CoachJoining* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFCoaching_CoachJoining* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFCoaching_CoachJoining& from);
  void MergeFrom(const CMsgTFCoaching_CoachJoining& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 account_id_coach = 1;
  inline bool has_account_id_coach() const;
  inline void clear_account_id_coach();
  static const int kAccountIdCoachFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id_coach() const;
  inline void set_account_id_coach(::google::protobuf::uint32 value);
  
  // optional uint32 account_id_student = 2;
  inline bool has_account_id_student() const;
  inline void clear_account_id_student();
  static const int kAccountIdStudentFieldNumber = 2;
  inline ::google::protobuf::uint32 account_id_student() const;
  inline void set_account_id_student(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_CoachJoining)
 private:
  inline void set_has_account_id_coach();
  inline void clear_has_account_id_coach();
  inline void set_has_account_id_student();
  inline void clear_has_account_id_student();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 account_id_coach_;
  ::google::protobuf::uint32 account_id_student_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgTFCoaching_CoachJoining* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFCoaching_CoachJoined : public ::google::protobuf::Message {
 public:
  CMsgTFCoaching_CoachJoined();
  virtual ~CMsgTFCoaching_CoachJoined();
  
  CMsgTFCoaching_CoachJoined(const CMsgTFCoaching_CoachJoined& from);
  
  inline CMsgTFCoaching_CoachJoined& operator=(const CMsgTFCoaching_CoachJoined& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_CoachJoined& default_instance();
  
  void Swap(CMsgTFCoaching_CoachJoined* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFCoaching_CoachJoined* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFCoaching_CoachJoined& from);
  void MergeFrom(const CMsgTFCoaching_CoachJoined& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 account_id_coach = 1;
  inline bool has_account_id_coach() const;
  inline void clear_account_id_coach();
  static const int kAccountIdCoachFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id_coach() const;
  inline void set_account_id_coach(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_CoachJoined)
 private:
  inline void set_has_account_id_coach();
  inline void clear_has_account_id_coach();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 account_id_coach_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgTFCoaching_CoachJoined* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFCoaching_LikeCurrentCoach : public ::google::protobuf::Message {
 public:
  CMsgTFCoaching_LikeCurrentCoach();
  virtual ~CMsgTFCoaching_LikeCurrentCoach();
  
  CMsgTFCoaching_LikeCurrentCoach(const CMsgTFCoaching_LikeCurrentCoach& from);
  
  inline CMsgTFCoaching_LikeCurrentCoach& operator=(const CMsgTFCoaching_LikeCurrentCoach& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_LikeCurrentCoach& default_instance();
  
  void Swap(CMsgTFCoaching_LikeCurrentCoach* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFCoaching_LikeCurrentCoach* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFCoaching_LikeCurrentCoach& from);
  void MergeFrom(const CMsgTFCoaching_LikeCurrentCoach& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool like_coach = 1;
  inline bool has_like_coach() const;
  inline void clear_like_coach();
  static const int kLikeCoachFieldNumber = 1;
  inline bool like_coach() const;
  inline void set_like_coach(bool value);
  
  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_LikeCurrentCoach)
 private:
  inline void set_has_like_coach();
  inline void clear_has_like_coach();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool like_coach_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgTFCoaching_LikeCurrentCoach* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFCoaching_RemoveCurrentCoach : public ::google::protobuf::Message {
 public:
  CMsgTFCoaching_RemoveCurrentCoach();
  virtual ~CMsgTFCoaching_RemoveCurrentCoach();
  
  CMsgTFCoaching_RemoveCurrentCoach(const CMsgTFCoaching_RemoveCurrentCoach& from);
  
  inline CMsgTFCoaching_RemoveCurrentCoach& operator=(const CMsgTFCoaching_RemoveCurrentCoach& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_RemoveCurrentCoach& default_instance();
  
  void Swap(CMsgTFCoaching_RemoveCurrentCoach* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFCoaching_RemoveCurrentCoach* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFCoaching_RemoveCurrentCoach& from);
  void MergeFrom(const CMsgTFCoaching_RemoveCurrentCoach& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 account_id_coach = 1;
  inline bool has_account_id_coach() const;
  inline void clear_account_id_coach();
  static const int kAccountIdCoachFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id_coach() const;
  inline void set_account_id_coach(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_RemoveCurrentCoach)
 private:
  inline void set_has_account_id_coach();
  inline void clear_has_account_id_coach();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 account_id_coach_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgTFCoaching_RemoveCurrentCoach* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFQuickplay_ScoreServers_ServerInfo : public ::google::protobuf::Message {
 public:
  CMsgTFQuickplay_ScoreServers_ServerInfo();
  virtual ~CMsgTFQuickplay_ScoreServers_ServerInfo();
  
  CMsgTFQuickplay_ScoreServers_ServerInfo(const CMsgTFQuickplay_ScoreServers_ServerInfo& from);
  
  inline CMsgTFQuickplay_ScoreServers_ServerInfo& operator=(const CMsgTFQuickplay_ScoreServers_ServerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFQuickplay_ScoreServers_ServerInfo& default_instance();
  
  void Swap(CMsgTFQuickplay_ScoreServers_ServerInfo* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFQuickplay_ScoreServers_ServerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFQuickplay_ScoreServers_ServerInfo& from);
  void MergeFrom(const CMsgTFQuickplay_ScoreServers_ServerInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 server_address = 1;
  inline bool has_server_address() const;
  inline void clear_server_address();
  static const int kServerAddressFieldNumber = 1;
  inline ::google::protobuf::uint32 server_address() const;
  inline void set_server_address(::google::protobuf::uint32 value);
  
  // optional uint32 server_port = 2;
  inline bool has_server_port() const;
  inline void clear_server_port();
  static const int kServerPortFieldNumber = 2;
  inline ::google::protobuf::uint32 server_port() const;
  inline void set_server_port(::google::protobuf::uint32 value);
  
  // optional uint32 num_users = 3;
  inline bool has_num_users() const;
  inline void clear_num_users();
  static const int kNumUsersFieldNumber = 3;
  inline ::google::protobuf::uint32 num_users() const;
  inline void set_num_users(::google::protobuf::uint32 value);
  
  // optional uint64 steam_id = 4;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 4;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);
  
  // optional uint32 max_users = 5;
  inline bool has_max_users() const;
  inline void clear_max_users();
  static const int kMaxUsersFieldNumber = 5;
  inline ::google::protobuf::uint32 max_users() const;
  inline void set_max_users(::google::protobuf::uint32 value);
  
  // optional float user_score = 6;
  inline bool has_user_score() const;
  inline void clear_user_score();
  static const int kUserScoreFieldNumber = 6;
  inline float user_score() const;
  inline void set_user_score(float value);
  
  // @@protoc_insertion_point(class_scope:CMsgTFQuickplay_ScoreServers.ServerInfo)
 private:
  inline void set_has_server_address();
  inline void clear_has_server_address();
  inline void set_has_server_port();
  inline void clear_has_server_port();
  inline void set_has_num_users();
  inline void clear_has_num_users();
  inline void set_has_steam_id();
  inline void clear_has_steam_id();
  inline void set_has_max_users();
  inline void clear_has_max_users();
  inline void set_has_user_score();
  inline void clear_has_user_score();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 server_address_;
  ::google::protobuf::uint32 server_port_;
  ::google::protobuf::uint64 steam_id_;
  ::google::protobuf::uint32 num_users_;
  ::google::protobuf::uint32 max_users_;
  float user_score_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgTFQuickplay_ScoreServers_ServerInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFQuickplay_ScoreServers : public ::google::protobuf::Message {
 public:
  CMsgTFQuickplay_ScoreServers();
  virtual ~CMsgTFQuickplay_ScoreServers();
  
  CMsgTFQuickplay_ScoreServers(const CMsgTFQuickplay_ScoreServers& from);
  
  inline CMsgTFQuickplay_ScoreServers& operator=(const CMsgTFQuickplay_ScoreServers& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFQuickplay_ScoreServers& default_instance();
  
  void Swap(CMsgTFQuickplay_ScoreServers* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFQuickplay_ScoreServers* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFQuickplay_ScoreServers& from);
  void MergeFrom(const CMsgTFQuickplay_ScoreServers& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CMsgTFQuickplay_ScoreServers_ServerInfo ServerInfo;
  
  // accessors -------------------------------------------------------
  
  // repeated .CMsgTFQuickplay_ScoreServers.ServerInfo servers = 1;
  inline int servers_size() const;
  inline void clear_servers();
  static const int kServersFieldNumber = 1;
  inline const ::CMsgTFQuickplay_ScoreServers_ServerInfo& servers(int index) const;
  inline ::CMsgTFQuickplay_ScoreServers_ServerInfo* mutable_servers(int index);
  inline ::CMsgTFQuickplay_ScoreServers_ServerInfo* add_servers();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServers_ServerInfo >&
      servers() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServers_ServerInfo >*
      mutable_servers();
  
  // @@protoc_insertion_point(class_scope:CMsgTFQuickplay_ScoreServers)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServers_ServerInfo > servers_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgTFQuickplay_ScoreServers* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFQuickplay_ScoreServersResponse_ServerInfo : public ::google::protobuf::Message {
 public:
  CMsgTFQuickplay_ScoreServersResponse_ServerInfo();
  virtual ~CMsgTFQuickplay_ScoreServersResponse_ServerInfo();
  
  CMsgTFQuickplay_ScoreServersResponse_ServerInfo(const CMsgTFQuickplay_ScoreServersResponse_ServerInfo& from);
  
  inline CMsgTFQuickplay_ScoreServersResponse_ServerInfo& operator=(const CMsgTFQuickplay_ScoreServersResponse_ServerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFQuickplay_ScoreServersResponse_ServerInfo& default_instance();
  
  void Swap(CMsgTFQuickplay_ScoreServersResponse_ServerInfo* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFQuickplay_ScoreServersResponse_ServerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFQuickplay_ScoreServersResponse_ServerInfo& from);
  void MergeFrom(const CMsgTFQuickplay_ScoreServersResponse_ServerInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 server_address = 1;
  inline bool has_server_address() const;
  inline void clear_server_address();
  static const int kServerAddressFieldNumber = 1;
  inline ::google::protobuf::uint32 server_address() const;
  inline void set_server_address(::google::protobuf::uint32 value);
  
  // optional uint32 server_port = 2;
  inline bool has_server_port() const;
  inline void clear_server_port();
  static const int kServerPortFieldNumber = 2;
  inline ::google::protobuf::uint32 server_port() const;
  inline void set_server_port(::google::protobuf::uint32 value);
  
  // optional float total_score = 3;
  inline bool has_total_score() const;
  inline void clear_total_score();
  static const int kTotalScoreFieldNumber = 3;
  inline float total_score() const;
  inline void set_total_score(float value);
  
  // optional uint64 steam_id = 4;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 4;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:CMsgTFQuickplay_ScoreServersResponse.ServerInfo)
 private:
  inline void set_has_server_address();
  inline void clear_has_server_address();
  inline void set_has_server_port();
  inline void clear_has_server_port();
  inline void set_has_total_score();
  inline void clear_has_total_score();
  inline void set_has_steam_id();
  inline void clear_has_steam_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 server_address_;
  ::google::protobuf::uint32 server_port_;
  ::google::protobuf::uint64 steam_id_;
  float total_score_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgTFQuickplay_ScoreServersResponse_ServerInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFQuickplay_ScoreServersResponse : public ::google::protobuf::Message {
 public:
  CMsgTFQuickplay_ScoreServersResponse();
  virtual ~CMsgTFQuickplay_ScoreServersResponse();
  
  CMsgTFQuickplay_ScoreServersResponse(const CMsgTFQuickplay_ScoreServersResponse& from);
  
  inline CMsgTFQuickplay_ScoreServersResponse& operator=(const CMsgTFQuickplay_ScoreServersResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFQuickplay_ScoreServersResponse& default_instance();
  
  void Swap(CMsgTFQuickplay_ScoreServersResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFQuickplay_ScoreServersResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFQuickplay_ScoreServersResponse& from);
  void MergeFrom(const CMsgTFQuickplay_ScoreServersResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CMsgTFQuickplay_ScoreServersResponse_ServerInfo ServerInfo;
  
  // accessors -------------------------------------------------------
  
  // repeated .CMsgTFQuickplay_ScoreServersResponse.ServerInfo servers = 1;
  inline int servers_size() const;
  inline void clear_servers();
  static const int kServersFieldNumber = 1;
  inline const ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo& servers(int index) const;
  inline ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo* mutable_servers(int index);
  inline ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo* add_servers();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo >&
      servers() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo >*
      mutable_servers();
  
  // @@protoc_insertion_point(class_scope:CMsgTFQuickplay_ScoreServersResponse)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo > servers_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgTFQuickplay_ScoreServersResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFQuickplay_PlayerJoining : public ::google::protobuf::Message {
 public:
  CMsgTFQuickplay_PlayerJoining();
  virtual ~CMsgTFQuickplay_PlayerJoining();
  
  CMsgTFQuickplay_PlayerJoining(const CMsgTFQuickplay_PlayerJoining& from);
  
  inline CMsgTFQuickplay_PlayerJoining& operator=(const CMsgTFQuickplay_PlayerJoining& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFQuickplay_PlayerJoining& default_instance();
  
  void Swap(CMsgTFQuickplay_PlayerJoining* other);
  
  // implements Message ----------------------------------------------
  
  CMsgTFQuickplay_PlayerJoining* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFQuickplay_PlayerJoining& from);
  void MergeFrom(const CMsgTFQuickplay_PlayerJoining& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgTFQuickplay_PlayerJoining)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 account_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgTFQuickplay_PlayerJoining* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_LevelInfo : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_LevelInfo();
  virtual ~CMsgGC_GameServer_LevelInfo();
  
  CMsgGC_GameServer_LevelInfo(const CMsgGC_GameServer_LevelInfo& from);
  
  inline CMsgGC_GameServer_LevelInfo& operator=(const CMsgGC_GameServer_LevelInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_LevelInfo& default_instance();
  
  void Swap(CMsgGC_GameServer_LevelInfo* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_GameServer_LevelInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_LevelInfo& from);
  void MergeFrom(const CMsgGC_GameServer_LevelInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool level_loaded = 1;
  inline bool has_level_loaded() const;
  inline void clear_level_loaded();
  static const int kLevelLoadedFieldNumber = 1;
  inline bool level_loaded() const;
  inline void set_level_loaded(bool value);
  
  // optional string level_name = 2;
  inline bool has_level_name() const;
  inline void clear_level_name();
  static const int kLevelNameFieldNumber = 2;
  inline const ::std::string& level_name() const;
  inline void set_level_name(const ::std::string& value);
  inline void set_level_name(const char* value);
  inline void set_level_name(const char* value, size_t size);
  inline ::std::string* mutable_level_name();
  inline ::std::string* release_level_name();
  
  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_LevelInfo)
 private:
  inline void set_has_level_loaded();
  inline void clear_has_level_loaded();
  inline void set_has_level_name();
  inline void clear_has_level_name();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* level_name_;
  bool level_loaded_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgGC_GameServer_LevelInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_AuthChallenge : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_AuthChallenge();
  virtual ~CMsgGC_GameServer_AuthChallenge();
  
  CMsgGC_GameServer_AuthChallenge(const CMsgGC_GameServer_AuthChallenge& from);
  
  inline CMsgGC_GameServer_AuthChallenge& operator=(const CMsgGC_GameServer_AuthChallenge& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_AuthChallenge& default_instance();
  
  void Swap(CMsgGC_GameServer_AuthChallenge* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_GameServer_AuthChallenge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_AuthChallenge& from);
  void MergeFrom(const CMsgGC_GameServer_AuthChallenge& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string challenge_string = 1;
  inline bool has_challenge_string() const;
  inline void clear_challenge_string();
  static const int kChallengeStringFieldNumber = 1;
  inline const ::std::string& challenge_string() const;
  inline void set_challenge_string(const ::std::string& value);
  inline void set_challenge_string(const char* value);
  inline void set_challenge_string(const char* value, size_t size);
  inline ::std::string* mutable_challenge_string();
  inline ::std::string* release_challenge_string();
  
  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_AuthChallenge)
 private:
  inline void set_has_challenge_string();
  inline void clear_has_challenge_string();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* challenge_string_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgGC_GameServer_AuthChallenge* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_AuthResult : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_AuthResult();
  virtual ~CMsgGC_GameServer_AuthResult();
  
  CMsgGC_GameServer_AuthResult(const CMsgGC_GameServer_AuthResult& from);
  
  inline CMsgGC_GameServer_AuthResult& operator=(const CMsgGC_GameServer_AuthResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_AuthResult& default_instance();
  
  void Swap(CMsgGC_GameServer_AuthResult* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_GameServer_AuthResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_AuthResult& from);
  void MergeFrom(const CMsgGC_GameServer_AuthResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool authenticated = 1;
  inline bool has_authenticated() const;
  inline void clear_authenticated();
  static const int kAuthenticatedFieldNumber = 1;
  inline bool authenticated() const;
  inline void set_authenticated(bool value);
  
  // optional int32 game_server_standing = 2;
  inline bool has_game_server_standing() const;
  inline void clear_game_server_standing();
  static const int kGameServerStandingFieldNumber = 2;
  inline ::google::protobuf::int32 game_server_standing() const;
  inline void set_game_server_standing(::google::protobuf::int32 value);
  
  // optional int32 game_server_standing_trend = 3;
  inline bool has_game_server_standing_trend() const;
  inline void clear_game_server_standing_trend();
  static const int kGameServerStandingTrendFieldNumber = 3;
  inline ::google::protobuf::int32 game_server_standing_trend() const;
  inline void set_game_server_standing_trend(::google::protobuf::int32 value);
  
  // optional bool is_valve_server = 4;
  inline bool has_is_valve_server() const;
  inline void clear_is_valve_server();
  static const int kIsValveServerFieldNumber = 4;
  inline bool is_valve_server() const;
  inline void set_is_valve_server(bool value);
  
  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_AuthResult)
 private:
  inline void set_has_authenticated();
  inline void clear_has_authenticated();
  inline void set_has_game_server_standing();
  inline void clear_has_game_server_standing();
  inline void set_has_game_server_standing_trend();
  inline void clear_has_game_server_standing_trend();
  inline void set_has_is_valve_server();
  inline void clear_has_is_valve_server();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 game_server_standing_;
  bool authenticated_;
  bool is_valve_server_;
  ::google::protobuf::int32 game_server_standing_trend_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgGC_GameServer_AuthResult* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_AuthChallengeResponse : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_AuthChallengeResponse();
  virtual ~CMsgGC_GameServer_AuthChallengeResponse();
  
  CMsgGC_GameServer_AuthChallengeResponse(const CMsgGC_GameServer_AuthChallengeResponse& from);
  
  inline CMsgGC_GameServer_AuthChallengeResponse& operator=(const CMsgGC_GameServer_AuthChallengeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_AuthChallengeResponse& default_instance();
  
  void Swap(CMsgGC_GameServer_AuthChallengeResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_GameServer_AuthChallengeResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_AuthChallengeResponse& from);
  void MergeFrom(const CMsgGC_GameServer_AuthChallengeResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 game_server_account_id = 1;
  inline bool has_game_server_account_id() const;
  inline void clear_game_server_account_id();
  static const int kGameServerAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 game_server_account_id() const;
  inline void set_game_server_account_id(::google::protobuf::uint32 value);
  
  // optional bytes hashed_challenge_string = 2;
  inline bool has_hashed_challenge_string() const;
  inline void clear_hashed_challenge_string();
  static const int kHashedChallengeStringFieldNumber = 2;
  inline const ::std::string& hashed_challenge_string() const;
  inline void set_hashed_challenge_string(const ::std::string& value);
  inline void set_hashed_challenge_string(const char* value);
  inline void set_hashed_challenge_string(const void* value, size_t size);
  inline ::std::string* mutable_hashed_challenge_string();
  inline ::std::string* release_hashed_challenge_string();
  
  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_AuthChallengeResponse)
 private:
  inline void set_has_game_server_account_id();
  inline void clear_has_game_server_account_id();
  inline void set_has_hashed_challenge_string();
  inline void clear_has_hashed_challenge_string();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* hashed_challenge_string_;
  ::google::protobuf::uint32 game_server_account_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgGC_GameServer_AuthChallengeResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_CreateIdentity : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_CreateIdentity();
  virtual ~CMsgGC_GameServer_CreateIdentity();
  
  CMsgGC_GameServer_CreateIdentity(const CMsgGC_GameServer_CreateIdentity& from);
  
  inline CMsgGC_GameServer_CreateIdentity& operator=(const CMsgGC_GameServer_CreateIdentity& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_CreateIdentity& default_instance();
  
  void Swap(CMsgGC_GameServer_CreateIdentity* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_GameServer_CreateIdentity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_CreateIdentity& from);
  void MergeFrom(const CMsgGC_GameServer_CreateIdentity& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_CreateIdentity)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 account_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgGC_GameServer_CreateIdentity* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_CreateIdentityResponse : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_CreateIdentityResponse();
  virtual ~CMsgGC_GameServer_CreateIdentityResponse();
  
  CMsgGC_GameServer_CreateIdentityResponse(const CMsgGC_GameServer_CreateIdentityResponse& from);
  
  inline CMsgGC_GameServer_CreateIdentityResponse& operator=(const CMsgGC_GameServer_CreateIdentityResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_CreateIdentityResponse& default_instance();
  
  void Swap(CMsgGC_GameServer_CreateIdentityResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_GameServer_CreateIdentityResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_CreateIdentityResponse& from);
  void MergeFrom(const CMsgGC_GameServer_CreateIdentityResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CMsgGC_GameServer_CreateIdentityResponse_EStatus EStatus;
  static const EStatus kStatus_GenericFailure = CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_GenericFailure;
  static const EStatus kStatus_TooMany = CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_TooMany;
  static const EStatus kStatus_NoPrivs = CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_NoPrivs;
  static const EStatus kStatus_Created = CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_Created;
  static inline bool EStatus_IsValid(int value) {
    return CMsgGC_GameServer_CreateIdentityResponse_EStatus_IsValid(value);
  }
  static const EStatus EStatus_MIN =
    CMsgGC_GameServer_CreateIdentityResponse_EStatus_EStatus_MIN;
  static const EStatus EStatus_MAX =
    CMsgGC_GameServer_CreateIdentityResponse_EStatus_EStatus_MAX;
  static const int EStatus_ARRAYSIZE =
    CMsgGC_GameServer_CreateIdentityResponse_EStatus_EStatus_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EStatus_descriptor() {
    return CMsgGC_GameServer_CreateIdentityResponse_EStatus_descriptor();
  }
  static inline const ::std::string& EStatus_Name(EStatus value) {
    return CMsgGC_GameServer_CreateIdentityResponse_EStatus_Name(value);
  }
  static inline bool EStatus_Parse(const ::std::string& name,
      EStatus* value) {
    return CMsgGC_GameServer_CreateIdentityResponse_EStatus_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // optional bool account_created = 1;
  inline bool has_account_created() const;
  inline void clear_account_created();
  static const int kAccountCreatedFieldNumber = 1;
  inline bool account_created() const;
  inline void set_account_created(bool value);
  
  // optional uint32 game_server_account_id = 2;
  inline bool has_game_server_account_id() const;
  inline void clear_game_server_account_id();
  static const int kGameServerAccountIdFieldNumber = 2;
  inline ::google::protobuf::uint32 game_server_account_id() const;
  inline void set_game_server_account_id(::google::protobuf::uint32 value);
  
  // optional string game_server_identity_token = 3;
  inline bool has_game_server_identity_token() const;
  inline void clear_game_server_identity_token();
  static const int kGameServerIdentityTokenFieldNumber = 3;
  inline const ::std::string& game_server_identity_token() const;
  inline void set_game_server_identity_token(const ::std::string& value);
  inline void set_game_server_identity_token(const char* value);
  inline void set_game_server_identity_token(const char* value, size_t size);
  inline ::std::string* mutable_game_server_identity_token();
  inline ::std::string* release_game_server_identity_token();
  
  // optional .CMsgGC_GameServer_CreateIdentityResponse.EStatus status = 4 [default = kStatus_GenericFailure];
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 4;
  inline ::CMsgGC_GameServer_CreateIdentityResponse_EStatus status() const;
  inline void set_status(::CMsgGC_GameServer_CreateIdentityResponse_EStatus value);
  
  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_CreateIdentityResponse)
 private:
  inline void set_has_account_created();
  inline void clear_has_account_created();
  inline void set_has_game_server_account_id();
  inline void clear_has_game_server_account_id();
  inline void set_has_game_server_identity_token();
  inline void clear_has_game_server_identity_token();
  inline void set_has_status();
  inline void clear_has_status();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool account_created_;
  ::google::protobuf::uint32 game_server_account_id_;
  ::std::string* game_server_identity_token_;
  int status_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgGC_GameServer_CreateIdentityResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_List : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_List();
  virtual ~CMsgGC_GameServer_List();
  
  CMsgGC_GameServer_List(const CMsgGC_GameServer_List& from);
  
  inline CMsgGC_GameServer_List& operator=(const CMsgGC_GameServer_List& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_List& default_instance();
  
  void Swap(CMsgGC_GameServer_List* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_GameServer_List* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_List& from);
  void MergeFrom(const CMsgGC_GameServer_List& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_List)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 account_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgGC_GameServer_List* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_ListResponse_GameServerIdentity : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_ListResponse_GameServerIdentity();
  virtual ~CMsgGC_GameServer_ListResponse_GameServerIdentity();
  
  CMsgGC_GameServer_ListResponse_GameServerIdentity(const CMsgGC_GameServer_ListResponse_GameServerIdentity& from);
  
  inline CMsgGC_GameServer_ListResponse_GameServerIdentity& operator=(const CMsgGC_GameServer_ListResponse_GameServerIdentity& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_ListResponse_GameServerIdentity& default_instance();
  
  void Swap(CMsgGC_GameServer_ListResponse_GameServerIdentity* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_GameServer_ListResponse_GameServerIdentity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_ListResponse_GameServerIdentity& from);
  void MergeFrom(const CMsgGC_GameServer_ListResponse_GameServerIdentity& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 game_server_account_id = 1;
  inline bool has_game_server_account_id() const;
  inline void clear_game_server_account_id();
  static const int kGameServerAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 game_server_account_id() const;
  inline void set_game_server_account_id(::google::protobuf::uint32 value);
  
  // optional string game_server_identity_token = 2;
  inline bool has_game_server_identity_token() const;
  inline void clear_game_server_identity_token();
  static const int kGameServerIdentityTokenFieldNumber = 2;
  inline const ::std::string& game_server_identity_token() const;
  inline void set_game_server_identity_token(const ::std::string& value);
  inline void set_game_server_identity_token(const char* value);
  inline void set_game_server_identity_token(const char* value, size_t size);
  inline ::std::string* mutable_game_server_identity_token();
  inline ::std::string* release_game_server_identity_token();
  
  // optional int32 game_server_standing = 3;
  inline bool has_game_server_standing() const;
  inline void clear_game_server_standing();
  static const int kGameServerStandingFieldNumber = 3;
  inline ::google::protobuf::int32 game_server_standing() const;
  inline void set_game_server_standing(::google::protobuf::int32 value);
  
  // optional int32 game_server_standing_trend = 4;
  inline bool has_game_server_standing_trend() const;
  inline void clear_game_server_standing_trend();
  static const int kGameServerStandingTrendFieldNumber = 4;
  inline ::google::protobuf::int32 game_server_standing_trend() const;
  inline void set_game_server_standing_trend(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_ListResponse.GameServerIdentity)
 private:
  inline void set_has_game_server_account_id();
  inline void clear_has_game_server_account_id();
  inline void set_has_game_server_identity_token();
  inline void clear_has_game_server_identity_token();
  inline void set_has_game_server_standing();
  inline void clear_has_game_server_standing();
  inline void set_has_game_server_standing_trend();
  inline void clear_has_game_server_standing_trend();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* game_server_identity_token_;
  ::google::protobuf::uint32 game_server_account_id_;
  ::google::protobuf::int32 game_server_standing_;
  ::google::protobuf::int32 game_server_standing_trend_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgGC_GameServer_ListResponse_GameServerIdentity* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_ListResponse : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_ListResponse();
  virtual ~CMsgGC_GameServer_ListResponse();
  
  CMsgGC_GameServer_ListResponse(const CMsgGC_GameServer_ListResponse& from);
  
  inline CMsgGC_GameServer_ListResponse& operator=(const CMsgGC_GameServer_ListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_ListResponse& default_instance();
  
  void Swap(CMsgGC_GameServer_ListResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_GameServer_ListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_ListResponse& from);
  void MergeFrom(const CMsgGC_GameServer_ListResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CMsgGC_GameServer_ListResponse_GameServerIdentity GameServerIdentity;
  
  // accessors -------------------------------------------------------
  
  // repeated .CMsgGC_GameServer_ListResponse.GameServerIdentity owned_game_servers = 1;
  inline int owned_game_servers_size() const;
  inline void clear_owned_game_servers();
  static const int kOwnedGameServersFieldNumber = 1;
  inline const ::CMsgGC_GameServer_ListResponse_GameServerIdentity& owned_game_servers(int index) const;
  inline ::CMsgGC_GameServer_ListResponse_GameServerIdentity* mutable_owned_game_servers(int index);
  inline ::CMsgGC_GameServer_ListResponse_GameServerIdentity* add_owned_game_servers();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGC_GameServer_ListResponse_GameServerIdentity >&
      owned_game_servers() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGC_GameServer_ListResponse_GameServerIdentity >*
      mutable_owned_game_servers();
  
  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_ListResponse)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CMsgGC_GameServer_ListResponse_GameServerIdentity > owned_game_servers_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgGC_GameServer_ListResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_ResetIdentity : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_ResetIdentity();
  virtual ~CMsgGC_GameServer_ResetIdentity();
  
  CMsgGC_GameServer_ResetIdentity(const CMsgGC_GameServer_ResetIdentity& from);
  
  inline CMsgGC_GameServer_ResetIdentity& operator=(const CMsgGC_GameServer_ResetIdentity& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_ResetIdentity& default_instance();
  
  void Swap(CMsgGC_GameServer_ResetIdentity* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_GameServer_ResetIdentity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_ResetIdentity& from);
  void MergeFrom(const CMsgGC_GameServer_ResetIdentity& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 game_server_account_id = 1;
  inline bool has_game_server_account_id() const;
  inline void clear_game_server_account_id();
  static const int kGameServerAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 game_server_account_id() const;
  inline void set_game_server_account_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_ResetIdentity)
 private:
  inline void set_has_game_server_account_id();
  inline void clear_has_game_server_account_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 game_server_account_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgGC_GameServer_ResetIdentity* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_ResetIdentityResponse : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_ResetIdentityResponse();
  virtual ~CMsgGC_GameServer_ResetIdentityResponse();
  
  CMsgGC_GameServer_ResetIdentityResponse(const CMsgGC_GameServer_ResetIdentityResponse& from);
  
  inline CMsgGC_GameServer_ResetIdentityResponse& operator=(const CMsgGC_GameServer_ResetIdentityResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_ResetIdentityResponse& default_instance();
  
  void Swap(CMsgGC_GameServer_ResetIdentityResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGC_GameServer_ResetIdentityResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_ResetIdentityResponse& from);
  void MergeFrom(const CMsgGC_GameServer_ResetIdentityResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool game_server_identity_token_reset = 1;
  inline bool has_game_server_identity_token_reset() const;
  inline void clear_game_server_identity_token_reset();
  static const int kGameServerIdentityTokenResetFieldNumber = 1;
  inline bool game_server_identity_token_reset() const;
  inline void set_game_server_identity_token_reset(bool value);
  
  // optional uint32 game_server_account_id = 2;
  inline bool has_game_server_account_id() const;
  inline void clear_game_server_account_id();
  static const int kGameServerAccountIdFieldNumber = 2;
  inline ::google::protobuf::uint32 game_server_account_id() const;
  inline void set_game_server_account_id(::google::protobuf::uint32 value);
  
  // optional string game_server_identity_token = 3;
  inline bool has_game_server_identity_token() const;
  inline void clear_game_server_identity_token();
  static const int kGameServerIdentityTokenFieldNumber = 3;
  inline const ::std::string& game_server_identity_token() const;
  inline void set_game_server_identity_token(const ::std::string& value);
  inline void set_game_server_identity_token(const char* value);
  inline void set_game_server_identity_token(const char* value, size_t size);
  inline ::std::string* mutable_game_server_identity_token();
  inline ::std::string* release_game_server_identity_token();
  
  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_ResetIdentityResponse)
 private:
  inline void set_has_game_server_identity_token_reset();
  inline void clear_has_game_server_identity_token_reset();
  inline void set_has_game_server_account_id();
  inline void clear_has_game_server_account_id();
  inline void set_has_game_server_identity_token();
  inline void clear_has_game_server_identity_token();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool game_server_identity_token_reset_;
  ::google::protobuf::uint32 game_server_account_id_;
  ::std::string* game_server_identity_token_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgGC_GameServer_ResetIdentityResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// CMsgTFGoldenWrenchBroadcast

// optional int32 wrench_number = 1;
inline bool CMsgTFGoldenWrenchBroadcast::has_wrench_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFGoldenWrenchBroadcast::set_has_wrench_number() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFGoldenWrenchBroadcast::clear_has_wrench_number() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFGoldenWrenchBroadcast::clear_wrench_number() {
  wrench_number_ = 0;
  clear_has_wrench_number();
}
inline ::google::protobuf::int32 CMsgTFGoldenWrenchBroadcast::wrench_number() const {
  return wrench_number_;
}
inline void CMsgTFGoldenWrenchBroadcast::set_wrench_number(::google::protobuf::int32 value) {
  set_has_wrench_number();
  wrench_number_ = value;
}

// optional bool deleted = 2;
inline bool CMsgTFGoldenWrenchBroadcast::has_deleted() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFGoldenWrenchBroadcast::set_has_deleted() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFGoldenWrenchBroadcast::clear_has_deleted() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFGoldenWrenchBroadcast::clear_deleted() {
  deleted_ = false;
  clear_has_deleted();
}
inline bool CMsgTFGoldenWrenchBroadcast::deleted() const {
  return deleted_;
}
inline void CMsgTFGoldenWrenchBroadcast::set_deleted(bool value) {
  set_has_deleted();
  deleted_ = value;
}

// optional string user_name = 3;
inline bool CMsgTFGoldenWrenchBroadcast::has_user_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTFGoldenWrenchBroadcast::set_has_user_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgTFGoldenWrenchBroadcast::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgTFGoldenWrenchBroadcast::clear_user_name() {
  if (user_name_ != &::google::protobuf::internal::kEmptyString) {
    user_name_->clear();
  }
  clear_has_user_name();
}
inline const ::std::string& CMsgTFGoldenWrenchBroadcast::user_name() const {
  return *user_name_;
}
inline void CMsgTFGoldenWrenchBroadcast::set_user_name(const ::std::string& value) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::kEmptyString) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
}
inline void CMsgTFGoldenWrenchBroadcast::set_user_name(const char* value) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::kEmptyString) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
}
inline void CMsgTFGoldenWrenchBroadcast::set_user_name(const char* value, size_t size) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::kEmptyString) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgTFGoldenWrenchBroadcast::mutable_user_name() {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::kEmptyString) {
    user_name_ = new ::std::string;
  }
  return user_name_;
}
inline ::std::string* CMsgTFGoldenWrenchBroadcast::release_user_name() {
  clear_has_user_name();
  if (user_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = user_name_;
    user_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CMsgTFSaxxyBroadcast

// optional int32 category_number = 1;
inline bool CMsgTFSaxxyBroadcast::has_category_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFSaxxyBroadcast::set_has_category_number() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFSaxxyBroadcast::clear_has_category_number() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFSaxxyBroadcast::clear_category_number() {
  category_number_ = 0;
  clear_has_category_number();
}
inline ::google::protobuf::int32 CMsgTFSaxxyBroadcast::category_number() const {
  return category_number_;
}
inline void CMsgTFSaxxyBroadcast::set_category_number(::google::protobuf::int32 value) {
  set_has_category_number();
  category_number_ = value;
}

// optional string user_name = 2;
inline bool CMsgTFSaxxyBroadcast::has_user_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFSaxxyBroadcast::set_has_user_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFSaxxyBroadcast::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFSaxxyBroadcast::clear_user_name() {
  if (user_name_ != &::google::protobuf::internal::kEmptyString) {
    user_name_->clear();
  }
  clear_has_user_name();
}
inline const ::std::string& CMsgTFSaxxyBroadcast::user_name() const {
  return *user_name_;
}
inline void CMsgTFSaxxyBroadcast::set_user_name(const ::std::string& value) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::kEmptyString) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
}
inline void CMsgTFSaxxyBroadcast::set_user_name(const char* value) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::kEmptyString) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
}
inline void CMsgTFSaxxyBroadcast::set_user_name(const char* value, size_t size) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::kEmptyString) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgTFSaxxyBroadcast::mutable_user_name() {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::kEmptyString) {
    user_name_ = new ::std::string;
  }
  return user_name_;
}
inline ::std::string* CMsgTFSaxxyBroadcast::release_user_name() {
  clear_has_user_name();
  if (user_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = user_name_;
    user_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CMsgTFIncrementKillCountResponse

// optional uint32 killer_account_id = 1;
inline bool CMsgTFIncrementKillCountResponse::has_killer_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFIncrementKillCountResponse::set_has_killer_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFIncrementKillCountResponse::clear_has_killer_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFIncrementKillCountResponse::clear_killer_account_id() {
  killer_account_id_ = 0u;
  clear_has_killer_account_id();
}
inline ::google::protobuf::uint32 CMsgTFIncrementKillCountResponse::killer_account_id() const {
  return killer_account_id_;
}
inline void CMsgTFIncrementKillCountResponse::set_killer_account_id(::google::protobuf::uint32 value) {
  set_has_killer_account_id();
  killer_account_id_ = value;
}

// optional uint32 num_kills = 2;
inline bool CMsgTFIncrementKillCountResponse::has_num_kills() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFIncrementKillCountResponse::set_has_num_kills() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFIncrementKillCountResponse::clear_has_num_kills() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFIncrementKillCountResponse::clear_num_kills() {
  num_kills_ = 0u;
  clear_has_num_kills();
}
inline ::google::protobuf::uint32 CMsgTFIncrementKillCountResponse::num_kills() const {
  return num_kills_;
}
inline void CMsgTFIncrementKillCountResponse::set_num_kills(::google::protobuf::uint32 value) {
  set_has_num_kills();
  num_kills_ = value;
}

// optional uint32 item_def = 3;
inline bool CMsgTFIncrementKillCountResponse::has_item_def() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTFIncrementKillCountResponse::set_has_item_def() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgTFIncrementKillCountResponse::clear_has_item_def() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgTFIncrementKillCountResponse::clear_item_def() {
  item_def_ = 0u;
  clear_has_item_def();
}
inline ::google::protobuf::uint32 CMsgTFIncrementKillCountResponse::item_def() const {
  return item_def_;
}
inline void CMsgTFIncrementKillCountResponse::set_item_def(::google::protobuf::uint32 value) {
  set_has_item_def();
  item_def_ = value;
}

// optional uint32 new_rank = 4;
inline bool CMsgTFIncrementKillCountResponse::has_new_rank() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgTFIncrementKillCountResponse::set_has_new_rank() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgTFIncrementKillCountResponse::clear_has_new_rank() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgTFIncrementKillCountResponse::clear_new_rank() {
  new_rank_ = 0u;
  clear_has_new_rank();
}
inline ::google::protobuf::uint32 CMsgTFIncrementKillCountResponse::new_rank() const {
  return new_rank_;
}
inline void CMsgTFIncrementKillCountResponse::set_new_rank(::google::protobuf::uint32 value) {
  set_has_new_rank();
  new_rank_ = value;
}

// -------------------------------------------------------------------

// CSOTFDuelSummary

// optional uint32 account_id = 1;
inline bool CSOTFDuelSummary::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOTFDuelSummary::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOTFDuelSummary::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOTFDuelSummary::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CSOTFDuelSummary::account_id() const {
  return account_id_;
}
inline void CSOTFDuelSummary::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
}

// optional uint32 duel_wins = 2;
inline bool CSOTFDuelSummary::has_duel_wins() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOTFDuelSummary::set_has_duel_wins() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOTFDuelSummary::clear_has_duel_wins() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOTFDuelSummary::clear_duel_wins() {
  duel_wins_ = 0u;
  clear_has_duel_wins();
}
inline ::google::protobuf::uint32 CSOTFDuelSummary::duel_wins() const {
  return duel_wins_;
}
inline void CSOTFDuelSummary::set_duel_wins(::google::protobuf::uint32 value) {
  set_has_duel_wins();
  duel_wins_ = value;
}

// optional uint32 duel_losses = 3;
inline bool CSOTFDuelSummary::has_duel_losses() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSOTFDuelSummary::set_has_duel_losses() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSOTFDuelSummary::clear_has_duel_losses() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSOTFDuelSummary::clear_duel_losses() {
  duel_losses_ = 0u;
  clear_has_duel_losses();
}
inline ::google::protobuf::uint32 CSOTFDuelSummary::duel_losses() const {
  return duel_losses_;
}
inline void CSOTFDuelSummary::set_duel_losses(::google::protobuf::uint32 value) {
  set_has_duel_losses();
  duel_losses_ = value;
}

// optional uint32 last_duel_account_id = 4;
inline bool CSOTFDuelSummary::has_last_duel_account_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSOTFDuelSummary::set_has_last_duel_account_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSOTFDuelSummary::clear_has_last_duel_account_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSOTFDuelSummary::clear_last_duel_account_id() {
  last_duel_account_id_ = 0u;
  clear_has_last_duel_account_id();
}
inline ::google::protobuf::uint32 CSOTFDuelSummary::last_duel_account_id() const {
  return last_duel_account_id_;
}
inline void CSOTFDuelSummary::set_last_duel_account_id(::google::protobuf::uint32 value) {
  set_has_last_duel_account_id();
  last_duel_account_id_ = value;
}

// optional uint32 last_duel_timestamp = 5;
inline bool CSOTFDuelSummary::has_last_duel_timestamp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSOTFDuelSummary::set_has_last_duel_timestamp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSOTFDuelSummary::clear_has_last_duel_timestamp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSOTFDuelSummary::clear_last_duel_timestamp() {
  last_duel_timestamp_ = 0u;
  clear_has_last_duel_timestamp();
}
inline ::google::protobuf::uint32 CSOTFDuelSummary::last_duel_timestamp() const {
  return last_duel_timestamp_;
}
inline void CSOTFDuelSummary::set_last_duel_timestamp(::google::protobuf::uint32 value) {
  set_has_last_duel_timestamp();
  last_duel_timestamp_ = value;
}

// optional uint32 last_duel_status = 6;
inline bool CSOTFDuelSummary::has_last_duel_status() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSOTFDuelSummary::set_has_last_duel_status() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSOTFDuelSummary::clear_has_last_duel_status() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSOTFDuelSummary::clear_last_duel_status() {
  last_duel_status_ = 0u;
  clear_has_last_duel_status();
}
inline ::google::protobuf::uint32 CSOTFDuelSummary::last_duel_status() const {
  return last_duel_status_;
}
inline void CSOTFDuelSummary::set_last_duel_status(::google::protobuf::uint32 value) {
  set_has_last_duel_status();
  last_duel_status_ = value;
}

// -------------------------------------------------------------------

// CSOTFMapContribution

// optional uint32 account_id = 1;
inline bool CSOTFMapContribution::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOTFMapContribution::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOTFMapContribution::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOTFMapContribution::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CSOTFMapContribution::account_id() const {
  return account_id_;
}
inline void CSOTFMapContribution::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
}

// optional uint32 def_index = 2;
inline bool CSOTFMapContribution::has_def_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOTFMapContribution::set_has_def_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOTFMapContribution::clear_has_def_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOTFMapContribution::clear_def_index() {
  def_index_ = 0u;
  clear_has_def_index();
}
inline ::google::protobuf::uint32 CSOTFMapContribution::def_index() const {
  return def_index_;
}
inline void CSOTFMapContribution::set_def_index(::google::protobuf::uint32 value) {
  set_has_def_index();
  def_index_ = value;
}

// optional uint32 contribution_level = 3;
inline bool CSOTFMapContribution::has_contribution_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSOTFMapContribution::set_has_contribution_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSOTFMapContribution::clear_has_contribution_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSOTFMapContribution::clear_contribution_level() {
  contribution_level_ = 0u;
  clear_has_contribution_level();
}
inline ::google::protobuf::uint32 CSOTFMapContribution::contribution_level() const {
  return contribution_level_;
}
inline void CSOTFMapContribution::set_contribution_level(::google::protobuf::uint32 value) {
  set_has_contribution_level();
  contribution_level_ = value;
}

// -------------------------------------------------------------------

// CMsgTFVoteKickBanPlayer

// optional uint32 account_id_subject = 1;
inline bool CMsgTFVoteKickBanPlayer::has_account_id_subject() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFVoteKickBanPlayer::set_has_account_id_subject() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFVoteKickBanPlayer::clear_has_account_id_subject() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFVoteKickBanPlayer::clear_account_id_subject() {
  account_id_subject_ = 0u;
  clear_has_account_id_subject();
}
inline ::google::protobuf::uint32 CMsgTFVoteKickBanPlayer::account_id_subject() const {
  return account_id_subject_;
}
inline void CMsgTFVoteKickBanPlayer::set_account_id_subject(::google::protobuf::uint32 value) {
  set_has_account_id_subject();
  account_id_subject_ = value;
}

// optional uint32 kick_reason = 2;
inline bool CMsgTFVoteKickBanPlayer::has_kick_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFVoteKickBanPlayer::set_has_kick_reason() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFVoteKickBanPlayer::clear_has_kick_reason() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFVoteKickBanPlayer::clear_kick_reason() {
  kick_reason_ = 0u;
  clear_has_kick_reason();
}
inline ::google::protobuf::uint32 CMsgTFVoteKickBanPlayer::kick_reason() const {
  return kick_reason_;
}
inline void CMsgTFVoteKickBanPlayer::set_kick_reason(::google::protobuf::uint32 value) {
  set_has_kick_reason();
  kick_reason_ = value;
}

// -------------------------------------------------------------------

// CMsgTFVoteKickBanPlayerResult

// optional uint32 account_id_initiator = 1;
inline bool CMsgTFVoteKickBanPlayerResult::has_account_id_initiator() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFVoteKickBanPlayerResult::set_has_account_id_initiator() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFVoteKickBanPlayerResult::clear_has_account_id_initiator() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFVoteKickBanPlayerResult::clear_account_id_initiator() {
  account_id_initiator_ = 0u;
  clear_has_account_id_initiator();
}
inline ::google::protobuf::uint32 CMsgTFVoteKickBanPlayerResult::account_id_initiator() const {
  return account_id_initiator_;
}
inline void CMsgTFVoteKickBanPlayerResult::set_account_id_initiator(::google::protobuf::uint32 value) {
  set_has_account_id_initiator();
  account_id_initiator_ = value;
}

// optional uint32 account_id_subject = 2;
inline bool CMsgTFVoteKickBanPlayerResult::has_account_id_subject() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFVoteKickBanPlayerResult::set_has_account_id_subject() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFVoteKickBanPlayerResult::clear_has_account_id_subject() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFVoteKickBanPlayerResult::clear_account_id_subject() {
  account_id_subject_ = 0u;
  clear_has_account_id_subject();
}
inline ::google::protobuf::uint32 CMsgTFVoteKickBanPlayerResult::account_id_subject() const {
  return account_id_subject_;
}
inline void CMsgTFVoteKickBanPlayerResult::set_account_id_subject(::google::protobuf::uint32 value) {
  set_has_account_id_subject();
  account_id_subject_ = value;
}

// optional uint32 kick_reason = 3;
inline bool CMsgTFVoteKickBanPlayerResult::has_kick_reason() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTFVoteKickBanPlayerResult::set_has_kick_reason() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgTFVoteKickBanPlayerResult::clear_has_kick_reason() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgTFVoteKickBanPlayerResult::clear_kick_reason() {
  kick_reason_ = 0u;
  clear_has_kick_reason();
}
inline ::google::protobuf::uint32 CMsgTFVoteKickBanPlayerResult::kick_reason() const {
  return kick_reason_;
}
inline void CMsgTFVoteKickBanPlayerResult::set_kick_reason(::google::protobuf::uint32 value) {
  set_has_kick_reason();
  kick_reason_ = value;
}

// optional bool kick_successful = 4;
inline bool CMsgTFVoteKickBanPlayerResult::has_kick_successful() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgTFVoteKickBanPlayerResult::set_has_kick_successful() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgTFVoteKickBanPlayerResult::clear_has_kick_successful() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgTFVoteKickBanPlayerResult::clear_kick_successful() {
  kick_successful_ = false;
  clear_has_kick_successful();
}
inline bool CMsgTFVoteKickBanPlayerResult::kick_successful() const {
  return kick_successful_;
}
inline void CMsgTFVoteKickBanPlayerResult::set_kick_successful(bool value) {
  set_has_kick_successful();
  kick_successful_ = value;
}

// optional uint32 num_yes_votes = 5;
inline bool CMsgTFVoteKickBanPlayerResult::has_num_yes_votes() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgTFVoteKickBanPlayerResult::set_has_num_yes_votes() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgTFVoteKickBanPlayerResult::clear_has_num_yes_votes() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgTFVoteKickBanPlayerResult::clear_num_yes_votes() {
  num_yes_votes_ = 0u;
  clear_has_num_yes_votes();
}
inline ::google::protobuf::uint32 CMsgTFVoteKickBanPlayerResult::num_yes_votes() const {
  return num_yes_votes_;
}
inline void CMsgTFVoteKickBanPlayerResult::set_num_yes_votes(::google::protobuf::uint32 value) {
  set_has_num_yes_votes();
  num_yes_votes_ = value;
}

// optional uint32 num_no_votes = 6;
inline bool CMsgTFVoteKickBanPlayerResult::has_num_no_votes() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgTFVoteKickBanPlayerResult::set_has_num_no_votes() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgTFVoteKickBanPlayerResult::clear_has_num_no_votes() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgTFVoteKickBanPlayerResult::clear_num_no_votes() {
  num_no_votes_ = 0u;
  clear_has_num_no_votes();
}
inline ::google::protobuf::uint32 CMsgTFVoteKickBanPlayerResult::num_no_votes() const {
  return num_no_votes_;
}
inline void CMsgTFVoteKickBanPlayerResult::set_num_no_votes(::google::protobuf::uint32 value) {
  set_has_num_no_votes();
  num_no_votes_ = value;
}

// optional uint32 num_possible_votes = 7;
inline bool CMsgTFVoteKickBanPlayerResult::has_num_possible_votes() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgTFVoteKickBanPlayerResult::set_has_num_possible_votes() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgTFVoteKickBanPlayerResult::clear_has_num_possible_votes() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgTFVoteKickBanPlayerResult::clear_num_possible_votes() {
  num_possible_votes_ = 0u;
  clear_has_num_possible_votes();
}
inline ::google::protobuf::uint32 CMsgTFVoteKickBanPlayerResult::num_possible_votes() const {
  return num_possible_votes_;
}
inline void CMsgTFVoteKickBanPlayerResult::set_num_possible_votes(::google::protobuf::uint32 value) {
  set_has_num_possible_votes();
  num_possible_votes_ = value;
}

// -------------------------------------------------------------------

// CMsgTFKickPlayer

// optional uint32 account_id_player = 1;
inline bool CMsgTFKickPlayer::has_account_id_player() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFKickPlayer::set_has_account_id_player() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFKickPlayer::clear_has_account_id_player() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFKickPlayer::clear_account_id_player() {
  account_id_player_ = 0u;
  clear_has_account_id_player();
}
inline ::google::protobuf::uint32 CMsgTFKickPlayer::account_id_player() const {
  return account_id_player_;
}
inline void CMsgTFKickPlayer::set_account_id_player(::google::protobuf::uint32 value) {
  set_has_account_id_player();
  account_id_player_ = value;
}

// optional uint32 kick_reason = 2;
inline bool CMsgTFKickPlayer::has_kick_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFKickPlayer::set_has_kick_reason() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFKickPlayer::clear_has_kick_reason() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFKickPlayer::clear_kick_reason() {
  kick_reason_ = 0u;
  clear_has_kick_reason();
}
inline ::google::protobuf::uint32 CMsgTFKickPlayer::kick_reason() const {
  return kick_reason_;
}
inline void CMsgTFKickPlayer::set_kick_reason(::google::protobuf::uint32 value) {
  set_has_kick_reason();
  kick_reason_ = value;
}

// -------------------------------------------------------------------

// CMsgTFStartedTraining

// -------------------------------------------------------------------

// CMsgTFFreeTrialChooseMostHelpfulFriend

// optional uint32 account_id_friend = 1;
inline bool CMsgTFFreeTrialChooseMostHelpfulFriend::has_account_id_friend() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFFreeTrialChooseMostHelpfulFriend::set_has_account_id_friend() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFFreeTrialChooseMostHelpfulFriend::clear_has_account_id_friend() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFFreeTrialChooseMostHelpfulFriend::clear_account_id_friend() {
  account_id_friend_ = 0u;
  clear_has_account_id_friend();
}
inline ::google::protobuf::uint32 CMsgTFFreeTrialChooseMostHelpfulFriend::account_id_friend() const {
  return account_id_friend_;
}
inline void CMsgTFFreeTrialChooseMostHelpfulFriend::set_account_id_friend(::google::protobuf::uint32 value) {
  set_has_account_id_friend();
  account_id_friend_ = value;
}

// -------------------------------------------------------------------

// CMsgTFRequestTF2Friends

// repeated uint32 account_ids = 1;
inline int CMsgTFRequestTF2Friends::account_ids_size() const {
  return account_ids_.size();
}
inline void CMsgTFRequestTF2Friends::clear_account_ids() {
  account_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgTFRequestTF2Friends::account_ids(int index) const {
  return account_ids_.Get(index);
}
inline void CMsgTFRequestTF2Friends::set_account_ids(int index, ::google::protobuf::uint32 value) {
  account_ids_.Set(index, value);
}
inline void CMsgTFRequestTF2Friends::add_account_ids(::google::protobuf::uint32 value) {
  account_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgTFRequestTF2Friends::account_ids() const {
  return account_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgTFRequestTF2Friends::mutable_account_ids() {
  return &account_ids_;
}

// -------------------------------------------------------------------

// CMsgTFRequestTF2FriendsResponse

// repeated uint32 account_ids = 1;
inline int CMsgTFRequestTF2FriendsResponse::account_ids_size() const {
  return account_ids_.size();
}
inline void CMsgTFRequestTF2FriendsResponse::clear_account_ids() {
  account_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgTFRequestTF2FriendsResponse::account_ids(int index) const {
  return account_ids_.Get(index);
}
inline void CMsgTFRequestTF2FriendsResponse::set_account_ids(int index, ::google::protobuf::uint32 value) {
  account_ids_.Set(index, value);
}
inline void CMsgTFRequestTF2FriendsResponse::add_account_ids(::google::protobuf::uint32 value) {
  account_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgTFRequestTF2FriendsResponse::account_ids() const {
  return account_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgTFRequestTF2FriendsResponse::mutable_account_ids() {
  return &account_ids_;
}

// -------------------------------------------------------------------

// CSOTFPlayerInfo

// optional uint32 num_new_users_helped = 1;
inline bool CSOTFPlayerInfo::has_num_new_users_helped() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOTFPlayerInfo::set_has_num_new_users_helped() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOTFPlayerInfo::clear_has_num_new_users_helped() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOTFPlayerInfo::clear_num_new_users_helped() {
  num_new_users_helped_ = 0u;
  clear_has_num_new_users_helped();
}
inline ::google::protobuf::uint32 CSOTFPlayerInfo::num_new_users_helped() const {
  return num_new_users_helped_;
}
inline void CSOTFPlayerInfo::set_num_new_users_helped(::google::protobuf::uint32 value) {
  set_has_num_new_users_helped();
  num_new_users_helped_ = value;
}

// optional bool trial_account = 2 [default = false];
inline bool CSOTFPlayerInfo::has_trial_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOTFPlayerInfo::set_has_trial_account() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOTFPlayerInfo::clear_has_trial_account() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOTFPlayerInfo::clear_trial_account() {
  trial_account_ = false;
  clear_has_trial_account();
}
inline bool CSOTFPlayerInfo::trial_account() const {
  return trial_account_;
}
inline void CSOTFPlayerInfo::set_trial_account(bool value) {
  set_has_trial_account();
  trial_account_ = value;
}

// -------------------------------------------------------------------

// CMsgTFThankedBySomeone

// optional uint64 thanker_steam_id = 1;
inline bool CMsgTFThankedBySomeone::has_thanker_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFThankedBySomeone::set_has_thanker_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFThankedBySomeone::clear_has_thanker_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFThankedBySomeone::clear_thanker_steam_id() {
  thanker_steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_thanker_steam_id();
}
inline ::google::protobuf::uint64 CMsgTFThankedBySomeone::thanker_steam_id() const {
  return thanker_steam_id_;
}
inline void CMsgTFThankedBySomeone::set_thanker_steam_id(::google::protobuf::uint64 value) {
  set_has_thanker_steam_id();
  thanker_steam_id_ = value;
}

// -------------------------------------------------------------------

// CMsgTFThankedSomeone

// -------------------------------------------------------------------

// CMsgTFFreeTrialConvertedToPremium

// -------------------------------------------------------------------

// CMsgSaxxyAwarded

// optional uint32 category = 1;
inline bool CMsgSaxxyAwarded::has_category() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSaxxyAwarded::set_has_category() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSaxxyAwarded::clear_has_category() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSaxxyAwarded::clear_category() {
  category_ = 0u;
  clear_has_category();
}
inline ::google::protobuf::uint32 CMsgSaxxyAwarded::category() const {
  return category_;
}
inline void CMsgSaxxyAwarded::set_category(::google::protobuf::uint32 value) {
  set_has_category();
  category_ = value;
}

// repeated string winner_names = 2;
inline int CMsgSaxxyAwarded::winner_names_size() const {
  return winner_names_.size();
}
inline void CMsgSaxxyAwarded::clear_winner_names() {
  winner_names_.Clear();
}
inline const ::std::string& CMsgSaxxyAwarded::winner_names(int index) const {
  return winner_names_.Get(index);
}
inline ::std::string* CMsgSaxxyAwarded::mutable_winner_names(int index) {
  return winner_names_.Mutable(index);
}
inline void CMsgSaxxyAwarded::set_winner_names(int index, const ::std::string& value) {
  winner_names_.Mutable(index)->assign(value);
}
inline void CMsgSaxxyAwarded::set_winner_names(int index, const char* value) {
  winner_names_.Mutable(index)->assign(value);
}
inline void CMsgSaxxyAwarded::set_winner_names(int index, const char* value, size_t size) {
  winner_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgSaxxyAwarded::add_winner_names() {
  return winner_names_.Add();
}
inline void CMsgSaxxyAwarded::add_winner_names(const ::std::string& value) {
  winner_names_.Add()->assign(value);
}
inline void CMsgSaxxyAwarded::add_winner_names(const char* value) {
  winner_names_.Add()->assign(value);
}
inline void CMsgSaxxyAwarded::add_winner_names(const char* value, size_t size) {
  winner_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMsgSaxxyAwarded::winner_names() const {
  return winner_names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CMsgSaxxyAwarded::mutable_winner_names() {
  return &winner_names_;
}

// -------------------------------------------------------------------

// CMsgReplayUploadedToYouTube

// optional string youtube_url = 1;
inline bool CMsgReplayUploadedToYouTube::has_youtube_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgReplayUploadedToYouTube::set_has_youtube_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgReplayUploadedToYouTube::clear_has_youtube_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgReplayUploadedToYouTube::clear_youtube_url() {
  if (youtube_url_ != &::google::protobuf::internal::kEmptyString) {
    youtube_url_->clear();
  }
  clear_has_youtube_url();
}
inline const ::std::string& CMsgReplayUploadedToYouTube::youtube_url() const {
  return *youtube_url_;
}
inline void CMsgReplayUploadedToYouTube::set_youtube_url(const ::std::string& value) {
  set_has_youtube_url();
  if (youtube_url_ == &::google::protobuf::internal::kEmptyString) {
    youtube_url_ = new ::std::string;
  }
  youtube_url_->assign(value);
}
inline void CMsgReplayUploadedToYouTube::set_youtube_url(const char* value) {
  set_has_youtube_url();
  if (youtube_url_ == &::google::protobuf::internal::kEmptyString) {
    youtube_url_ = new ::std::string;
  }
  youtube_url_->assign(value);
}
inline void CMsgReplayUploadedToYouTube::set_youtube_url(const char* value, size_t size) {
  set_has_youtube_url();
  if (youtube_url_ == &::google::protobuf::internal::kEmptyString) {
    youtube_url_ = new ::std::string;
  }
  youtube_url_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgReplayUploadedToYouTube::mutable_youtube_url() {
  set_has_youtube_url();
  if (youtube_url_ == &::google::protobuf::internal::kEmptyString) {
    youtube_url_ = new ::std::string;
  }
  return youtube_url_;
}
inline ::std::string* CMsgReplayUploadedToYouTube::release_youtube_url() {
  clear_has_youtube_url();
  if (youtube_url_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = youtube_url_;
    youtube_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string youtube_account_name = 2;
inline bool CMsgReplayUploadedToYouTube::has_youtube_account_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgReplayUploadedToYouTube::set_has_youtube_account_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgReplayUploadedToYouTube::clear_has_youtube_account_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgReplayUploadedToYouTube::clear_youtube_account_name() {
  if (youtube_account_name_ != &::google::protobuf::internal::kEmptyString) {
    youtube_account_name_->clear();
  }
  clear_has_youtube_account_name();
}
inline const ::std::string& CMsgReplayUploadedToYouTube::youtube_account_name() const {
  return *youtube_account_name_;
}
inline void CMsgReplayUploadedToYouTube::set_youtube_account_name(const ::std::string& value) {
  set_has_youtube_account_name();
  if (youtube_account_name_ == &::google::protobuf::internal::kEmptyString) {
    youtube_account_name_ = new ::std::string;
  }
  youtube_account_name_->assign(value);
}
inline void CMsgReplayUploadedToYouTube::set_youtube_account_name(const char* value) {
  set_has_youtube_account_name();
  if (youtube_account_name_ == &::google::protobuf::internal::kEmptyString) {
    youtube_account_name_ = new ::std::string;
  }
  youtube_account_name_->assign(value);
}
inline void CMsgReplayUploadedToYouTube::set_youtube_account_name(const char* value, size_t size) {
  set_has_youtube_account_name();
  if (youtube_account_name_ == &::google::protobuf::internal::kEmptyString) {
    youtube_account_name_ = new ::std::string;
  }
  youtube_account_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgReplayUploadedToYouTube::mutable_youtube_account_name() {
  set_has_youtube_account_name();
  if (youtube_account_name_ == &::google::protobuf::internal::kEmptyString) {
    youtube_account_name_ = new ::std::string;
  }
  return youtube_account_name_;
}
inline ::std::string* CMsgReplayUploadedToYouTube::release_youtube_account_name() {
  clear_has_youtube_account_name();
  if (youtube_account_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = youtube_account_name_;
    youtube_account_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint64 session_id = 3;
inline bool CMsgReplayUploadedToYouTube::has_session_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgReplayUploadedToYouTube::set_has_session_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgReplayUploadedToYouTube::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgReplayUploadedToYouTube::clear_session_id() {
  session_id_ = GOOGLE_ULONGLONG(0);
  clear_has_session_id();
}
inline ::google::protobuf::uint64 CMsgReplayUploadedToYouTube::session_id() const {
  return session_id_;
}
inline void CMsgReplayUploadedToYouTube::set_session_id(::google::protobuf::uint64 value) {
  set_has_session_id();
  session_id_ = value;
}

// -------------------------------------------------------------------

// CMsgReplaySubmitContestEntry

// optional string youtube_url = 1;
inline bool CMsgReplaySubmitContestEntry::has_youtube_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgReplaySubmitContestEntry::set_has_youtube_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgReplaySubmitContestEntry::clear_has_youtube_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgReplaySubmitContestEntry::clear_youtube_url() {
  if (youtube_url_ != &::google::protobuf::internal::kEmptyString) {
    youtube_url_->clear();
  }
  clear_has_youtube_url();
}
inline const ::std::string& CMsgReplaySubmitContestEntry::youtube_url() const {
  return *youtube_url_;
}
inline void CMsgReplaySubmitContestEntry::set_youtube_url(const ::std::string& value) {
  set_has_youtube_url();
  if (youtube_url_ == &::google::protobuf::internal::kEmptyString) {
    youtube_url_ = new ::std::string;
  }
  youtube_url_->assign(value);
}
inline void CMsgReplaySubmitContestEntry::set_youtube_url(const char* value) {
  set_has_youtube_url();
  if (youtube_url_ == &::google::protobuf::internal::kEmptyString) {
    youtube_url_ = new ::std::string;
  }
  youtube_url_->assign(value);
}
inline void CMsgReplaySubmitContestEntry::set_youtube_url(const char* value, size_t size) {
  set_has_youtube_url();
  if (youtube_url_ == &::google::protobuf::internal::kEmptyString) {
    youtube_url_ = new ::std::string;
  }
  youtube_url_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgReplaySubmitContestEntry::mutable_youtube_url() {
  set_has_youtube_url();
  if (youtube_url_ == &::google::protobuf::internal::kEmptyString) {
    youtube_url_ = new ::std::string;
  }
  return youtube_url_;
}
inline ::std::string* CMsgReplaySubmitContestEntry::release_youtube_url() {
  clear_has_youtube_url();
  if (youtube_url_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = youtube_url_;
    youtube_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 category = 2;
inline bool CMsgReplaySubmitContestEntry::has_category() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgReplaySubmitContestEntry::set_has_category() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgReplaySubmitContestEntry::clear_has_category() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgReplaySubmitContestEntry::clear_category() {
  category_ = 0u;
  clear_has_category();
}
inline ::google::protobuf::uint32 CMsgReplaySubmitContestEntry::category() const {
  return category_;
}
inline void CMsgReplaySubmitContestEntry::set_category(::google::protobuf::uint32 value) {
  set_has_category();
  category_ = value;
}

// -------------------------------------------------------------------

// CMsgReplaySubmitContestEntryResponse

// optional bool success = 1;
inline bool CMsgReplaySubmitContestEntryResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgReplaySubmitContestEntryResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgReplaySubmitContestEntryResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgReplaySubmitContestEntryResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool CMsgReplaySubmitContestEntryResponse::success() const {
  return success_;
}
inline void CMsgReplaySubmitContestEntryResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
}

// -------------------------------------------------------------------

// CReplayCachedContestData

// optional fixed32 timestamp = 1;
inline bool CReplayCachedContestData::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CReplayCachedContestData::set_has_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CReplayCachedContestData::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CReplayCachedContestData::clear_timestamp() {
  timestamp_ = 0u;
  clear_has_timestamp();
}
inline ::google::protobuf::uint32 CReplayCachedContestData::timestamp() const {
  return timestamp_;
}
inline void CReplayCachedContestData::set_timestamp(::google::protobuf::uint32 value) {
  set_has_timestamp();
  timestamp_ = value;
}

// optional uint32 num_votes_last_day = 2;
inline bool CReplayCachedContestData::has_num_votes_last_day() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CReplayCachedContestData::set_has_num_votes_last_day() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CReplayCachedContestData::clear_has_num_votes_last_day() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CReplayCachedContestData::clear_num_votes_last_day() {
  num_votes_last_day_ = 0u;
  clear_has_num_votes_last_day();
}
inline ::google::protobuf::uint32 CReplayCachedContestData::num_votes_last_day() const {
  return num_votes_last_day_;
}
inline void CReplayCachedContestData::set_num_votes_last_day(::google::protobuf::uint32 value) {
  set_has_num_votes_last_day();
  num_votes_last_day_ = value;
}

// repeated uint32 video_entry_ids = 3;
inline int CReplayCachedContestData::video_entry_ids_size() const {
  return video_entry_ids_.size();
}
inline void CReplayCachedContestData::clear_video_entry_ids() {
  video_entry_ids_.Clear();
}
inline ::google::protobuf::uint32 CReplayCachedContestData::video_entry_ids(int index) const {
  return video_entry_ids_.Get(index);
}
inline void CReplayCachedContestData::set_video_entry_ids(int index, ::google::protobuf::uint32 value) {
  video_entry_ids_.Set(index, value);
}
inline void CReplayCachedContestData::add_video_entry_ids(::google::protobuf::uint32 value) {
  video_entry_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CReplayCachedContestData::video_entry_ids() const {
  return video_entry_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CReplayCachedContestData::mutable_video_entry_ids() {
  return &video_entry_ids_;
}

// optional uint32 num_flags_last_day = 4;
inline bool CReplayCachedContestData::has_num_flags_last_day() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CReplayCachedContestData::set_has_num_flags_last_day() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CReplayCachedContestData::clear_has_num_flags_last_day() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CReplayCachedContestData::clear_num_flags_last_day() {
  num_flags_last_day_ = 0u;
  clear_has_num_flags_last_day();
}
inline ::google::protobuf::uint32 CReplayCachedContestData::num_flags_last_day() const {
  return num_flags_last_day_;
}
inline void CReplayCachedContestData::set_num_flags_last_day(::google::protobuf::uint32 value) {
  set_has_num_flags_last_day();
  num_flags_last_day_ = value;
}

// -------------------------------------------------------------------

// CMsgTFCoaching_AddToCoaches

// -------------------------------------------------------------------

// CMsgTFCoaching_RemoveFromCoaches

// -------------------------------------------------------------------

// CMsgTFCoaching_FindCoach

// optional uint32 account_id_friend_as_coach = 1;
inline bool CMsgTFCoaching_FindCoach::has_account_id_friend_as_coach() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFCoaching_FindCoach::set_has_account_id_friend_as_coach() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFCoaching_FindCoach::clear_has_account_id_friend_as_coach() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFCoaching_FindCoach::clear_account_id_friend_as_coach() {
  account_id_friend_as_coach_ = 0u;
  clear_has_account_id_friend_as_coach();
}
inline ::google::protobuf::uint32 CMsgTFCoaching_FindCoach::account_id_friend_as_coach() const {
  return account_id_friend_as_coach_;
}
inline void CMsgTFCoaching_FindCoach::set_account_id_friend_as_coach(::google::protobuf::uint32 value) {
  set_has_account_id_friend_as_coach();
  account_id_friend_as_coach_ = value;
}

// -------------------------------------------------------------------

// CMsgTFCoaching_FindCoachResponse

// optional bool found_coach = 1;
inline bool CMsgTFCoaching_FindCoachResponse::has_found_coach() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFCoaching_FindCoachResponse::set_has_found_coach() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFCoaching_FindCoachResponse::clear_has_found_coach() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFCoaching_FindCoachResponse::clear_found_coach() {
  found_coach_ = false;
  clear_has_found_coach();
}
inline bool CMsgTFCoaching_FindCoachResponse::found_coach() const {
  return found_coach_;
}
inline void CMsgTFCoaching_FindCoachResponse::set_found_coach(bool value) {
  set_has_found_coach();
  found_coach_ = value;
}

// optional uint32 num_likes = 2;
inline bool CMsgTFCoaching_FindCoachResponse::has_num_likes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFCoaching_FindCoachResponse::set_has_num_likes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFCoaching_FindCoachResponse::clear_has_num_likes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFCoaching_FindCoachResponse::clear_num_likes() {
  num_likes_ = 0u;
  clear_has_num_likes();
}
inline ::google::protobuf::uint32 CMsgTFCoaching_FindCoachResponse::num_likes() const {
  return num_likes_;
}
inline void CMsgTFCoaching_FindCoachResponse::set_num_likes(::google::protobuf::uint32 value) {
  set_has_num_likes();
  num_likes_ = value;
}

// optional string coach_name = 3;
inline bool CMsgTFCoaching_FindCoachResponse::has_coach_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTFCoaching_FindCoachResponse::set_has_coach_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgTFCoaching_FindCoachResponse::clear_has_coach_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgTFCoaching_FindCoachResponse::clear_coach_name() {
  if (coach_name_ != &::google::protobuf::internal::kEmptyString) {
    coach_name_->clear();
  }
  clear_has_coach_name();
}
inline const ::std::string& CMsgTFCoaching_FindCoachResponse::coach_name() const {
  return *coach_name_;
}
inline void CMsgTFCoaching_FindCoachResponse::set_coach_name(const ::std::string& value) {
  set_has_coach_name();
  if (coach_name_ == &::google::protobuf::internal::kEmptyString) {
    coach_name_ = new ::std::string;
  }
  coach_name_->assign(value);
}
inline void CMsgTFCoaching_FindCoachResponse::set_coach_name(const char* value) {
  set_has_coach_name();
  if (coach_name_ == &::google::protobuf::internal::kEmptyString) {
    coach_name_ = new ::std::string;
  }
  coach_name_->assign(value);
}
inline void CMsgTFCoaching_FindCoachResponse::set_coach_name(const char* value, size_t size) {
  set_has_coach_name();
  if (coach_name_ == &::google::protobuf::internal::kEmptyString) {
    coach_name_ = new ::std::string;
  }
  coach_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgTFCoaching_FindCoachResponse::mutable_coach_name() {
  set_has_coach_name();
  if (coach_name_ == &::google::protobuf::internal::kEmptyString) {
    coach_name_ = new ::std::string;
  }
  return coach_name_;
}
inline ::std::string* CMsgTFCoaching_FindCoachResponse::release_coach_name() {
  clear_has_coach_name();
  if (coach_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = coach_name_;
    coach_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CMsgTFCoaching_AskCoach

// optional uint32 account_id_student = 1;
inline bool CMsgTFCoaching_AskCoach::has_account_id_student() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFCoaching_AskCoach::set_has_account_id_student() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFCoaching_AskCoach::clear_has_account_id_student() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFCoaching_AskCoach::clear_account_id_student() {
  account_id_student_ = 0u;
  clear_has_account_id_student();
}
inline ::google::protobuf::uint32 CMsgTFCoaching_AskCoach::account_id_student() const {
  return account_id_student_;
}
inline void CMsgTFCoaching_AskCoach::set_account_id_student(::google::protobuf::uint32 value) {
  set_has_account_id_student();
  account_id_student_ = value;
}

// optional bool student_is_friend = 2;
inline bool CMsgTFCoaching_AskCoach::has_student_is_friend() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFCoaching_AskCoach::set_has_student_is_friend() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFCoaching_AskCoach::clear_has_student_is_friend() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFCoaching_AskCoach::clear_student_is_friend() {
  student_is_friend_ = false;
  clear_has_student_is_friend();
}
inline bool CMsgTFCoaching_AskCoach::student_is_friend() const {
  return student_is_friend_;
}
inline void CMsgTFCoaching_AskCoach::set_student_is_friend(bool value) {
  set_has_student_is_friend();
  student_is_friend_ = value;
}

// -------------------------------------------------------------------

// CMsgTFCoaching_AskCoachResponse

// optional bool accept_coaching_assignment = 1;
inline bool CMsgTFCoaching_AskCoachResponse::has_accept_coaching_assignment() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFCoaching_AskCoachResponse::set_has_accept_coaching_assignment() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFCoaching_AskCoachResponse::clear_has_accept_coaching_assignment() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFCoaching_AskCoachResponse::clear_accept_coaching_assignment() {
  accept_coaching_assignment_ = false;
  clear_has_accept_coaching_assignment();
}
inline bool CMsgTFCoaching_AskCoachResponse::accept_coaching_assignment() const {
  return accept_coaching_assignment_;
}
inline void CMsgTFCoaching_AskCoachResponse::set_accept_coaching_assignment(bool value) {
  set_has_accept_coaching_assignment();
  accept_coaching_assignment_ = value;
}

// -------------------------------------------------------------------

// CMsgTFCoaching_CoachJoinGame

// optional bool join_game = 1;
inline bool CMsgTFCoaching_CoachJoinGame::has_join_game() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFCoaching_CoachJoinGame::set_has_join_game() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFCoaching_CoachJoinGame::clear_has_join_game() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFCoaching_CoachJoinGame::clear_join_game() {
  join_game_ = false;
  clear_has_join_game();
}
inline bool CMsgTFCoaching_CoachJoinGame::join_game() const {
  return join_game_;
}
inline void CMsgTFCoaching_CoachJoinGame::set_join_game(bool value) {
  set_has_join_game();
  join_game_ = value;
}

// optional uint32 server_address = 2;
inline bool CMsgTFCoaching_CoachJoinGame::has_server_address() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFCoaching_CoachJoinGame::set_has_server_address() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFCoaching_CoachJoinGame::clear_has_server_address() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFCoaching_CoachJoinGame::clear_server_address() {
  server_address_ = 0u;
  clear_has_server_address();
}
inline ::google::protobuf::uint32 CMsgTFCoaching_CoachJoinGame::server_address() const {
  return server_address_;
}
inline void CMsgTFCoaching_CoachJoinGame::set_server_address(::google::protobuf::uint32 value) {
  set_has_server_address();
  server_address_ = value;
}

// optional uint32 server_port = 3;
inline bool CMsgTFCoaching_CoachJoinGame::has_server_port() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTFCoaching_CoachJoinGame::set_has_server_port() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgTFCoaching_CoachJoinGame::clear_has_server_port() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgTFCoaching_CoachJoinGame::clear_server_port() {
  server_port_ = 0u;
  clear_has_server_port();
}
inline ::google::protobuf::uint32 CMsgTFCoaching_CoachJoinGame::server_port() const {
  return server_port_;
}
inline void CMsgTFCoaching_CoachJoinGame::set_server_port(::google::protobuf::uint32 value) {
  set_has_server_port();
  server_port_ = value;
}

// optional uint32 account_id_student = 4;
inline bool CMsgTFCoaching_CoachJoinGame::has_account_id_student() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgTFCoaching_CoachJoinGame::set_has_account_id_student() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgTFCoaching_CoachJoinGame::clear_has_account_id_student() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgTFCoaching_CoachJoinGame::clear_account_id_student() {
  account_id_student_ = 0u;
  clear_has_account_id_student();
}
inline ::google::protobuf::uint32 CMsgTFCoaching_CoachJoinGame::account_id_student() const {
  return account_id_student_;
}
inline void CMsgTFCoaching_CoachJoinGame::set_account_id_student(::google::protobuf::uint32 value) {
  set_has_account_id_student();
  account_id_student_ = value;
}

// -------------------------------------------------------------------

// CMsgTFCoaching_CoachJoining

// optional uint32 account_id_coach = 1;
inline bool CMsgTFCoaching_CoachJoining::has_account_id_coach() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFCoaching_CoachJoining::set_has_account_id_coach() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFCoaching_CoachJoining::clear_has_account_id_coach() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFCoaching_CoachJoining::clear_account_id_coach() {
  account_id_coach_ = 0u;
  clear_has_account_id_coach();
}
inline ::google::protobuf::uint32 CMsgTFCoaching_CoachJoining::account_id_coach() const {
  return account_id_coach_;
}
inline void CMsgTFCoaching_CoachJoining::set_account_id_coach(::google::protobuf::uint32 value) {
  set_has_account_id_coach();
  account_id_coach_ = value;
}

// optional uint32 account_id_student = 2;
inline bool CMsgTFCoaching_CoachJoining::has_account_id_student() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFCoaching_CoachJoining::set_has_account_id_student() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFCoaching_CoachJoining::clear_has_account_id_student() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFCoaching_CoachJoining::clear_account_id_student() {
  account_id_student_ = 0u;
  clear_has_account_id_student();
}
inline ::google::protobuf::uint32 CMsgTFCoaching_CoachJoining::account_id_student() const {
  return account_id_student_;
}
inline void CMsgTFCoaching_CoachJoining::set_account_id_student(::google::protobuf::uint32 value) {
  set_has_account_id_student();
  account_id_student_ = value;
}

// -------------------------------------------------------------------

// CMsgTFCoaching_CoachJoined

// optional uint32 account_id_coach = 1;
inline bool CMsgTFCoaching_CoachJoined::has_account_id_coach() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFCoaching_CoachJoined::set_has_account_id_coach() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFCoaching_CoachJoined::clear_has_account_id_coach() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFCoaching_CoachJoined::clear_account_id_coach() {
  account_id_coach_ = 0u;
  clear_has_account_id_coach();
}
inline ::google::protobuf::uint32 CMsgTFCoaching_CoachJoined::account_id_coach() const {
  return account_id_coach_;
}
inline void CMsgTFCoaching_CoachJoined::set_account_id_coach(::google::protobuf::uint32 value) {
  set_has_account_id_coach();
  account_id_coach_ = value;
}

// -------------------------------------------------------------------

// CMsgTFCoaching_LikeCurrentCoach

// optional bool like_coach = 1;
inline bool CMsgTFCoaching_LikeCurrentCoach::has_like_coach() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFCoaching_LikeCurrentCoach::set_has_like_coach() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFCoaching_LikeCurrentCoach::clear_has_like_coach() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFCoaching_LikeCurrentCoach::clear_like_coach() {
  like_coach_ = false;
  clear_has_like_coach();
}
inline bool CMsgTFCoaching_LikeCurrentCoach::like_coach() const {
  return like_coach_;
}
inline void CMsgTFCoaching_LikeCurrentCoach::set_like_coach(bool value) {
  set_has_like_coach();
  like_coach_ = value;
}

// -------------------------------------------------------------------

// CMsgTFCoaching_RemoveCurrentCoach

// optional uint32 account_id_coach = 1;
inline bool CMsgTFCoaching_RemoveCurrentCoach::has_account_id_coach() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFCoaching_RemoveCurrentCoach::set_has_account_id_coach() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFCoaching_RemoveCurrentCoach::clear_has_account_id_coach() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFCoaching_RemoveCurrentCoach::clear_account_id_coach() {
  account_id_coach_ = 0u;
  clear_has_account_id_coach();
}
inline ::google::protobuf::uint32 CMsgTFCoaching_RemoveCurrentCoach::account_id_coach() const {
  return account_id_coach_;
}
inline void CMsgTFCoaching_RemoveCurrentCoach::set_account_id_coach(::google::protobuf::uint32 value) {
  set_has_account_id_coach();
  account_id_coach_ = value;
}

// -------------------------------------------------------------------

// CMsgTFQuickplay_ScoreServers_ServerInfo

// optional uint32 server_address = 1;
inline bool CMsgTFQuickplay_ScoreServers_ServerInfo::has_server_address() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_has_server_address() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_has_server_address() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_server_address() {
  server_address_ = 0u;
  clear_has_server_address();
}
inline ::google::protobuf::uint32 CMsgTFQuickplay_ScoreServers_ServerInfo::server_address() const {
  return server_address_;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_server_address(::google::protobuf::uint32 value) {
  set_has_server_address();
  server_address_ = value;
}

// optional uint32 server_port = 2;
inline bool CMsgTFQuickplay_ScoreServers_ServerInfo::has_server_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_has_server_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_has_server_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_server_port() {
  server_port_ = 0u;
  clear_has_server_port();
}
inline ::google::protobuf::uint32 CMsgTFQuickplay_ScoreServers_ServerInfo::server_port() const {
  return server_port_;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_server_port(::google::protobuf::uint32 value) {
  set_has_server_port();
  server_port_ = value;
}

// optional uint32 num_users = 3;
inline bool CMsgTFQuickplay_ScoreServers_ServerInfo::has_num_users() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_has_num_users() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_has_num_users() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_num_users() {
  num_users_ = 0u;
  clear_has_num_users();
}
inline ::google::protobuf::uint32 CMsgTFQuickplay_ScoreServers_ServerInfo::num_users() const {
  return num_users_;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_num_users(::google::protobuf::uint32 value) {
  set_has_num_users();
  num_users_ = value;
}

// optional uint64 steam_id = 4;
inline bool CMsgTFQuickplay_ScoreServers_ServerInfo::has_steam_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_has_steam_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgTFQuickplay_ScoreServers_ServerInfo::steam_id() const {
  return steam_id_;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
}

// optional uint32 max_users = 5;
inline bool CMsgTFQuickplay_ScoreServers_ServerInfo::has_max_users() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_has_max_users() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_has_max_users() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_max_users() {
  max_users_ = 0u;
  clear_has_max_users();
}
inline ::google::protobuf::uint32 CMsgTFQuickplay_ScoreServers_ServerInfo::max_users() const {
  return max_users_;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_max_users(::google::protobuf::uint32 value) {
  set_has_max_users();
  max_users_ = value;
}

// optional float user_score = 6;
inline bool CMsgTFQuickplay_ScoreServers_ServerInfo::has_user_score() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_has_user_score() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_has_user_score() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_user_score() {
  user_score_ = 0;
  clear_has_user_score();
}
inline float CMsgTFQuickplay_ScoreServers_ServerInfo::user_score() const {
  return user_score_;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_user_score(float value) {
  set_has_user_score();
  user_score_ = value;
}

// -------------------------------------------------------------------

// CMsgTFQuickplay_ScoreServers

// repeated .CMsgTFQuickplay_ScoreServers.ServerInfo servers = 1;
inline int CMsgTFQuickplay_ScoreServers::servers_size() const {
  return servers_.size();
}
inline void CMsgTFQuickplay_ScoreServers::clear_servers() {
  servers_.Clear();
}
inline const ::CMsgTFQuickplay_ScoreServers_ServerInfo& CMsgTFQuickplay_ScoreServers::servers(int index) const {
  return servers_.Get(index);
}
inline ::CMsgTFQuickplay_ScoreServers_ServerInfo* CMsgTFQuickplay_ScoreServers::mutable_servers(int index) {
  return servers_.Mutable(index);
}
inline ::CMsgTFQuickplay_ScoreServers_ServerInfo* CMsgTFQuickplay_ScoreServers::add_servers() {
  return servers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServers_ServerInfo >&
CMsgTFQuickplay_ScoreServers::servers() const {
  return servers_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServers_ServerInfo >*
CMsgTFQuickplay_ScoreServers::mutable_servers() {
  return &servers_;
}

// -------------------------------------------------------------------

// CMsgTFQuickplay_ScoreServersResponse_ServerInfo

// optional uint32 server_address = 1;
inline bool CMsgTFQuickplay_ScoreServersResponse_ServerInfo::has_server_address() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::set_has_server_address() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::clear_has_server_address() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::clear_server_address() {
  server_address_ = 0u;
  clear_has_server_address();
}
inline ::google::protobuf::uint32 CMsgTFQuickplay_ScoreServersResponse_ServerInfo::server_address() const {
  return server_address_;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::set_server_address(::google::protobuf::uint32 value) {
  set_has_server_address();
  server_address_ = value;
}

// optional uint32 server_port = 2;
inline bool CMsgTFQuickplay_ScoreServersResponse_ServerInfo::has_server_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::set_has_server_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::clear_has_server_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::clear_server_port() {
  server_port_ = 0u;
  clear_has_server_port();
}
inline ::google::protobuf::uint32 CMsgTFQuickplay_ScoreServersResponse_ServerInfo::server_port() const {
  return server_port_;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::set_server_port(::google::protobuf::uint32 value) {
  set_has_server_port();
  server_port_ = value;
}

// optional float total_score = 3;
inline bool CMsgTFQuickplay_ScoreServersResponse_ServerInfo::has_total_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::set_has_total_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::clear_has_total_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::clear_total_score() {
  total_score_ = 0;
  clear_has_total_score();
}
inline float CMsgTFQuickplay_ScoreServersResponse_ServerInfo::total_score() const {
  return total_score_;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::set_total_score(float value) {
  set_has_total_score();
  total_score_ = value;
}

// optional uint64 steam_id = 4;
inline bool CMsgTFQuickplay_ScoreServersResponse_ServerInfo::has_steam_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::set_has_steam_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgTFQuickplay_ScoreServersResponse_ServerInfo::steam_id() const {
  return steam_id_;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
}

// -------------------------------------------------------------------

// CMsgTFQuickplay_ScoreServersResponse

// repeated .CMsgTFQuickplay_ScoreServersResponse.ServerInfo servers = 1;
inline int CMsgTFQuickplay_ScoreServersResponse::servers_size() const {
  return servers_.size();
}
inline void CMsgTFQuickplay_ScoreServersResponse::clear_servers() {
  servers_.Clear();
}
inline const ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo& CMsgTFQuickplay_ScoreServersResponse::servers(int index) const {
  return servers_.Get(index);
}
inline ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo* CMsgTFQuickplay_ScoreServersResponse::mutable_servers(int index) {
  return servers_.Mutable(index);
}
inline ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo* CMsgTFQuickplay_ScoreServersResponse::add_servers() {
  return servers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo >&
CMsgTFQuickplay_ScoreServersResponse::servers() const {
  return servers_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo >*
CMsgTFQuickplay_ScoreServersResponse::mutable_servers() {
  return &servers_;
}

// -------------------------------------------------------------------

// CMsgTFQuickplay_PlayerJoining

// optional uint32 account_id = 1;
inline bool CMsgTFQuickplay_PlayerJoining::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFQuickplay_PlayerJoining::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFQuickplay_PlayerJoining::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFQuickplay_PlayerJoining::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgTFQuickplay_PlayerJoining::account_id() const {
  return account_id_;
}
inline void CMsgTFQuickplay_PlayerJoining::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_LevelInfo

// optional bool level_loaded = 1;
inline bool CMsgGC_GameServer_LevelInfo::has_level_loaded() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_LevelInfo::set_has_level_loaded() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_LevelInfo::clear_has_level_loaded() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_LevelInfo::clear_level_loaded() {
  level_loaded_ = false;
  clear_has_level_loaded();
}
inline bool CMsgGC_GameServer_LevelInfo::level_loaded() const {
  return level_loaded_;
}
inline void CMsgGC_GameServer_LevelInfo::set_level_loaded(bool value) {
  set_has_level_loaded();
  level_loaded_ = value;
}

// optional string level_name = 2;
inline bool CMsgGC_GameServer_LevelInfo::has_level_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_GameServer_LevelInfo::set_has_level_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_GameServer_LevelInfo::clear_has_level_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_GameServer_LevelInfo::clear_level_name() {
  if (level_name_ != &::google::protobuf::internal::kEmptyString) {
    level_name_->clear();
  }
  clear_has_level_name();
}
inline const ::std::string& CMsgGC_GameServer_LevelInfo::level_name() const {
  return *level_name_;
}
inline void CMsgGC_GameServer_LevelInfo::set_level_name(const ::std::string& value) {
  set_has_level_name();
  if (level_name_ == &::google::protobuf::internal::kEmptyString) {
    level_name_ = new ::std::string;
  }
  level_name_->assign(value);
}
inline void CMsgGC_GameServer_LevelInfo::set_level_name(const char* value) {
  set_has_level_name();
  if (level_name_ == &::google::protobuf::internal::kEmptyString) {
    level_name_ = new ::std::string;
  }
  level_name_->assign(value);
}
inline void CMsgGC_GameServer_LevelInfo::set_level_name(const char* value, size_t size) {
  set_has_level_name();
  if (level_name_ == &::google::protobuf::internal::kEmptyString) {
    level_name_ = new ::std::string;
  }
  level_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgGC_GameServer_LevelInfo::mutable_level_name() {
  set_has_level_name();
  if (level_name_ == &::google::protobuf::internal::kEmptyString) {
    level_name_ = new ::std::string;
  }
  return level_name_;
}
inline ::std::string* CMsgGC_GameServer_LevelInfo::release_level_name() {
  clear_has_level_name();
  if (level_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = level_name_;
    level_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_AuthChallenge

// optional string challenge_string = 1;
inline bool CMsgGC_GameServer_AuthChallenge::has_challenge_string() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_AuthChallenge::set_has_challenge_string() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_AuthChallenge::clear_has_challenge_string() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_AuthChallenge::clear_challenge_string() {
  if (challenge_string_ != &::google::protobuf::internal::kEmptyString) {
    challenge_string_->clear();
  }
  clear_has_challenge_string();
}
inline const ::std::string& CMsgGC_GameServer_AuthChallenge::challenge_string() const {
  return *challenge_string_;
}
inline void CMsgGC_GameServer_AuthChallenge::set_challenge_string(const ::std::string& value) {
  set_has_challenge_string();
  if (challenge_string_ == &::google::protobuf::internal::kEmptyString) {
    challenge_string_ = new ::std::string;
  }
  challenge_string_->assign(value);
}
inline void CMsgGC_GameServer_AuthChallenge::set_challenge_string(const char* value) {
  set_has_challenge_string();
  if (challenge_string_ == &::google::protobuf::internal::kEmptyString) {
    challenge_string_ = new ::std::string;
  }
  challenge_string_->assign(value);
}
inline void CMsgGC_GameServer_AuthChallenge::set_challenge_string(const char* value, size_t size) {
  set_has_challenge_string();
  if (challenge_string_ == &::google::protobuf::internal::kEmptyString) {
    challenge_string_ = new ::std::string;
  }
  challenge_string_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgGC_GameServer_AuthChallenge::mutable_challenge_string() {
  set_has_challenge_string();
  if (challenge_string_ == &::google::protobuf::internal::kEmptyString) {
    challenge_string_ = new ::std::string;
  }
  return challenge_string_;
}
inline ::std::string* CMsgGC_GameServer_AuthChallenge::release_challenge_string() {
  clear_has_challenge_string();
  if (challenge_string_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = challenge_string_;
    challenge_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_AuthResult

// optional bool authenticated = 1;
inline bool CMsgGC_GameServer_AuthResult::has_authenticated() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_AuthResult::set_has_authenticated() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_AuthResult::clear_has_authenticated() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_AuthResult::clear_authenticated() {
  authenticated_ = false;
  clear_has_authenticated();
}
inline bool CMsgGC_GameServer_AuthResult::authenticated() const {
  return authenticated_;
}
inline void CMsgGC_GameServer_AuthResult::set_authenticated(bool value) {
  set_has_authenticated();
  authenticated_ = value;
}

// optional int32 game_server_standing = 2;
inline bool CMsgGC_GameServer_AuthResult::has_game_server_standing() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_GameServer_AuthResult::set_has_game_server_standing() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_GameServer_AuthResult::clear_has_game_server_standing() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_GameServer_AuthResult::clear_game_server_standing() {
  game_server_standing_ = 0;
  clear_has_game_server_standing();
}
inline ::google::protobuf::int32 CMsgGC_GameServer_AuthResult::game_server_standing() const {
  return game_server_standing_;
}
inline void CMsgGC_GameServer_AuthResult::set_game_server_standing(::google::protobuf::int32 value) {
  set_has_game_server_standing();
  game_server_standing_ = value;
}

// optional int32 game_server_standing_trend = 3;
inline bool CMsgGC_GameServer_AuthResult::has_game_server_standing_trend() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGC_GameServer_AuthResult::set_has_game_server_standing_trend() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGC_GameServer_AuthResult::clear_has_game_server_standing_trend() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGC_GameServer_AuthResult::clear_game_server_standing_trend() {
  game_server_standing_trend_ = 0;
  clear_has_game_server_standing_trend();
}
inline ::google::protobuf::int32 CMsgGC_GameServer_AuthResult::game_server_standing_trend() const {
  return game_server_standing_trend_;
}
inline void CMsgGC_GameServer_AuthResult::set_game_server_standing_trend(::google::protobuf::int32 value) {
  set_has_game_server_standing_trend();
  game_server_standing_trend_ = value;
}

// optional bool is_valve_server = 4;
inline bool CMsgGC_GameServer_AuthResult::has_is_valve_server() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGC_GameServer_AuthResult::set_has_is_valve_server() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGC_GameServer_AuthResult::clear_has_is_valve_server() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGC_GameServer_AuthResult::clear_is_valve_server() {
  is_valve_server_ = false;
  clear_has_is_valve_server();
}
inline bool CMsgGC_GameServer_AuthResult::is_valve_server() const {
  return is_valve_server_;
}
inline void CMsgGC_GameServer_AuthResult::set_is_valve_server(bool value) {
  set_has_is_valve_server();
  is_valve_server_ = value;
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_AuthChallengeResponse

// optional uint32 game_server_account_id = 1;
inline bool CMsgGC_GameServer_AuthChallengeResponse::has_game_server_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_AuthChallengeResponse::set_has_game_server_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_AuthChallengeResponse::clear_has_game_server_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_AuthChallengeResponse::clear_game_server_account_id() {
  game_server_account_id_ = 0u;
  clear_has_game_server_account_id();
}
inline ::google::protobuf::uint32 CMsgGC_GameServer_AuthChallengeResponse::game_server_account_id() const {
  return game_server_account_id_;
}
inline void CMsgGC_GameServer_AuthChallengeResponse::set_game_server_account_id(::google::protobuf::uint32 value) {
  set_has_game_server_account_id();
  game_server_account_id_ = value;
}

// optional bytes hashed_challenge_string = 2;
inline bool CMsgGC_GameServer_AuthChallengeResponse::has_hashed_challenge_string() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_GameServer_AuthChallengeResponse::set_has_hashed_challenge_string() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_GameServer_AuthChallengeResponse::clear_has_hashed_challenge_string() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_GameServer_AuthChallengeResponse::clear_hashed_challenge_string() {
  if (hashed_challenge_string_ != &::google::protobuf::internal::kEmptyString) {
    hashed_challenge_string_->clear();
  }
  clear_has_hashed_challenge_string();
}
inline const ::std::string& CMsgGC_GameServer_AuthChallengeResponse::hashed_challenge_string() const {
  return *hashed_challenge_string_;
}
inline void CMsgGC_GameServer_AuthChallengeResponse::set_hashed_challenge_string(const ::std::string& value) {
  set_has_hashed_challenge_string();
  if (hashed_challenge_string_ == &::google::protobuf::internal::kEmptyString) {
    hashed_challenge_string_ = new ::std::string;
  }
  hashed_challenge_string_->assign(value);
}
inline void CMsgGC_GameServer_AuthChallengeResponse::set_hashed_challenge_string(const char* value) {
  set_has_hashed_challenge_string();
  if (hashed_challenge_string_ == &::google::protobuf::internal::kEmptyString) {
    hashed_challenge_string_ = new ::std::string;
  }
  hashed_challenge_string_->assign(value);
}
inline void CMsgGC_GameServer_AuthChallengeResponse::set_hashed_challenge_string(const void* value, size_t size) {
  set_has_hashed_challenge_string();
  if (hashed_challenge_string_ == &::google::protobuf::internal::kEmptyString) {
    hashed_challenge_string_ = new ::std::string;
  }
  hashed_challenge_string_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgGC_GameServer_AuthChallengeResponse::mutable_hashed_challenge_string() {
  set_has_hashed_challenge_string();
  if (hashed_challenge_string_ == &::google::protobuf::internal::kEmptyString) {
    hashed_challenge_string_ = new ::std::string;
  }
  return hashed_challenge_string_;
}
inline ::std::string* CMsgGC_GameServer_AuthChallengeResponse::release_hashed_challenge_string() {
  clear_has_hashed_challenge_string();
  if (hashed_challenge_string_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = hashed_challenge_string_;
    hashed_challenge_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_CreateIdentity

// optional uint32 account_id = 1;
inline bool CMsgGC_GameServer_CreateIdentity::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_CreateIdentity::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_CreateIdentity::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_CreateIdentity::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgGC_GameServer_CreateIdentity::account_id() const {
  return account_id_;
}
inline void CMsgGC_GameServer_CreateIdentity::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_CreateIdentityResponse

// optional bool account_created = 1;
inline bool CMsgGC_GameServer_CreateIdentityResponse::has_account_created() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_has_account_created() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::clear_has_account_created() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::clear_account_created() {
  account_created_ = false;
  clear_has_account_created();
}
inline bool CMsgGC_GameServer_CreateIdentityResponse::account_created() const {
  return account_created_;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_account_created(bool value) {
  set_has_account_created();
  account_created_ = value;
}

// optional uint32 game_server_account_id = 2;
inline bool CMsgGC_GameServer_CreateIdentityResponse::has_game_server_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_has_game_server_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::clear_has_game_server_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::clear_game_server_account_id() {
  game_server_account_id_ = 0u;
  clear_has_game_server_account_id();
}
inline ::google::protobuf::uint32 CMsgGC_GameServer_CreateIdentityResponse::game_server_account_id() const {
  return game_server_account_id_;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_game_server_account_id(::google::protobuf::uint32 value) {
  set_has_game_server_account_id();
  game_server_account_id_ = value;
}

// optional string game_server_identity_token = 3;
inline bool CMsgGC_GameServer_CreateIdentityResponse::has_game_server_identity_token() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_has_game_server_identity_token() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::clear_has_game_server_identity_token() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::clear_game_server_identity_token() {
  if (game_server_identity_token_ != &::google::protobuf::internal::kEmptyString) {
    game_server_identity_token_->clear();
  }
  clear_has_game_server_identity_token();
}
inline const ::std::string& CMsgGC_GameServer_CreateIdentityResponse::game_server_identity_token() const {
  return *game_server_identity_token_;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_game_server_identity_token(const ::std::string& value) {
  set_has_game_server_identity_token();
  if (game_server_identity_token_ == &::google::protobuf::internal::kEmptyString) {
    game_server_identity_token_ = new ::std::string;
  }
  game_server_identity_token_->assign(value);
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_game_server_identity_token(const char* value) {
  set_has_game_server_identity_token();
  if (game_server_identity_token_ == &::google::protobuf::internal::kEmptyString) {
    game_server_identity_token_ = new ::std::string;
  }
  game_server_identity_token_->assign(value);
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_game_server_identity_token(const char* value, size_t size) {
  set_has_game_server_identity_token();
  if (game_server_identity_token_ == &::google::protobuf::internal::kEmptyString) {
    game_server_identity_token_ = new ::std::string;
  }
  game_server_identity_token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgGC_GameServer_CreateIdentityResponse::mutable_game_server_identity_token() {
  set_has_game_server_identity_token();
  if (game_server_identity_token_ == &::google::protobuf::internal::kEmptyString) {
    game_server_identity_token_ = new ::std::string;
  }
  return game_server_identity_token_;
}
inline ::std::string* CMsgGC_GameServer_CreateIdentityResponse::release_game_server_identity_token() {
  clear_has_game_server_identity_token();
  if (game_server_identity_token_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = game_server_identity_token_;
    game_server_identity_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional .CMsgGC_GameServer_CreateIdentityResponse.EStatus status = 4 [default = kStatus_GenericFailure];
inline bool CMsgGC_GameServer_CreateIdentityResponse::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::CMsgGC_GameServer_CreateIdentityResponse_EStatus CMsgGC_GameServer_CreateIdentityResponse::status() const {
  return static_cast< ::CMsgGC_GameServer_CreateIdentityResponse_EStatus >(status_);
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_status(::CMsgGC_GameServer_CreateIdentityResponse_EStatus value) {
  GOOGLE_DCHECK(::CMsgGC_GameServer_CreateIdentityResponse_EStatus_IsValid(value));
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_List

// optional uint32 account_id = 1;
inline bool CMsgGC_GameServer_List::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_List::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_List::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_List::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgGC_GameServer_List::account_id() const {
  return account_id_;
}
inline void CMsgGC_GameServer_List::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_ListResponse_GameServerIdentity

// optional uint32 game_server_account_id = 1;
inline bool CMsgGC_GameServer_ListResponse_GameServerIdentity::has_game_server_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_has_game_server_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::clear_has_game_server_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::clear_game_server_account_id() {
  game_server_account_id_ = 0u;
  clear_has_game_server_account_id();
}
inline ::google::protobuf::uint32 CMsgGC_GameServer_ListResponse_GameServerIdentity::game_server_account_id() const {
  return game_server_account_id_;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_game_server_account_id(::google::protobuf::uint32 value) {
  set_has_game_server_account_id();
  game_server_account_id_ = value;
}

// optional string game_server_identity_token = 2;
inline bool CMsgGC_GameServer_ListResponse_GameServerIdentity::has_game_server_identity_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_has_game_server_identity_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::clear_has_game_server_identity_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::clear_game_server_identity_token() {
  if (game_server_identity_token_ != &::google::protobuf::internal::kEmptyString) {
    game_server_identity_token_->clear();
  }
  clear_has_game_server_identity_token();
}
inline const ::std::string& CMsgGC_GameServer_ListResponse_GameServerIdentity::game_server_identity_token() const {
  return *game_server_identity_token_;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_game_server_identity_token(const ::std::string& value) {
  set_has_game_server_identity_token();
  if (game_server_identity_token_ == &::google::protobuf::internal::kEmptyString) {
    game_server_identity_token_ = new ::std::string;
  }
  game_server_identity_token_->assign(value);
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_game_server_identity_token(const char* value) {
  set_has_game_server_identity_token();
  if (game_server_identity_token_ == &::google::protobuf::internal::kEmptyString) {
    game_server_identity_token_ = new ::std::string;
  }
  game_server_identity_token_->assign(value);
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_game_server_identity_token(const char* value, size_t size) {
  set_has_game_server_identity_token();
  if (game_server_identity_token_ == &::google::protobuf::internal::kEmptyString) {
    game_server_identity_token_ = new ::std::string;
  }
  game_server_identity_token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgGC_GameServer_ListResponse_GameServerIdentity::mutable_game_server_identity_token() {
  set_has_game_server_identity_token();
  if (game_server_identity_token_ == &::google::protobuf::internal::kEmptyString) {
    game_server_identity_token_ = new ::std::string;
  }
  return game_server_identity_token_;
}
inline ::std::string* CMsgGC_GameServer_ListResponse_GameServerIdentity::release_game_server_identity_token() {
  clear_has_game_server_identity_token();
  if (game_server_identity_token_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = game_server_identity_token_;
    game_server_identity_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 game_server_standing = 3;
inline bool CMsgGC_GameServer_ListResponse_GameServerIdentity::has_game_server_standing() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_has_game_server_standing() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::clear_has_game_server_standing() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::clear_game_server_standing() {
  game_server_standing_ = 0;
  clear_has_game_server_standing();
}
inline ::google::protobuf::int32 CMsgGC_GameServer_ListResponse_GameServerIdentity::game_server_standing() const {
  return game_server_standing_;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_game_server_standing(::google::protobuf::int32 value) {
  set_has_game_server_standing();
  game_server_standing_ = value;
}

// optional int32 game_server_standing_trend = 4;
inline bool CMsgGC_GameServer_ListResponse_GameServerIdentity::has_game_server_standing_trend() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_has_game_server_standing_trend() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::clear_has_game_server_standing_trend() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::clear_game_server_standing_trend() {
  game_server_standing_trend_ = 0;
  clear_has_game_server_standing_trend();
}
inline ::google::protobuf::int32 CMsgGC_GameServer_ListResponse_GameServerIdentity::game_server_standing_trend() const {
  return game_server_standing_trend_;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_game_server_standing_trend(::google::protobuf::int32 value) {
  set_has_game_server_standing_trend();
  game_server_standing_trend_ = value;
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_ListResponse

// repeated .CMsgGC_GameServer_ListResponse.GameServerIdentity owned_game_servers = 1;
inline int CMsgGC_GameServer_ListResponse::owned_game_servers_size() const {
  return owned_game_servers_.size();
}
inline void CMsgGC_GameServer_ListResponse::clear_owned_game_servers() {
  owned_game_servers_.Clear();
}
inline const ::CMsgGC_GameServer_ListResponse_GameServerIdentity& CMsgGC_GameServer_ListResponse::owned_game_servers(int index) const {
  return owned_game_servers_.Get(index);
}
inline ::CMsgGC_GameServer_ListResponse_GameServerIdentity* CMsgGC_GameServer_ListResponse::mutable_owned_game_servers(int index) {
  return owned_game_servers_.Mutable(index);
}
inline ::CMsgGC_GameServer_ListResponse_GameServerIdentity* CMsgGC_GameServer_ListResponse::add_owned_game_servers() {
  return owned_game_servers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGC_GameServer_ListResponse_GameServerIdentity >&
CMsgGC_GameServer_ListResponse::owned_game_servers() const {
  return owned_game_servers_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGC_GameServer_ListResponse_GameServerIdentity >*
CMsgGC_GameServer_ListResponse::mutable_owned_game_servers() {
  return &owned_game_servers_;
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_ResetIdentity

// optional uint32 game_server_account_id = 1;
inline bool CMsgGC_GameServer_ResetIdentity::has_game_server_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_ResetIdentity::set_has_game_server_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_ResetIdentity::clear_has_game_server_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_ResetIdentity::clear_game_server_account_id() {
  game_server_account_id_ = 0u;
  clear_has_game_server_account_id();
}
inline ::google::protobuf::uint32 CMsgGC_GameServer_ResetIdentity::game_server_account_id() const {
  return game_server_account_id_;
}
inline void CMsgGC_GameServer_ResetIdentity::set_game_server_account_id(::google::protobuf::uint32 value) {
  set_has_game_server_account_id();
  game_server_account_id_ = value;
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_ResetIdentityResponse

// optional bool game_server_identity_token_reset = 1;
inline bool CMsgGC_GameServer_ResetIdentityResponse::has_game_server_identity_token_reset() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::set_has_game_server_identity_token_reset() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::clear_has_game_server_identity_token_reset() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::clear_game_server_identity_token_reset() {
  game_server_identity_token_reset_ = false;
  clear_has_game_server_identity_token_reset();
}
inline bool CMsgGC_GameServer_ResetIdentityResponse::game_server_identity_token_reset() const {
  return game_server_identity_token_reset_;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::set_game_server_identity_token_reset(bool value) {
  set_has_game_server_identity_token_reset();
  game_server_identity_token_reset_ = value;
}

// optional uint32 game_server_account_id = 2;
inline bool CMsgGC_GameServer_ResetIdentityResponse::has_game_server_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::set_has_game_server_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::clear_has_game_server_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::clear_game_server_account_id() {
  game_server_account_id_ = 0u;
  clear_has_game_server_account_id();
}
inline ::google::protobuf::uint32 CMsgGC_GameServer_ResetIdentityResponse::game_server_account_id() const {
  return game_server_account_id_;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::set_game_server_account_id(::google::protobuf::uint32 value) {
  set_has_game_server_account_id();
  game_server_account_id_ = value;
}

// optional string game_server_identity_token = 3;
inline bool CMsgGC_GameServer_ResetIdentityResponse::has_game_server_identity_token() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::set_has_game_server_identity_token() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::clear_has_game_server_identity_token() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::clear_game_server_identity_token() {
  if (game_server_identity_token_ != &::google::protobuf::internal::kEmptyString) {
    game_server_identity_token_->clear();
  }
  clear_has_game_server_identity_token();
}
inline const ::std::string& CMsgGC_GameServer_ResetIdentityResponse::game_server_identity_token() const {
  return *game_server_identity_token_;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::set_game_server_identity_token(const ::std::string& value) {
  set_has_game_server_identity_token();
  if (game_server_identity_token_ == &::google::protobuf::internal::kEmptyString) {
    game_server_identity_token_ = new ::std::string;
  }
  game_server_identity_token_->assign(value);
}
inline void CMsgGC_GameServer_ResetIdentityResponse::set_game_server_identity_token(const char* value) {
  set_has_game_server_identity_token();
  if (game_server_identity_token_ == &::google::protobuf::internal::kEmptyString) {
    game_server_identity_token_ = new ::std::string;
  }
  game_server_identity_token_->assign(value);
}
inline void CMsgGC_GameServer_ResetIdentityResponse::set_game_server_identity_token(const char* value, size_t size) {
  set_has_game_server_identity_token();
  if (game_server_identity_token_ == &::google::protobuf::internal::kEmptyString) {
    game_server_identity_token_ = new ::std::string;
  }
  game_server_identity_token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgGC_GameServer_ResetIdentityResponse::mutable_game_server_identity_token() {
  set_has_game_server_identity_token();
  if (game_server_identity_token_ == &::google::protobuf::internal::kEmptyString) {
    game_server_identity_token_ = new ::std::string;
  }
  return game_server_identity_token_;
}
inline ::std::string* CMsgGC_GameServer_ResetIdentityResponse::release_game_server_identity_token() {
  clear_has_game_server_identity_token();
  if (game_server_identity_token_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = game_server_identity_token_;
    game_server_identity_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGC_GameServer_CreateIdentityResponse_EStatus>() {
  return ::CMsgGC_GameServer_CreateIdentityResponse_EStatus_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_tf_5fgcmessages_2eproto__INCLUDED
