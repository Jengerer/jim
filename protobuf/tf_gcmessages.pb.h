// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tf_gcmessages.proto

#ifndef PROTOBUF_tf_5fgcmessages_2eproto__INCLUDED
#define PROTOBUF_tf_5fgcmessages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "steammessages.pb.h"
#include "base_gcmessages.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_tf_5fgcmessages_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[164];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsCMsgTFGoldenWrenchBroadcastImpl();
void InitDefaultsCMsgTFGoldenWrenchBroadcast();
void InitDefaultsCMsgTFSaxxyBroadcastImpl();
void InitDefaultsCMsgTFSaxxyBroadcast();
void InitDefaultsCMsgGCTFSpecificItemBroadcastImpl();
void InitDefaultsCMsgGCTFSpecificItemBroadcast();
void InitDefaultsCMsgTFWorldStatusImpl();
void InitDefaultsCMsgTFWorldStatus();
void InitDefaultsCSOTFDuelSummaryImpl();
void InitDefaultsCSOTFDuelSummary();
void InitDefaultsCSOTFMapContributionImpl();
void InitDefaultsCSOTFMapContribution();
void InitDefaultsCMsgTFVoteKickBanPlayerImpl();
void InitDefaultsCMsgTFVoteKickBanPlayer();
void InitDefaultsCMsgTFVoteKickBanPlayerResultImpl();
void InitDefaultsCMsgTFVoteKickBanPlayerResult();
void InitDefaultsCMsgTFFreeTrialChooseMostHelpfulFriendImpl();
void InitDefaultsCMsgTFFreeTrialChooseMostHelpfulFriend();
void InitDefaultsCMsgTFRequestTF2FriendsImpl();
void InitDefaultsCMsgTFRequestTF2Friends();
void InitDefaultsCMsgTFRequestTF2FriendsResponseImpl();
void InitDefaultsCMsgTFRequestTF2FriendsResponse();
void InitDefaultsCSOTFPlayerInfoImpl();
void InitDefaultsCSOTFPlayerInfo();
void InitDefaultsCMsgTFThankedBySomeoneImpl();
void InitDefaultsCMsgTFThankedBySomeone();
void InitDefaultsCMsgTFThankedSomeoneImpl();
void InitDefaultsCMsgTFThankedSomeone();
void InitDefaultsCMsgTFFreeTrialConvertedToPremiumImpl();
void InitDefaultsCMsgTFFreeTrialConvertedToPremium();
void InitDefaultsCMsgSaxxyAwardedImpl();
void InitDefaultsCMsgSaxxyAwarded();
void InitDefaultsCMsgReplaySubmitContestEntryImpl();
void InitDefaultsCMsgReplaySubmitContestEntry();
void InitDefaultsCMsgReplaySubmitContestEntryResponseImpl();
void InitDefaultsCMsgReplaySubmitContestEntryResponse();
void InitDefaultsCReplayCachedContestDataImpl();
void InitDefaultsCReplayCachedContestData();
void InitDefaultsCMsgTFCoaching_AddToCoachesImpl();
void InitDefaultsCMsgTFCoaching_AddToCoaches();
void InitDefaultsCMsgTFCoaching_RemoveFromCoachesImpl();
void InitDefaultsCMsgTFCoaching_RemoveFromCoaches();
void InitDefaultsCMsgTFCoaching_FindCoachImpl();
void InitDefaultsCMsgTFCoaching_FindCoach();
void InitDefaultsCMsgTFCoaching_FindCoachResponseImpl();
void InitDefaultsCMsgTFCoaching_FindCoachResponse();
void InitDefaultsCMsgTFCoaching_AskCoachImpl();
void InitDefaultsCMsgTFCoaching_AskCoach();
void InitDefaultsCMsgTFCoaching_AskCoachResponseImpl();
void InitDefaultsCMsgTFCoaching_AskCoachResponse();
void InitDefaultsCMsgTFCoaching_CoachJoinGameImpl();
void InitDefaultsCMsgTFCoaching_CoachJoinGame();
void InitDefaultsCMsgTFCoaching_CoachJoiningImpl();
void InitDefaultsCMsgTFCoaching_CoachJoining();
void InitDefaultsCMsgTFCoaching_CoachJoinedImpl();
void InitDefaultsCMsgTFCoaching_CoachJoined();
void InitDefaultsCMsgTFCoaching_LikeCurrentCoachImpl();
void InitDefaultsCMsgTFCoaching_LikeCurrentCoach();
void InitDefaultsCMsgTFCoaching_RemoveCurrentCoachImpl();
void InitDefaultsCMsgTFCoaching_RemoveCurrentCoach();
void InitDefaultsCMsgTFQuickplay_ScoreServers_ServerInfoImpl();
void InitDefaultsCMsgTFQuickplay_ScoreServers_ServerInfo();
void InitDefaultsCMsgTFQuickplay_ScoreServersImpl();
void InitDefaultsCMsgTFQuickplay_ScoreServers();
void InitDefaultsCMsgTFQuickplay_ScoreServersResponse_ServerInfoImpl();
void InitDefaultsCMsgTFQuickplay_ScoreServersResponse_ServerInfo();
void InitDefaultsCMsgTFQuickplay_ScoreServersResponseImpl();
void InitDefaultsCMsgTFQuickplay_ScoreServersResponse();
void InitDefaultsCMsgTFQuickplay_PlayerJoiningImpl();
void InitDefaultsCMsgTFQuickplay_PlayerJoining();
void InitDefaultsCMsgGC_GameServer_LevelInfoImpl();
void InitDefaultsCMsgGC_GameServer_LevelInfo();
void InitDefaultsCMsgGC_GameServer_AuthChallengeImpl();
void InitDefaultsCMsgGC_GameServer_AuthChallenge();
void InitDefaultsCMsgGC_GameServer_AuthResultImpl();
void InitDefaultsCMsgGC_GameServer_AuthResult();
void InitDefaultsCMsgGC_GameServer_AuthChallengeResponseImpl();
void InitDefaultsCMsgGC_GameServer_AuthChallengeResponse();
void InitDefaultsCMsgGC_GameServer_CreateIdentityImpl();
void InitDefaultsCMsgGC_GameServer_CreateIdentity();
void InitDefaultsCMsgGC_GameServer_CreateIdentityResponseImpl();
void InitDefaultsCMsgGC_GameServer_CreateIdentityResponse();
void InitDefaultsCMsgGC_GameServer_ListImpl();
void InitDefaultsCMsgGC_GameServer_List();
void InitDefaultsCMsgGC_GameServer_ListResponse_GameServerIdentityImpl();
void InitDefaultsCMsgGC_GameServer_ListResponse_GameServerIdentity();
void InitDefaultsCMsgGC_GameServer_ListResponseImpl();
void InitDefaultsCMsgGC_GameServer_ListResponse();
void InitDefaultsCMsgGC_GameServer_ResetIdentityImpl();
void InitDefaultsCMsgGC_GameServer_ResetIdentity();
void InitDefaultsCMsgGC_GameServer_ResetIdentityResponseImpl();
void InitDefaultsCMsgGC_GameServer_ResetIdentityResponse();
void InitDefaultsCMsgGC_GameServer_AckPolicyImpl();
void InitDefaultsCMsgGC_GameServer_AckPolicy();
void InitDefaultsCMsgGC_GameServer_AckPolicyResponseImpl();
void InitDefaultsCMsgGC_GameServer_AckPolicyResponse();
void InitDefaultsCMsgGC_Client_UseServerModificationItemImpl();
void InitDefaultsCMsgGC_Client_UseServerModificationItem();
void InitDefaultsCMsgGC_Client_UseServerModificationItem_ResponseImpl();
void InitDefaultsCMsgGC_Client_UseServerModificationItem_Response();
void InitDefaultsCMsgGC_GameServer_UseServerModificationItemImpl();
void InitDefaultsCMsgGC_GameServer_UseServerModificationItem();
void InitDefaultsCMsgGC_GameServer_UseServerModificationItem_ResponseImpl();
void InitDefaultsCMsgGC_GameServer_UseServerModificationItem_Response();
void InitDefaultsCMsgGC_GameServer_ServerModificationItemExpiredImpl();
void InitDefaultsCMsgGC_GameServer_ServerModificationItemExpired();
void InitDefaultsCMsgGC_GameServer_ServerModificationItemImpl();
void InitDefaultsCMsgGC_GameServer_ServerModificationItem();
void InitDefaultsCMsgGC_Halloween_ReservedItemImpl();
void InitDefaultsCMsgGC_Halloween_ReservedItem();
void InitDefaultsCMsgGC_Halloween_GrantItemImpl();
void InitDefaultsCMsgGC_Halloween_GrantItem();
void InitDefaultsCMsgGC_Halloween_GrantItemResponseImpl();
void InitDefaultsCMsgGC_Halloween_GrantItemResponse();
void InitDefaultsCMsgGC_Halloween_ItemClaimedImpl();
void InitDefaultsCMsgGC_Halloween_ItemClaimed();
void InitDefaultsCMsgGC_PickupItemEligibility_QueryImpl();
void InitDefaultsCMsgGC_PickupItemEligibility_Query();
void InitDefaultsCMsgGC_PickupItemEligibility_QueryResponseImpl();
void InitDefaultsCMsgGC_PickupItemEligibility_QueryResponse();
void InitDefaultsCSOTFPartyMemberImpl();
void InitDefaultsCSOTFPartyMember();
void InitDefaultsCMsgMatchSearchCriteriaImpl();
void InitDefaultsCMsgMatchSearchCriteria();
void InitDefaultsCMsgCasualMatchmakingSearchCriteriaImpl();
void InitDefaultsCMsgCasualMatchmakingSearchCriteria();
void InitDefaultsCMsgCreateOrUpdatePartyImpl();
void InitDefaultsCMsgCreateOrUpdateParty();
void InitDefaultsCMsgCreateOrUpdatePartyReplyImpl();
void InitDefaultsCMsgCreateOrUpdatePartyReply();
void InitDefaultsCSOTFPartyImpl();
void InitDefaultsCSOTFParty();
void InitDefaultsCSOTFPartyInvite_PartyMemberImpl();
void InitDefaultsCSOTFPartyInvite_PartyMember();
void InitDefaultsCSOTFPartyInviteImpl();
void InitDefaultsCSOTFPartyInvite();
void InitDefaultsCTFLobbyMemberImpl();
void InitDefaultsCTFLobbyMember();
void InitDefaultsCLobbyPendingPlayerReportImpl();
void InitDefaultsCLobbyPendingPlayerReport();
void InitDefaultsCSOTFGameServerLobbyImpl();
void InitDefaultsCSOTFGameServerLobby();
void InitDefaultsCMsgExitMatchmakingImpl();
void InitDefaultsCMsgExitMatchmaking();
void InitDefaultsCMsgAcceptInviteImpl();
void InitDefaultsCMsgAcceptInvite();
void InitDefaultsCMsgAcceptInviteResponseImpl();
void InitDefaultsCMsgAcceptInviteResponse();
void InitDefaultsCMsgReadyUpImpl();
void InitDefaultsCMsgReadyUp();
void InitDefaultsCMsgMatchmakingSearchCountRequestImpl();
void InitDefaultsCMsgMatchmakingSearchCountRequest();
void InitDefaultsCMsgMatchmakingSearchCountResponseImpl();
void InitDefaultsCMsgMatchmakingSearchCountResponse();
void InitDefaultsCMsgKickedFromMatchmakingQueueImpl();
void InitDefaultsCMsgKickedFromMatchmakingQueue();
void InitDefaultsCMsgTFJoinChatChannelImpl();
void InitDefaultsCMsgTFJoinChatChannel();
void InitDefaultsCMsgTFLeaveChatChannelImpl();
void InitDefaultsCMsgTFLeaveChatChannel();
void InitDefaultsCMsgTFJoinChatChannelResponse_ChatMemberImpl();
void InitDefaultsCMsgTFJoinChatChannelResponse_ChatMember();
void InitDefaultsCMsgTFJoinChatChannelResponseImpl();
void InitDefaultsCMsgTFJoinChatChannelResponse();
void InitDefaultsCMsgTFOtherJoinedChatChannelImpl();
void InitDefaultsCMsgTFOtherJoinedChatChannel();
void InitDefaultsCMsgTFOtherLeftChatChannelImpl();
void InitDefaultsCMsgTFOtherLeftChatChannel();
void InitDefaultsCMsgTFRequestDefaultChatChannelImpl();
void InitDefaultsCMsgTFRequestDefaultChatChannel();
void InitDefaultsCMsgTFRequestDefaultChatChannelResponseImpl();
void InitDefaultsCMsgTFRequestDefaultChatChannelResponse();
void InitDefaultsCMsgTFRequestChatChannelListImpl();
void InitDefaultsCMsgTFRequestChatChannelList();
void InitDefaultsCMsgTFRequestChatChannelListResponse_ChatChannelImpl();
void InitDefaultsCMsgTFRequestChatChannelListResponse_ChatChannel();
void InitDefaultsCMsgTFRequestChatChannelListResponseImpl();
void InitDefaultsCMsgTFRequestChatChannelListResponse();
void InitDefaultsCMsgGameServerMatchmakingStatus_PlayerImpl();
void InitDefaultsCMsgGameServerMatchmakingStatus_Player();
void InitDefaultsCMsgGameServerMatchmakingStatusImpl();
void InitDefaultsCMsgGameServerMatchmakingStatus();
void InitDefaultsCMsgMatchmakingProgressImpl();
void InitDefaultsCMsgMatchmakingProgress();
void InitDefaultsCMsgMvMVictoryInfo_ItemImpl();
void InitDefaultsCMsgMvMVictoryInfo_Item();
void InitDefaultsCMsgMvMVictoryInfo_PlayerImpl();
void InitDefaultsCMsgMvMVictoryInfo_Player();
void InitDefaultsCMsgMvMVictoryInfoImpl();
void InitDefaultsCMsgMvMVictoryInfo();
void InitDefaultsCGCMsgTFHelloResponseImpl();
void InitDefaultsCGCMsgTFHelloResponse();
void InitDefaultsCGCMsgTFSyncImpl();
void InitDefaultsCGCMsgTFSync();
void InitDefaultsCGCMsgTFSyncExImpl();
void InitDefaultsCGCMsgTFSyncEx();
void InitDefaultsCMsgMvMVictory_PlayerImpl();
void InitDefaultsCMsgMvMVictory_Player();
void InitDefaultsCMsgMvMVictoryImpl();
void InitDefaultsCMsgMvMVictory();
void InitDefaultsCMsgMvMMannUpVictoryReplyImpl();
void InitDefaultsCMsgMvMMannUpVictoryReply();
void InitDefaultsCMsgGameServerKickingLobbyImpl();
void InitDefaultsCMsgGameServerKickingLobby();
void InitDefaultsCMsgGameServerKickingLobbyResponseImpl();
void InitDefaultsCMsgGameServerKickingLobbyResponse();
void InitDefaultsCMsgLeaveGameAndPrepareToJoinPartyImpl();
void InitDefaultsCMsgLeaveGameAndPrepareToJoinParty();
void InitDefaultsCMsgPlayerLeftMatchImpl();
void InitDefaultsCMsgPlayerLeftMatch();
void InitDefaultsCMsgPlayerLeftMatchResponseImpl();
void InitDefaultsCMsgPlayerLeftMatchResponse();
void InitDefaultsCMsgPlayerVoteKickedAfterLeavingMatchImpl();
void InitDefaultsCMsgPlayerVoteKickedAfterLeavingMatch();
void InitDefaultsCMsgPlayerVoteKickedAfterLeavingMatchResponseImpl();
void InitDefaultsCMsgPlayerVoteKickedAfterLeavingMatchResponse();
void InitDefaultsCMsgHalloween_ServerBossEventImpl();
void InitDefaultsCMsgHalloween_ServerBossEvent();
void InitDefaultsCMsgHalloween_Merasmus2012Impl();
void InitDefaultsCMsgHalloween_Merasmus2012();
void InitDefaultsCMsgUpdateHalloweenMerasmusLootLevel_PlayerImpl();
void InitDefaultsCMsgUpdateHalloweenMerasmusLootLevel_Player();
void InitDefaultsCMsgUpdateHalloweenMerasmusLootLevelImpl();
void InitDefaultsCMsgUpdateHalloweenMerasmusLootLevel();
void InitDefaultsCAttribute_StringImpl();
void InitDefaultsCAttribute_String();
void InitDefaultsCAttribute_DynamicRecipeComponentImpl();
void InitDefaultsCAttribute_DynamicRecipeComponent();
void InitDefaultsCAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUTImpl();
void InitDefaultsCAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT();
void InitDefaultsCAttribute_ItemSlotCriteriaImpl();
void InitDefaultsCAttribute_ItemSlotCriteria();
void InitDefaultsCMsgSetItemSlotAttributeImpl();
void InitDefaultsCMsgSetItemSlotAttribute();
void InitDefaultsCSOWarDataImpl();
void InitDefaultsCSOWarData();
void InitDefaultsCGCMsgGC_War_IndividualUpdateImpl();
void InitDefaultsCGCMsgGC_War_IndividualUpdate();
void InitDefaultsCGCMsgGC_War_JoinWarImpl();
void InitDefaultsCGCMsgGC_War_JoinWar();
void InitDefaultsCGCMsgGC_War_RequestGlobalStatsImpl();
void InitDefaultsCGCMsgGC_War_RequestGlobalStats();
void InitDefaultsCGCMsgGC_War_GlobalStatsResponse_SideScoreImpl();
void InitDefaultsCGCMsgGC_War_GlobalStatsResponse_SideScore();
void InitDefaultsCGCMsgGC_War_GlobalStatsResponseImpl();
void InitDefaultsCGCMsgGC_War_GlobalStatsResponse();
void InitDefaultsCGCMsgGC_PlayerDuckLeaderboard_IndividualUpdateImpl();
void InitDefaultsCGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate();
void InitDefaultsCAttribute_WorldItemPlacementImpl();
void InitDefaultsCAttribute_WorldItemPlacement();
void InitDefaultsCGCMsg_WorldItemPlacement_UpdateImpl();
void InitDefaultsCGCMsg_WorldItemPlacement_Update();
void InitDefaultsCMsgAcknowledgeXPImpl();
void InitDefaultsCMsgAcknowledgeXP();
void InitDefaultsCMsgTFXPSourceImpl();
void InitDefaultsCMsgTFXPSource();
void InitDefaultsCMsgTFXPSourceBreakdownImpl();
void InitDefaultsCMsgTFXPSourceBreakdown();
void InitDefaultsCMsgTFClientInitImpl();
void InitDefaultsCMsgTFClientInit();
void InitDefaultsCMsgGCNotificationImpl();
void InitDefaultsCMsgGCNotification();
void InitDefaultsCMsgGCNotificationQueueImpl();
void InitDefaultsCMsgGCNotificationQueue();
void InitDefaultsCMsgNotificationAcknowledgeImpl();
void InitDefaultsCMsgNotificationAcknowledge();
void InitDefaultsCMsgNotificationAcknowledgeReplyImpl();
void InitDefaultsCMsgNotificationAcknowledgeReply();
void InitDefaultsCMsgGC_Match_Result_PlayerImpl();
void InitDefaultsCMsgGC_Match_Result_Player();
void InitDefaultsCMsgGC_Match_ResultImpl();
void InitDefaultsCMsgGC_Match_Result();
void InitDefaultsCMsgGC_Match_ResultResponseImpl();
void InitDefaultsCMsgGC_Match_ResultResponse();
void InitDefaultsCEconItemPreviewDataBlockImpl();
void InitDefaultsCEconItemPreviewDataBlock();
void InitDefaultsCMsgGC_Client2GCEconPreviewDataBlockRequestImpl();
void InitDefaultsCMsgGC_Client2GCEconPreviewDataBlockRequest();
void InitDefaultsCMsgGC_Client2GCEconPreviewDataBlockResponseImpl();
void InitDefaultsCMsgGC_Client2GCEconPreviewDataBlockResponse();
void InitDefaultsCSOTFLadderPlayerStatsImpl();
void InitDefaultsCSOTFLadderPlayerStats();
void InitDefaultsCSOTFRatingDataImpl();
void InitDefaultsCSOTFRatingData();
void InitDefaultsCMsgGC_TFVoteKickPlayerRequestImpl();
void InitDefaultsCMsgGC_TFVoteKickPlayerRequest();
void InitDefaultsCMsgGC_VoteKickPlayerRequestResponseImpl();
void InitDefaultsCMsgGC_VoteKickPlayerRequestResponse();
void InitDefaultsCMsgGC_DailyCompetitiveStatsRollupImpl();
void InitDefaultsCMsgGC_DailyCompetitiveStatsRollup();
void InitDefaultsCMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntryImpl();
void InitDefaultsCMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry();
void InitDefaultsCMsgGC_DailyCompetitiveStatsRollup_ResponseImpl();
void InitDefaultsCMsgGC_DailyCompetitiveStatsRollup_Response();
void InitDefaultsCMsgGC_ReportPlayerImpl();
void InitDefaultsCMsgGC_ReportPlayer();
void InitDefaultsCSOTFMatchResultPlayerStatsImpl();
void InitDefaultsCSOTFMatchResultPlayerStats();
void InitDefaultsCMsgGCRequestMatchMakerStatsImpl();
void InitDefaultsCMsgGCRequestMatchMakerStats();
void InitDefaultsCMsgGCDataCenterPopulationImpl();
void InitDefaultsCMsgGCDataCenterPopulation();
void InitDefaultsCMsgGCMatchGroupDataCenterPopulationImpl();
void InitDefaultsCMsgGCMatchGroupDataCenterPopulation();
void InitDefaultsCMsgGCMatchMakerStatsResponseImpl();
void InitDefaultsCMsgGCMatchMakerStatsResponse();
void InitDefaultsCMsgGCMatchHistoryLoadImpl();
void InitDefaultsCMsgGCMatchHistoryLoad();
void InitDefaultsCMsgGCDataCenterPing_Update_PingEntryImpl();
void InitDefaultsCMsgGCDataCenterPing_Update_PingEntry();
void InitDefaultsCMsgGCDataCenterPing_UpdateImpl();
void InitDefaultsCMsgGCDataCenterPing_Update();
void InitDefaultsCMsgGC_KickPlayerFromLobbyImpl();
void InitDefaultsCMsgGC_KickPlayerFromLobby();
void InitDefaultsCMsgGCSurveyRequestImpl();
void InitDefaultsCMsgGCSurveyRequest();
void InitDefaultsCMsgGCSurveyResponseImpl();
void InitDefaultsCMsgGCSurveyResponse();
void InitDefaultsCMsgGCNewMatchForLobbyRequestImpl();
void InitDefaultsCMsgGCNewMatchForLobbyRequest();
void InitDefaultsCMsgGCNewMatchForLobbyResponseImpl();
void InitDefaultsCMsgGCNewMatchForLobbyResponse();
void InitDefaultsCMsgGCChangeMatchPlayerTeamsRequest_MemberImpl();
void InitDefaultsCMsgGCChangeMatchPlayerTeamsRequest_Member();
void InitDefaultsCMsgGCChangeMatchPlayerTeamsRequestImpl();
void InitDefaultsCMsgGCChangeMatchPlayerTeamsRequest();
void InitDefaultsCMsgGCChangeMatchPlayerTeamsResponseImpl();
void InitDefaultsCMsgGCChangeMatchPlayerTeamsResponse();
inline void InitDefaults() {
  InitDefaultsCMsgTFGoldenWrenchBroadcast();
  InitDefaultsCMsgTFSaxxyBroadcast();
  InitDefaultsCMsgGCTFSpecificItemBroadcast();
  InitDefaultsCMsgTFWorldStatus();
  InitDefaultsCSOTFDuelSummary();
  InitDefaultsCSOTFMapContribution();
  InitDefaultsCMsgTFVoteKickBanPlayer();
  InitDefaultsCMsgTFVoteKickBanPlayerResult();
  InitDefaultsCMsgTFFreeTrialChooseMostHelpfulFriend();
  InitDefaultsCMsgTFRequestTF2Friends();
  InitDefaultsCMsgTFRequestTF2FriendsResponse();
  InitDefaultsCSOTFPlayerInfo();
  InitDefaultsCMsgTFThankedBySomeone();
  InitDefaultsCMsgTFThankedSomeone();
  InitDefaultsCMsgTFFreeTrialConvertedToPremium();
  InitDefaultsCMsgSaxxyAwarded();
  InitDefaultsCMsgReplaySubmitContestEntry();
  InitDefaultsCMsgReplaySubmitContestEntryResponse();
  InitDefaultsCReplayCachedContestData();
  InitDefaultsCMsgTFCoaching_AddToCoaches();
  InitDefaultsCMsgTFCoaching_RemoveFromCoaches();
  InitDefaultsCMsgTFCoaching_FindCoach();
  InitDefaultsCMsgTFCoaching_FindCoachResponse();
  InitDefaultsCMsgTFCoaching_AskCoach();
  InitDefaultsCMsgTFCoaching_AskCoachResponse();
  InitDefaultsCMsgTFCoaching_CoachJoinGame();
  InitDefaultsCMsgTFCoaching_CoachJoining();
  InitDefaultsCMsgTFCoaching_CoachJoined();
  InitDefaultsCMsgTFCoaching_LikeCurrentCoach();
  InitDefaultsCMsgTFCoaching_RemoveCurrentCoach();
  InitDefaultsCMsgTFQuickplay_ScoreServers_ServerInfo();
  InitDefaultsCMsgTFQuickplay_ScoreServers();
  InitDefaultsCMsgTFQuickplay_ScoreServersResponse_ServerInfo();
  InitDefaultsCMsgTFQuickplay_ScoreServersResponse();
  InitDefaultsCMsgTFQuickplay_PlayerJoining();
  InitDefaultsCMsgGC_GameServer_LevelInfo();
  InitDefaultsCMsgGC_GameServer_AuthChallenge();
  InitDefaultsCMsgGC_GameServer_AuthResult();
  InitDefaultsCMsgGC_GameServer_AuthChallengeResponse();
  InitDefaultsCMsgGC_GameServer_CreateIdentity();
  InitDefaultsCMsgGC_GameServer_CreateIdentityResponse();
  InitDefaultsCMsgGC_GameServer_List();
  InitDefaultsCMsgGC_GameServer_ListResponse_GameServerIdentity();
  InitDefaultsCMsgGC_GameServer_ListResponse();
  InitDefaultsCMsgGC_GameServer_ResetIdentity();
  InitDefaultsCMsgGC_GameServer_ResetIdentityResponse();
  InitDefaultsCMsgGC_GameServer_AckPolicy();
  InitDefaultsCMsgGC_GameServer_AckPolicyResponse();
  InitDefaultsCMsgGC_Client_UseServerModificationItem();
  InitDefaultsCMsgGC_Client_UseServerModificationItem_Response();
  InitDefaultsCMsgGC_GameServer_UseServerModificationItem();
  InitDefaultsCMsgGC_GameServer_UseServerModificationItem_Response();
  InitDefaultsCMsgGC_GameServer_ServerModificationItemExpired();
  InitDefaultsCMsgGC_GameServer_ServerModificationItem();
  InitDefaultsCMsgGC_Halloween_ReservedItem();
  InitDefaultsCMsgGC_Halloween_GrantItem();
  InitDefaultsCMsgGC_Halloween_GrantItemResponse();
  InitDefaultsCMsgGC_Halloween_ItemClaimed();
  InitDefaultsCMsgGC_PickupItemEligibility_Query();
  InitDefaultsCMsgGC_PickupItemEligibility_QueryResponse();
  InitDefaultsCSOTFPartyMember();
  InitDefaultsCMsgMatchSearchCriteria();
  InitDefaultsCMsgCasualMatchmakingSearchCriteria();
  InitDefaultsCMsgCreateOrUpdateParty();
  InitDefaultsCMsgCreateOrUpdatePartyReply();
  InitDefaultsCSOTFParty();
  InitDefaultsCSOTFPartyInvite_PartyMember();
  InitDefaultsCSOTFPartyInvite();
  InitDefaultsCTFLobbyMember();
  InitDefaultsCLobbyPendingPlayerReport();
  InitDefaultsCSOTFGameServerLobby();
  InitDefaultsCMsgExitMatchmaking();
  InitDefaultsCMsgAcceptInvite();
  InitDefaultsCMsgAcceptInviteResponse();
  InitDefaultsCMsgReadyUp();
  InitDefaultsCMsgMatchmakingSearchCountRequest();
  InitDefaultsCMsgMatchmakingSearchCountResponse();
  InitDefaultsCMsgKickedFromMatchmakingQueue();
  InitDefaultsCMsgTFJoinChatChannel();
  InitDefaultsCMsgTFLeaveChatChannel();
  InitDefaultsCMsgTFJoinChatChannelResponse_ChatMember();
  InitDefaultsCMsgTFJoinChatChannelResponse();
  InitDefaultsCMsgTFOtherJoinedChatChannel();
  InitDefaultsCMsgTFOtherLeftChatChannel();
  InitDefaultsCMsgTFRequestDefaultChatChannel();
  InitDefaultsCMsgTFRequestDefaultChatChannelResponse();
  InitDefaultsCMsgTFRequestChatChannelList();
  InitDefaultsCMsgTFRequestChatChannelListResponse_ChatChannel();
  InitDefaultsCMsgTFRequestChatChannelListResponse();
  InitDefaultsCMsgGameServerMatchmakingStatus_Player();
  InitDefaultsCMsgGameServerMatchmakingStatus();
  InitDefaultsCMsgMatchmakingProgress();
  InitDefaultsCMsgMvMVictoryInfo_Item();
  InitDefaultsCMsgMvMVictoryInfo_Player();
  InitDefaultsCMsgMvMVictoryInfo();
  InitDefaultsCGCMsgTFHelloResponse();
  InitDefaultsCGCMsgTFSync();
  InitDefaultsCGCMsgTFSyncEx();
  InitDefaultsCMsgMvMVictory_Player();
  InitDefaultsCMsgMvMVictory();
  InitDefaultsCMsgMvMMannUpVictoryReply();
  InitDefaultsCMsgGameServerKickingLobby();
  InitDefaultsCMsgGameServerKickingLobbyResponse();
  InitDefaultsCMsgLeaveGameAndPrepareToJoinParty();
  InitDefaultsCMsgPlayerLeftMatch();
  InitDefaultsCMsgPlayerLeftMatchResponse();
  InitDefaultsCMsgPlayerVoteKickedAfterLeavingMatch();
  InitDefaultsCMsgPlayerVoteKickedAfterLeavingMatchResponse();
  InitDefaultsCMsgHalloween_ServerBossEvent();
  InitDefaultsCMsgHalloween_Merasmus2012();
  InitDefaultsCMsgUpdateHalloweenMerasmusLootLevel_Player();
  InitDefaultsCMsgUpdateHalloweenMerasmusLootLevel();
  InitDefaultsCAttribute_String();
  InitDefaultsCAttribute_DynamicRecipeComponent();
  InitDefaultsCAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT();
  InitDefaultsCAttribute_ItemSlotCriteria();
  InitDefaultsCMsgSetItemSlotAttribute();
  InitDefaultsCSOWarData();
  InitDefaultsCGCMsgGC_War_IndividualUpdate();
  InitDefaultsCGCMsgGC_War_JoinWar();
  InitDefaultsCGCMsgGC_War_RequestGlobalStats();
  InitDefaultsCGCMsgGC_War_GlobalStatsResponse_SideScore();
  InitDefaultsCGCMsgGC_War_GlobalStatsResponse();
  InitDefaultsCGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate();
  InitDefaultsCAttribute_WorldItemPlacement();
  InitDefaultsCGCMsg_WorldItemPlacement_Update();
  InitDefaultsCMsgAcknowledgeXP();
  InitDefaultsCMsgTFXPSource();
  InitDefaultsCMsgTFXPSourceBreakdown();
  InitDefaultsCMsgTFClientInit();
  InitDefaultsCMsgGCNotification();
  InitDefaultsCMsgGCNotificationQueue();
  InitDefaultsCMsgNotificationAcknowledge();
  InitDefaultsCMsgNotificationAcknowledgeReply();
  InitDefaultsCMsgGC_Match_Result_Player();
  InitDefaultsCMsgGC_Match_Result();
  InitDefaultsCMsgGC_Match_ResultResponse();
  InitDefaultsCEconItemPreviewDataBlock();
  InitDefaultsCMsgGC_Client2GCEconPreviewDataBlockRequest();
  InitDefaultsCMsgGC_Client2GCEconPreviewDataBlockResponse();
  InitDefaultsCSOTFLadderPlayerStats();
  InitDefaultsCSOTFRatingData();
  InitDefaultsCMsgGC_TFVoteKickPlayerRequest();
  InitDefaultsCMsgGC_VoteKickPlayerRequestResponse();
  InitDefaultsCMsgGC_DailyCompetitiveStatsRollup();
  InitDefaultsCMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry();
  InitDefaultsCMsgGC_DailyCompetitiveStatsRollup_Response();
  InitDefaultsCMsgGC_ReportPlayer();
  InitDefaultsCSOTFMatchResultPlayerStats();
  InitDefaultsCMsgGCRequestMatchMakerStats();
  InitDefaultsCMsgGCDataCenterPopulation();
  InitDefaultsCMsgGCMatchGroupDataCenterPopulation();
  InitDefaultsCMsgGCMatchMakerStatsResponse();
  InitDefaultsCMsgGCMatchHistoryLoad();
  InitDefaultsCMsgGCDataCenterPing_Update_PingEntry();
  InitDefaultsCMsgGCDataCenterPing_Update();
  InitDefaultsCMsgGC_KickPlayerFromLobby();
  InitDefaultsCMsgGCSurveyRequest();
  InitDefaultsCMsgGCSurveyResponse();
  InitDefaultsCMsgGCNewMatchForLobbyRequest();
  InitDefaultsCMsgGCNewMatchForLobbyResponse();
  InitDefaultsCMsgGCChangeMatchPlayerTeamsRequest_Member();
  InitDefaultsCMsgGCChangeMatchPlayerTeamsRequest();
  InitDefaultsCMsgGCChangeMatchPlayerTeamsResponse();
}
}  // namespace protobuf_tf_5fgcmessages_2eproto
class CAttribute_DynamicRecipeComponent;
class CAttribute_DynamicRecipeComponentDefaultTypeInternal;
extern CAttribute_DynamicRecipeComponentDefaultTypeInternal _CAttribute_DynamicRecipeComponent_default_instance_;
class CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT;
class CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUTDefaultTypeInternal;
extern CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUTDefaultTypeInternal _CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT_default_instance_;
class CAttribute_ItemSlotCriteria;
class CAttribute_ItemSlotCriteriaDefaultTypeInternal;
extern CAttribute_ItemSlotCriteriaDefaultTypeInternal _CAttribute_ItemSlotCriteria_default_instance_;
class CAttribute_String;
class CAttribute_StringDefaultTypeInternal;
extern CAttribute_StringDefaultTypeInternal _CAttribute_String_default_instance_;
class CAttribute_WorldItemPlacement;
class CAttribute_WorldItemPlacementDefaultTypeInternal;
extern CAttribute_WorldItemPlacementDefaultTypeInternal _CAttribute_WorldItemPlacement_default_instance_;
class CEconItemPreviewDataBlock;
class CEconItemPreviewDataBlockDefaultTypeInternal;
extern CEconItemPreviewDataBlockDefaultTypeInternal _CEconItemPreviewDataBlock_default_instance_;
class CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate;
class CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdateDefaultTypeInternal;
extern CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdateDefaultTypeInternal _CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate_default_instance_;
class CGCMsgGC_War_GlobalStatsResponse;
class CGCMsgGC_War_GlobalStatsResponseDefaultTypeInternal;
extern CGCMsgGC_War_GlobalStatsResponseDefaultTypeInternal _CGCMsgGC_War_GlobalStatsResponse_default_instance_;
class CGCMsgGC_War_GlobalStatsResponse_SideScore;
class CGCMsgGC_War_GlobalStatsResponse_SideScoreDefaultTypeInternal;
extern CGCMsgGC_War_GlobalStatsResponse_SideScoreDefaultTypeInternal _CGCMsgGC_War_GlobalStatsResponse_SideScore_default_instance_;
class CGCMsgGC_War_IndividualUpdate;
class CGCMsgGC_War_IndividualUpdateDefaultTypeInternal;
extern CGCMsgGC_War_IndividualUpdateDefaultTypeInternal _CGCMsgGC_War_IndividualUpdate_default_instance_;
class CGCMsgGC_War_JoinWar;
class CGCMsgGC_War_JoinWarDefaultTypeInternal;
extern CGCMsgGC_War_JoinWarDefaultTypeInternal _CGCMsgGC_War_JoinWar_default_instance_;
class CGCMsgGC_War_RequestGlobalStats;
class CGCMsgGC_War_RequestGlobalStatsDefaultTypeInternal;
extern CGCMsgGC_War_RequestGlobalStatsDefaultTypeInternal _CGCMsgGC_War_RequestGlobalStats_default_instance_;
class CGCMsgTFHelloResponse;
class CGCMsgTFHelloResponseDefaultTypeInternal;
extern CGCMsgTFHelloResponseDefaultTypeInternal _CGCMsgTFHelloResponse_default_instance_;
class CGCMsgTFSync;
class CGCMsgTFSyncDefaultTypeInternal;
extern CGCMsgTFSyncDefaultTypeInternal _CGCMsgTFSync_default_instance_;
class CGCMsgTFSyncEx;
class CGCMsgTFSyncExDefaultTypeInternal;
extern CGCMsgTFSyncExDefaultTypeInternal _CGCMsgTFSyncEx_default_instance_;
class CGCMsg_WorldItemPlacement_Update;
class CGCMsg_WorldItemPlacement_UpdateDefaultTypeInternal;
extern CGCMsg_WorldItemPlacement_UpdateDefaultTypeInternal _CGCMsg_WorldItemPlacement_Update_default_instance_;
class CLobbyPendingPlayerReport;
class CLobbyPendingPlayerReportDefaultTypeInternal;
extern CLobbyPendingPlayerReportDefaultTypeInternal _CLobbyPendingPlayerReport_default_instance_;
class CMsgAcceptInvite;
class CMsgAcceptInviteDefaultTypeInternal;
extern CMsgAcceptInviteDefaultTypeInternal _CMsgAcceptInvite_default_instance_;
class CMsgAcceptInviteResponse;
class CMsgAcceptInviteResponseDefaultTypeInternal;
extern CMsgAcceptInviteResponseDefaultTypeInternal _CMsgAcceptInviteResponse_default_instance_;
class CMsgAcknowledgeXP;
class CMsgAcknowledgeXPDefaultTypeInternal;
extern CMsgAcknowledgeXPDefaultTypeInternal _CMsgAcknowledgeXP_default_instance_;
class CMsgCasualMatchmakingSearchCriteria;
class CMsgCasualMatchmakingSearchCriteriaDefaultTypeInternal;
extern CMsgCasualMatchmakingSearchCriteriaDefaultTypeInternal _CMsgCasualMatchmakingSearchCriteria_default_instance_;
class CMsgCreateOrUpdateParty;
class CMsgCreateOrUpdatePartyDefaultTypeInternal;
extern CMsgCreateOrUpdatePartyDefaultTypeInternal _CMsgCreateOrUpdateParty_default_instance_;
class CMsgCreateOrUpdatePartyReply;
class CMsgCreateOrUpdatePartyReplyDefaultTypeInternal;
extern CMsgCreateOrUpdatePartyReplyDefaultTypeInternal _CMsgCreateOrUpdatePartyReply_default_instance_;
class CMsgExitMatchmaking;
class CMsgExitMatchmakingDefaultTypeInternal;
extern CMsgExitMatchmakingDefaultTypeInternal _CMsgExitMatchmaking_default_instance_;
class CMsgGCChangeMatchPlayerTeamsRequest;
class CMsgGCChangeMatchPlayerTeamsRequestDefaultTypeInternal;
extern CMsgGCChangeMatchPlayerTeamsRequestDefaultTypeInternal _CMsgGCChangeMatchPlayerTeamsRequest_default_instance_;
class CMsgGCChangeMatchPlayerTeamsRequest_Member;
class CMsgGCChangeMatchPlayerTeamsRequest_MemberDefaultTypeInternal;
extern CMsgGCChangeMatchPlayerTeamsRequest_MemberDefaultTypeInternal _CMsgGCChangeMatchPlayerTeamsRequest_Member_default_instance_;
class CMsgGCChangeMatchPlayerTeamsResponse;
class CMsgGCChangeMatchPlayerTeamsResponseDefaultTypeInternal;
extern CMsgGCChangeMatchPlayerTeamsResponseDefaultTypeInternal _CMsgGCChangeMatchPlayerTeamsResponse_default_instance_;
class CMsgGCDataCenterPing_Update;
class CMsgGCDataCenterPing_UpdateDefaultTypeInternal;
extern CMsgGCDataCenterPing_UpdateDefaultTypeInternal _CMsgGCDataCenterPing_Update_default_instance_;
class CMsgGCDataCenterPing_Update_PingEntry;
class CMsgGCDataCenterPing_Update_PingEntryDefaultTypeInternal;
extern CMsgGCDataCenterPing_Update_PingEntryDefaultTypeInternal _CMsgGCDataCenterPing_Update_PingEntry_default_instance_;
class CMsgGCDataCenterPopulation;
class CMsgGCDataCenterPopulationDefaultTypeInternal;
extern CMsgGCDataCenterPopulationDefaultTypeInternal _CMsgGCDataCenterPopulation_default_instance_;
class CMsgGCMatchGroupDataCenterPopulation;
class CMsgGCMatchGroupDataCenterPopulationDefaultTypeInternal;
extern CMsgGCMatchGroupDataCenterPopulationDefaultTypeInternal _CMsgGCMatchGroupDataCenterPopulation_default_instance_;
class CMsgGCMatchHistoryLoad;
class CMsgGCMatchHistoryLoadDefaultTypeInternal;
extern CMsgGCMatchHistoryLoadDefaultTypeInternal _CMsgGCMatchHistoryLoad_default_instance_;
class CMsgGCMatchMakerStatsResponse;
class CMsgGCMatchMakerStatsResponseDefaultTypeInternal;
extern CMsgGCMatchMakerStatsResponseDefaultTypeInternal _CMsgGCMatchMakerStatsResponse_default_instance_;
class CMsgGCNewMatchForLobbyRequest;
class CMsgGCNewMatchForLobbyRequestDefaultTypeInternal;
extern CMsgGCNewMatchForLobbyRequestDefaultTypeInternal _CMsgGCNewMatchForLobbyRequest_default_instance_;
class CMsgGCNewMatchForLobbyResponse;
class CMsgGCNewMatchForLobbyResponseDefaultTypeInternal;
extern CMsgGCNewMatchForLobbyResponseDefaultTypeInternal _CMsgGCNewMatchForLobbyResponse_default_instance_;
class CMsgGCNotification;
class CMsgGCNotificationDefaultTypeInternal;
extern CMsgGCNotificationDefaultTypeInternal _CMsgGCNotification_default_instance_;
class CMsgGCNotificationQueue;
class CMsgGCNotificationQueueDefaultTypeInternal;
extern CMsgGCNotificationQueueDefaultTypeInternal _CMsgGCNotificationQueue_default_instance_;
class CMsgGCRequestMatchMakerStats;
class CMsgGCRequestMatchMakerStatsDefaultTypeInternal;
extern CMsgGCRequestMatchMakerStatsDefaultTypeInternal _CMsgGCRequestMatchMakerStats_default_instance_;
class CMsgGCSurveyRequest;
class CMsgGCSurveyRequestDefaultTypeInternal;
extern CMsgGCSurveyRequestDefaultTypeInternal _CMsgGCSurveyRequest_default_instance_;
class CMsgGCSurveyResponse;
class CMsgGCSurveyResponseDefaultTypeInternal;
extern CMsgGCSurveyResponseDefaultTypeInternal _CMsgGCSurveyResponse_default_instance_;
class CMsgGCTFSpecificItemBroadcast;
class CMsgGCTFSpecificItemBroadcastDefaultTypeInternal;
extern CMsgGCTFSpecificItemBroadcastDefaultTypeInternal _CMsgGCTFSpecificItemBroadcast_default_instance_;
class CMsgGC_Client2GCEconPreviewDataBlockRequest;
class CMsgGC_Client2GCEconPreviewDataBlockRequestDefaultTypeInternal;
extern CMsgGC_Client2GCEconPreviewDataBlockRequestDefaultTypeInternal _CMsgGC_Client2GCEconPreviewDataBlockRequest_default_instance_;
class CMsgGC_Client2GCEconPreviewDataBlockResponse;
class CMsgGC_Client2GCEconPreviewDataBlockResponseDefaultTypeInternal;
extern CMsgGC_Client2GCEconPreviewDataBlockResponseDefaultTypeInternal _CMsgGC_Client2GCEconPreviewDataBlockResponse_default_instance_;
class CMsgGC_Client_UseServerModificationItem;
class CMsgGC_Client_UseServerModificationItemDefaultTypeInternal;
extern CMsgGC_Client_UseServerModificationItemDefaultTypeInternal _CMsgGC_Client_UseServerModificationItem_default_instance_;
class CMsgGC_Client_UseServerModificationItem_Response;
class CMsgGC_Client_UseServerModificationItem_ResponseDefaultTypeInternal;
extern CMsgGC_Client_UseServerModificationItem_ResponseDefaultTypeInternal _CMsgGC_Client_UseServerModificationItem_Response_default_instance_;
class CMsgGC_DailyCompetitiveStatsRollup;
class CMsgGC_DailyCompetitiveStatsRollupDefaultTypeInternal;
extern CMsgGC_DailyCompetitiveStatsRollupDefaultTypeInternal _CMsgGC_DailyCompetitiveStatsRollup_default_instance_;
class CMsgGC_DailyCompetitiveStatsRollup_Response;
class CMsgGC_DailyCompetitiveStatsRollup_ResponseDefaultTypeInternal;
extern CMsgGC_DailyCompetitiveStatsRollup_ResponseDefaultTypeInternal _CMsgGC_DailyCompetitiveStatsRollup_Response_default_instance_;
class CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry;
class CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntryDefaultTypeInternal;
extern CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntryDefaultTypeInternal _CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry_default_instance_;
class CMsgGC_GameServer_AckPolicy;
class CMsgGC_GameServer_AckPolicyDefaultTypeInternal;
extern CMsgGC_GameServer_AckPolicyDefaultTypeInternal _CMsgGC_GameServer_AckPolicy_default_instance_;
class CMsgGC_GameServer_AckPolicyResponse;
class CMsgGC_GameServer_AckPolicyResponseDefaultTypeInternal;
extern CMsgGC_GameServer_AckPolicyResponseDefaultTypeInternal _CMsgGC_GameServer_AckPolicyResponse_default_instance_;
class CMsgGC_GameServer_AuthChallenge;
class CMsgGC_GameServer_AuthChallengeDefaultTypeInternal;
extern CMsgGC_GameServer_AuthChallengeDefaultTypeInternal _CMsgGC_GameServer_AuthChallenge_default_instance_;
class CMsgGC_GameServer_AuthChallengeResponse;
class CMsgGC_GameServer_AuthChallengeResponseDefaultTypeInternal;
extern CMsgGC_GameServer_AuthChallengeResponseDefaultTypeInternal _CMsgGC_GameServer_AuthChallengeResponse_default_instance_;
class CMsgGC_GameServer_AuthResult;
class CMsgGC_GameServer_AuthResultDefaultTypeInternal;
extern CMsgGC_GameServer_AuthResultDefaultTypeInternal _CMsgGC_GameServer_AuthResult_default_instance_;
class CMsgGC_GameServer_CreateIdentity;
class CMsgGC_GameServer_CreateIdentityDefaultTypeInternal;
extern CMsgGC_GameServer_CreateIdentityDefaultTypeInternal _CMsgGC_GameServer_CreateIdentity_default_instance_;
class CMsgGC_GameServer_CreateIdentityResponse;
class CMsgGC_GameServer_CreateIdentityResponseDefaultTypeInternal;
extern CMsgGC_GameServer_CreateIdentityResponseDefaultTypeInternal _CMsgGC_GameServer_CreateIdentityResponse_default_instance_;
class CMsgGC_GameServer_LevelInfo;
class CMsgGC_GameServer_LevelInfoDefaultTypeInternal;
extern CMsgGC_GameServer_LevelInfoDefaultTypeInternal _CMsgGC_GameServer_LevelInfo_default_instance_;
class CMsgGC_GameServer_List;
class CMsgGC_GameServer_ListDefaultTypeInternal;
extern CMsgGC_GameServer_ListDefaultTypeInternal _CMsgGC_GameServer_List_default_instance_;
class CMsgGC_GameServer_ListResponse;
class CMsgGC_GameServer_ListResponseDefaultTypeInternal;
extern CMsgGC_GameServer_ListResponseDefaultTypeInternal _CMsgGC_GameServer_ListResponse_default_instance_;
class CMsgGC_GameServer_ListResponse_GameServerIdentity;
class CMsgGC_GameServer_ListResponse_GameServerIdentityDefaultTypeInternal;
extern CMsgGC_GameServer_ListResponse_GameServerIdentityDefaultTypeInternal _CMsgGC_GameServer_ListResponse_GameServerIdentity_default_instance_;
class CMsgGC_GameServer_ResetIdentity;
class CMsgGC_GameServer_ResetIdentityDefaultTypeInternal;
extern CMsgGC_GameServer_ResetIdentityDefaultTypeInternal _CMsgGC_GameServer_ResetIdentity_default_instance_;
class CMsgGC_GameServer_ResetIdentityResponse;
class CMsgGC_GameServer_ResetIdentityResponseDefaultTypeInternal;
extern CMsgGC_GameServer_ResetIdentityResponseDefaultTypeInternal _CMsgGC_GameServer_ResetIdentityResponse_default_instance_;
class CMsgGC_GameServer_ServerModificationItem;
class CMsgGC_GameServer_ServerModificationItemDefaultTypeInternal;
extern CMsgGC_GameServer_ServerModificationItemDefaultTypeInternal _CMsgGC_GameServer_ServerModificationItem_default_instance_;
class CMsgGC_GameServer_ServerModificationItemExpired;
class CMsgGC_GameServer_ServerModificationItemExpiredDefaultTypeInternal;
extern CMsgGC_GameServer_ServerModificationItemExpiredDefaultTypeInternal _CMsgGC_GameServer_ServerModificationItemExpired_default_instance_;
class CMsgGC_GameServer_UseServerModificationItem;
class CMsgGC_GameServer_UseServerModificationItemDefaultTypeInternal;
extern CMsgGC_GameServer_UseServerModificationItemDefaultTypeInternal _CMsgGC_GameServer_UseServerModificationItem_default_instance_;
class CMsgGC_GameServer_UseServerModificationItem_Response;
class CMsgGC_GameServer_UseServerModificationItem_ResponseDefaultTypeInternal;
extern CMsgGC_GameServer_UseServerModificationItem_ResponseDefaultTypeInternal _CMsgGC_GameServer_UseServerModificationItem_Response_default_instance_;
class CMsgGC_Halloween_GrantItem;
class CMsgGC_Halloween_GrantItemDefaultTypeInternal;
extern CMsgGC_Halloween_GrantItemDefaultTypeInternal _CMsgGC_Halloween_GrantItem_default_instance_;
class CMsgGC_Halloween_GrantItemResponse;
class CMsgGC_Halloween_GrantItemResponseDefaultTypeInternal;
extern CMsgGC_Halloween_GrantItemResponseDefaultTypeInternal _CMsgGC_Halloween_GrantItemResponse_default_instance_;
class CMsgGC_Halloween_ItemClaimed;
class CMsgGC_Halloween_ItemClaimedDefaultTypeInternal;
extern CMsgGC_Halloween_ItemClaimedDefaultTypeInternal _CMsgGC_Halloween_ItemClaimed_default_instance_;
class CMsgGC_Halloween_ReservedItem;
class CMsgGC_Halloween_ReservedItemDefaultTypeInternal;
extern CMsgGC_Halloween_ReservedItemDefaultTypeInternal _CMsgGC_Halloween_ReservedItem_default_instance_;
class CMsgGC_KickPlayerFromLobby;
class CMsgGC_KickPlayerFromLobbyDefaultTypeInternal;
extern CMsgGC_KickPlayerFromLobbyDefaultTypeInternal _CMsgGC_KickPlayerFromLobby_default_instance_;
class CMsgGC_Match_Result;
class CMsgGC_Match_ResultDefaultTypeInternal;
extern CMsgGC_Match_ResultDefaultTypeInternal _CMsgGC_Match_Result_default_instance_;
class CMsgGC_Match_ResultResponse;
class CMsgGC_Match_ResultResponseDefaultTypeInternal;
extern CMsgGC_Match_ResultResponseDefaultTypeInternal _CMsgGC_Match_ResultResponse_default_instance_;
class CMsgGC_Match_Result_Player;
class CMsgGC_Match_Result_PlayerDefaultTypeInternal;
extern CMsgGC_Match_Result_PlayerDefaultTypeInternal _CMsgGC_Match_Result_Player_default_instance_;
class CMsgGC_PickupItemEligibility_Query;
class CMsgGC_PickupItemEligibility_QueryDefaultTypeInternal;
extern CMsgGC_PickupItemEligibility_QueryDefaultTypeInternal _CMsgGC_PickupItemEligibility_Query_default_instance_;
class CMsgGC_PickupItemEligibility_QueryResponse;
class CMsgGC_PickupItemEligibility_QueryResponseDefaultTypeInternal;
extern CMsgGC_PickupItemEligibility_QueryResponseDefaultTypeInternal _CMsgGC_PickupItemEligibility_QueryResponse_default_instance_;
class CMsgGC_ReportPlayer;
class CMsgGC_ReportPlayerDefaultTypeInternal;
extern CMsgGC_ReportPlayerDefaultTypeInternal _CMsgGC_ReportPlayer_default_instance_;
class CMsgGC_TFVoteKickPlayerRequest;
class CMsgGC_TFVoteKickPlayerRequestDefaultTypeInternal;
extern CMsgGC_TFVoteKickPlayerRequestDefaultTypeInternal _CMsgGC_TFVoteKickPlayerRequest_default_instance_;
class CMsgGC_VoteKickPlayerRequestResponse;
class CMsgGC_VoteKickPlayerRequestResponseDefaultTypeInternal;
extern CMsgGC_VoteKickPlayerRequestResponseDefaultTypeInternal _CMsgGC_VoteKickPlayerRequestResponse_default_instance_;
class CMsgGameServerKickingLobby;
class CMsgGameServerKickingLobbyDefaultTypeInternal;
extern CMsgGameServerKickingLobbyDefaultTypeInternal _CMsgGameServerKickingLobby_default_instance_;
class CMsgGameServerKickingLobbyResponse;
class CMsgGameServerKickingLobbyResponseDefaultTypeInternal;
extern CMsgGameServerKickingLobbyResponseDefaultTypeInternal _CMsgGameServerKickingLobbyResponse_default_instance_;
class CMsgGameServerMatchmakingStatus;
class CMsgGameServerMatchmakingStatusDefaultTypeInternal;
extern CMsgGameServerMatchmakingStatusDefaultTypeInternal _CMsgGameServerMatchmakingStatus_default_instance_;
class CMsgGameServerMatchmakingStatus_Player;
class CMsgGameServerMatchmakingStatus_PlayerDefaultTypeInternal;
extern CMsgGameServerMatchmakingStatus_PlayerDefaultTypeInternal _CMsgGameServerMatchmakingStatus_Player_default_instance_;
class CMsgHalloween_Merasmus2012;
class CMsgHalloween_Merasmus2012DefaultTypeInternal;
extern CMsgHalloween_Merasmus2012DefaultTypeInternal _CMsgHalloween_Merasmus2012_default_instance_;
class CMsgHalloween_ServerBossEvent;
class CMsgHalloween_ServerBossEventDefaultTypeInternal;
extern CMsgHalloween_ServerBossEventDefaultTypeInternal _CMsgHalloween_ServerBossEvent_default_instance_;
class CMsgKickedFromMatchmakingQueue;
class CMsgKickedFromMatchmakingQueueDefaultTypeInternal;
extern CMsgKickedFromMatchmakingQueueDefaultTypeInternal _CMsgKickedFromMatchmakingQueue_default_instance_;
class CMsgLeaveGameAndPrepareToJoinParty;
class CMsgLeaveGameAndPrepareToJoinPartyDefaultTypeInternal;
extern CMsgLeaveGameAndPrepareToJoinPartyDefaultTypeInternal _CMsgLeaveGameAndPrepareToJoinParty_default_instance_;
class CMsgMatchSearchCriteria;
class CMsgMatchSearchCriteriaDefaultTypeInternal;
extern CMsgMatchSearchCriteriaDefaultTypeInternal _CMsgMatchSearchCriteria_default_instance_;
class CMsgMatchmakingProgress;
class CMsgMatchmakingProgressDefaultTypeInternal;
extern CMsgMatchmakingProgressDefaultTypeInternal _CMsgMatchmakingProgress_default_instance_;
class CMsgMatchmakingSearchCountRequest;
class CMsgMatchmakingSearchCountRequestDefaultTypeInternal;
extern CMsgMatchmakingSearchCountRequestDefaultTypeInternal _CMsgMatchmakingSearchCountRequest_default_instance_;
class CMsgMatchmakingSearchCountResponse;
class CMsgMatchmakingSearchCountResponseDefaultTypeInternal;
extern CMsgMatchmakingSearchCountResponseDefaultTypeInternal _CMsgMatchmakingSearchCountResponse_default_instance_;
class CMsgMvMMannUpVictoryReply;
class CMsgMvMMannUpVictoryReplyDefaultTypeInternal;
extern CMsgMvMMannUpVictoryReplyDefaultTypeInternal _CMsgMvMMannUpVictoryReply_default_instance_;
class CMsgMvMVictory;
class CMsgMvMVictoryDefaultTypeInternal;
extern CMsgMvMVictoryDefaultTypeInternal _CMsgMvMVictory_default_instance_;
class CMsgMvMVictoryInfo;
class CMsgMvMVictoryInfoDefaultTypeInternal;
extern CMsgMvMVictoryInfoDefaultTypeInternal _CMsgMvMVictoryInfo_default_instance_;
class CMsgMvMVictoryInfo_Item;
class CMsgMvMVictoryInfo_ItemDefaultTypeInternal;
extern CMsgMvMVictoryInfo_ItemDefaultTypeInternal _CMsgMvMVictoryInfo_Item_default_instance_;
class CMsgMvMVictoryInfo_Player;
class CMsgMvMVictoryInfo_PlayerDefaultTypeInternal;
extern CMsgMvMVictoryInfo_PlayerDefaultTypeInternal _CMsgMvMVictoryInfo_Player_default_instance_;
class CMsgMvMVictory_Player;
class CMsgMvMVictory_PlayerDefaultTypeInternal;
extern CMsgMvMVictory_PlayerDefaultTypeInternal _CMsgMvMVictory_Player_default_instance_;
class CMsgNotificationAcknowledge;
class CMsgNotificationAcknowledgeDefaultTypeInternal;
extern CMsgNotificationAcknowledgeDefaultTypeInternal _CMsgNotificationAcknowledge_default_instance_;
class CMsgNotificationAcknowledgeReply;
class CMsgNotificationAcknowledgeReplyDefaultTypeInternal;
extern CMsgNotificationAcknowledgeReplyDefaultTypeInternal _CMsgNotificationAcknowledgeReply_default_instance_;
class CMsgPlayerLeftMatch;
class CMsgPlayerLeftMatchDefaultTypeInternal;
extern CMsgPlayerLeftMatchDefaultTypeInternal _CMsgPlayerLeftMatch_default_instance_;
class CMsgPlayerLeftMatchResponse;
class CMsgPlayerLeftMatchResponseDefaultTypeInternal;
extern CMsgPlayerLeftMatchResponseDefaultTypeInternal _CMsgPlayerLeftMatchResponse_default_instance_;
class CMsgPlayerVoteKickedAfterLeavingMatch;
class CMsgPlayerVoteKickedAfterLeavingMatchDefaultTypeInternal;
extern CMsgPlayerVoteKickedAfterLeavingMatchDefaultTypeInternal _CMsgPlayerVoteKickedAfterLeavingMatch_default_instance_;
class CMsgPlayerVoteKickedAfterLeavingMatchResponse;
class CMsgPlayerVoteKickedAfterLeavingMatchResponseDefaultTypeInternal;
extern CMsgPlayerVoteKickedAfterLeavingMatchResponseDefaultTypeInternal _CMsgPlayerVoteKickedAfterLeavingMatchResponse_default_instance_;
class CMsgReadyUp;
class CMsgReadyUpDefaultTypeInternal;
extern CMsgReadyUpDefaultTypeInternal _CMsgReadyUp_default_instance_;
class CMsgReplaySubmitContestEntry;
class CMsgReplaySubmitContestEntryDefaultTypeInternal;
extern CMsgReplaySubmitContestEntryDefaultTypeInternal _CMsgReplaySubmitContestEntry_default_instance_;
class CMsgReplaySubmitContestEntryResponse;
class CMsgReplaySubmitContestEntryResponseDefaultTypeInternal;
extern CMsgReplaySubmitContestEntryResponseDefaultTypeInternal _CMsgReplaySubmitContestEntryResponse_default_instance_;
class CMsgSaxxyAwarded;
class CMsgSaxxyAwardedDefaultTypeInternal;
extern CMsgSaxxyAwardedDefaultTypeInternal _CMsgSaxxyAwarded_default_instance_;
class CMsgSetItemSlotAttribute;
class CMsgSetItemSlotAttributeDefaultTypeInternal;
extern CMsgSetItemSlotAttributeDefaultTypeInternal _CMsgSetItemSlotAttribute_default_instance_;
class CMsgTFClientInit;
class CMsgTFClientInitDefaultTypeInternal;
extern CMsgTFClientInitDefaultTypeInternal _CMsgTFClientInit_default_instance_;
class CMsgTFCoaching_AddToCoaches;
class CMsgTFCoaching_AddToCoachesDefaultTypeInternal;
extern CMsgTFCoaching_AddToCoachesDefaultTypeInternal _CMsgTFCoaching_AddToCoaches_default_instance_;
class CMsgTFCoaching_AskCoach;
class CMsgTFCoaching_AskCoachDefaultTypeInternal;
extern CMsgTFCoaching_AskCoachDefaultTypeInternal _CMsgTFCoaching_AskCoach_default_instance_;
class CMsgTFCoaching_AskCoachResponse;
class CMsgTFCoaching_AskCoachResponseDefaultTypeInternal;
extern CMsgTFCoaching_AskCoachResponseDefaultTypeInternal _CMsgTFCoaching_AskCoachResponse_default_instance_;
class CMsgTFCoaching_CoachJoinGame;
class CMsgTFCoaching_CoachJoinGameDefaultTypeInternal;
extern CMsgTFCoaching_CoachJoinGameDefaultTypeInternal _CMsgTFCoaching_CoachJoinGame_default_instance_;
class CMsgTFCoaching_CoachJoined;
class CMsgTFCoaching_CoachJoinedDefaultTypeInternal;
extern CMsgTFCoaching_CoachJoinedDefaultTypeInternal _CMsgTFCoaching_CoachJoined_default_instance_;
class CMsgTFCoaching_CoachJoining;
class CMsgTFCoaching_CoachJoiningDefaultTypeInternal;
extern CMsgTFCoaching_CoachJoiningDefaultTypeInternal _CMsgTFCoaching_CoachJoining_default_instance_;
class CMsgTFCoaching_FindCoach;
class CMsgTFCoaching_FindCoachDefaultTypeInternal;
extern CMsgTFCoaching_FindCoachDefaultTypeInternal _CMsgTFCoaching_FindCoach_default_instance_;
class CMsgTFCoaching_FindCoachResponse;
class CMsgTFCoaching_FindCoachResponseDefaultTypeInternal;
extern CMsgTFCoaching_FindCoachResponseDefaultTypeInternal _CMsgTFCoaching_FindCoachResponse_default_instance_;
class CMsgTFCoaching_LikeCurrentCoach;
class CMsgTFCoaching_LikeCurrentCoachDefaultTypeInternal;
extern CMsgTFCoaching_LikeCurrentCoachDefaultTypeInternal _CMsgTFCoaching_LikeCurrentCoach_default_instance_;
class CMsgTFCoaching_RemoveCurrentCoach;
class CMsgTFCoaching_RemoveCurrentCoachDefaultTypeInternal;
extern CMsgTFCoaching_RemoveCurrentCoachDefaultTypeInternal _CMsgTFCoaching_RemoveCurrentCoach_default_instance_;
class CMsgTFCoaching_RemoveFromCoaches;
class CMsgTFCoaching_RemoveFromCoachesDefaultTypeInternal;
extern CMsgTFCoaching_RemoveFromCoachesDefaultTypeInternal _CMsgTFCoaching_RemoveFromCoaches_default_instance_;
class CMsgTFFreeTrialChooseMostHelpfulFriend;
class CMsgTFFreeTrialChooseMostHelpfulFriendDefaultTypeInternal;
extern CMsgTFFreeTrialChooseMostHelpfulFriendDefaultTypeInternal _CMsgTFFreeTrialChooseMostHelpfulFriend_default_instance_;
class CMsgTFFreeTrialConvertedToPremium;
class CMsgTFFreeTrialConvertedToPremiumDefaultTypeInternal;
extern CMsgTFFreeTrialConvertedToPremiumDefaultTypeInternal _CMsgTFFreeTrialConvertedToPremium_default_instance_;
class CMsgTFGoldenWrenchBroadcast;
class CMsgTFGoldenWrenchBroadcastDefaultTypeInternal;
extern CMsgTFGoldenWrenchBroadcastDefaultTypeInternal _CMsgTFGoldenWrenchBroadcast_default_instance_;
class CMsgTFJoinChatChannel;
class CMsgTFJoinChatChannelDefaultTypeInternal;
extern CMsgTFJoinChatChannelDefaultTypeInternal _CMsgTFJoinChatChannel_default_instance_;
class CMsgTFJoinChatChannelResponse;
class CMsgTFJoinChatChannelResponseDefaultTypeInternal;
extern CMsgTFJoinChatChannelResponseDefaultTypeInternal _CMsgTFJoinChatChannelResponse_default_instance_;
class CMsgTFJoinChatChannelResponse_ChatMember;
class CMsgTFJoinChatChannelResponse_ChatMemberDefaultTypeInternal;
extern CMsgTFJoinChatChannelResponse_ChatMemberDefaultTypeInternal _CMsgTFJoinChatChannelResponse_ChatMember_default_instance_;
class CMsgTFLeaveChatChannel;
class CMsgTFLeaveChatChannelDefaultTypeInternal;
extern CMsgTFLeaveChatChannelDefaultTypeInternal _CMsgTFLeaveChatChannel_default_instance_;
class CMsgTFOtherJoinedChatChannel;
class CMsgTFOtherJoinedChatChannelDefaultTypeInternal;
extern CMsgTFOtherJoinedChatChannelDefaultTypeInternal _CMsgTFOtherJoinedChatChannel_default_instance_;
class CMsgTFOtherLeftChatChannel;
class CMsgTFOtherLeftChatChannelDefaultTypeInternal;
extern CMsgTFOtherLeftChatChannelDefaultTypeInternal _CMsgTFOtherLeftChatChannel_default_instance_;
class CMsgTFQuickplay_PlayerJoining;
class CMsgTFQuickplay_PlayerJoiningDefaultTypeInternal;
extern CMsgTFQuickplay_PlayerJoiningDefaultTypeInternal _CMsgTFQuickplay_PlayerJoining_default_instance_;
class CMsgTFQuickplay_ScoreServers;
class CMsgTFQuickplay_ScoreServersDefaultTypeInternal;
extern CMsgTFQuickplay_ScoreServersDefaultTypeInternal _CMsgTFQuickplay_ScoreServers_default_instance_;
class CMsgTFQuickplay_ScoreServersResponse;
class CMsgTFQuickplay_ScoreServersResponseDefaultTypeInternal;
extern CMsgTFQuickplay_ScoreServersResponseDefaultTypeInternal _CMsgTFQuickplay_ScoreServersResponse_default_instance_;
class CMsgTFQuickplay_ScoreServersResponse_ServerInfo;
class CMsgTFQuickplay_ScoreServersResponse_ServerInfoDefaultTypeInternal;
extern CMsgTFQuickplay_ScoreServersResponse_ServerInfoDefaultTypeInternal _CMsgTFQuickplay_ScoreServersResponse_ServerInfo_default_instance_;
class CMsgTFQuickplay_ScoreServers_ServerInfo;
class CMsgTFQuickplay_ScoreServers_ServerInfoDefaultTypeInternal;
extern CMsgTFQuickplay_ScoreServers_ServerInfoDefaultTypeInternal _CMsgTFQuickplay_ScoreServers_ServerInfo_default_instance_;
class CMsgTFRequestChatChannelList;
class CMsgTFRequestChatChannelListDefaultTypeInternal;
extern CMsgTFRequestChatChannelListDefaultTypeInternal _CMsgTFRequestChatChannelList_default_instance_;
class CMsgTFRequestChatChannelListResponse;
class CMsgTFRequestChatChannelListResponseDefaultTypeInternal;
extern CMsgTFRequestChatChannelListResponseDefaultTypeInternal _CMsgTFRequestChatChannelListResponse_default_instance_;
class CMsgTFRequestChatChannelListResponse_ChatChannel;
class CMsgTFRequestChatChannelListResponse_ChatChannelDefaultTypeInternal;
extern CMsgTFRequestChatChannelListResponse_ChatChannelDefaultTypeInternal _CMsgTFRequestChatChannelListResponse_ChatChannel_default_instance_;
class CMsgTFRequestDefaultChatChannel;
class CMsgTFRequestDefaultChatChannelDefaultTypeInternal;
extern CMsgTFRequestDefaultChatChannelDefaultTypeInternal _CMsgTFRequestDefaultChatChannel_default_instance_;
class CMsgTFRequestDefaultChatChannelResponse;
class CMsgTFRequestDefaultChatChannelResponseDefaultTypeInternal;
extern CMsgTFRequestDefaultChatChannelResponseDefaultTypeInternal _CMsgTFRequestDefaultChatChannelResponse_default_instance_;
class CMsgTFRequestTF2Friends;
class CMsgTFRequestTF2FriendsDefaultTypeInternal;
extern CMsgTFRequestTF2FriendsDefaultTypeInternal _CMsgTFRequestTF2Friends_default_instance_;
class CMsgTFRequestTF2FriendsResponse;
class CMsgTFRequestTF2FriendsResponseDefaultTypeInternal;
extern CMsgTFRequestTF2FriendsResponseDefaultTypeInternal _CMsgTFRequestTF2FriendsResponse_default_instance_;
class CMsgTFSaxxyBroadcast;
class CMsgTFSaxxyBroadcastDefaultTypeInternal;
extern CMsgTFSaxxyBroadcastDefaultTypeInternal _CMsgTFSaxxyBroadcast_default_instance_;
class CMsgTFThankedBySomeone;
class CMsgTFThankedBySomeoneDefaultTypeInternal;
extern CMsgTFThankedBySomeoneDefaultTypeInternal _CMsgTFThankedBySomeone_default_instance_;
class CMsgTFThankedSomeone;
class CMsgTFThankedSomeoneDefaultTypeInternal;
extern CMsgTFThankedSomeoneDefaultTypeInternal _CMsgTFThankedSomeone_default_instance_;
class CMsgTFVoteKickBanPlayer;
class CMsgTFVoteKickBanPlayerDefaultTypeInternal;
extern CMsgTFVoteKickBanPlayerDefaultTypeInternal _CMsgTFVoteKickBanPlayer_default_instance_;
class CMsgTFVoteKickBanPlayerResult;
class CMsgTFVoteKickBanPlayerResultDefaultTypeInternal;
extern CMsgTFVoteKickBanPlayerResultDefaultTypeInternal _CMsgTFVoteKickBanPlayerResult_default_instance_;
class CMsgTFWorldStatus;
class CMsgTFWorldStatusDefaultTypeInternal;
extern CMsgTFWorldStatusDefaultTypeInternal _CMsgTFWorldStatus_default_instance_;
class CMsgTFXPSource;
class CMsgTFXPSourceDefaultTypeInternal;
extern CMsgTFXPSourceDefaultTypeInternal _CMsgTFXPSource_default_instance_;
class CMsgTFXPSourceBreakdown;
class CMsgTFXPSourceBreakdownDefaultTypeInternal;
extern CMsgTFXPSourceBreakdownDefaultTypeInternal _CMsgTFXPSourceBreakdown_default_instance_;
class CMsgUpdateHalloweenMerasmusLootLevel;
class CMsgUpdateHalloweenMerasmusLootLevelDefaultTypeInternal;
extern CMsgUpdateHalloweenMerasmusLootLevelDefaultTypeInternal _CMsgUpdateHalloweenMerasmusLootLevel_default_instance_;
class CMsgUpdateHalloweenMerasmusLootLevel_Player;
class CMsgUpdateHalloweenMerasmusLootLevel_PlayerDefaultTypeInternal;
extern CMsgUpdateHalloweenMerasmusLootLevel_PlayerDefaultTypeInternal _CMsgUpdateHalloweenMerasmusLootLevel_Player_default_instance_;
class CReplayCachedContestData;
class CReplayCachedContestDataDefaultTypeInternal;
extern CReplayCachedContestDataDefaultTypeInternal _CReplayCachedContestData_default_instance_;
class CSOTFDuelSummary;
class CSOTFDuelSummaryDefaultTypeInternal;
extern CSOTFDuelSummaryDefaultTypeInternal _CSOTFDuelSummary_default_instance_;
class CSOTFGameServerLobby;
class CSOTFGameServerLobbyDefaultTypeInternal;
extern CSOTFGameServerLobbyDefaultTypeInternal _CSOTFGameServerLobby_default_instance_;
class CSOTFLadderPlayerStats;
class CSOTFLadderPlayerStatsDefaultTypeInternal;
extern CSOTFLadderPlayerStatsDefaultTypeInternal _CSOTFLadderPlayerStats_default_instance_;
class CSOTFMapContribution;
class CSOTFMapContributionDefaultTypeInternal;
extern CSOTFMapContributionDefaultTypeInternal _CSOTFMapContribution_default_instance_;
class CSOTFMatchResultPlayerStats;
class CSOTFMatchResultPlayerStatsDefaultTypeInternal;
extern CSOTFMatchResultPlayerStatsDefaultTypeInternal _CSOTFMatchResultPlayerStats_default_instance_;
class CSOTFParty;
class CSOTFPartyDefaultTypeInternal;
extern CSOTFPartyDefaultTypeInternal _CSOTFParty_default_instance_;
class CSOTFPartyInvite;
class CSOTFPartyInviteDefaultTypeInternal;
extern CSOTFPartyInviteDefaultTypeInternal _CSOTFPartyInvite_default_instance_;
class CSOTFPartyInvite_PartyMember;
class CSOTFPartyInvite_PartyMemberDefaultTypeInternal;
extern CSOTFPartyInvite_PartyMemberDefaultTypeInternal _CSOTFPartyInvite_PartyMember_default_instance_;
class CSOTFPartyMember;
class CSOTFPartyMemberDefaultTypeInternal;
extern CSOTFPartyMemberDefaultTypeInternal _CSOTFPartyMember_default_instance_;
class CSOTFPlayerInfo;
class CSOTFPlayerInfoDefaultTypeInternal;
extern CSOTFPlayerInfoDefaultTypeInternal _CSOTFPlayerInfo_default_instance_;
class CSOTFRatingData;
class CSOTFRatingDataDefaultTypeInternal;
extern CSOTFRatingDataDefaultTypeInternal _CSOTFRatingData_default_instance_;
class CSOWarData;
class CSOWarDataDefaultTypeInternal;
extern CSOWarDataDefaultTypeInternal _CSOWarData_default_instance_;
class CTFLobbyMember;
class CTFLobbyMemberDefaultTypeInternal;
extern CTFLobbyMemberDefaultTypeInternal _CTFLobbyMember_default_instance_;

enum CMsgGC_GameServer_CreateIdentityResponse_EStatus {
  CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_GenericFailure = 0,
  CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_TooMany = -1,
  CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_NoPrivs = -2,
  CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_Created = 1
};
bool CMsgGC_GameServer_CreateIdentityResponse_EStatus_IsValid(int value);
const CMsgGC_GameServer_CreateIdentityResponse_EStatus CMsgGC_GameServer_CreateIdentityResponse_EStatus_EStatus_MIN = CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_NoPrivs;
const CMsgGC_GameServer_CreateIdentityResponse_EStatus CMsgGC_GameServer_CreateIdentityResponse_EStatus_EStatus_MAX = CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_Created;
const int CMsgGC_GameServer_CreateIdentityResponse_EStatus_EStatus_ARRAYSIZE = CMsgGC_GameServer_CreateIdentityResponse_EStatus_EStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGC_GameServer_CreateIdentityResponse_EStatus_descriptor();
inline const ::std::string& CMsgGC_GameServer_CreateIdentityResponse_EStatus_Name(CMsgGC_GameServer_CreateIdentityResponse_EStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGC_GameServer_CreateIdentityResponse_EStatus_descriptor(), value);
}
inline bool CMsgGC_GameServer_CreateIdentityResponse_EStatus_Parse(
    const ::std::string& name, CMsgGC_GameServer_CreateIdentityResponse_EStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGC_GameServer_CreateIdentityResponse_EStatus>(
    CMsgGC_GameServer_CreateIdentityResponse_EStatus_descriptor(), name, value);
}
enum CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse {
  CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_AlreadyInUse = 1,
  CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_NotOnAuthenticatedServer = 2,
  CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_ServerReject = 3,
  CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_InternalError = 4,
  CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_EventAlreadyActive = 5
};
bool CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_IsValid(int value);
const CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_EServerModificationItemResponse_MIN = CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_AlreadyInUse;
const CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_EServerModificationItemResponse_MAX = CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_EventAlreadyActive;
const int CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_EServerModificationItemResponse_ARRAYSIZE = CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_EServerModificationItemResponse_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_descriptor();
inline const ::std::string& CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_Name(CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_descriptor(), value);
}
inline bool CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_Parse(
    const ::std::string& name, CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse>(
    CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_descriptor(), name, value);
}
enum CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse {
  CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_kServerModificationItemServerResponse_Accepted = 1,
  CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_kServerModificationItemServerResponse_NoVoteCalled = 2,
  CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_kServerModificationItemServerResponse_VoteFailed = 3
};
bool CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_IsValid(int value);
const CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_EServerModificationItemServerResponse_MIN = CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_kServerModificationItemServerResponse_Accepted;
const CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_EServerModificationItemServerResponse_MAX = CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_kServerModificationItemServerResponse_VoteFailed;
const int CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_EServerModificationItemServerResponse_ARRAYSIZE = CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_EServerModificationItemServerResponse_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_descriptor();
inline const ::std::string& CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_Name(CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_descriptor(), value);
}
inline bool CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_Parse(
    const ::std::string& name, CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse>(
    CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_descriptor(), name, value);
}
enum CSOTFParty_State {
  CSOTFParty_State_UI = 0,
  CSOTFParty_State_FINDING_MATCH = 1,
  CSOTFParty_State_IN_MATCH = 2,
  CSOTFParty_State_AWAITING_RESERVATION_CONFIRMATION = 3
};
bool CSOTFParty_State_IsValid(int value);
const CSOTFParty_State CSOTFParty_State_State_MIN = CSOTFParty_State_UI;
const CSOTFParty_State CSOTFParty_State_State_MAX = CSOTFParty_State_AWAITING_RESERVATION_CONFIRMATION;
const int CSOTFParty_State_State_ARRAYSIZE = CSOTFParty_State_State_MAX + 1;

const ::google::protobuf::EnumDescriptor* CSOTFParty_State_descriptor();
inline const ::std::string& CSOTFParty_State_Name(CSOTFParty_State value) {
  return ::google::protobuf::internal::NameOfEnum(
    CSOTFParty_State_descriptor(), value);
}
inline bool CSOTFParty_State_Parse(
    const ::std::string& name, CSOTFParty_State* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CSOTFParty_State>(
    CSOTFParty_State_descriptor(), name, value);
}
enum CTFLobbyMember_ConnectState {
  CTFLobbyMember_ConnectState_INVALID = 0,
  CTFLobbyMember_ConnectState_RESERVATION_PENDING = 1,
  CTFLobbyMember_ConnectState_RESERVED = 2,
  CTFLobbyMember_ConnectState_CONNECTED = 3,
  CTFLobbyMember_ConnectState_DISCONNECTED = 5
};
bool CTFLobbyMember_ConnectState_IsValid(int value);
const CTFLobbyMember_ConnectState CTFLobbyMember_ConnectState_ConnectState_MIN = CTFLobbyMember_ConnectState_INVALID;
const CTFLobbyMember_ConnectState CTFLobbyMember_ConnectState_ConnectState_MAX = CTFLobbyMember_ConnectState_DISCONNECTED;
const int CTFLobbyMember_ConnectState_ConnectState_ARRAYSIZE = CTFLobbyMember_ConnectState_ConnectState_MAX + 1;

const ::google::protobuf::EnumDescriptor* CTFLobbyMember_ConnectState_descriptor();
inline const ::std::string& CTFLobbyMember_ConnectState_Name(CTFLobbyMember_ConnectState value) {
  return ::google::protobuf::internal::NameOfEnum(
    CTFLobbyMember_ConnectState_descriptor(), value);
}
inline bool CTFLobbyMember_ConnectState_Parse(
    const ::std::string& name, CTFLobbyMember_ConnectState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CTFLobbyMember_ConnectState>(
    CTFLobbyMember_ConnectState_descriptor(), name, value);
}
enum CSOTFGameServerLobby_State {
  CSOTFGameServerLobby_State_UNKNOWN = 0,
  CSOTFGameServerLobby_State_SERVERSETUP = 1,
  CSOTFGameServerLobby_State_RUN = 2
};
bool CSOTFGameServerLobby_State_IsValid(int value);
const CSOTFGameServerLobby_State CSOTFGameServerLobby_State_State_MIN = CSOTFGameServerLobby_State_UNKNOWN;
const CSOTFGameServerLobby_State CSOTFGameServerLobby_State_State_MAX = CSOTFGameServerLobby_State_RUN;
const int CSOTFGameServerLobby_State_State_ARRAYSIZE = CSOTFGameServerLobby_State_State_MAX + 1;

const ::google::protobuf::EnumDescriptor* CSOTFGameServerLobby_State_descriptor();
inline const ::std::string& CSOTFGameServerLobby_State_Name(CSOTFGameServerLobby_State value) {
  return ::google::protobuf::internal::NameOfEnum(
    CSOTFGameServerLobby_State_descriptor(), value);
}
inline bool CSOTFGameServerLobby_State_Parse(
    const ::std::string& name, CSOTFGameServerLobby_State* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CSOTFGameServerLobby_State>(
    CSOTFGameServerLobby_State_descriptor(), name, value);
}
enum CSOTFGameServerLobby_LobbyType {
  CSOTFGameServerLobby_LobbyType_INVALID = -1,
  CSOTFGameServerLobby_LobbyType_MATCH = 0,
  CSOTFGameServerLobby_LobbyType_PRACTICE = 1,
  CSOTFGameServerLobby_LobbyType_TOURNAMENT = 2,
  CSOTFGameServerLobby_LobbyType_TUTORIAL = 3
};
bool CSOTFGameServerLobby_LobbyType_IsValid(int value);
const CSOTFGameServerLobby_LobbyType CSOTFGameServerLobby_LobbyType_LobbyType_MIN = CSOTFGameServerLobby_LobbyType_INVALID;
const CSOTFGameServerLobby_LobbyType CSOTFGameServerLobby_LobbyType_LobbyType_MAX = CSOTFGameServerLobby_LobbyType_TUTORIAL;
const int CSOTFGameServerLobby_LobbyType_LobbyType_ARRAYSIZE = CSOTFGameServerLobby_LobbyType_LobbyType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CSOTFGameServerLobby_LobbyType_descriptor();
inline const ::std::string& CSOTFGameServerLobby_LobbyType_Name(CSOTFGameServerLobby_LobbyType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CSOTFGameServerLobby_LobbyType_descriptor(), value);
}
inline bool CSOTFGameServerLobby_LobbyType_Parse(
    const ::std::string& name, CSOTFGameServerLobby_LobbyType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CSOTFGameServerLobby_LobbyType>(
    CSOTFGameServerLobby_LobbyType_descriptor(), name, value);
}
enum CSOTFGameServerLobby_WarMatch {
  CSOTFGameServerLobby_WarMatch_NOPE = 0,
  CSOTFGameServerLobby_WarMatch_INVADERS_ARE_PYRO = 1,
  CSOTFGameServerLobby_WarMatch_INVADERS_ARE_HEAVY = 2
};
bool CSOTFGameServerLobby_WarMatch_IsValid(int value);
const CSOTFGameServerLobby_WarMatch CSOTFGameServerLobby_WarMatch_WarMatch_MIN = CSOTFGameServerLobby_WarMatch_NOPE;
const CSOTFGameServerLobby_WarMatch CSOTFGameServerLobby_WarMatch_WarMatch_MAX = CSOTFGameServerLobby_WarMatch_INVADERS_ARE_HEAVY;
const int CSOTFGameServerLobby_WarMatch_WarMatch_ARRAYSIZE = CSOTFGameServerLobby_WarMatch_WarMatch_MAX + 1;

const ::google::protobuf::EnumDescriptor* CSOTFGameServerLobby_WarMatch_descriptor();
inline const ::std::string& CSOTFGameServerLobby_WarMatch_Name(CSOTFGameServerLobby_WarMatch value) {
  return ::google::protobuf::internal::NameOfEnum(
    CSOTFGameServerLobby_WarMatch_descriptor(), value);
}
inline bool CSOTFGameServerLobby_WarMatch_Parse(
    const ::std::string& name, CSOTFGameServerLobby_WarMatch* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CSOTFGameServerLobby_WarMatch>(
    CSOTFGameServerLobby_WarMatch_descriptor(), name, value);
}
enum CMsgGameServerMatchmakingStatus_PlayerConnectState {
  CMsgGameServerMatchmakingStatus_PlayerConnectState_INVALID = 0,
  CMsgGameServerMatchmakingStatus_PlayerConnectState_CONNECTED = 1,
  CMsgGameServerMatchmakingStatus_PlayerConnectState_RESERVED = 2
};
bool CMsgGameServerMatchmakingStatus_PlayerConnectState_IsValid(int value);
const CMsgGameServerMatchmakingStatus_PlayerConnectState CMsgGameServerMatchmakingStatus_PlayerConnectState_PlayerConnectState_MIN = CMsgGameServerMatchmakingStatus_PlayerConnectState_INVALID;
const CMsgGameServerMatchmakingStatus_PlayerConnectState CMsgGameServerMatchmakingStatus_PlayerConnectState_PlayerConnectState_MAX = CMsgGameServerMatchmakingStatus_PlayerConnectState_RESERVED;
const int CMsgGameServerMatchmakingStatus_PlayerConnectState_PlayerConnectState_ARRAYSIZE = CMsgGameServerMatchmakingStatus_PlayerConnectState_PlayerConnectState_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGameServerMatchmakingStatus_PlayerConnectState_descriptor();
inline const ::std::string& CMsgGameServerMatchmakingStatus_PlayerConnectState_Name(CMsgGameServerMatchmakingStatus_PlayerConnectState value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGameServerMatchmakingStatus_PlayerConnectState_descriptor(), value);
}
inline bool CMsgGameServerMatchmakingStatus_PlayerConnectState_Parse(
    const ::std::string& name, CMsgGameServerMatchmakingStatus_PlayerConnectState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGameServerMatchmakingStatus_PlayerConnectState>(
    CMsgGameServerMatchmakingStatus_PlayerConnectState_descriptor(), name, value);
}
enum CMsgGameServerMatchmakingStatus_Event {
  CMsgGameServerMatchmakingStatus_Event_None = 0,
  CMsgGameServerMatchmakingStatus_Event_MvMVictory = 1,
  CMsgGameServerMatchmakingStatus_Event_MvMDefeat = 2,
  CMsgGameServerMatchmakingStatus_Event_AcknowledgePlayers = 3
};
bool CMsgGameServerMatchmakingStatus_Event_IsValid(int value);
const CMsgGameServerMatchmakingStatus_Event CMsgGameServerMatchmakingStatus_Event_Event_MIN = CMsgGameServerMatchmakingStatus_Event_None;
const CMsgGameServerMatchmakingStatus_Event CMsgGameServerMatchmakingStatus_Event_Event_MAX = CMsgGameServerMatchmakingStatus_Event_AcknowledgePlayers;
const int CMsgGameServerMatchmakingStatus_Event_Event_ARRAYSIZE = CMsgGameServerMatchmakingStatus_Event_Event_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGameServerMatchmakingStatus_Event_descriptor();
inline const ::std::string& CMsgGameServerMatchmakingStatus_Event_Name(CMsgGameServerMatchmakingStatus_Event value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGameServerMatchmakingStatus_Event_descriptor(), value);
}
inline bool CMsgGameServerMatchmakingStatus_Event_Parse(
    const ::std::string& name, CMsgGameServerMatchmakingStatus_Event* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGameServerMatchmakingStatus_Event>(
    CMsgGameServerMatchmakingStatus_Event_descriptor(), name, value);
}
enum CMsgMvMVictoryInfo_GrantReason {
  CMsgMvMVictoryInfo_GrantReason_INVALID = 0,
  CMsgMvMVictoryInfo_GrantReason_BADGE_LEVELED = 1,
  CMsgMvMVictoryInfo_GrantReason_SQUAD_SURPLUS = 2,
  CMsgMvMVictoryInfo_GrantReason_MANN_UP = 3,
  CMsgMvMVictoryInfo_GrantReason_HELP_A_NOOB = 4
};
bool CMsgMvMVictoryInfo_GrantReason_IsValid(int value);
const CMsgMvMVictoryInfo_GrantReason CMsgMvMVictoryInfo_GrantReason_GrantReason_MIN = CMsgMvMVictoryInfo_GrantReason_INVALID;
const CMsgMvMVictoryInfo_GrantReason CMsgMvMVictoryInfo_GrantReason_GrantReason_MAX = CMsgMvMVictoryInfo_GrantReason_HELP_A_NOOB;
const int CMsgMvMVictoryInfo_GrantReason_GrantReason_ARRAYSIZE = CMsgMvMVictoryInfo_GrantReason_GrantReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgMvMVictoryInfo_GrantReason_descriptor();
inline const ::std::string& CMsgMvMVictoryInfo_GrantReason_Name(CMsgMvMVictoryInfo_GrantReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgMvMVictoryInfo_GrantReason_descriptor(), value);
}
inline bool CMsgMvMVictoryInfo_GrantReason_Parse(
    const ::std::string& name, CMsgMvMVictoryInfo_GrantReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgMvMVictoryInfo_GrantReason>(
    CMsgMvMVictoryInfo_GrantReason_descriptor(), name, value);
}
enum CMsgTFXPSource_XPSourceType {
  CMsgTFXPSource_XPSourceType_SOURCE_SCORE = 0,
  CMsgTFXPSource_XPSourceType_SOURCE_OBJECTIVE_BONUS = 1,
  CMsgTFXPSource_XPSourceType_SOURCE_COMPLETED_MATCH = 2,
  CMsgTFXPSource_XPSourceType_SOURCE_COMPETITIVE_ABANDON = 3,
  CMsgTFXPSource_XPSourceType_SOURCE_COMPETITIVE_WIN = 4,
  CMsgTFXPSource_XPSourceType_SOURCE_COMPETITIVE_LOSS = 5,
  CMsgTFXPSource_XPSourceType_SOURCE_AUTOBALANCE_BONUS = 6,
  CMsgTFXPSource_XPSourceType_NUM_SOURCE_TYPES = 7
};
bool CMsgTFXPSource_XPSourceType_IsValid(int value);
const CMsgTFXPSource_XPSourceType CMsgTFXPSource_XPSourceType_XPSourceType_MIN = CMsgTFXPSource_XPSourceType_SOURCE_SCORE;
const CMsgTFXPSource_XPSourceType CMsgTFXPSource_XPSourceType_XPSourceType_MAX = CMsgTFXPSource_XPSourceType_NUM_SOURCE_TYPES;
const int CMsgTFXPSource_XPSourceType_XPSourceType_ARRAYSIZE = CMsgTFXPSource_XPSourceType_XPSourceType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgTFXPSource_XPSourceType_descriptor();
inline const ::std::string& CMsgTFXPSource_XPSourceType_Name(CMsgTFXPSource_XPSourceType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgTFXPSource_XPSourceType_descriptor(), value);
}
inline bool CMsgTFXPSource_XPSourceType_Parse(
    const ::std::string& name, CMsgTFXPSource_XPSourceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgTFXPSource_XPSourceType>(
    CMsgTFXPSource_XPSourceType_descriptor(), name, value);
}
enum CMsgGCNotification_NotificationType {
  CMsgGCNotification_NotificationType_NOTIFICATION_REPORTED_PLAYER_BANNED = 0,
  CMsgGCNotification_NotificationType_NOTIFICATION_CUSTOM_STRING = 1,
  CMsgGCNotification_NotificationType_NOTIFICATION_MM_BAN_DUE_TO_EXCESSIVE_REPORTS = 2,
  CMsgGCNotification_NotificationType_NOTIFICATION_REPORTED_PLAYER_WAS_BANNED = 3,
  CMsgGCNotification_NotificationType_NOTIFICATION_SUPPORT_MESSAGE = 4,
  CMsgGCNotification_NotificationType_NOTIFICATION_NUM_TYPES = 5
};
bool CMsgGCNotification_NotificationType_IsValid(int value);
const CMsgGCNotification_NotificationType CMsgGCNotification_NotificationType_NotificationType_MIN = CMsgGCNotification_NotificationType_NOTIFICATION_REPORTED_PLAYER_BANNED;
const CMsgGCNotification_NotificationType CMsgGCNotification_NotificationType_NotificationType_MAX = CMsgGCNotification_NotificationType_NOTIFICATION_NUM_TYPES;
const int CMsgGCNotification_NotificationType_NotificationType_ARRAYSIZE = CMsgGCNotification_NotificationType_NotificationType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGCNotification_NotificationType_descriptor();
inline const ::std::string& CMsgGCNotification_NotificationType_Name(CMsgGCNotification_NotificationType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGCNotification_NotificationType_descriptor(), value);
}
inline bool CMsgGCNotification_NotificationType_Parse(
    const ::std::string& name, CMsgGCNotification_NotificationType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGCNotification_NotificationType>(
    CMsgGCNotification_NotificationType_descriptor(), name, value);
}
enum CMsgGC_Match_Result_Status {
  CMsgGC_Match_Result_Status_MATCH_SUCCEEDED = 0,
  CMsgGC_Match_Result_Status_MATCH_FAILED_GC = 1,
  CMsgGC_Match_Result_Status_MATCH_FAILED_TRUSTED = 2,
  CMsgGC_Match_Result_Status_MATCH_FAILED_ABANDON = 3,
  CMsgGC_Match_Result_Status_MATCH_FAILED_UNKNOWN = 5,
  CMsgGC_Match_Result_Status_MATCH_FAILED_TIMEOUT = 6,
  CMsgGC_Match_Result_Status_MATCH_FINISHED_ABANDON = 7
};
bool CMsgGC_Match_Result_Status_IsValid(int value);
const CMsgGC_Match_Result_Status CMsgGC_Match_Result_Status_Status_MIN = CMsgGC_Match_Result_Status_MATCH_SUCCEEDED;
const CMsgGC_Match_Result_Status CMsgGC_Match_Result_Status_Status_MAX = CMsgGC_Match_Result_Status_MATCH_FINISHED_ABANDON;
const int CMsgGC_Match_Result_Status_Status_ARRAYSIZE = CMsgGC_Match_Result_Status_Status_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGC_Match_Result_Status_descriptor();
inline const ::std::string& CMsgGC_Match_Result_Status_Name(CMsgGC_Match_Result_Status value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGC_Match_Result_Status_descriptor(), value);
}
inline bool CMsgGC_Match_Result_Status_Parse(
    const ::std::string& name, CMsgGC_Match_Result_Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGC_Match_Result_Status>(
    CMsgGC_Match_Result_Status_descriptor(), name, value);
}
enum CMsgGC_ReportPlayer_EReason {
  CMsgGC_ReportPlayer_EReason_kReason_INVALID = 0,
  CMsgGC_ReportPlayer_EReason_kReason_CHEATING = 1,
  CMsgGC_ReportPlayer_EReason_kReason_IDLE = 2,
  CMsgGC_ReportPlayer_EReason_kReason_HARASSMENT = 3,
  CMsgGC_ReportPlayer_EReason_kReason_GRIEFING = 4,
  CMsgGC_ReportPlayer_EReason_kReason_COUNT = 5
};
bool CMsgGC_ReportPlayer_EReason_IsValid(int value);
const CMsgGC_ReportPlayer_EReason CMsgGC_ReportPlayer_EReason_EReason_MIN = CMsgGC_ReportPlayer_EReason_kReason_INVALID;
const CMsgGC_ReportPlayer_EReason CMsgGC_ReportPlayer_EReason_EReason_MAX = CMsgGC_ReportPlayer_EReason_kReason_COUNT;
const int CMsgGC_ReportPlayer_EReason_EReason_ARRAYSIZE = CMsgGC_ReportPlayer_EReason_EReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGC_ReportPlayer_EReason_descriptor();
inline const ::std::string& CMsgGC_ReportPlayer_EReason_Name(CMsgGC_ReportPlayer_EReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGC_ReportPlayer_EReason_descriptor(), value);
}
inline bool CMsgGC_ReportPlayer_EReason_Parse(
    const ::std::string& name, CMsgGC_ReportPlayer_EReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGC_ReportPlayer_EReason>(
    CMsgGC_ReportPlayer_EReason_descriptor(), name, value);
}
enum CMsgGCDataCenterPing_Update_Status {
  CMsgGCDataCenterPing_Update_Status_Invalid = 0,
  CMsgGCDataCenterPing_Update_Status_Normal = 1,
  CMsgGCDataCenterPing_Update_Status_Unreachable = 2,
  CMsgGCDataCenterPing_Update_Status_FallbackToDCPing = 3
};
bool CMsgGCDataCenterPing_Update_Status_IsValid(int value);
const CMsgGCDataCenterPing_Update_Status CMsgGCDataCenterPing_Update_Status_Status_MIN = CMsgGCDataCenterPing_Update_Status_Invalid;
const CMsgGCDataCenterPing_Update_Status CMsgGCDataCenterPing_Update_Status_Status_MAX = CMsgGCDataCenterPing_Update_Status_FallbackToDCPing;
const int CMsgGCDataCenterPing_Update_Status_Status_ARRAYSIZE = CMsgGCDataCenterPing_Update_Status_Status_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGCDataCenterPing_Update_Status_descriptor();
inline const ::std::string& CMsgGCDataCenterPing_Update_Status_Name(CMsgGCDataCenterPing_Update_Status value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGCDataCenterPing_Update_Status_descriptor(), value);
}
inline bool CMsgGCDataCenterPing_Update_Status_Parse(
    const ::std::string& name, CMsgGCDataCenterPing_Update_Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGCDataCenterPing_Update_Status>(
    CMsgGCDataCenterPing_Update_Status_descriptor(), name, value);
}
enum ETFGCMsg {
  k_EMsgGCReportWarKill = 5001,
  k_EMsgGCVoteKickBanPlayer = 5018,
  k_EMsgGCVoteKickBanPlayerResult = 5019,
  k_EMsgGCKickPlayer_DEPRECATED = 5020,
  k_EMsgGCStartedTraining_DEPRECATED = 5021,
  k_EMsgGCFreeTrial_ChooseMostHelpfulFriend = 5022,
  k_EMsgGCRequestTF2Friends = 5023,
  k_EMsgGCRequestTF2FriendsResponse = 5024,
  k_EMsgGCReplay_SubmitContestEntry = 5026,
  k_EMsgGCReplay_SubmitContestEntryResponse = 5027,
  k_EMsgGCSaxxy_Awarded = 5029,
  k_EMsgGCFreeTrial_ThankedBySomeone = 5028,
  k_EMsgGCFreeTrial_ThankedSomeone = 5030,
  k_EMsgGCFreeTrial_ConvertedToPremium = 5031,
  k_EMsgGCMeetThePyroSilliness_BananaCraft_DEPRECATED = 5032,
  k_EMsgGCMVMARG_HighFiveSuccessResponse_DEPRECATED = 5033,
  k_EMsgGCMVMARG_HighFiveOnClient_DEPRECATED = 5034,
  k_EMsgGCCoaching_AddToCoaches = 5200,
  k_EMsgGCCoaching_AddToCoachesResponse = 5201,
  k_EMsgGCCoaching_RemoveFromCoaches = 5202,
  k_EMsgGCCoaching_RemoveFromCoachesResponse = 5203,
  k_EMsgGCCoaching_FindCoach = 5204,
  k_EMsgGCCoaching_FindCoachResponse = 5205,
  k_EMsgGCCoaching_AskCoach = 5206,
  k_EMsgGCCoaching_AskCoachResponse = 5207,
  k_EMsgGCCoaching_CoachJoinGame = 5208,
  k_EMsgGCCoaching_CoachJoining = 5209,
  k_EMsgGCCoaching_CoachJoined = 5210,
  k_EMsgGCCoaching_LikeCurrentCoach = 5211,
  k_EMsgGCCoaching_RemoveCurrentCoach = 5212,
  k_EMsgGCCoaching_AlreadyRatedCoach = 5213,
  k_EMsgGC_Duel_Request = 5500,
  k_EMsgGC_Duel_Response = 5501,
  k_EMsgGC_Duel_Results = 5502,
  k_EMsgGC_Duel_Status = 5503,
  k_EMsgGC_Halloween_ReservedItem_DEPRECATED = 5600,
  k_EMsgGC_Halloween_GrantItem_DEPRECATED = 5601,
  k_EMsgGC_Halloween_GrantItemResponse_DEPRECATED = 5604,
  k_EMsgGC_Halloween_Cheat_QueryResponse_DEPRECATED = 5605,
  k_EMsgGC_Halloween_ItemClaimed_DEPRECATED = 5606,
  k_EMsgGC_Halloween_ReservedItem = 5607,
  k_EMsgGC_Halloween_GrantItem = 5608,
  k_EMsgGC_Halloween_GrantItemResponse = 5609,
  k_EMsgGC_Halloween_Cheat_QueryResponse_DEPRECATED_2 = 5610,
  k_EMsgGC_Halloween_ItemClaimed_DEPRECATED_2 = 5611,
  k_EMsgGC_Halloween_ServerBossEvent = 5612,
  k_EMsgGC_Halloween_Merasmus2012 = 5613,
  k_EMsgGC_Halloween_UpdateMerasmusLootLevel = 5614,
  k_EMsgGC_GameServer_LevelInfo = 5700,
  k_EMsgGC_GameServer_AuthChallenge = 5701,
  k_EMsgGC_GameServer_AuthChallengeResponse = 5702,
  k_EMsgGC_GameServer_CreateIdentity = 5703,
  k_EMsgGC_GameServer_CreateIdentityResponse = 5704,
  k_EMsgGC_GameServer_List = 5705,
  k_EMsgGC_GameServer_ListResponse = 5706,
  k_EMsgGC_GameServer_AuthResult = 5707,
  k_EMsgGC_GameServer_ResetIdentity = 5708,
  k_EMsgGC_GameServer_ResetIdentityResponse = 5709,
  k_EMsgGC_Client_UseServerModificationItem = 5710,
  k_EMsgGC_Client_UseServerModificationItem_Response = 5711,
  k_EMsgGC_GameServer_UseServerModificationItem = 5712,
  k_EMsgGC_GameServer_UseServerModificationItem_Response = 5713,
  k_EMsgGC_GameServer_ServerModificationItemExpired = 5714,
  k_EMsgGC_GameServer_ModificationItemState = 5715,
  k_EMsgGC_GameServer_AckPolicy = 5716,
  k_EMsgGC_GameServer_AckPolicyResponse = 5717,
  k_EMsgGC_QP_ScoreServers = 5800,
  k_EMsgGC_QP_ScoreServersResponse = 5801,
  k_EMsgGC_QP_PlayerJoining = 5802,
  k_EMsgGC_PickupItemEligibility_Query_DEPRECATED = 6000,
  k_EMsgGC_PickupItemEligibility_Query_DEPRECATED_2 = 6001,
  k_EMsgGC_IncrementKillCountAttribute_DEPRECATED = 6100,
  k_EMsgGC_IncrementKillCountResponse_DEPRECATED = 6101,
  k_EMsgGCCreateOrUpdateParty = 6233,
  k_EMsgGCAbandonCurrentGame = 6235,
  k_EMsgForceSOCacheResend = 6237,
  k_EMsgGCRequestChatChannelList = 6260,
  k_EMsgGCRequestChatChannelListResponse = 6261,
  k_EMsgGCReadyUp = 6270,
  k_EMsgGCKickedFromMatchmakingQueue = 6271,
  k_EMsgGCLeaverDetected = 6272,
  k_EMsgGCLeaverDetectedResponse = 6287,
  k_EMsgGCExitMatchmaking = 6289,
  k_EMsgGCAcceptInvite = 6291,
  k_EMsgGCAcceptInviteResponse = 6292,
  k_EMsgGCMatchmakingProgress = 6293,
  k_EMsgGCMvMVictoryInfo = 6294,
  k_EMsgGCGameServerMatchmakingStatus = 6295,
  k_EMsgGCCreateOrUpdatePartyReply = 6296,
  k_EMsgGCMvMVictory = 6297,
  k_EMsgGCMvMVictoryReply = 6298,
  k_EMsgGCGameServerKickingLobby = 6299,
  k_EMsgGCLeaveGameAndPrepareToJoinParty = 6300,
  k_EMsgGC_UpdatePeriodicEvent = 6400,
  k_EMsgGC_DuckLeaderboard_IndividualUpdate = 6401,
  k_EMsgGC_Client2GCEconPreviewDataBlockRequest = 6402,
  k_EMsgGC_Client2GCEconPreviewDataBlockResponse = 6403,
  k_EMsgGC_ClientVerificationChallenge = 6500,
  k_EMsgGC_ClientVerificationChallengeResponse = 6501,
  k_EMsgGC_ClientVerificationVerboseResponse = 6502,
  k_EMsgGC_ClientSetItemSlotAttribute = 6503,
  k_EMsgGC_War_IndividualUpdate = 6505,
  k_EMsgGC_War_JoinWar = 6506,
  k_EMsgGC_War_RequestGlobalStats = 6507,
  k_EMsgGC_War_GlobalStatsResponse = 6508,
  k_EMsgGC_WorldItemPlacement_Attribute = 6510,
  k_EMsgGC_WorldItemPlacement_Update = 6511,
  k_EMsgGC_Match_Result = 6512,
  k_EMsgGCVoteKickPlayerRequest = 6513,
  k_EMsgGCVoteKickPlayerRequestResponse = 6514,
  k_EMsgGC_DailyCompetitiveStatsRollup = 6516,
  k_EMsgGC_DailyCompetitiveStatsRollup_Response = 6517,
  k_EMsgGC_WorldStatusBroadcast = 6518,
  k_EMsgGC_ReportPlayer = 6519,
  k_EMsgGC_Match_ResultResponse = 6520,
  k_EMsgGCGameServerKickingLobbyResponse = 6521,
  k_EMsgGCPlayerLeftMatch = 6522,
  k_EMsgGCPlayerLeftMatchResponse = 6523,
  k_EMsgGCRequestMatchMakerStats = 6524,
  k_EMsgGCMatchMakerStatsResponse = 6525,
  k_EMsgGCMatchHistoryLoad = 6526,
  k_EMsgGC_AcknowledgeXP = 6527,
  k_EMsgGCDataCenterPing_Update = 6528,
  k_EMsgGC_NotificationAcknowledge = 6529,
  k_EMsgGC_NotificationAcknowledgeReply = 6530,
  k_EMsgGC_KickPlayerFromLobby = 6531,
  k_EMsgGC_SurveyQuestionRequest = 6534,
  k_EMsgGC_SurveyQuestionResponse = 6535,
  k_EMsgGC_TFClientInit = 6536,
  k_EMsgGC_NewMatchForLobbyRequest = 6537,
  k_EMsgGC_NewMatchForLobbyResponse = 6538,
  k_EMsgGC_ChangeMatchPlayerTeamsRequest = 6539,
  k_EMsgGC_ChangeMatchPlayerTeamsResponse = 6540,
  k_EMsgGCPlayerVoteKickedAfterLeavingMatch = 6551,
  k_EMsgGCPlayerVoteKickedAfterLeavingMatchResponse = 6552,
  k_EMsgGCDev_GrantWarKill = 10001
};
bool ETFGCMsg_IsValid(int value);
const ETFGCMsg ETFGCMsg_MIN = k_EMsgGCReportWarKill;
const ETFGCMsg ETFGCMsg_MAX = k_EMsgGCDev_GrantWarKill;
const int ETFGCMsg_ARRAYSIZE = ETFGCMsg_MAX + 1;

const ::google::protobuf::EnumDescriptor* ETFGCMsg_descriptor();
inline const ::std::string& ETFGCMsg_Name(ETFGCMsg value) {
  return ::google::protobuf::internal::NameOfEnum(
    ETFGCMsg_descriptor(), value);
}
inline bool ETFGCMsg_Parse(
    const ::std::string& name, ETFGCMsg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ETFGCMsg>(
    ETFGCMsg_descriptor(), name, value);
}
enum EServerModificationItemType {
  kGameServerModificationItem_Halloween = 1
};
bool EServerModificationItemType_IsValid(int value);
const EServerModificationItemType EServerModificationItemType_MIN = kGameServerModificationItem_Halloween;
const EServerModificationItemType EServerModificationItemType_MAX = kGameServerModificationItem_Halloween;
const int EServerModificationItemType_ARRAYSIZE = EServerModificationItemType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EServerModificationItemType_descriptor();
inline const ::std::string& EServerModificationItemType_Name(EServerModificationItemType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EServerModificationItemType_descriptor(), value);
}
inline bool EServerModificationItemType_Parse(
    const ::std::string& name, EServerModificationItemType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EServerModificationItemType>(
    EServerModificationItemType_descriptor(), name, value);
}
enum TF_MatchmakingMode {
  TF_Matchmaking_INVALID = 0,
  TF_Matchmaking_MVM = 1,
  TF_Matchmaking_LADDER = 2,
  TF_Matchmaking_CASUAL = 3
};
bool TF_MatchmakingMode_IsValid(int value);
const TF_MatchmakingMode TF_MatchmakingMode_MIN = TF_Matchmaking_INVALID;
const TF_MatchmakingMode TF_MatchmakingMode_MAX = TF_Matchmaking_CASUAL;
const int TF_MatchmakingMode_ARRAYSIZE = TF_MatchmakingMode_MAX + 1;

const ::google::protobuf::EnumDescriptor* TF_MatchmakingMode_descriptor();
inline const ::std::string& TF_MatchmakingMode_Name(TF_MatchmakingMode value) {
  return ::google::protobuf::internal::NameOfEnum(
    TF_MatchmakingMode_descriptor(), value);
}
inline bool TF_MatchmakingMode_Parse(
    const ::std::string& name, TF_MatchmakingMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TF_MatchmakingMode>(
    TF_MatchmakingMode_descriptor(), name, value);
}
enum TF_Matchmaking_WizardStep {
  TF_Matchmaking_WizardStep_INVALID = 0,
  TF_Matchmaking_WizardStep_MVM_PLAY_FOR_BRAGGING_RIGHTS = 1,
  TF_Matchmaking_WizardStep_MVM_TOUR_OF_DUTY = 2,
  TF_Matchmaking_WizardStep_MVM_CHALLENGE = 3,
  TF_Matchmaking_WizardStep_SEARCHING = 4,
  TF_Matchmaking_WizardStep_LADDER = 5,
  TF_Matchmaking_WizardStep_CASUAL = 6
};
bool TF_Matchmaking_WizardStep_IsValid(int value);
const TF_Matchmaking_WizardStep TF_Matchmaking_WizardStep_MIN = TF_Matchmaking_WizardStep_INVALID;
const TF_Matchmaking_WizardStep TF_Matchmaking_WizardStep_MAX = TF_Matchmaking_WizardStep_CASUAL;
const int TF_Matchmaking_WizardStep_ARRAYSIZE = TF_Matchmaking_WizardStep_MAX + 1;

const ::google::protobuf::EnumDescriptor* TF_Matchmaking_WizardStep_descriptor();
inline const ::std::string& TF_Matchmaking_WizardStep_Name(TF_Matchmaking_WizardStep value) {
  return ::google::protobuf::internal::NameOfEnum(
    TF_Matchmaking_WizardStep_descriptor(), value);
}
inline bool TF_Matchmaking_WizardStep_Parse(
    const ::std::string& name, TF_Matchmaking_WizardStep* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TF_Matchmaking_WizardStep>(
    TF_Matchmaking_WizardStep_descriptor(), name, value);
}
enum TF_GC_GameState {
  TF_GC_GAMESTATE_STATE_INIT = 0,
  TF_GC_GAMESTATE_WAIT_FOR_PLAYERS_TO_LOAD = 1,
  TF_GC_GAMESTATE_STRATEGY_TIME = 3,
  TF_GC_GAMESTATE_GAME_IN_PROGRESS = 5,
  TF_GC_GAMESTATE_POST_GAME = 6,
  TF_GC_GAMESTATE_DISCONNECT = 7,
  TF_GC_GAMESTATE_LAST = 8
};
bool TF_GC_GameState_IsValid(int value);
const TF_GC_GameState TF_GC_GameState_MIN = TF_GC_GAMESTATE_STATE_INIT;
const TF_GC_GameState TF_GC_GameState_MAX = TF_GC_GAMESTATE_LAST;
const int TF_GC_GameState_ARRAYSIZE = TF_GC_GameState_MAX + 1;

const ::google::protobuf::EnumDescriptor* TF_GC_GameState_descriptor();
inline const ::std::string& TF_GC_GameState_Name(TF_GC_GameState value) {
  return ::google::protobuf::internal::NameOfEnum(
    TF_GC_GameState_descriptor(), value);
}
inline bool TF_GC_GameState_Parse(
    const ::std::string& name, TF_GC_GameState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TF_GC_GameState>(
    TF_GC_GameState_descriptor(), name, value);
}
enum TF_GC_TEAM {
  TF_GC_TEAM_DEFENDERS = 0,
  TF_GC_TEAM_INVADERS = 1,
  TF_GC_TEAM_BROADCASTER = 2,
  TF_GC_TEAM_SPECTATOR = 3,
  TF_GC_TEAM_PLAYER_POOL = 4,
  TF_GC_TEAM_NOTEAM = 5
};
bool TF_GC_TEAM_IsValid(int value);
const TF_GC_TEAM TF_GC_TEAM_MIN = TF_GC_TEAM_DEFENDERS;
const TF_GC_TEAM TF_GC_TEAM_MAX = TF_GC_TEAM_NOTEAM;
const int TF_GC_TEAM_ARRAYSIZE = TF_GC_TEAM_MAX + 1;

const ::google::protobuf::EnumDescriptor* TF_GC_TEAM_descriptor();
inline const ::std::string& TF_GC_TEAM_Name(TF_GC_TEAM value) {
  return ::google::protobuf::internal::NameOfEnum(
    TF_GC_TEAM_descriptor(), value);
}
inline bool TF_GC_TEAM_Parse(
    const ::std::string& name, TF_GC_TEAM* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TF_GC_TEAM>(
    TF_GC_TEAM_descriptor(), name, value);
}
enum TFMatchLeaveReason {
  TFMatchLeaveReason_UNSPECIFIED = 0,
  TFMatchLeaveReason_VOTE_KICK = 1,
  TFMatchLeaveReason_IDLE = 2,
  TFMatchLeaveReason_ADMIN_KICK = 3,
  TFMatchLeaveReason_AWOL = 4,
  TFMatchLeaveReason_NO_SHOW = 5,
  TFMatchLeaveReason_GC_REMOVED = 6
};
bool TFMatchLeaveReason_IsValid(int value);
const TFMatchLeaveReason TFMatchLeaveReason_MIN = TFMatchLeaveReason_UNSPECIFIED;
const TFMatchLeaveReason TFMatchLeaveReason_MAX = TFMatchLeaveReason_GC_REMOVED;
const int TFMatchLeaveReason_ARRAYSIZE = TFMatchLeaveReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* TFMatchLeaveReason_descriptor();
inline const ::std::string& TFMatchLeaveReason_Name(TFMatchLeaveReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    TFMatchLeaveReason_descriptor(), value);
}
inline bool TFMatchLeaveReason_Parse(
    const ::std::string& name, TFMatchLeaveReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TFMatchLeaveReason>(
    TFMatchLeaveReason_descriptor(), name, value);
}
enum TFLobbyReadyState {
  TFLobbyReadyState_UNDECLARED = 0,
  TFLobbyReadyState_ACCEPTED = 1,
  TFLobbyReadyState_DECLINED = 2
};
bool TFLobbyReadyState_IsValid(int value);
const TFLobbyReadyState TFLobbyReadyState_MIN = TFLobbyReadyState_UNDECLARED;
const TFLobbyReadyState TFLobbyReadyState_MAX = TFLobbyReadyState_DECLINED;
const int TFLobbyReadyState_ARRAYSIZE = TFLobbyReadyState_MAX + 1;

const ::google::protobuf::EnumDescriptor* TFLobbyReadyState_descriptor();
inline const ::std::string& TFLobbyReadyState_Name(TFLobbyReadyState value) {
  return ::google::protobuf::internal::NameOfEnum(
    TFLobbyReadyState_descriptor(), value);
}
inline bool TFLobbyReadyState_Parse(
    const ::std::string& name, TFLobbyReadyState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TFLobbyReadyState>(
    TFLobbyReadyState_descriptor(), name, value);
}
enum ChatChannelType_t {
  ChatChannelType_Regional = 0,
  ChatChannelType_Custom = 1,
  ChatChannelType_Party = 2,
  ChatChannelType_Lobby = 3
};
bool ChatChannelType_t_IsValid(int value);
const ChatChannelType_t ChatChannelType_t_MIN = ChatChannelType_Regional;
const ChatChannelType_t ChatChannelType_t_MAX = ChatChannelType_Lobby;
const int ChatChannelType_t_ARRAYSIZE = ChatChannelType_t_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChatChannelType_t_descriptor();
inline const ::std::string& ChatChannelType_t_Name(ChatChannelType_t value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChatChannelType_t_descriptor(), value);
}
inline bool ChatChannelType_t_Parse(
    const ::std::string& name, ChatChannelType_t* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChatChannelType_t>(
    ChatChannelType_t_descriptor(), name, value);
}
enum ServerMatchmakingState {
  ServerMatchmakingState_INVALID = 0,
  ServerMatchmakingState_NOT_PARTICIPATING = 1,
  ServerMatchmakingState_EMPTY = 2,
  ServerMatchmakingState_ACTIVE_MATCH_REQUESTING_LATE_JOIN = 3,
  ServerMatchmakingState_ACTIVE_MATCH = 4
};
bool ServerMatchmakingState_IsValid(int value);
const ServerMatchmakingState ServerMatchmakingState_MIN = ServerMatchmakingState_INVALID;
const ServerMatchmakingState ServerMatchmakingState_MAX = ServerMatchmakingState_ACTIVE_MATCH;
const int ServerMatchmakingState_ARRAYSIZE = ServerMatchmakingState_MAX + 1;

const ::google::protobuf::EnumDescriptor* ServerMatchmakingState_descriptor();
inline const ::std::string& ServerMatchmakingState_Name(ServerMatchmakingState value) {
  return ::google::protobuf::internal::NameOfEnum(
    ServerMatchmakingState_descriptor(), value);
}
inline bool ServerMatchmakingState_Parse(
    const ::std::string& name, ServerMatchmakingState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ServerMatchmakingState>(
    ServerMatchmakingState_descriptor(), name, value);
}
enum SurveyQuestionType {
  QUESTION_MATCH_QUALITY = 0,
  QUESTION_MAP_QUALITY = 1,
  QUESTION_COMP_INQUIRY = 2,
  QUESTION_CASUAL_INQUIRY = 3
};
bool SurveyQuestionType_IsValid(int value);
const SurveyQuestionType SurveyQuestionType_MIN = QUESTION_MATCH_QUALITY;
const SurveyQuestionType SurveyQuestionType_MAX = QUESTION_CASUAL_INQUIRY;
const int SurveyQuestionType_ARRAYSIZE = SurveyQuestionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SurveyQuestionType_descriptor();
inline const ::std::string& SurveyQuestionType_Name(SurveyQuestionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SurveyQuestionType_descriptor(), value);
}
inline bool SurveyQuestionType_Parse(
    const ::std::string& name, SurveyQuestionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SurveyQuestionType>(
    SurveyQuestionType_descriptor(), name, value);
}
// ===================================================================

class CMsgTFGoldenWrenchBroadcast : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgTFGoldenWrenchBroadcast) */ {
 public:
  CMsgTFGoldenWrenchBroadcast();
  virtual ~CMsgTFGoldenWrenchBroadcast();

  CMsgTFGoldenWrenchBroadcast(const CMsgTFGoldenWrenchBroadcast& from);

  inline CMsgTFGoldenWrenchBroadcast& operator=(const CMsgTFGoldenWrenchBroadcast& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTFGoldenWrenchBroadcast(CMsgTFGoldenWrenchBroadcast&& from) noexcept
    : CMsgTFGoldenWrenchBroadcast() {
    *this = ::std::move(from);
  }

  inline CMsgTFGoldenWrenchBroadcast& operator=(CMsgTFGoldenWrenchBroadcast&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFGoldenWrenchBroadcast& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTFGoldenWrenchBroadcast* internal_default_instance() {
    return reinterpret_cast<const CMsgTFGoldenWrenchBroadcast*>(
               &_CMsgTFGoldenWrenchBroadcast_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CMsgTFGoldenWrenchBroadcast* other);
  friend void swap(CMsgTFGoldenWrenchBroadcast& a, CMsgTFGoldenWrenchBroadcast& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTFGoldenWrenchBroadcast* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgTFGoldenWrenchBroadcast* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgTFGoldenWrenchBroadcast& from);
  void MergeFrom(const CMsgTFGoldenWrenchBroadcast& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgTFGoldenWrenchBroadcast* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string user_name = 3;
  bool has_user_name() const;
  void clear_user_name();
  static const int kUserNameFieldNumber = 3;
  const ::std::string& user_name() const;
  void set_user_name(const ::std::string& value);
  #if LANG_CXX11
  void set_user_name(::std::string&& value);
  #endif
  void set_user_name(const char* value);
  void set_user_name(const char* value, size_t size);
  ::std::string* mutable_user_name();
  ::std::string* release_user_name();
  void set_allocated_user_name(::std::string* user_name);

  // optional int32 wrench_number = 1;
  bool has_wrench_number() const;
  void clear_wrench_number();
  static const int kWrenchNumberFieldNumber = 1;
  ::google::protobuf::int32 wrench_number() const;
  void set_wrench_number(::google::protobuf::int32 value);

  // optional bool deleted = 2;
  bool has_deleted() const;
  void clear_deleted();
  static const int kDeletedFieldNumber = 2;
  bool deleted() const;
  void set_deleted(bool value);

  // @@protoc_insertion_point(class_scope:CMsgTFGoldenWrenchBroadcast)
 private:
  void set_has_wrench_number();
  void clear_has_wrench_number();
  void set_has_deleted();
  void clear_has_deleted();
  void set_has_user_name();
  void clear_has_user_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr user_name_;
  ::google::protobuf::int32 wrench_number_;
  bool deleted_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgTFGoldenWrenchBroadcastImpl();
};
// -------------------------------------------------------------------

class CMsgTFSaxxyBroadcast : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgTFSaxxyBroadcast) */ {
 public:
  CMsgTFSaxxyBroadcast();
  virtual ~CMsgTFSaxxyBroadcast();

  CMsgTFSaxxyBroadcast(const CMsgTFSaxxyBroadcast& from);

  inline CMsgTFSaxxyBroadcast& operator=(const CMsgTFSaxxyBroadcast& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTFSaxxyBroadcast(CMsgTFSaxxyBroadcast&& from) noexcept
    : CMsgTFSaxxyBroadcast() {
    *this = ::std::move(from);
  }

  inline CMsgTFSaxxyBroadcast& operator=(CMsgTFSaxxyBroadcast&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFSaxxyBroadcast& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTFSaxxyBroadcast* internal_default_instance() {
    return reinterpret_cast<const CMsgTFSaxxyBroadcast*>(
               &_CMsgTFSaxxyBroadcast_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CMsgTFSaxxyBroadcast* other);
  friend void swap(CMsgTFSaxxyBroadcast& a, CMsgTFSaxxyBroadcast& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTFSaxxyBroadcast* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgTFSaxxyBroadcast* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgTFSaxxyBroadcast& from);
  void MergeFrom(const CMsgTFSaxxyBroadcast& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgTFSaxxyBroadcast* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string user_name = 2;
  bool has_user_name() const;
  void clear_user_name();
  static const int kUserNameFieldNumber = 2;
  const ::std::string& user_name() const;
  void set_user_name(const ::std::string& value);
  #if LANG_CXX11
  void set_user_name(::std::string&& value);
  #endif
  void set_user_name(const char* value);
  void set_user_name(const char* value, size_t size);
  ::std::string* mutable_user_name();
  ::std::string* release_user_name();
  void set_allocated_user_name(::std::string* user_name);

  // optional int32 category_number = 1;
  bool has_category_number() const;
  void clear_category_number();
  static const int kCategoryNumberFieldNumber = 1;
  ::google::protobuf::int32 category_number() const;
  void set_category_number(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgTFSaxxyBroadcast)
 private:
  void set_has_category_number();
  void clear_has_category_number();
  void set_has_user_name();
  void clear_has_user_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr user_name_;
  ::google::protobuf::int32 category_number_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgTFSaxxyBroadcastImpl();
};
// -------------------------------------------------------------------

class CMsgGCTFSpecificItemBroadcast : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGCTFSpecificItemBroadcast) */ {
 public:
  CMsgGCTFSpecificItemBroadcast();
  virtual ~CMsgGCTFSpecificItemBroadcast();

  CMsgGCTFSpecificItemBroadcast(const CMsgGCTFSpecificItemBroadcast& from);

  inline CMsgGCTFSpecificItemBroadcast& operator=(const CMsgGCTFSpecificItemBroadcast& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCTFSpecificItemBroadcast(CMsgGCTFSpecificItemBroadcast&& from) noexcept
    : CMsgGCTFSpecificItemBroadcast() {
    *this = ::std::move(from);
  }

  inline CMsgGCTFSpecificItemBroadcast& operator=(CMsgGCTFSpecificItemBroadcast&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCTFSpecificItemBroadcast& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCTFSpecificItemBroadcast* internal_default_instance() {
    return reinterpret_cast<const CMsgGCTFSpecificItemBroadcast*>(
               &_CMsgGCTFSpecificItemBroadcast_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CMsgGCTFSpecificItemBroadcast* other);
  friend void swap(CMsgGCTFSpecificItemBroadcast& a, CMsgGCTFSpecificItemBroadcast& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCTFSpecificItemBroadcast* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCTFSpecificItemBroadcast* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCTFSpecificItemBroadcast& from);
  void MergeFrom(const CMsgGCTFSpecificItemBroadcast& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCTFSpecificItemBroadcast* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string user_name = 3;
  bool has_user_name() const;
  void clear_user_name();
  static const int kUserNameFieldNumber = 3;
  const ::std::string& user_name() const;
  void set_user_name(const ::std::string& value);
  #if LANG_CXX11
  void set_user_name(::std::string&& value);
  #endif
  void set_user_name(const char* value);
  void set_user_name(const char* value, size_t size);
  ::std::string* mutable_user_name();
  ::std::string* release_user_name();
  void set_allocated_user_name(::std::string* user_name);

  // optional uint32 item_def_index = 1;
  bool has_item_def_index() const;
  void clear_item_def_index();
  static const int kItemDefIndexFieldNumber = 1;
  ::google::protobuf::uint32 item_def_index() const;
  void set_item_def_index(::google::protobuf::uint32 value);

  // optional bool was_destruction = 2;
  bool has_was_destruction() const;
  void clear_was_destruction();
  static const int kWasDestructionFieldNumber = 2;
  bool was_destruction() const;
  void set_was_destruction(bool value);

  // @@protoc_insertion_point(class_scope:CMsgGCTFSpecificItemBroadcast)
 private:
  void set_has_item_def_index();
  void clear_has_item_def_index();
  void set_has_was_destruction();
  void clear_has_was_destruction();
  void set_has_user_name();
  void clear_has_user_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr user_name_;
  ::google::protobuf::uint32 item_def_index_;
  bool was_destruction_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGCTFSpecificItemBroadcastImpl();
};
// -------------------------------------------------------------------

class CMsgTFWorldStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgTFWorldStatus) */ {
 public:
  CMsgTFWorldStatus();
  virtual ~CMsgTFWorldStatus();

  CMsgTFWorldStatus(const CMsgTFWorldStatus& from);

  inline CMsgTFWorldStatus& operator=(const CMsgTFWorldStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTFWorldStatus(CMsgTFWorldStatus&& from) noexcept
    : CMsgTFWorldStatus() {
    *this = ::std::move(from);
  }

  inline CMsgTFWorldStatus& operator=(CMsgTFWorldStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFWorldStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTFWorldStatus* internal_default_instance() {
    return reinterpret_cast<const CMsgTFWorldStatus*>(
               &_CMsgTFWorldStatus_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(CMsgTFWorldStatus* other);
  friend void swap(CMsgTFWorldStatus& a, CMsgTFWorldStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTFWorldStatus* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgTFWorldStatus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgTFWorldStatus& from);
  void MergeFrom(const CMsgTFWorldStatus& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgTFWorldStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool beta_stress_test_event_active = 1 [default = false];
  bool has_beta_stress_test_event_active() const;
  void clear_beta_stress_test_event_active();
  static const int kBetaStressTestEventActiveFieldNumber = 1;
  bool beta_stress_test_event_active() const;
  void set_beta_stress_test_event_active(bool value);

  // @@protoc_insertion_point(class_scope:CMsgTFWorldStatus)
 private:
  void set_has_beta_stress_test_event_active();
  void clear_has_beta_stress_test_event_active();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool beta_stress_test_event_active_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgTFWorldStatusImpl();
};
// -------------------------------------------------------------------

class CSOTFDuelSummary : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CSOTFDuelSummary) */ {
 public:
  CSOTFDuelSummary();
  virtual ~CSOTFDuelSummary();

  CSOTFDuelSummary(const CSOTFDuelSummary& from);

  inline CSOTFDuelSummary& operator=(const CSOTFDuelSummary& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSOTFDuelSummary(CSOTFDuelSummary&& from) noexcept
    : CSOTFDuelSummary() {
    *this = ::std::move(from);
  }

  inline CSOTFDuelSummary& operator=(CSOTFDuelSummary&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFDuelSummary& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSOTFDuelSummary* internal_default_instance() {
    return reinterpret_cast<const CSOTFDuelSummary*>(
               &_CSOTFDuelSummary_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(CSOTFDuelSummary* other);
  friend void swap(CSOTFDuelSummary& a, CSOTFDuelSummary& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSOTFDuelSummary* New() const PROTOBUF_FINAL { return New(NULL); }

  CSOTFDuelSummary* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CSOTFDuelSummary& from);
  void MergeFrom(const CSOTFDuelSummary& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CSOTFDuelSummary* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1 [(.key_field) = true];
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 duel_wins = 2;
  bool has_duel_wins() const;
  void clear_duel_wins();
  static const int kDuelWinsFieldNumber = 2;
  ::google::protobuf::uint32 duel_wins() const;
  void set_duel_wins(::google::protobuf::uint32 value);

  // optional uint32 duel_losses = 3;
  bool has_duel_losses() const;
  void clear_duel_losses();
  static const int kDuelLossesFieldNumber = 3;
  ::google::protobuf::uint32 duel_losses() const;
  void set_duel_losses(::google::protobuf::uint32 value);

  // optional uint32 last_duel_account_id = 4;
  bool has_last_duel_account_id() const;
  void clear_last_duel_account_id();
  static const int kLastDuelAccountIdFieldNumber = 4;
  ::google::protobuf::uint32 last_duel_account_id() const;
  void set_last_duel_account_id(::google::protobuf::uint32 value);

  // optional uint32 last_duel_timestamp = 5;
  bool has_last_duel_timestamp() const;
  void clear_last_duel_timestamp();
  static const int kLastDuelTimestampFieldNumber = 5;
  ::google::protobuf::uint32 last_duel_timestamp() const;
  void set_last_duel_timestamp(::google::protobuf::uint32 value);

  // optional uint32 last_duel_status = 6;
  bool has_last_duel_status() const;
  void clear_last_duel_status();
  static const int kLastDuelStatusFieldNumber = 6;
  ::google::protobuf::uint32 last_duel_status() const;
  void set_last_duel_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSOTFDuelSummary)
 private:
  void set_has_account_id();
  void clear_has_account_id();
  void set_has_duel_wins();
  void clear_has_duel_wins();
  void set_has_duel_losses();
  void clear_has_duel_losses();
  void set_has_last_duel_account_id();
  void clear_has_last_duel_account_id();
  void set_has_last_duel_timestamp();
  void clear_has_last_duel_timestamp();
  void set_has_last_duel_status();
  void clear_has_last_duel_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 duel_wins_;
  ::google::protobuf::uint32 duel_losses_;
  ::google::protobuf::uint32 last_duel_account_id_;
  ::google::protobuf::uint32 last_duel_timestamp_;
  ::google::protobuf::uint32 last_duel_status_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCSOTFDuelSummaryImpl();
};
// -------------------------------------------------------------------

class CSOTFMapContribution : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CSOTFMapContribution) */ {
 public:
  CSOTFMapContribution();
  virtual ~CSOTFMapContribution();

  CSOTFMapContribution(const CSOTFMapContribution& from);

  inline CSOTFMapContribution& operator=(const CSOTFMapContribution& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSOTFMapContribution(CSOTFMapContribution&& from) noexcept
    : CSOTFMapContribution() {
    *this = ::std::move(from);
  }

  inline CSOTFMapContribution& operator=(CSOTFMapContribution&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFMapContribution& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSOTFMapContribution* internal_default_instance() {
    return reinterpret_cast<const CSOTFMapContribution*>(
               &_CSOTFMapContribution_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(CSOTFMapContribution* other);
  friend void swap(CSOTFMapContribution& a, CSOTFMapContribution& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSOTFMapContribution* New() const PROTOBUF_FINAL { return New(NULL); }

  CSOTFMapContribution* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CSOTFMapContribution& from);
  void MergeFrom(const CSOTFMapContribution& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CSOTFMapContribution* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1 [(.key_field) = true];
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 def_index = 2 [(.key_field) = true];
  bool has_def_index() const;
  void clear_def_index();
  static const int kDefIndexFieldNumber = 2;
  ::google::protobuf::uint32 def_index() const;
  void set_def_index(::google::protobuf::uint32 value);

  // optional uint32 contribution_level = 3;
  bool has_contribution_level() const;
  void clear_contribution_level();
  static const int kContributionLevelFieldNumber = 3;
  ::google::protobuf::uint32 contribution_level() const;
  void set_contribution_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSOTFMapContribution)
 private:
  void set_has_account_id();
  void clear_has_account_id();
  void set_has_def_index();
  void clear_has_def_index();
  void set_has_contribution_level();
  void clear_has_contribution_level();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 def_index_;
  ::google::protobuf::uint32 contribution_level_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCSOTFMapContributionImpl();
};
// -------------------------------------------------------------------

class CMsgTFVoteKickBanPlayer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgTFVoteKickBanPlayer) */ {
 public:
  CMsgTFVoteKickBanPlayer();
  virtual ~CMsgTFVoteKickBanPlayer();

  CMsgTFVoteKickBanPlayer(const CMsgTFVoteKickBanPlayer& from);

  inline CMsgTFVoteKickBanPlayer& operator=(const CMsgTFVoteKickBanPlayer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTFVoteKickBanPlayer(CMsgTFVoteKickBanPlayer&& from) noexcept
    : CMsgTFVoteKickBanPlayer() {
    *this = ::std::move(from);
  }

  inline CMsgTFVoteKickBanPlayer& operator=(CMsgTFVoteKickBanPlayer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFVoteKickBanPlayer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTFVoteKickBanPlayer* internal_default_instance() {
    return reinterpret_cast<const CMsgTFVoteKickBanPlayer*>(
               &_CMsgTFVoteKickBanPlayer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(CMsgTFVoteKickBanPlayer* other);
  friend void swap(CMsgTFVoteKickBanPlayer& a, CMsgTFVoteKickBanPlayer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTFVoteKickBanPlayer* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgTFVoteKickBanPlayer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgTFVoteKickBanPlayer& from);
  void MergeFrom(const CMsgTFVoteKickBanPlayer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgTFVoteKickBanPlayer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id_subject = 1;
  bool has_account_id_subject() const;
  void clear_account_id_subject();
  static const int kAccountIdSubjectFieldNumber = 1;
  ::google::protobuf::uint32 account_id_subject() const;
  void set_account_id_subject(::google::protobuf::uint32 value);

  // optional uint32 kick_reason = 2;
  bool has_kick_reason() const;
  void clear_kick_reason();
  static const int kKickReasonFieldNumber = 2;
  ::google::protobuf::uint32 kick_reason() const;
  void set_kick_reason(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgTFVoteKickBanPlayer)
 private:
  void set_has_account_id_subject();
  void clear_has_account_id_subject();
  void set_has_kick_reason();
  void clear_has_kick_reason();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_subject_;
  ::google::protobuf::uint32 kick_reason_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgTFVoteKickBanPlayerImpl();
};
// -------------------------------------------------------------------

class CMsgTFVoteKickBanPlayerResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgTFVoteKickBanPlayerResult) */ {
 public:
  CMsgTFVoteKickBanPlayerResult();
  virtual ~CMsgTFVoteKickBanPlayerResult();

  CMsgTFVoteKickBanPlayerResult(const CMsgTFVoteKickBanPlayerResult& from);

  inline CMsgTFVoteKickBanPlayerResult& operator=(const CMsgTFVoteKickBanPlayerResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTFVoteKickBanPlayerResult(CMsgTFVoteKickBanPlayerResult&& from) noexcept
    : CMsgTFVoteKickBanPlayerResult() {
    *this = ::std::move(from);
  }

  inline CMsgTFVoteKickBanPlayerResult& operator=(CMsgTFVoteKickBanPlayerResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFVoteKickBanPlayerResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTFVoteKickBanPlayerResult* internal_default_instance() {
    return reinterpret_cast<const CMsgTFVoteKickBanPlayerResult*>(
               &_CMsgTFVoteKickBanPlayerResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(CMsgTFVoteKickBanPlayerResult* other);
  friend void swap(CMsgTFVoteKickBanPlayerResult& a, CMsgTFVoteKickBanPlayerResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTFVoteKickBanPlayerResult* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgTFVoteKickBanPlayerResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgTFVoteKickBanPlayerResult& from);
  void MergeFrom(const CMsgTFVoteKickBanPlayerResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgTFVoteKickBanPlayerResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id_initiator = 1;
  bool has_account_id_initiator() const;
  void clear_account_id_initiator();
  static const int kAccountIdInitiatorFieldNumber = 1;
  ::google::protobuf::uint32 account_id_initiator() const;
  void set_account_id_initiator(::google::protobuf::uint32 value);

  // optional uint32 account_id_subject = 2;
  bool has_account_id_subject() const;
  void clear_account_id_subject();
  static const int kAccountIdSubjectFieldNumber = 2;
  ::google::protobuf::uint32 account_id_subject() const;
  void set_account_id_subject(::google::protobuf::uint32 value);

  // optional uint32 kick_reason = 3;
  bool has_kick_reason() const;
  void clear_kick_reason();
  static const int kKickReasonFieldNumber = 3;
  ::google::protobuf::uint32 kick_reason() const;
  void set_kick_reason(::google::protobuf::uint32 value);

  // optional bool kick_successful = 4;
  bool has_kick_successful() const;
  void clear_kick_successful();
  static const int kKickSuccessfulFieldNumber = 4;
  bool kick_successful() const;
  void set_kick_successful(bool value);

  // optional uint32 num_yes_votes = 5;
  bool has_num_yes_votes() const;
  void clear_num_yes_votes();
  static const int kNumYesVotesFieldNumber = 5;
  ::google::protobuf::uint32 num_yes_votes() const;
  void set_num_yes_votes(::google::protobuf::uint32 value);

  // optional uint32 num_no_votes = 6;
  bool has_num_no_votes() const;
  void clear_num_no_votes();
  static const int kNumNoVotesFieldNumber = 6;
  ::google::protobuf::uint32 num_no_votes() const;
  void set_num_no_votes(::google::protobuf::uint32 value);

  // optional uint32 num_possible_votes = 7;
  bool has_num_possible_votes() const;
  void clear_num_possible_votes();
  static const int kNumPossibleVotesFieldNumber = 7;
  ::google::protobuf::uint32 num_possible_votes() const;
  void set_num_possible_votes(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgTFVoteKickBanPlayerResult)
 private:
  void set_has_account_id_initiator();
  void clear_has_account_id_initiator();
  void set_has_account_id_subject();
  void clear_has_account_id_subject();
  void set_has_kick_reason();
  void clear_has_kick_reason();
  void set_has_kick_successful();
  void clear_has_kick_successful();
  void set_has_num_yes_votes();
  void clear_has_num_yes_votes();
  void set_has_num_no_votes();
  void clear_has_num_no_votes();
  void set_has_num_possible_votes();
  void clear_has_num_possible_votes();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_initiator_;
  ::google::protobuf::uint32 account_id_subject_;
  ::google::protobuf::uint32 kick_reason_;
  bool kick_successful_;
  ::google::protobuf::uint32 num_yes_votes_;
  ::google::protobuf::uint32 num_no_votes_;
  ::google::protobuf::uint32 num_possible_votes_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgTFVoteKickBanPlayerResultImpl();
};
// -------------------------------------------------------------------

class CMsgTFFreeTrialChooseMostHelpfulFriend : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgTFFreeTrialChooseMostHelpfulFriend) */ {
 public:
  CMsgTFFreeTrialChooseMostHelpfulFriend();
  virtual ~CMsgTFFreeTrialChooseMostHelpfulFriend();

  CMsgTFFreeTrialChooseMostHelpfulFriend(const CMsgTFFreeTrialChooseMostHelpfulFriend& from);

  inline CMsgTFFreeTrialChooseMostHelpfulFriend& operator=(const CMsgTFFreeTrialChooseMostHelpfulFriend& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTFFreeTrialChooseMostHelpfulFriend(CMsgTFFreeTrialChooseMostHelpfulFriend&& from) noexcept
    : CMsgTFFreeTrialChooseMostHelpfulFriend() {
    *this = ::std::move(from);
  }

  inline CMsgTFFreeTrialChooseMostHelpfulFriend& operator=(CMsgTFFreeTrialChooseMostHelpfulFriend&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFFreeTrialChooseMostHelpfulFriend& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTFFreeTrialChooseMostHelpfulFriend* internal_default_instance() {
    return reinterpret_cast<const CMsgTFFreeTrialChooseMostHelpfulFriend*>(
               &_CMsgTFFreeTrialChooseMostHelpfulFriend_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(CMsgTFFreeTrialChooseMostHelpfulFriend* other);
  friend void swap(CMsgTFFreeTrialChooseMostHelpfulFriend& a, CMsgTFFreeTrialChooseMostHelpfulFriend& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTFFreeTrialChooseMostHelpfulFriend* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgTFFreeTrialChooseMostHelpfulFriend* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgTFFreeTrialChooseMostHelpfulFriend& from);
  void MergeFrom(const CMsgTFFreeTrialChooseMostHelpfulFriend& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgTFFreeTrialChooseMostHelpfulFriend* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id_friend = 1;
  bool has_account_id_friend() const;
  void clear_account_id_friend();
  static const int kAccountIdFriendFieldNumber = 1;
  ::google::protobuf::uint32 account_id_friend() const;
  void set_account_id_friend(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgTFFreeTrialChooseMostHelpfulFriend)
 private:
  void set_has_account_id_friend();
  void clear_has_account_id_friend();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_friend_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgTFFreeTrialChooseMostHelpfulFriendImpl();
};
// -------------------------------------------------------------------

class CMsgTFRequestTF2Friends : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgTFRequestTF2Friends) */ {
 public:
  CMsgTFRequestTF2Friends();
  virtual ~CMsgTFRequestTF2Friends();

  CMsgTFRequestTF2Friends(const CMsgTFRequestTF2Friends& from);

  inline CMsgTFRequestTF2Friends& operator=(const CMsgTFRequestTF2Friends& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTFRequestTF2Friends(CMsgTFRequestTF2Friends&& from) noexcept
    : CMsgTFRequestTF2Friends() {
    *this = ::std::move(from);
  }

  inline CMsgTFRequestTF2Friends& operator=(CMsgTFRequestTF2Friends&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFRequestTF2Friends& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTFRequestTF2Friends* internal_default_instance() {
    return reinterpret_cast<const CMsgTFRequestTF2Friends*>(
               &_CMsgTFRequestTF2Friends_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(CMsgTFRequestTF2Friends* other);
  friend void swap(CMsgTFRequestTF2Friends& a, CMsgTFRequestTF2Friends& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTFRequestTF2Friends* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgTFRequestTF2Friends* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgTFRequestTF2Friends& from);
  void MergeFrom(const CMsgTFRequestTF2Friends& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgTFRequestTF2Friends* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 account_ids = 1;
  int account_ids_size() const;
  void clear_account_ids();
  static const int kAccountIdsFieldNumber = 1;
  ::google::protobuf::uint32 account_ids(int index) const;
  void set_account_ids(int index, ::google::protobuf::uint32 value);
  void add_account_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      account_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_account_ids();

  // @@protoc_insertion_point(class_scope:CMsgTFRequestTF2Friends)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > account_ids_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgTFRequestTF2FriendsImpl();
};
// -------------------------------------------------------------------

class CMsgTFRequestTF2FriendsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgTFRequestTF2FriendsResponse) */ {
 public:
  CMsgTFRequestTF2FriendsResponse();
  virtual ~CMsgTFRequestTF2FriendsResponse();

  CMsgTFRequestTF2FriendsResponse(const CMsgTFRequestTF2FriendsResponse& from);

  inline CMsgTFRequestTF2FriendsResponse& operator=(const CMsgTFRequestTF2FriendsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTFRequestTF2FriendsResponse(CMsgTFRequestTF2FriendsResponse&& from) noexcept
    : CMsgTFRequestTF2FriendsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgTFRequestTF2FriendsResponse& operator=(CMsgTFRequestTF2FriendsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFRequestTF2FriendsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTFRequestTF2FriendsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgTFRequestTF2FriendsResponse*>(
               &_CMsgTFRequestTF2FriendsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(CMsgTFRequestTF2FriendsResponse* other);
  friend void swap(CMsgTFRequestTF2FriendsResponse& a, CMsgTFRequestTF2FriendsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTFRequestTF2FriendsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgTFRequestTF2FriendsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgTFRequestTF2FriendsResponse& from);
  void MergeFrom(const CMsgTFRequestTF2FriendsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgTFRequestTF2FriendsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 account_ids = 1;
  int account_ids_size() const;
  void clear_account_ids();
  static const int kAccountIdsFieldNumber = 1;
  ::google::protobuf::uint32 account_ids(int index) const;
  void set_account_ids(int index, ::google::protobuf::uint32 value);
  void add_account_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      account_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_account_ids();

  // @@protoc_insertion_point(class_scope:CMsgTFRequestTF2FriendsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > account_ids_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgTFRequestTF2FriendsResponseImpl();
};
// -------------------------------------------------------------------

class CSOTFPlayerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CSOTFPlayerInfo) */ {
 public:
  CSOTFPlayerInfo();
  virtual ~CSOTFPlayerInfo();

  CSOTFPlayerInfo(const CSOTFPlayerInfo& from);

  inline CSOTFPlayerInfo& operator=(const CSOTFPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSOTFPlayerInfo(CSOTFPlayerInfo&& from) noexcept
    : CSOTFPlayerInfo() {
    *this = ::std::move(from);
  }

  inline CSOTFPlayerInfo& operator=(CSOTFPlayerInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFPlayerInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSOTFPlayerInfo* internal_default_instance() {
    return reinterpret_cast<const CSOTFPlayerInfo*>(
               &_CSOTFPlayerInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(CSOTFPlayerInfo* other);
  friend void swap(CSOTFPlayerInfo& a, CSOTFPlayerInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSOTFPlayerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CSOTFPlayerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CSOTFPlayerInfo& from);
  void MergeFrom(const CSOTFPlayerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CSOTFPlayerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 num_new_users_helped = 1;
  bool has_num_new_users_helped() const;
  void clear_num_new_users_helped();
  static const int kNumNewUsersHelpedFieldNumber = 1;
  ::google::protobuf::uint32 num_new_users_helped() const;
  void set_num_new_users_helped(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSOTFPlayerInfo)
 private:
  void set_has_num_new_users_helped();
  void clear_has_num_new_users_helped();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 num_new_users_helped_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCSOTFPlayerInfoImpl();
};
// -------------------------------------------------------------------

class CMsgTFThankedBySomeone : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgTFThankedBySomeone) */ {
 public:
  CMsgTFThankedBySomeone();
  virtual ~CMsgTFThankedBySomeone();

  CMsgTFThankedBySomeone(const CMsgTFThankedBySomeone& from);

  inline CMsgTFThankedBySomeone& operator=(const CMsgTFThankedBySomeone& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTFThankedBySomeone(CMsgTFThankedBySomeone&& from) noexcept
    : CMsgTFThankedBySomeone() {
    *this = ::std::move(from);
  }

  inline CMsgTFThankedBySomeone& operator=(CMsgTFThankedBySomeone&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFThankedBySomeone& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTFThankedBySomeone* internal_default_instance() {
    return reinterpret_cast<const CMsgTFThankedBySomeone*>(
               &_CMsgTFThankedBySomeone_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(CMsgTFThankedBySomeone* other);
  friend void swap(CMsgTFThankedBySomeone& a, CMsgTFThankedBySomeone& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTFThankedBySomeone* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgTFThankedBySomeone* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgTFThankedBySomeone& from);
  void MergeFrom(const CMsgTFThankedBySomeone& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgTFThankedBySomeone* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 thanker_steam_id = 1;
  bool has_thanker_steam_id() const;
  void clear_thanker_steam_id();
  static const int kThankerSteamIdFieldNumber = 1;
  ::google::protobuf::uint64 thanker_steam_id() const;
  void set_thanker_steam_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgTFThankedBySomeone)
 private:
  void set_has_thanker_steam_id();
  void clear_has_thanker_steam_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 thanker_steam_id_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgTFThankedBySomeoneImpl();
};
// -------------------------------------------------------------------

class CMsgTFThankedSomeone : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgTFThankedSomeone) */ {
 public:
  CMsgTFThankedSomeone();
  virtual ~CMsgTFThankedSomeone();

  CMsgTFThankedSomeone(const CMsgTFThankedSomeone& from);

  inline CMsgTFThankedSomeone& operator=(const CMsgTFThankedSomeone& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTFThankedSomeone(CMsgTFThankedSomeone&& from) noexcept
    : CMsgTFThankedSomeone() {
    *this = ::std::move(from);
  }

  inline CMsgTFThankedSomeone& operator=(CMsgTFThankedSomeone&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFThankedSomeone& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTFThankedSomeone* internal_default_instance() {
    return reinterpret_cast<const CMsgTFThankedSomeone*>(
               &_CMsgTFThankedSomeone_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(CMsgTFThankedSomeone* other);
  friend void swap(CMsgTFThankedSomeone& a, CMsgTFThankedSomeone& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTFThankedSomeone* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgTFThankedSomeone* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgTFThankedSomeone& from);
  void MergeFrom(const CMsgTFThankedSomeone& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgTFThankedSomeone* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgTFThankedSomeone)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgTFThankedSomeoneImpl();
};
// -------------------------------------------------------------------

class CMsgTFFreeTrialConvertedToPremium : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgTFFreeTrialConvertedToPremium) */ {
 public:
  CMsgTFFreeTrialConvertedToPremium();
  virtual ~CMsgTFFreeTrialConvertedToPremium();

  CMsgTFFreeTrialConvertedToPremium(const CMsgTFFreeTrialConvertedToPremium& from);

  inline CMsgTFFreeTrialConvertedToPremium& operator=(const CMsgTFFreeTrialConvertedToPremium& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTFFreeTrialConvertedToPremium(CMsgTFFreeTrialConvertedToPremium&& from) noexcept
    : CMsgTFFreeTrialConvertedToPremium() {
    *this = ::std::move(from);
  }

  inline CMsgTFFreeTrialConvertedToPremium& operator=(CMsgTFFreeTrialConvertedToPremium&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFFreeTrialConvertedToPremium& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTFFreeTrialConvertedToPremium* internal_default_instance() {
    return reinterpret_cast<const CMsgTFFreeTrialConvertedToPremium*>(
               &_CMsgTFFreeTrialConvertedToPremium_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(CMsgTFFreeTrialConvertedToPremium* other);
  friend void swap(CMsgTFFreeTrialConvertedToPremium& a, CMsgTFFreeTrialConvertedToPremium& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTFFreeTrialConvertedToPremium* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgTFFreeTrialConvertedToPremium* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgTFFreeTrialConvertedToPremium& from);
  void MergeFrom(const CMsgTFFreeTrialConvertedToPremium& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgTFFreeTrialConvertedToPremium* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgTFFreeTrialConvertedToPremium)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgTFFreeTrialConvertedToPremiumImpl();
};
// -------------------------------------------------------------------

class CMsgSaxxyAwarded : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSaxxyAwarded) */ {
 public:
  CMsgSaxxyAwarded();
  virtual ~CMsgSaxxyAwarded();

  CMsgSaxxyAwarded(const CMsgSaxxyAwarded& from);

  inline CMsgSaxxyAwarded& operator=(const CMsgSaxxyAwarded& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSaxxyAwarded(CMsgSaxxyAwarded&& from) noexcept
    : CMsgSaxxyAwarded() {
    *this = ::std::move(from);
  }

  inline CMsgSaxxyAwarded& operator=(CMsgSaxxyAwarded&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSaxxyAwarded& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSaxxyAwarded* internal_default_instance() {
    return reinterpret_cast<const CMsgSaxxyAwarded*>(
               &_CMsgSaxxyAwarded_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(CMsgSaxxyAwarded* other);
  friend void swap(CMsgSaxxyAwarded& a, CMsgSaxxyAwarded& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSaxxyAwarded* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSaxxyAwarded* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSaxxyAwarded& from);
  void MergeFrom(const CMsgSaxxyAwarded& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSaxxyAwarded* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string winner_names = 2;
  int winner_names_size() const;
  void clear_winner_names();
  static const int kWinnerNamesFieldNumber = 2;
  const ::std::string& winner_names(int index) const;
  ::std::string* mutable_winner_names(int index);
  void set_winner_names(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_winner_names(int index, ::std::string&& value);
  #endif
  void set_winner_names(int index, const char* value);
  void set_winner_names(int index, const char* value, size_t size);
  ::std::string* add_winner_names();
  void add_winner_names(const ::std::string& value);
  #if LANG_CXX11
  void add_winner_names(::std::string&& value);
  #endif
  void add_winner_names(const char* value);
  void add_winner_names(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& winner_names() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_winner_names();

  // optional uint32 category = 1;
  bool has_category() const;
  void clear_category();
  static const int kCategoryFieldNumber = 1;
  ::google::protobuf::uint32 category() const;
  void set_category(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSaxxyAwarded)
 private:
  void set_has_category();
  void clear_has_category();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> winner_names_;
  ::google::protobuf::uint32 category_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgSaxxyAwardedImpl();
};
// -------------------------------------------------------------------

class CMsgReplaySubmitContestEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgReplaySubmitContestEntry) */ {
 public:
  CMsgReplaySubmitContestEntry();
  virtual ~CMsgReplaySubmitContestEntry();

  CMsgReplaySubmitContestEntry(const CMsgReplaySubmitContestEntry& from);

  inline CMsgReplaySubmitContestEntry& operator=(const CMsgReplaySubmitContestEntry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgReplaySubmitContestEntry(CMsgReplaySubmitContestEntry&& from) noexcept
    : CMsgReplaySubmitContestEntry() {
    *this = ::std::move(from);
  }

  inline CMsgReplaySubmitContestEntry& operator=(CMsgReplaySubmitContestEntry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgReplaySubmitContestEntry& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgReplaySubmitContestEntry* internal_default_instance() {
    return reinterpret_cast<const CMsgReplaySubmitContestEntry*>(
               &_CMsgReplaySubmitContestEntry_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(CMsgReplaySubmitContestEntry* other);
  friend void swap(CMsgReplaySubmitContestEntry& a, CMsgReplaySubmitContestEntry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgReplaySubmitContestEntry* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgReplaySubmitContestEntry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgReplaySubmitContestEntry& from);
  void MergeFrom(const CMsgReplaySubmitContestEntry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgReplaySubmitContestEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string youtube_url = 1;
  bool has_youtube_url() const;
  void clear_youtube_url();
  static const int kYoutubeUrlFieldNumber = 1;
  const ::std::string& youtube_url() const;
  void set_youtube_url(const ::std::string& value);
  #if LANG_CXX11
  void set_youtube_url(::std::string&& value);
  #endif
  void set_youtube_url(const char* value);
  void set_youtube_url(const char* value, size_t size);
  ::std::string* mutable_youtube_url();
  ::std::string* release_youtube_url();
  void set_allocated_youtube_url(::std::string* youtube_url);

  // optional uint32 category = 2;
  bool has_category() const;
  void clear_category();
  static const int kCategoryFieldNumber = 2;
  ::google::protobuf::uint32 category() const;
  void set_category(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgReplaySubmitContestEntry)
 private:
  void set_has_youtube_url();
  void clear_has_youtube_url();
  void set_has_category();
  void clear_has_category();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr youtube_url_;
  ::google::protobuf::uint32 category_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgReplaySubmitContestEntryImpl();
};
// -------------------------------------------------------------------

class CMsgReplaySubmitContestEntryResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgReplaySubmitContestEntryResponse) */ {
 public:
  CMsgReplaySubmitContestEntryResponse();
  virtual ~CMsgReplaySubmitContestEntryResponse();

  CMsgReplaySubmitContestEntryResponse(const CMsgReplaySubmitContestEntryResponse& from);

  inline CMsgReplaySubmitContestEntryResponse& operator=(const CMsgReplaySubmitContestEntryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgReplaySubmitContestEntryResponse(CMsgReplaySubmitContestEntryResponse&& from) noexcept
    : CMsgReplaySubmitContestEntryResponse() {
    *this = ::std::move(from);
  }

  inline CMsgReplaySubmitContestEntryResponse& operator=(CMsgReplaySubmitContestEntryResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgReplaySubmitContestEntryResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgReplaySubmitContestEntryResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgReplaySubmitContestEntryResponse*>(
               &_CMsgReplaySubmitContestEntryResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(CMsgReplaySubmitContestEntryResponse* other);
  friend void swap(CMsgReplaySubmitContestEntryResponse& a, CMsgReplaySubmitContestEntryResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgReplaySubmitContestEntryResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgReplaySubmitContestEntryResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgReplaySubmitContestEntryResponse& from);
  void MergeFrom(const CMsgReplaySubmitContestEntryResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgReplaySubmitContestEntryResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool success = 1;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:CMsgReplaySubmitContestEntryResponse)
 private:
  void set_has_success();
  void clear_has_success();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool success_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgReplaySubmitContestEntryResponseImpl();
};
// -------------------------------------------------------------------

class CReplayCachedContestData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CReplayCachedContestData) */ {
 public:
  CReplayCachedContestData();
  virtual ~CReplayCachedContestData();

  CReplayCachedContestData(const CReplayCachedContestData& from);

  inline CReplayCachedContestData& operator=(const CReplayCachedContestData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CReplayCachedContestData(CReplayCachedContestData&& from) noexcept
    : CReplayCachedContestData() {
    *this = ::std::move(from);
  }

  inline CReplayCachedContestData& operator=(CReplayCachedContestData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CReplayCachedContestData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CReplayCachedContestData* internal_default_instance() {
    return reinterpret_cast<const CReplayCachedContestData*>(
               &_CReplayCachedContestData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(CReplayCachedContestData* other);
  friend void swap(CReplayCachedContestData& a, CReplayCachedContestData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CReplayCachedContestData* New() const PROTOBUF_FINAL { return New(NULL); }

  CReplayCachedContestData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CReplayCachedContestData& from);
  void MergeFrom(const CReplayCachedContestData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CReplayCachedContestData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 video_entry_ids = 3;
  int video_entry_ids_size() const;
  void clear_video_entry_ids();
  static const int kVideoEntryIdsFieldNumber = 3;
  ::google::protobuf::uint32 video_entry_ids(int index) const;
  void set_video_entry_ids(int index, ::google::protobuf::uint32 value);
  void add_video_entry_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      video_entry_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_video_entry_ids();

  // optional fixed32 timestamp = 1;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  ::google::protobuf::uint32 timestamp() const;
  void set_timestamp(::google::protobuf::uint32 value);

  // optional uint32 num_votes_last_day = 2;
  bool has_num_votes_last_day() const;
  void clear_num_votes_last_day();
  static const int kNumVotesLastDayFieldNumber = 2;
  ::google::protobuf::uint32 num_votes_last_day() const;
  void set_num_votes_last_day(::google::protobuf::uint32 value);

  // optional uint32 num_flags_last_day = 4;
  bool has_num_flags_last_day() const;
  void clear_num_flags_last_day();
  static const int kNumFlagsLastDayFieldNumber = 4;
  ::google::protobuf::uint32 num_flags_last_day() const;
  void set_num_flags_last_day(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CReplayCachedContestData)
 private:
  void set_has_timestamp();
  void clear_has_timestamp();
  void set_has_num_votes_last_day();
  void clear_has_num_votes_last_day();
  void set_has_num_flags_last_day();
  void clear_has_num_flags_last_day();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > video_entry_ids_;
  ::google::protobuf::uint32 timestamp_;
  ::google::protobuf::uint32 num_votes_last_day_;
  ::google::protobuf::uint32 num_flags_last_day_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCReplayCachedContestDataImpl();
};
// -------------------------------------------------------------------

class CMsgTFCoaching_AddToCoaches : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgTFCoaching_AddToCoaches) */ {
 public:
  CMsgTFCoaching_AddToCoaches();
  virtual ~CMsgTFCoaching_AddToCoaches();

  CMsgTFCoaching_AddToCoaches(const CMsgTFCoaching_AddToCoaches& from);

  inline CMsgTFCoaching_AddToCoaches& operator=(const CMsgTFCoaching_AddToCoaches& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTFCoaching_AddToCoaches(CMsgTFCoaching_AddToCoaches&& from) noexcept
    : CMsgTFCoaching_AddToCoaches() {
    *this = ::std::move(from);
  }

  inline CMsgTFCoaching_AddToCoaches& operator=(CMsgTFCoaching_AddToCoaches&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_AddToCoaches& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTFCoaching_AddToCoaches* internal_default_instance() {
    return reinterpret_cast<const CMsgTFCoaching_AddToCoaches*>(
               &_CMsgTFCoaching_AddToCoaches_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(CMsgTFCoaching_AddToCoaches* other);
  friend void swap(CMsgTFCoaching_AddToCoaches& a, CMsgTFCoaching_AddToCoaches& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTFCoaching_AddToCoaches* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgTFCoaching_AddToCoaches* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgTFCoaching_AddToCoaches& from);
  void MergeFrom(const CMsgTFCoaching_AddToCoaches& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgTFCoaching_AddToCoaches* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_AddToCoaches)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgTFCoaching_AddToCoachesImpl();
};
// -------------------------------------------------------------------

class CMsgTFCoaching_RemoveFromCoaches : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgTFCoaching_RemoveFromCoaches) */ {
 public:
  CMsgTFCoaching_RemoveFromCoaches();
  virtual ~CMsgTFCoaching_RemoveFromCoaches();

  CMsgTFCoaching_RemoveFromCoaches(const CMsgTFCoaching_RemoveFromCoaches& from);

  inline CMsgTFCoaching_RemoveFromCoaches& operator=(const CMsgTFCoaching_RemoveFromCoaches& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTFCoaching_RemoveFromCoaches(CMsgTFCoaching_RemoveFromCoaches&& from) noexcept
    : CMsgTFCoaching_RemoveFromCoaches() {
    *this = ::std::move(from);
  }

  inline CMsgTFCoaching_RemoveFromCoaches& operator=(CMsgTFCoaching_RemoveFromCoaches&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_RemoveFromCoaches& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTFCoaching_RemoveFromCoaches* internal_default_instance() {
    return reinterpret_cast<const CMsgTFCoaching_RemoveFromCoaches*>(
               &_CMsgTFCoaching_RemoveFromCoaches_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(CMsgTFCoaching_RemoveFromCoaches* other);
  friend void swap(CMsgTFCoaching_RemoveFromCoaches& a, CMsgTFCoaching_RemoveFromCoaches& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTFCoaching_RemoveFromCoaches* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgTFCoaching_RemoveFromCoaches* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgTFCoaching_RemoveFromCoaches& from);
  void MergeFrom(const CMsgTFCoaching_RemoveFromCoaches& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgTFCoaching_RemoveFromCoaches* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_RemoveFromCoaches)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgTFCoaching_RemoveFromCoachesImpl();
};
// -------------------------------------------------------------------

class CMsgTFCoaching_FindCoach : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgTFCoaching_FindCoach) */ {
 public:
  CMsgTFCoaching_FindCoach();
  virtual ~CMsgTFCoaching_FindCoach();

  CMsgTFCoaching_FindCoach(const CMsgTFCoaching_FindCoach& from);

  inline CMsgTFCoaching_FindCoach& operator=(const CMsgTFCoaching_FindCoach& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTFCoaching_FindCoach(CMsgTFCoaching_FindCoach&& from) noexcept
    : CMsgTFCoaching_FindCoach() {
    *this = ::std::move(from);
  }

  inline CMsgTFCoaching_FindCoach& operator=(CMsgTFCoaching_FindCoach&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_FindCoach& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTFCoaching_FindCoach* internal_default_instance() {
    return reinterpret_cast<const CMsgTFCoaching_FindCoach*>(
               &_CMsgTFCoaching_FindCoach_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(CMsgTFCoaching_FindCoach* other);
  friend void swap(CMsgTFCoaching_FindCoach& a, CMsgTFCoaching_FindCoach& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTFCoaching_FindCoach* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgTFCoaching_FindCoach* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgTFCoaching_FindCoach& from);
  void MergeFrom(const CMsgTFCoaching_FindCoach& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgTFCoaching_FindCoach* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id_friend_as_coach = 1;
  bool has_account_id_friend_as_coach() const;
  void clear_account_id_friend_as_coach();
  static const int kAccountIdFriendAsCoachFieldNumber = 1;
  ::google::protobuf::uint32 account_id_friend_as_coach() const;
  void set_account_id_friend_as_coach(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_FindCoach)
 private:
  void set_has_account_id_friend_as_coach();
  void clear_has_account_id_friend_as_coach();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_friend_as_coach_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgTFCoaching_FindCoachImpl();
};
// -------------------------------------------------------------------

class CMsgTFCoaching_FindCoachResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgTFCoaching_FindCoachResponse) */ {
 public:
  CMsgTFCoaching_FindCoachResponse();
  virtual ~CMsgTFCoaching_FindCoachResponse();

  CMsgTFCoaching_FindCoachResponse(const CMsgTFCoaching_FindCoachResponse& from);

  inline CMsgTFCoaching_FindCoachResponse& operator=(const CMsgTFCoaching_FindCoachResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTFCoaching_FindCoachResponse(CMsgTFCoaching_FindCoachResponse&& from) noexcept
    : CMsgTFCoaching_FindCoachResponse() {
    *this = ::std::move(from);
  }

  inline CMsgTFCoaching_FindCoachResponse& operator=(CMsgTFCoaching_FindCoachResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_FindCoachResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTFCoaching_FindCoachResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgTFCoaching_FindCoachResponse*>(
               &_CMsgTFCoaching_FindCoachResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(CMsgTFCoaching_FindCoachResponse* other);
  friend void swap(CMsgTFCoaching_FindCoachResponse& a, CMsgTFCoaching_FindCoachResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTFCoaching_FindCoachResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgTFCoaching_FindCoachResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgTFCoaching_FindCoachResponse& from);
  void MergeFrom(const CMsgTFCoaching_FindCoachResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgTFCoaching_FindCoachResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string coach_name = 3;
  bool has_coach_name() const;
  void clear_coach_name();
  static const int kCoachNameFieldNumber = 3;
  const ::std::string& coach_name() const;
  void set_coach_name(const ::std::string& value);
  #if LANG_CXX11
  void set_coach_name(::std::string&& value);
  #endif
  void set_coach_name(const char* value);
  void set_coach_name(const char* value, size_t size);
  ::std::string* mutable_coach_name();
  ::std::string* release_coach_name();
  void set_allocated_coach_name(::std::string* coach_name);

  // optional bool found_coach = 1;
  bool has_found_coach() const;
  void clear_found_coach();
  static const int kFoundCoachFieldNumber = 1;
  bool found_coach() const;
  void set_found_coach(bool value);

  // optional uint32 num_likes = 2;
  bool has_num_likes() const;
  void clear_num_likes();
  static const int kNumLikesFieldNumber = 2;
  ::google::protobuf::uint32 num_likes() const;
  void set_num_likes(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_FindCoachResponse)
 private:
  void set_has_found_coach();
  void clear_has_found_coach();
  void set_has_num_likes();
  void clear_has_num_likes();
  void set_has_coach_name();
  void clear_has_coach_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr coach_name_;
  bool found_coach_;
  ::google::protobuf::uint32 num_likes_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgTFCoaching_FindCoachResponseImpl();
};
// -------------------------------------------------------------------

class CMsgTFCoaching_AskCoach : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgTFCoaching_AskCoach) */ {
 public:
  CMsgTFCoaching_AskCoach();
  virtual ~CMsgTFCoaching_AskCoach();

  CMsgTFCoaching_AskCoach(const CMsgTFCoaching_AskCoach& from);

  inline CMsgTFCoaching_AskCoach& operator=(const CMsgTFCoaching_AskCoach& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTFCoaching_AskCoach(CMsgTFCoaching_AskCoach&& from) noexcept
    : CMsgTFCoaching_AskCoach() {
    *this = ::std::move(from);
  }

  inline CMsgTFCoaching_AskCoach& operator=(CMsgTFCoaching_AskCoach&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_AskCoach& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTFCoaching_AskCoach* internal_default_instance() {
    return reinterpret_cast<const CMsgTFCoaching_AskCoach*>(
               &_CMsgTFCoaching_AskCoach_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(CMsgTFCoaching_AskCoach* other);
  friend void swap(CMsgTFCoaching_AskCoach& a, CMsgTFCoaching_AskCoach& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTFCoaching_AskCoach* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgTFCoaching_AskCoach* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgTFCoaching_AskCoach& from);
  void MergeFrom(const CMsgTFCoaching_AskCoach& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgTFCoaching_AskCoach* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id_student = 1;
  bool has_account_id_student() const;
  void clear_account_id_student();
  static const int kAccountIdStudentFieldNumber = 1;
  ::google::protobuf::uint32 account_id_student() const;
  void set_account_id_student(::google::protobuf::uint32 value);

  // optional bool student_is_friend = 2;
  bool has_student_is_friend() const;
  void clear_student_is_friend();
  static const int kStudentIsFriendFieldNumber = 2;
  bool student_is_friend() const;
  void set_student_is_friend(bool value);

  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_AskCoach)
 private:
  void set_has_account_id_student();
  void clear_has_account_id_student();
  void set_has_student_is_friend();
  void clear_has_student_is_friend();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_student_;
  bool student_is_friend_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgTFCoaching_AskCoachImpl();
};
// -------------------------------------------------------------------

class CMsgTFCoaching_AskCoachResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgTFCoaching_AskCoachResponse) */ {
 public:
  CMsgTFCoaching_AskCoachResponse();
  virtual ~CMsgTFCoaching_AskCoachResponse();

  CMsgTFCoaching_AskCoachResponse(const CMsgTFCoaching_AskCoachResponse& from);

  inline CMsgTFCoaching_AskCoachResponse& operator=(const CMsgTFCoaching_AskCoachResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTFCoaching_AskCoachResponse(CMsgTFCoaching_AskCoachResponse&& from) noexcept
    : CMsgTFCoaching_AskCoachResponse() {
    *this = ::std::move(from);
  }

  inline CMsgTFCoaching_AskCoachResponse& operator=(CMsgTFCoaching_AskCoachResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_AskCoachResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTFCoaching_AskCoachResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgTFCoaching_AskCoachResponse*>(
               &_CMsgTFCoaching_AskCoachResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(CMsgTFCoaching_AskCoachResponse* other);
  friend void swap(CMsgTFCoaching_AskCoachResponse& a, CMsgTFCoaching_AskCoachResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTFCoaching_AskCoachResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgTFCoaching_AskCoachResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgTFCoaching_AskCoachResponse& from);
  void MergeFrom(const CMsgTFCoaching_AskCoachResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgTFCoaching_AskCoachResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool accept_coaching_assignment = 1;
  bool has_accept_coaching_assignment() const;
  void clear_accept_coaching_assignment();
  static const int kAcceptCoachingAssignmentFieldNumber = 1;
  bool accept_coaching_assignment() const;
  void set_accept_coaching_assignment(bool value);

  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_AskCoachResponse)
 private:
  void set_has_accept_coaching_assignment();
  void clear_has_accept_coaching_assignment();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool accept_coaching_assignment_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgTFCoaching_AskCoachResponseImpl();
};
// -------------------------------------------------------------------

class CMsgTFCoaching_CoachJoinGame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgTFCoaching_CoachJoinGame) */ {
 public:
  CMsgTFCoaching_CoachJoinGame();
  virtual ~CMsgTFCoaching_CoachJoinGame();

  CMsgTFCoaching_CoachJoinGame(const CMsgTFCoaching_CoachJoinGame& from);

  inline CMsgTFCoaching_CoachJoinGame& operator=(const CMsgTFCoaching_CoachJoinGame& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTFCoaching_CoachJoinGame(CMsgTFCoaching_CoachJoinGame&& from) noexcept
    : CMsgTFCoaching_CoachJoinGame() {
    *this = ::std::move(from);
  }

  inline CMsgTFCoaching_CoachJoinGame& operator=(CMsgTFCoaching_CoachJoinGame&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_CoachJoinGame& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTFCoaching_CoachJoinGame* internal_default_instance() {
    return reinterpret_cast<const CMsgTFCoaching_CoachJoinGame*>(
               &_CMsgTFCoaching_CoachJoinGame_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(CMsgTFCoaching_CoachJoinGame* other);
  friend void swap(CMsgTFCoaching_CoachJoinGame& a, CMsgTFCoaching_CoachJoinGame& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTFCoaching_CoachJoinGame* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgTFCoaching_CoachJoinGame* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgTFCoaching_CoachJoinGame& from);
  void MergeFrom(const CMsgTFCoaching_CoachJoinGame& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgTFCoaching_CoachJoinGame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool join_game = 1;
  bool has_join_game() const;
  void clear_join_game();
  static const int kJoinGameFieldNumber = 1;
  bool join_game() const;
  void set_join_game(bool value);

  // optional uint32 server_address = 2;
  bool has_server_address() const;
  void clear_server_address();
  static const int kServerAddressFieldNumber = 2;
  ::google::protobuf::uint32 server_address() const;
  void set_server_address(::google::protobuf::uint32 value);

  // optional uint32 server_port = 3;
  bool has_server_port() const;
  void clear_server_port();
  static const int kServerPortFieldNumber = 3;
  ::google::protobuf::uint32 server_port() const;
  void set_server_port(::google::protobuf::uint32 value);

  // optional uint32 account_id_student = 4;
  bool has_account_id_student() const;
  void clear_account_id_student();
  static const int kAccountIdStudentFieldNumber = 4;
  ::google::protobuf::uint32 account_id_student() const;
  void set_account_id_student(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_CoachJoinGame)
 private:
  void set_has_join_game();
  void clear_has_join_game();
  void set_has_server_address();
  void clear_has_server_address();
  void set_has_server_port();
  void clear_has_server_port();
  void set_has_account_id_student();
  void clear_has_account_id_student();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool join_game_;
  ::google::protobuf::uint32 server_address_;
  ::google::protobuf::uint32 server_port_;
  ::google::protobuf::uint32 account_id_student_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgTFCoaching_CoachJoinGameImpl();
};
// -------------------------------------------------------------------

class CMsgTFCoaching_CoachJoining : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgTFCoaching_CoachJoining) */ {
 public:
  CMsgTFCoaching_CoachJoining();
  virtual ~CMsgTFCoaching_CoachJoining();

  CMsgTFCoaching_CoachJoining(const CMsgTFCoaching_CoachJoining& from);

  inline CMsgTFCoaching_CoachJoining& operator=(const CMsgTFCoaching_CoachJoining& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTFCoaching_CoachJoining(CMsgTFCoaching_CoachJoining&& from) noexcept
    : CMsgTFCoaching_CoachJoining() {
    *this = ::std::move(from);
  }

  inline CMsgTFCoaching_CoachJoining& operator=(CMsgTFCoaching_CoachJoining&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_CoachJoining& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTFCoaching_CoachJoining* internal_default_instance() {
    return reinterpret_cast<const CMsgTFCoaching_CoachJoining*>(
               &_CMsgTFCoaching_CoachJoining_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(CMsgTFCoaching_CoachJoining* other);
  friend void swap(CMsgTFCoaching_CoachJoining& a, CMsgTFCoaching_CoachJoining& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTFCoaching_CoachJoining* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgTFCoaching_CoachJoining* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgTFCoaching_CoachJoining& from);
  void MergeFrom(const CMsgTFCoaching_CoachJoining& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgTFCoaching_CoachJoining* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id_coach = 1;
  bool has_account_id_coach() const;
  void clear_account_id_coach();
  static const int kAccountIdCoachFieldNumber = 1;
  ::google::protobuf::uint32 account_id_coach() const;
  void set_account_id_coach(::google::protobuf::uint32 value);

  // optional uint32 account_id_student = 2;
  bool has_account_id_student() const;
  void clear_account_id_student();
  static const int kAccountIdStudentFieldNumber = 2;
  ::google::protobuf::uint32 account_id_student() const;
  void set_account_id_student(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_CoachJoining)
 private:
  void set_has_account_id_coach();
  void clear_has_account_id_coach();
  void set_has_account_id_student();
  void clear_has_account_id_student();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_coach_;
  ::google::protobuf::uint32 account_id_student_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgTFCoaching_CoachJoiningImpl();
};
// -------------------------------------------------------------------

class CMsgTFCoaching_CoachJoined : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgTFCoaching_CoachJoined) */ {
 public:
  CMsgTFCoaching_CoachJoined();
  virtual ~CMsgTFCoaching_CoachJoined();

  CMsgTFCoaching_CoachJoined(const CMsgTFCoaching_CoachJoined& from);

  inline CMsgTFCoaching_CoachJoined& operator=(const CMsgTFCoaching_CoachJoined& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTFCoaching_CoachJoined(CMsgTFCoaching_CoachJoined&& from) noexcept
    : CMsgTFCoaching_CoachJoined() {
    *this = ::std::move(from);
  }

  inline CMsgTFCoaching_CoachJoined& operator=(CMsgTFCoaching_CoachJoined&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_CoachJoined& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTFCoaching_CoachJoined* internal_default_instance() {
    return reinterpret_cast<const CMsgTFCoaching_CoachJoined*>(
               &_CMsgTFCoaching_CoachJoined_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(CMsgTFCoaching_CoachJoined* other);
  friend void swap(CMsgTFCoaching_CoachJoined& a, CMsgTFCoaching_CoachJoined& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTFCoaching_CoachJoined* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgTFCoaching_CoachJoined* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgTFCoaching_CoachJoined& from);
  void MergeFrom(const CMsgTFCoaching_CoachJoined& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgTFCoaching_CoachJoined* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id_coach = 1;
  bool has_account_id_coach() const;
  void clear_account_id_coach();
  static const int kAccountIdCoachFieldNumber = 1;
  ::google::protobuf::uint32 account_id_coach() const;
  void set_account_id_coach(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_CoachJoined)
 private:
  void set_has_account_id_coach();
  void clear_has_account_id_coach();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_coach_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgTFCoaching_CoachJoinedImpl();
};
// -------------------------------------------------------------------

class CMsgTFCoaching_LikeCurrentCoach : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgTFCoaching_LikeCurrentCoach) */ {
 public:
  CMsgTFCoaching_LikeCurrentCoach();
  virtual ~CMsgTFCoaching_LikeCurrentCoach();

  CMsgTFCoaching_LikeCurrentCoach(const CMsgTFCoaching_LikeCurrentCoach& from);

  inline CMsgTFCoaching_LikeCurrentCoach& operator=(const CMsgTFCoaching_LikeCurrentCoach& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTFCoaching_LikeCurrentCoach(CMsgTFCoaching_LikeCurrentCoach&& from) noexcept
    : CMsgTFCoaching_LikeCurrentCoach() {
    *this = ::std::move(from);
  }

  inline CMsgTFCoaching_LikeCurrentCoach& operator=(CMsgTFCoaching_LikeCurrentCoach&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_LikeCurrentCoach& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTFCoaching_LikeCurrentCoach* internal_default_instance() {
    return reinterpret_cast<const CMsgTFCoaching_LikeCurrentCoach*>(
               &_CMsgTFCoaching_LikeCurrentCoach_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(CMsgTFCoaching_LikeCurrentCoach* other);
  friend void swap(CMsgTFCoaching_LikeCurrentCoach& a, CMsgTFCoaching_LikeCurrentCoach& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTFCoaching_LikeCurrentCoach* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgTFCoaching_LikeCurrentCoach* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgTFCoaching_LikeCurrentCoach& from);
  void MergeFrom(const CMsgTFCoaching_LikeCurrentCoach& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgTFCoaching_LikeCurrentCoach* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool like_coach = 1;
  bool has_like_coach() const;
  void clear_like_coach();
  static const int kLikeCoachFieldNumber = 1;
  bool like_coach() const;
  void set_like_coach(bool value);

  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_LikeCurrentCoach)
 private:
  void set_has_like_coach();
  void clear_has_like_coach();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool like_coach_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgTFCoaching_LikeCurrentCoachImpl();
};
// -------------------------------------------------------------------

class CMsgTFCoaching_RemoveCurrentCoach : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgTFCoaching_RemoveCurrentCoach) */ {
 public:
  CMsgTFCoaching_RemoveCurrentCoach();
  virtual ~CMsgTFCoaching_RemoveCurrentCoach();

  CMsgTFCoaching_RemoveCurrentCoach(const CMsgTFCoaching_RemoveCurrentCoach& from);

  inline CMsgTFCoaching_RemoveCurrentCoach& operator=(const CMsgTFCoaching_RemoveCurrentCoach& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTFCoaching_RemoveCurrentCoach(CMsgTFCoaching_RemoveCurrentCoach&& from) noexcept
    : CMsgTFCoaching_RemoveCurrentCoach() {
    *this = ::std::move(from);
  }

  inline CMsgTFCoaching_RemoveCurrentCoach& operator=(CMsgTFCoaching_RemoveCurrentCoach&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_RemoveCurrentCoach& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTFCoaching_RemoveCurrentCoach* internal_default_instance() {
    return reinterpret_cast<const CMsgTFCoaching_RemoveCurrentCoach*>(
               &_CMsgTFCoaching_RemoveCurrentCoach_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(CMsgTFCoaching_RemoveCurrentCoach* other);
  friend void swap(CMsgTFCoaching_RemoveCurrentCoach& a, CMsgTFCoaching_RemoveCurrentCoach& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTFCoaching_RemoveCurrentCoach* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgTFCoaching_RemoveCurrentCoach* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgTFCoaching_RemoveCurrentCoach& from);
  void MergeFrom(const CMsgTFCoaching_RemoveCurrentCoach& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgTFCoaching_RemoveCurrentCoach* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id_coach = 1;
  bool has_account_id_coach() const;
  void clear_account_id_coach();
  static const int kAccountIdCoachFieldNumber = 1;
  ::google::protobuf::uint32 account_id_coach() const;
  void set_account_id_coach(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_RemoveCurrentCoach)
 private:
  void set_has_account_id_coach();
  void clear_has_account_id_coach();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_coach_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgTFCoaching_RemoveCurrentCoachImpl();
};
// -------------------------------------------------------------------

class CMsgTFQuickplay_ScoreServers_ServerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgTFQuickplay_ScoreServers.ServerInfo) */ {
 public:
  CMsgTFQuickplay_ScoreServers_ServerInfo();
  virtual ~CMsgTFQuickplay_ScoreServers_ServerInfo();

  CMsgTFQuickplay_ScoreServers_ServerInfo(const CMsgTFQuickplay_ScoreServers_ServerInfo& from);

  inline CMsgTFQuickplay_ScoreServers_ServerInfo& operator=(const CMsgTFQuickplay_ScoreServers_ServerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTFQuickplay_ScoreServers_ServerInfo(CMsgTFQuickplay_ScoreServers_ServerInfo&& from) noexcept
    : CMsgTFQuickplay_ScoreServers_ServerInfo() {
    *this = ::std::move(from);
  }

  inline CMsgTFQuickplay_ScoreServers_ServerInfo& operator=(CMsgTFQuickplay_ScoreServers_ServerInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFQuickplay_ScoreServers_ServerInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTFQuickplay_ScoreServers_ServerInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgTFQuickplay_ScoreServers_ServerInfo*>(
               &_CMsgTFQuickplay_ScoreServers_ServerInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(CMsgTFQuickplay_ScoreServers_ServerInfo* other);
  friend void swap(CMsgTFQuickplay_ScoreServers_ServerInfo& a, CMsgTFQuickplay_ScoreServers_ServerInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTFQuickplay_ScoreServers_ServerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgTFQuickplay_ScoreServers_ServerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgTFQuickplay_ScoreServers_ServerInfo& from);
  void MergeFrom(const CMsgTFQuickplay_ScoreServers_ServerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgTFQuickplay_ScoreServers_ServerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 server_address = 1;
  bool has_server_address() const;
  void clear_server_address();
  static const int kServerAddressFieldNumber = 1;
  ::google::protobuf::uint32 server_address() const;
  void set_server_address(::google::protobuf::uint32 value);

  // optional uint32 server_port = 2;
  bool has_server_port() const;
  void clear_server_port();
  static const int kServerPortFieldNumber = 2;
  ::google::protobuf::uint32 server_port() const;
  void set_server_port(::google::protobuf::uint32 value);

  // optional uint64 steam_id = 4;
  bool has_steam_id() const;
  void clear_steam_id();
  static const int kSteamIdFieldNumber = 4;
  ::google::protobuf::uint64 steam_id() const;
  void set_steam_id(::google::protobuf::uint64 value);

  // optional uint32 num_users = 3;
  bool has_num_users() const;
  void clear_num_users();
  static const int kNumUsersFieldNumber = 3;
  ::google::protobuf::uint32 num_users() const;
  void set_num_users(::google::protobuf::uint32 value);

  // optional uint32 max_users = 5;
  bool has_max_users() const;
  void clear_max_users();
  static const int kMaxUsersFieldNumber = 5;
  ::google::protobuf::uint32 max_users() const;
  void set_max_users(::google::protobuf::uint32 value);

  // optional float user_score = 6;
  bool has_user_score() const;
  void clear_user_score();
  static const int kUserScoreFieldNumber = 6;
  float user_score() const;
  void set_user_score(float value);

  // @@protoc_insertion_point(class_scope:CMsgTFQuickplay_ScoreServers.ServerInfo)
 private:
  void set_has_server_address();
  void clear_has_server_address();
  void set_has_server_port();
  void clear_has_server_port();
  void set_has_num_users();
  void clear_has_num_users();
  void set_has_steam_id();
  void clear_has_steam_id();
  void set_has_max_users();
  void clear_has_max_users();
  void set_has_user_score();
  void clear_has_user_score();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 server_address_;
  ::google::protobuf::uint32 server_port_;
  ::google::protobuf::uint64 steam_id_;
  ::google::protobuf::uint32 num_users_;
  ::google::protobuf::uint32 max_users_;
  float user_score_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgTFQuickplay_ScoreServers_ServerInfoImpl();
};
// -------------------------------------------------------------------

class CMsgTFQuickplay_ScoreServers : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgTFQuickplay_ScoreServers) */ {
 public:
  CMsgTFQuickplay_ScoreServers();
  virtual ~CMsgTFQuickplay_ScoreServers();

  CMsgTFQuickplay_ScoreServers(const CMsgTFQuickplay_ScoreServers& from);

  inline CMsgTFQuickplay_ScoreServers& operator=(const CMsgTFQuickplay_ScoreServers& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTFQuickplay_ScoreServers(CMsgTFQuickplay_ScoreServers&& from) noexcept
    : CMsgTFQuickplay_ScoreServers() {
    *this = ::std::move(from);
  }

  inline CMsgTFQuickplay_ScoreServers& operator=(CMsgTFQuickplay_ScoreServers&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFQuickplay_ScoreServers& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTFQuickplay_ScoreServers* internal_default_instance() {
    return reinterpret_cast<const CMsgTFQuickplay_ScoreServers*>(
               &_CMsgTFQuickplay_ScoreServers_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(CMsgTFQuickplay_ScoreServers* other);
  friend void swap(CMsgTFQuickplay_ScoreServers& a, CMsgTFQuickplay_ScoreServers& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTFQuickplay_ScoreServers* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgTFQuickplay_ScoreServers* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgTFQuickplay_ScoreServers& from);
  void MergeFrom(const CMsgTFQuickplay_ScoreServers& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgTFQuickplay_ScoreServers* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgTFQuickplay_ScoreServers_ServerInfo ServerInfo;

  // accessors -------------------------------------------------------

  // repeated .CMsgTFQuickplay_ScoreServers.ServerInfo servers = 1;
  int servers_size() const;
  void clear_servers();
  static const int kServersFieldNumber = 1;
  const ::CMsgTFQuickplay_ScoreServers_ServerInfo& servers(int index) const;
  ::CMsgTFQuickplay_ScoreServers_ServerInfo* mutable_servers(int index);
  ::CMsgTFQuickplay_ScoreServers_ServerInfo* add_servers();
  ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServers_ServerInfo >*
      mutable_servers();
  const ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServers_ServerInfo >&
      servers() const;

  // @@protoc_insertion_point(class_scope:CMsgTFQuickplay_ScoreServers)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServers_ServerInfo > servers_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgTFQuickplay_ScoreServersImpl();
};
// -------------------------------------------------------------------

class CMsgTFQuickplay_ScoreServersResponse_ServerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgTFQuickplay_ScoreServersResponse.ServerInfo) */ {
 public:
  CMsgTFQuickplay_ScoreServersResponse_ServerInfo();
  virtual ~CMsgTFQuickplay_ScoreServersResponse_ServerInfo();

  CMsgTFQuickplay_ScoreServersResponse_ServerInfo(const CMsgTFQuickplay_ScoreServersResponse_ServerInfo& from);

  inline CMsgTFQuickplay_ScoreServersResponse_ServerInfo& operator=(const CMsgTFQuickplay_ScoreServersResponse_ServerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTFQuickplay_ScoreServersResponse_ServerInfo(CMsgTFQuickplay_ScoreServersResponse_ServerInfo&& from) noexcept
    : CMsgTFQuickplay_ScoreServersResponse_ServerInfo() {
    *this = ::std::move(from);
  }

  inline CMsgTFQuickplay_ScoreServersResponse_ServerInfo& operator=(CMsgTFQuickplay_ScoreServersResponse_ServerInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFQuickplay_ScoreServersResponse_ServerInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTFQuickplay_ScoreServersResponse_ServerInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgTFQuickplay_ScoreServersResponse_ServerInfo*>(
               &_CMsgTFQuickplay_ScoreServersResponse_ServerInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(CMsgTFQuickplay_ScoreServersResponse_ServerInfo* other);
  friend void swap(CMsgTFQuickplay_ScoreServersResponse_ServerInfo& a, CMsgTFQuickplay_ScoreServersResponse_ServerInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTFQuickplay_ScoreServersResponse_ServerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgTFQuickplay_ScoreServersResponse_ServerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgTFQuickplay_ScoreServersResponse_ServerInfo& from);
  void MergeFrom(const CMsgTFQuickplay_ScoreServersResponse_ServerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgTFQuickplay_ScoreServersResponse_ServerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 server_address = 1;
  bool has_server_address() const;
  void clear_server_address();
  static const int kServerAddressFieldNumber = 1;
  ::google::protobuf::uint32 server_address() const;
  void set_server_address(::google::protobuf::uint32 value);

  // optional uint32 server_port = 2;
  bool has_server_port() const;
  void clear_server_port();
  static const int kServerPortFieldNumber = 2;
  ::google::protobuf::uint32 server_port() const;
  void set_server_port(::google::protobuf::uint32 value);

  // optional uint64 steam_id = 4;
  bool has_steam_id() const;
  void clear_steam_id();
  static const int kSteamIdFieldNumber = 4;
  ::google::protobuf::uint64 steam_id() const;
  void set_steam_id(::google::protobuf::uint64 value);

  // optional float total_score = 3;
  bool has_total_score() const;
  void clear_total_score();
  static const int kTotalScoreFieldNumber = 3;
  float total_score() const;
  void set_total_score(float value);

  // optional uint32 options_score = 5;
  bool has_options_score() const;
  void clear_options_score();
  static const int kOptionsScoreFieldNumber = 5;
  ::google::protobuf::uint32 options_score() const;
  void set_options_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgTFQuickplay_ScoreServersResponse.ServerInfo)
 private:
  void set_has_server_address();
  void clear_has_server_address();
  void set_has_server_port();
  void clear_has_server_port();
  void set_has_total_score();
  void clear_has_total_score();
  void set_has_steam_id();
  void clear_has_steam_id();
  void set_has_options_score();
  void clear_has_options_score();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 server_address_;
  ::google::protobuf::uint32 server_port_;
  ::google::protobuf::uint64 steam_id_;
  float total_score_;
  ::google::protobuf::uint32 options_score_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgTFQuickplay_ScoreServersResponse_ServerInfoImpl();
};
// -------------------------------------------------------------------

class CMsgTFQuickplay_ScoreServersResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgTFQuickplay_ScoreServersResponse) */ {
 public:
  CMsgTFQuickplay_ScoreServersResponse();
  virtual ~CMsgTFQuickplay_ScoreServersResponse();

  CMsgTFQuickplay_ScoreServersResponse(const CMsgTFQuickplay_ScoreServersResponse& from);

  inline CMsgTFQuickplay_ScoreServersResponse& operator=(const CMsgTFQuickplay_ScoreServersResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTFQuickplay_ScoreServersResponse(CMsgTFQuickplay_ScoreServersResponse&& from) noexcept
    : CMsgTFQuickplay_ScoreServersResponse() {
    *this = ::std::move(from);
  }

  inline CMsgTFQuickplay_ScoreServersResponse& operator=(CMsgTFQuickplay_ScoreServersResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFQuickplay_ScoreServersResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTFQuickplay_ScoreServersResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgTFQuickplay_ScoreServersResponse*>(
               &_CMsgTFQuickplay_ScoreServersResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(CMsgTFQuickplay_ScoreServersResponse* other);
  friend void swap(CMsgTFQuickplay_ScoreServersResponse& a, CMsgTFQuickplay_ScoreServersResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTFQuickplay_ScoreServersResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgTFQuickplay_ScoreServersResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgTFQuickplay_ScoreServersResponse& from);
  void MergeFrom(const CMsgTFQuickplay_ScoreServersResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgTFQuickplay_ScoreServersResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgTFQuickplay_ScoreServersResponse_ServerInfo ServerInfo;

  // accessors -------------------------------------------------------

  // repeated .CMsgTFQuickplay_ScoreServersResponse.ServerInfo servers = 1;
  int servers_size() const;
  void clear_servers();
  static const int kServersFieldNumber = 1;
  const ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo& servers(int index) const;
  ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo* mutable_servers(int index);
  ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo* add_servers();
  ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo >*
      mutable_servers();
  const ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo >&
      servers() const;

  // @@protoc_insertion_point(class_scope:CMsgTFQuickplay_ScoreServersResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo > servers_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgTFQuickplay_ScoreServersResponseImpl();
};
// -------------------------------------------------------------------

class CMsgTFQuickplay_PlayerJoining : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgTFQuickplay_PlayerJoining) */ {
 public:
  CMsgTFQuickplay_PlayerJoining();
  virtual ~CMsgTFQuickplay_PlayerJoining();

  CMsgTFQuickplay_PlayerJoining(const CMsgTFQuickplay_PlayerJoining& from);

  inline CMsgTFQuickplay_PlayerJoining& operator=(const CMsgTFQuickplay_PlayerJoining& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTFQuickplay_PlayerJoining(CMsgTFQuickplay_PlayerJoining&& from) noexcept
    : CMsgTFQuickplay_PlayerJoining() {
    *this = ::std::move(from);
  }

  inline CMsgTFQuickplay_PlayerJoining& operator=(CMsgTFQuickplay_PlayerJoining&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFQuickplay_PlayerJoining& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTFQuickplay_PlayerJoining* internal_default_instance() {
    return reinterpret_cast<const CMsgTFQuickplay_PlayerJoining*>(
               &_CMsgTFQuickplay_PlayerJoining_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(CMsgTFQuickplay_PlayerJoining* other);
  friend void swap(CMsgTFQuickplay_PlayerJoining& a, CMsgTFQuickplay_PlayerJoining& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTFQuickplay_PlayerJoining* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgTFQuickplay_PlayerJoining* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgTFQuickplay_PlayerJoining& from);
  void MergeFrom(const CMsgTFQuickplay_PlayerJoining& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgTFQuickplay_PlayerJoining* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgTFQuickplay_PlayerJoining)
 private:
  void set_has_account_id();
  void clear_has_account_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgTFQuickplay_PlayerJoiningImpl();
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_LevelInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGC_GameServer_LevelInfo) */ {
 public:
  CMsgGC_GameServer_LevelInfo();
  virtual ~CMsgGC_GameServer_LevelInfo();

  CMsgGC_GameServer_LevelInfo(const CMsgGC_GameServer_LevelInfo& from);

  inline CMsgGC_GameServer_LevelInfo& operator=(const CMsgGC_GameServer_LevelInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGC_GameServer_LevelInfo(CMsgGC_GameServer_LevelInfo&& from) noexcept
    : CMsgGC_GameServer_LevelInfo() {
    *this = ::std::move(from);
  }

  inline CMsgGC_GameServer_LevelInfo& operator=(CMsgGC_GameServer_LevelInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_LevelInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGC_GameServer_LevelInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgGC_GameServer_LevelInfo*>(
               &_CMsgGC_GameServer_LevelInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(CMsgGC_GameServer_LevelInfo* other);
  friend void swap(CMsgGC_GameServer_LevelInfo& a, CMsgGC_GameServer_LevelInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGC_GameServer_LevelInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGC_GameServer_LevelInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGC_GameServer_LevelInfo& from);
  void MergeFrom(const CMsgGC_GameServer_LevelInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGC_GameServer_LevelInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string level_name = 2;
  bool has_level_name() const;
  void clear_level_name();
  static const int kLevelNameFieldNumber = 2;
  const ::std::string& level_name() const;
  void set_level_name(const ::std::string& value);
  #if LANG_CXX11
  void set_level_name(::std::string&& value);
  #endif
  void set_level_name(const char* value);
  void set_level_name(const char* value, size_t size);
  ::std::string* mutable_level_name();
  ::std::string* release_level_name();
  void set_allocated_level_name(::std::string* level_name);

  // optional bool level_loaded = 1;
  bool has_level_loaded() const;
  void clear_level_loaded();
  static const int kLevelLoadedFieldNumber = 1;
  bool level_loaded() const;
  void set_level_loaded(bool value);

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_LevelInfo)
 private:
  void set_has_level_loaded();
  void clear_has_level_loaded();
  void set_has_level_name();
  void clear_has_level_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr level_name_;
  bool level_loaded_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGC_GameServer_LevelInfoImpl();
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_AuthChallenge : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGC_GameServer_AuthChallenge) */ {
 public:
  CMsgGC_GameServer_AuthChallenge();
  virtual ~CMsgGC_GameServer_AuthChallenge();

  CMsgGC_GameServer_AuthChallenge(const CMsgGC_GameServer_AuthChallenge& from);

  inline CMsgGC_GameServer_AuthChallenge& operator=(const CMsgGC_GameServer_AuthChallenge& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGC_GameServer_AuthChallenge(CMsgGC_GameServer_AuthChallenge&& from) noexcept
    : CMsgGC_GameServer_AuthChallenge() {
    *this = ::std::move(from);
  }

  inline CMsgGC_GameServer_AuthChallenge& operator=(CMsgGC_GameServer_AuthChallenge&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_AuthChallenge& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGC_GameServer_AuthChallenge* internal_default_instance() {
    return reinterpret_cast<const CMsgGC_GameServer_AuthChallenge*>(
               &_CMsgGC_GameServer_AuthChallenge_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(CMsgGC_GameServer_AuthChallenge* other);
  friend void swap(CMsgGC_GameServer_AuthChallenge& a, CMsgGC_GameServer_AuthChallenge& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGC_GameServer_AuthChallenge* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGC_GameServer_AuthChallenge* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGC_GameServer_AuthChallenge& from);
  void MergeFrom(const CMsgGC_GameServer_AuthChallenge& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGC_GameServer_AuthChallenge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string challenge_string = 1;
  bool has_challenge_string() const;
  void clear_challenge_string();
  static const int kChallengeStringFieldNumber = 1;
  const ::std::string& challenge_string() const;
  void set_challenge_string(const ::std::string& value);
  #if LANG_CXX11
  void set_challenge_string(::std::string&& value);
  #endif
  void set_challenge_string(const char* value);
  void set_challenge_string(const char* value, size_t size);
  ::std::string* mutable_challenge_string();
  ::std::string* release_challenge_string();
  void set_allocated_challenge_string(::std::string* challenge_string);

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_AuthChallenge)
 private:
  void set_has_challenge_string();
  void clear_has_challenge_string();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr challenge_string_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGC_GameServer_AuthChallengeImpl();
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_AuthResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGC_GameServer_AuthResult) */ {
 public:
  CMsgGC_GameServer_AuthResult();
  virtual ~CMsgGC_GameServer_AuthResult();

  CMsgGC_GameServer_AuthResult(const CMsgGC_GameServer_AuthResult& from);

  inline CMsgGC_GameServer_AuthResult& operator=(const CMsgGC_GameServer_AuthResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGC_GameServer_AuthResult(CMsgGC_GameServer_AuthResult&& from) noexcept
    : CMsgGC_GameServer_AuthResult() {
    *this = ::std::move(from);
  }

  inline CMsgGC_GameServer_AuthResult& operator=(CMsgGC_GameServer_AuthResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_AuthResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGC_GameServer_AuthResult* internal_default_instance() {
    return reinterpret_cast<const CMsgGC_GameServer_AuthResult*>(
               &_CMsgGC_GameServer_AuthResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(CMsgGC_GameServer_AuthResult* other);
  friend void swap(CMsgGC_GameServer_AuthResult& a, CMsgGC_GameServer_AuthResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGC_GameServer_AuthResult* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGC_GameServer_AuthResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGC_GameServer_AuthResult& from);
  void MergeFrom(const CMsgGC_GameServer_AuthResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGC_GameServer_AuthResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string message = 5;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 5;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // optional int32 game_server_standing = 2;
  bool has_game_server_standing() const;
  void clear_game_server_standing();
  static const int kGameServerStandingFieldNumber = 2;
  ::google::protobuf::int32 game_server_standing() const;
  void set_game_server_standing(::google::protobuf::int32 value);

  // optional bool authenticated = 1;
  bool has_authenticated() const;
  void clear_authenticated();
  static const int kAuthenticatedFieldNumber = 1;
  bool authenticated() const;
  void set_authenticated(bool value);

  // optional bool is_valve_server = 4;
  bool has_is_valve_server() const;
  void clear_is_valve_server();
  static const int kIsValveServerFieldNumber = 4;
  bool is_valve_server() const;
  void set_is_valve_server(bool value);

  // optional int32 game_server_standing_trend = 3;
  bool has_game_server_standing_trend() const;
  void clear_game_server_standing_trend();
  static const int kGameServerStandingTrendFieldNumber = 3;
  ::google::protobuf::int32 game_server_standing_trend() const;
  void set_game_server_standing_trend(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_AuthResult)
 private:
  void set_has_authenticated();
  void clear_has_authenticated();
  void set_has_game_server_standing();
  void clear_has_game_server_standing();
  void set_has_game_server_standing_trend();
  void clear_has_game_server_standing_trend();
  void set_has_is_valve_server();
  void clear_has_is_valve_server();
  void set_has_message();
  void clear_has_message();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::int32 game_server_standing_;
  bool authenticated_;
  bool is_valve_server_;
  ::google::protobuf::int32 game_server_standing_trend_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGC_GameServer_AuthResultImpl();
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_AuthChallengeResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGC_GameServer_AuthChallengeResponse) */ {
 public:
  CMsgGC_GameServer_AuthChallengeResponse();
  virtual ~CMsgGC_GameServer_AuthChallengeResponse();

  CMsgGC_GameServer_AuthChallengeResponse(const CMsgGC_GameServer_AuthChallengeResponse& from);

  inline CMsgGC_GameServer_AuthChallengeResponse& operator=(const CMsgGC_GameServer_AuthChallengeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGC_GameServer_AuthChallengeResponse(CMsgGC_GameServer_AuthChallengeResponse&& from) noexcept
    : CMsgGC_GameServer_AuthChallengeResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGC_GameServer_AuthChallengeResponse& operator=(CMsgGC_GameServer_AuthChallengeResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_AuthChallengeResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGC_GameServer_AuthChallengeResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGC_GameServer_AuthChallengeResponse*>(
               &_CMsgGC_GameServer_AuthChallengeResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(CMsgGC_GameServer_AuthChallengeResponse* other);
  friend void swap(CMsgGC_GameServer_AuthChallengeResponse& a, CMsgGC_GameServer_AuthChallengeResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGC_GameServer_AuthChallengeResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGC_GameServer_AuthChallengeResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGC_GameServer_AuthChallengeResponse& from);
  void MergeFrom(const CMsgGC_GameServer_AuthChallengeResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGC_GameServer_AuthChallengeResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes hashed_challenge_string = 2;
  bool has_hashed_challenge_string() const;
  void clear_hashed_challenge_string();
  static const int kHashedChallengeStringFieldNumber = 2;
  const ::std::string& hashed_challenge_string() const;
  void set_hashed_challenge_string(const ::std::string& value);
  #if LANG_CXX11
  void set_hashed_challenge_string(::std::string&& value);
  #endif
  void set_hashed_challenge_string(const char* value);
  void set_hashed_challenge_string(const void* value, size_t size);
  ::std::string* mutable_hashed_challenge_string();
  ::std::string* release_hashed_challenge_string();
  void set_allocated_hashed_challenge_string(::std::string* hashed_challenge_string);

  // optional uint32 game_server_account_id = 1;
  bool has_game_server_account_id() const;
  void clear_game_server_account_id();
  static const int kGameServerAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 game_server_account_id() const;
  void set_game_server_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_AuthChallengeResponse)
 private:
  void set_has_game_server_account_id();
  void clear_has_game_server_account_id();
  void set_has_hashed_challenge_string();
  void clear_has_hashed_challenge_string();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr hashed_challenge_string_;
  ::google::protobuf::uint32 game_server_account_id_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGC_GameServer_AuthChallengeResponseImpl();
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_CreateIdentity : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGC_GameServer_CreateIdentity) */ {
 public:
  CMsgGC_GameServer_CreateIdentity();
  virtual ~CMsgGC_GameServer_CreateIdentity();

  CMsgGC_GameServer_CreateIdentity(const CMsgGC_GameServer_CreateIdentity& from);

  inline CMsgGC_GameServer_CreateIdentity& operator=(const CMsgGC_GameServer_CreateIdentity& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGC_GameServer_CreateIdentity(CMsgGC_GameServer_CreateIdentity&& from) noexcept
    : CMsgGC_GameServer_CreateIdentity() {
    *this = ::std::move(from);
  }

  inline CMsgGC_GameServer_CreateIdentity& operator=(CMsgGC_GameServer_CreateIdentity&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_CreateIdentity& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGC_GameServer_CreateIdentity* internal_default_instance() {
    return reinterpret_cast<const CMsgGC_GameServer_CreateIdentity*>(
               &_CMsgGC_GameServer_CreateIdentity_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(CMsgGC_GameServer_CreateIdentity* other);
  friend void swap(CMsgGC_GameServer_CreateIdentity& a, CMsgGC_GameServer_CreateIdentity& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGC_GameServer_CreateIdentity* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGC_GameServer_CreateIdentity* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGC_GameServer_CreateIdentity& from);
  void MergeFrom(const CMsgGC_GameServer_CreateIdentity& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGC_GameServer_CreateIdentity* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_CreateIdentity)
 private:
  void set_has_account_id();
  void clear_has_account_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGC_GameServer_CreateIdentityImpl();
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_CreateIdentityResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGC_GameServer_CreateIdentityResponse) */ {
 public:
  CMsgGC_GameServer_CreateIdentityResponse();
  virtual ~CMsgGC_GameServer_CreateIdentityResponse();

  CMsgGC_GameServer_CreateIdentityResponse(const CMsgGC_GameServer_CreateIdentityResponse& from);

  inline CMsgGC_GameServer_CreateIdentityResponse& operator=(const CMsgGC_GameServer_CreateIdentityResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGC_GameServer_CreateIdentityResponse(CMsgGC_GameServer_CreateIdentityResponse&& from) noexcept
    : CMsgGC_GameServer_CreateIdentityResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGC_GameServer_CreateIdentityResponse& operator=(CMsgGC_GameServer_CreateIdentityResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_CreateIdentityResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGC_GameServer_CreateIdentityResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGC_GameServer_CreateIdentityResponse*>(
               &_CMsgGC_GameServer_CreateIdentityResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(CMsgGC_GameServer_CreateIdentityResponse* other);
  friend void swap(CMsgGC_GameServer_CreateIdentityResponse& a, CMsgGC_GameServer_CreateIdentityResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGC_GameServer_CreateIdentityResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGC_GameServer_CreateIdentityResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGC_GameServer_CreateIdentityResponse& from);
  void MergeFrom(const CMsgGC_GameServer_CreateIdentityResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGC_GameServer_CreateIdentityResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgGC_GameServer_CreateIdentityResponse_EStatus EStatus;
  static const EStatus kStatus_GenericFailure =
    CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_GenericFailure;
  static const EStatus kStatus_TooMany =
    CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_TooMany;
  static const EStatus kStatus_NoPrivs =
    CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_NoPrivs;
  static const EStatus kStatus_Created =
    CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_Created;
  static inline bool EStatus_IsValid(int value) {
    return CMsgGC_GameServer_CreateIdentityResponse_EStatus_IsValid(value);
  }
  static const EStatus EStatus_MIN =
    CMsgGC_GameServer_CreateIdentityResponse_EStatus_EStatus_MIN;
  static const EStatus EStatus_MAX =
    CMsgGC_GameServer_CreateIdentityResponse_EStatus_EStatus_MAX;
  static const int EStatus_ARRAYSIZE =
    CMsgGC_GameServer_CreateIdentityResponse_EStatus_EStatus_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EStatus_descriptor() {
    return CMsgGC_GameServer_CreateIdentityResponse_EStatus_descriptor();
  }
  static inline const ::std::string& EStatus_Name(EStatus value) {
    return CMsgGC_GameServer_CreateIdentityResponse_EStatus_Name(value);
  }
  static inline bool EStatus_Parse(const ::std::string& name,
      EStatus* value) {
    return CMsgGC_GameServer_CreateIdentityResponse_EStatus_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string game_server_identity_token = 3;
  bool has_game_server_identity_token() const;
  void clear_game_server_identity_token();
  static const int kGameServerIdentityTokenFieldNumber = 3;
  const ::std::string& game_server_identity_token() const;
  void set_game_server_identity_token(const ::std::string& value);
  #if LANG_CXX11
  void set_game_server_identity_token(::std::string&& value);
  #endif
  void set_game_server_identity_token(const char* value);
  void set_game_server_identity_token(const char* value, size_t size);
  ::std::string* mutable_game_server_identity_token();
  ::std::string* release_game_server_identity_token();
  void set_allocated_game_server_identity_token(::std::string* game_server_identity_token);

  // optional bool account_created = 1;
  bool has_account_created() const;
  void clear_account_created();
  static const int kAccountCreatedFieldNumber = 1;
  bool account_created() const;
  void set_account_created(bool value);

  // optional uint32 game_server_account_id = 2;
  bool has_game_server_account_id() const;
  void clear_game_server_account_id();
  static const int kGameServerAccountIdFieldNumber = 2;
  ::google::protobuf::uint32 game_server_account_id() const;
  void set_game_server_account_id(::google::protobuf::uint32 value);

  // optional .CMsgGC_GameServer_CreateIdentityResponse.EStatus status = 4 [default = kStatus_GenericFailure];
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 4;
  ::CMsgGC_GameServer_CreateIdentityResponse_EStatus status() const;
  void set_status(::CMsgGC_GameServer_CreateIdentityResponse_EStatus value);

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_CreateIdentityResponse)
 private:
  void set_has_account_created();
  void clear_has_account_created();
  void set_has_game_server_account_id();
  void clear_has_game_server_account_id();
  void set_has_game_server_identity_token();
  void clear_has_game_server_identity_token();
  void set_has_status();
  void clear_has_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr game_server_identity_token_;
  bool account_created_;
  ::google::protobuf::uint32 game_server_account_id_;
  int status_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGC_GameServer_CreateIdentityResponseImpl();
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_List : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGC_GameServer_List) */ {
 public:
  CMsgGC_GameServer_List();
  virtual ~CMsgGC_GameServer_List();

  CMsgGC_GameServer_List(const CMsgGC_GameServer_List& from);

  inline CMsgGC_GameServer_List& operator=(const CMsgGC_GameServer_List& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGC_GameServer_List(CMsgGC_GameServer_List&& from) noexcept
    : CMsgGC_GameServer_List() {
    *this = ::std::move(from);
  }

  inline CMsgGC_GameServer_List& operator=(CMsgGC_GameServer_List&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_List& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGC_GameServer_List* internal_default_instance() {
    return reinterpret_cast<const CMsgGC_GameServer_List*>(
               &_CMsgGC_GameServer_List_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    41;

  void Swap(CMsgGC_GameServer_List* other);
  friend void swap(CMsgGC_GameServer_List& a, CMsgGC_GameServer_List& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGC_GameServer_List* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGC_GameServer_List* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGC_GameServer_List& from);
  void MergeFrom(const CMsgGC_GameServer_List& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGC_GameServer_List* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_List)
 private:
  void set_has_account_id();
  void clear_has_account_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGC_GameServer_ListImpl();
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_ListResponse_GameServerIdentity : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGC_GameServer_ListResponse.GameServerIdentity) */ {
 public:
  CMsgGC_GameServer_ListResponse_GameServerIdentity();
  virtual ~CMsgGC_GameServer_ListResponse_GameServerIdentity();

  CMsgGC_GameServer_ListResponse_GameServerIdentity(const CMsgGC_GameServer_ListResponse_GameServerIdentity& from);

  inline CMsgGC_GameServer_ListResponse_GameServerIdentity& operator=(const CMsgGC_GameServer_ListResponse_GameServerIdentity& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGC_GameServer_ListResponse_GameServerIdentity(CMsgGC_GameServer_ListResponse_GameServerIdentity&& from) noexcept
    : CMsgGC_GameServer_ListResponse_GameServerIdentity() {
    *this = ::std::move(from);
  }

  inline CMsgGC_GameServer_ListResponse_GameServerIdentity& operator=(CMsgGC_GameServer_ListResponse_GameServerIdentity&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_ListResponse_GameServerIdentity& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGC_GameServer_ListResponse_GameServerIdentity* internal_default_instance() {
    return reinterpret_cast<const CMsgGC_GameServer_ListResponse_GameServerIdentity*>(
               &_CMsgGC_GameServer_ListResponse_GameServerIdentity_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    42;

  void Swap(CMsgGC_GameServer_ListResponse_GameServerIdentity* other);
  friend void swap(CMsgGC_GameServer_ListResponse_GameServerIdentity& a, CMsgGC_GameServer_ListResponse_GameServerIdentity& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGC_GameServer_ListResponse_GameServerIdentity* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGC_GameServer_ListResponse_GameServerIdentity* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGC_GameServer_ListResponse_GameServerIdentity& from);
  void MergeFrom(const CMsgGC_GameServer_ListResponse_GameServerIdentity& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGC_GameServer_ListResponse_GameServerIdentity* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string game_server_identity_token = 2;
  bool has_game_server_identity_token() const;
  void clear_game_server_identity_token();
  static const int kGameServerIdentityTokenFieldNumber = 2;
  const ::std::string& game_server_identity_token() const;
  void set_game_server_identity_token(const ::std::string& value);
  #if LANG_CXX11
  void set_game_server_identity_token(::std::string&& value);
  #endif
  void set_game_server_identity_token(const char* value);
  void set_game_server_identity_token(const char* value, size_t size);
  ::std::string* mutable_game_server_identity_token();
  ::std::string* release_game_server_identity_token();
  void set_allocated_game_server_identity_token(::std::string* game_server_identity_token);

  // optional uint32 game_server_account_id = 1;
  bool has_game_server_account_id() const;
  void clear_game_server_account_id();
  static const int kGameServerAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 game_server_account_id() const;
  void set_game_server_account_id(::google::protobuf::uint32 value);

  // optional int32 game_server_standing = 3;
  bool has_game_server_standing() const;
  void clear_game_server_standing();
  static const int kGameServerStandingFieldNumber = 3;
  ::google::protobuf::int32 game_server_standing() const;
  void set_game_server_standing(::google::protobuf::int32 value);

  // optional int32 game_server_standing_trend = 4;
  bool has_game_server_standing_trend() const;
  void clear_game_server_standing_trend();
  static const int kGameServerStandingTrendFieldNumber = 4;
  ::google::protobuf::int32 game_server_standing_trend() const;
  void set_game_server_standing_trend(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_ListResponse.GameServerIdentity)
 private:
  void set_has_game_server_account_id();
  void clear_has_game_server_account_id();
  void set_has_game_server_identity_token();
  void clear_has_game_server_identity_token();
  void set_has_game_server_standing();
  void clear_has_game_server_standing();
  void set_has_game_server_standing_trend();
  void clear_has_game_server_standing_trend();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr game_server_identity_token_;
  ::google::protobuf::uint32 game_server_account_id_;
  ::google::protobuf::int32 game_server_standing_;
  ::google::protobuf::int32 game_server_standing_trend_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGC_GameServer_ListResponse_GameServerIdentityImpl();
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_ListResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGC_GameServer_ListResponse) */ {
 public:
  CMsgGC_GameServer_ListResponse();
  virtual ~CMsgGC_GameServer_ListResponse();

  CMsgGC_GameServer_ListResponse(const CMsgGC_GameServer_ListResponse& from);

  inline CMsgGC_GameServer_ListResponse& operator=(const CMsgGC_GameServer_ListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGC_GameServer_ListResponse(CMsgGC_GameServer_ListResponse&& from) noexcept
    : CMsgGC_GameServer_ListResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGC_GameServer_ListResponse& operator=(CMsgGC_GameServer_ListResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_ListResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGC_GameServer_ListResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGC_GameServer_ListResponse*>(
               &_CMsgGC_GameServer_ListResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    43;

  void Swap(CMsgGC_GameServer_ListResponse* other);
  friend void swap(CMsgGC_GameServer_ListResponse& a, CMsgGC_GameServer_ListResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGC_GameServer_ListResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGC_GameServer_ListResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGC_GameServer_ListResponse& from);
  void MergeFrom(const CMsgGC_GameServer_ListResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGC_GameServer_ListResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgGC_GameServer_ListResponse_GameServerIdentity GameServerIdentity;

  // accessors -------------------------------------------------------

  // repeated .CMsgGC_GameServer_ListResponse.GameServerIdentity owned_game_servers = 1;
  int owned_game_servers_size() const;
  void clear_owned_game_servers();
  static const int kOwnedGameServersFieldNumber = 1;
  const ::CMsgGC_GameServer_ListResponse_GameServerIdentity& owned_game_servers(int index) const;
  ::CMsgGC_GameServer_ListResponse_GameServerIdentity* mutable_owned_game_servers(int index);
  ::CMsgGC_GameServer_ListResponse_GameServerIdentity* add_owned_game_servers();
  ::google::protobuf::RepeatedPtrField< ::CMsgGC_GameServer_ListResponse_GameServerIdentity >*
      mutable_owned_game_servers();
  const ::google::protobuf::RepeatedPtrField< ::CMsgGC_GameServer_ListResponse_GameServerIdentity >&
      owned_game_servers() const;

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_ListResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGC_GameServer_ListResponse_GameServerIdentity > owned_game_servers_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGC_GameServer_ListResponseImpl();
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_ResetIdentity : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGC_GameServer_ResetIdentity) */ {
 public:
  CMsgGC_GameServer_ResetIdentity();
  virtual ~CMsgGC_GameServer_ResetIdentity();

  CMsgGC_GameServer_ResetIdentity(const CMsgGC_GameServer_ResetIdentity& from);

  inline CMsgGC_GameServer_ResetIdentity& operator=(const CMsgGC_GameServer_ResetIdentity& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGC_GameServer_ResetIdentity(CMsgGC_GameServer_ResetIdentity&& from) noexcept
    : CMsgGC_GameServer_ResetIdentity() {
    *this = ::std::move(from);
  }

  inline CMsgGC_GameServer_ResetIdentity& operator=(CMsgGC_GameServer_ResetIdentity&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_ResetIdentity& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGC_GameServer_ResetIdentity* internal_default_instance() {
    return reinterpret_cast<const CMsgGC_GameServer_ResetIdentity*>(
               &_CMsgGC_GameServer_ResetIdentity_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    44;

  void Swap(CMsgGC_GameServer_ResetIdentity* other);
  friend void swap(CMsgGC_GameServer_ResetIdentity& a, CMsgGC_GameServer_ResetIdentity& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGC_GameServer_ResetIdentity* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGC_GameServer_ResetIdentity* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGC_GameServer_ResetIdentity& from);
  void MergeFrom(const CMsgGC_GameServer_ResetIdentity& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGC_GameServer_ResetIdentity* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 game_server_account_id = 1;
  bool has_game_server_account_id() const;
  void clear_game_server_account_id();
  static const int kGameServerAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 game_server_account_id() const;
  void set_game_server_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_ResetIdentity)
 private:
  void set_has_game_server_account_id();
  void clear_has_game_server_account_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 game_server_account_id_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGC_GameServer_ResetIdentityImpl();
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_ResetIdentityResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGC_GameServer_ResetIdentityResponse) */ {
 public:
  CMsgGC_GameServer_ResetIdentityResponse();
  virtual ~CMsgGC_GameServer_ResetIdentityResponse();

  CMsgGC_GameServer_ResetIdentityResponse(const CMsgGC_GameServer_ResetIdentityResponse& from);

  inline CMsgGC_GameServer_ResetIdentityResponse& operator=(const CMsgGC_GameServer_ResetIdentityResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGC_GameServer_ResetIdentityResponse(CMsgGC_GameServer_ResetIdentityResponse&& from) noexcept
    : CMsgGC_GameServer_ResetIdentityResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGC_GameServer_ResetIdentityResponse& operator=(CMsgGC_GameServer_ResetIdentityResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_ResetIdentityResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGC_GameServer_ResetIdentityResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGC_GameServer_ResetIdentityResponse*>(
               &_CMsgGC_GameServer_ResetIdentityResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    45;

  void Swap(CMsgGC_GameServer_ResetIdentityResponse* other);
  friend void swap(CMsgGC_GameServer_ResetIdentityResponse& a, CMsgGC_GameServer_ResetIdentityResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGC_GameServer_ResetIdentityResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGC_GameServer_ResetIdentityResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGC_GameServer_ResetIdentityResponse& from);
  void MergeFrom(const CMsgGC_GameServer_ResetIdentityResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGC_GameServer_ResetIdentityResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string game_server_identity_token = 3;
  bool has_game_server_identity_token() const;
  void clear_game_server_identity_token();
  static const int kGameServerIdentityTokenFieldNumber = 3;
  const ::std::string& game_server_identity_token() const;
  void set_game_server_identity_token(const ::std::string& value);
  #if LANG_CXX11
  void set_game_server_identity_token(::std::string&& value);
  #endif
  void set_game_server_identity_token(const char* value);
  void set_game_server_identity_token(const char* value, size_t size);
  ::std::string* mutable_game_server_identity_token();
  ::std::string* release_game_server_identity_token();
  void set_allocated_game_server_identity_token(::std::string* game_server_identity_token);

  // optional bool game_server_identity_token_reset = 1;
  bool has_game_server_identity_token_reset() const;
  void clear_game_server_identity_token_reset();
  static const int kGameServerIdentityTokenResetFieldNumber = 1;
  bool game_server_identity_token_reset() const;
  void set_game_server_identity_token_reset(bool value);

  // optional uint32 game_server_account_id = 2;
  bool has_game_server_account_id() const;
  void clear_game_server_account_id();
  static const int kGameServerAccountIdFieldNumber = 2;
  ::google::protobuf::uint32 game_server_account_id() const;
  void set_game_server_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_ResetIdentityResponse)
 private:
  void set_has_game_server_identity_token_reset();
  void clear_has_game_server_identity_token_reset();
  void set_has_game_server_account_id();
  void clear_has_game_server_account_id();
  void set_has_game_server_identity_token();
  void clear_has_game_server_identity_token();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr game_server_identity_token_;
  bool game_server_identity_token_reset_;
  ::google::protobuf::uint32 game_server_account_id_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGC_GameServer_ResetIdentityResponseImpl();
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_AckPolicy : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGC_GameServer_AckPolicy) */ {
 public:
  CMsgGC_GameServer_AckPolicy();
  virtual ~CMsgGC_GameServer_AckPolicy();

  CMsgGC_GameServer_AckPolicy(const CMsgGC_GameServer_AckPolicy& from);

  inline CMsgGC_GameServer_AckPolicy& operator=(const CMsgGC_GameServer_AckPolicy& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGC_GameServer_AckPolicy(CMsgGC_GameServer_AckPolicy&& from) noexcept
    : CMsgGC_GameServer_AckPolicy() {
    *this = ::std::move(from);
  }

  inline CMsgGC_GameServer_AckPolicy& operator=(CMsgGC_GameServer_AckPolicy&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_AckPolicy& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGC_GameServer_AckPolicy* internal_default_instance() {
    return reinterpret_cast<const CMsgGC_GameServer_AckPolicy*>(
               &_CMsgGC_GameServer_AckPolicy_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    46;

  void Swap(CMsgGC_GameServer_AckPolicy* other);
  friend void swap(CMsgGC_GameServer_AckPolicy& a, CMsgGC_GameServer_AckPolicy& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGC_GameServer_AckPolicy* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGC_GameServer_AckPolicy* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGC_GameServer_AckPolicy& from);
  void MergeFrom(const CMsgGC_GameServer_AckPolicy& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGC_GameServer_AckPolicy* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_AckPolicy)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGC_GameServer_AckPolicyImpl();
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_AckPolicyResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGC_GameServer_AckPolicyResponse) */ {
 public:
  CMsgGC_GameServer_AckPolicyResponse();
  virtual ~CMsgGC_GameServer_AckPolicyResponse();

  CMsgGC_GameServer_AckPolicyResponse(const CMsgGC_GameServer_AckPolicyResponse& from);

  inline CMsgGC_GameServer_AckPolicyResponse& operator=(const CMsgGC_GameServer_AckPolicyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGC_GameServer_AckPolicyResponse(CMsgGC_GameServer_AckPolicyResponse&& from) noexcept
    : CMsgGC_GameServer_AckPolicyResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGC_GameServer_AckPolicyResponse& operator=(CMsgGC_GameServer_AckPolicyResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_AckPolicyResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGC_GameServer_AckPolicyResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGC_GameServer_AckPolicyResponse*>(
               &_CMsgGC_GameServer_AckPolicyResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    47;

  void Swap(CMsgGC_GameServer_AckPolicyResponse* other);
  friend void swap(CMsgGC_GameServer_AckPolicyResponse& a, CMsgGC_GameServer_AckPolicyResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGC_GameServer_AckPolicyResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGC_GameServer_AckPolicyResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGC_GameServer_AckPolicyResponse& from);
  void MergeFrom(const CMsgGC_GameServer_AckPolicyResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGC_GameServer_AckPolicyResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string message = 2;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // optional uint32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_AckPolicyResponse)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_message();
  void clear_has_message();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::uint32 result_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGC_GameServer_AckPolicyResponseImpl();
};
// -------------------------------------------------------------------

class CMsgGC_Client_UseServerModificationItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGC_Client_UseServerModificationItem) */ {
 public:
  CMsgGC_Client_UseServerModificationItem();
  virtual ~CMsgGC_Client_UseServerModificationItem();

  CMsgGC_Client_UseServerModificationItem(const CMsgGC_Client_UseServerModificationItem& from);

  inline CMsgGC_Client_UseServerModificationItem& operator=(const CMsgGC_Client_UseServerModificationItem& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGC_Client_UseServerModificationItem(CMsgGC_Client_UseServerModificationItem&& from) noexcept
    : CMsgGC_Client_UseServerModificationItem() {
    *this = ::std::move(from);
  }

  inline CMsgGC_Client_UseServerModificationItem& operator=(CMsgGC_Client_UseServerModificationItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_Client_UseServerModificationItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGC_Client_UseServerModificationItem* internal_default_instance() {
    return reinterpret_cast<const CMsgGC_Client_UseServerModificationItem*>(
               &_CMsgGC_Client_UseServerModificationItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    48;

  void Swap(CMsgGC_Client_UseServerModificationItem* other);
  friend void swap(CMsgGC_Client_UseServerModificationItem& a, CMsgGC_Client_UseServerModificationItem& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGC_Client_UseServerModificationItem* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGC_Client_UseServerModificationItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGC_Client_UseServerModificationItem& from);
  void MergeFrom(const CMsgGC_Client_UseServerModificationItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGC_Client_UseServerModificationItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 item_id = 1;
  bool has_item_id() const;
  void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::uint64 item_id() const;
  void set_item_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgGC_Client_UseServerModificationItem)
 private:
  void set_has_item_id();
  void clear_has_item_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 item_id_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGC_Client_UseServerModificationItemImpl();
};
// -------------------------------------------------------------------

class CMsgGC_Client_UseServerModificationItem_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGC_Client_UseServerModificationItem_Response) */ {
 public:
  CMsgGC_Client_UseServerModificationItem_Response();
  virtual ~CMsgGC_Client_UseServerModificationItem_Response();

  CMsgGC_Client_UseServerModificationItem_Response(const CMsgGC_Client_UseServerModificationItem_Response& from);

  inline CMsgGC_Client_UseServerModificationItem_Response& operator=(const CMsgGC_Client_UseServerModificationItem_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGC_Client_UseServerModificationItem_Response(CMsgGC_Client_UseServerModificationItem_Response&& from) noexcept
    : CMsgGC_Client_UseServerModificationItem_Response() {
    *this = ::std::move(from);
  }

  inline CMsgGC_Client_UseServerModificationItem_Response& operator=(CMsgGC_Client_UseServerModificationItem_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_Client_UseServerModificationItem_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGC_Client_UseServerModificationItem_Response* internal_default_instance() {
    return reinterpret_cast<const CMsgGC_Client_UseServerModificationItem_Response*>(
               &_CMsgGC_Client_UseServerModificationItem_Response_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    49;

  void Swap(CMsgGC_Client_UseServerModificationItem_Response* other);
  friend void swap(CMsgGC_Client_UseServerModificationItem_Response& a, CMsgGC_Client_UseServerModificationItem_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGC_Client_UseServerModificationItem_Response* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGC_Client_UseServerModificationItem_Response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGC_Client_UseServerModificationItem_Response& from);
  void MergeFrom(const CMsgGC_Client_UseServerModificationItem_Response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGC_Client_UseServerModificationItem_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse EServerModificationItemResponse;
  static const EServerModificationItemResponse kServerModificationItemResponse_AlreadyInUse =
    CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_AlreadyInUse;
  static const EServerModificationItemResponse kServerModificationItemResponse_NotOnAuthenticatedServer =
    CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_NotOnAuthenticatedServer;
  static const EServerModificationItemResponse kServerModificationItemResponse_ServerReject =
    CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_ServerReject;
  static const EServerModificationItemResponse kServerModificationItemResponse_InternalError =
    CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_InternalError;
  static const EServerModificationItemResponse kServerModificationItemResponse_EventAlreadyActive =
    CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_EventAlreadyActive;
  static inline bool EServerModificationItemResponse_IsValid(int value) {
    return CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_IsValid(value);
  }
  static const EServerModificationItemResponse EServerModificationItemResponse_MIN =
    CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_EServerModificationItemResponse_MIN;
  static const EServerModificationItemResponse EServerModificationItemResponse_MAX =
    CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_EServerModificationItemResponse_MAX;
  static const int EServerModificationItemResponse_ARRAYSIZE =
    CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_EServerModificationItemResponse_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EServerModificationItemResponse_descriptor() {
    return CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_descriptor();
  }
  static inline const ::std::string& EServerModificationItemResponse_Name(EServerModificationItemResponse value) {
    return CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_Name(value);
  }
  static inline bool EServerModificationItemResponse_Parse(const ::std::string& name,
      EServerModificationItemResponse* value) {
    return CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CMsgGC_Client_UseServerModificationItem_Response.EServerModificationItemResponse response_code = 1 [default = kServerModificationItemResponse_AlreadyInUse];
  bool has_response_code() const;
  void clear_response_code();
  static const int kResponseCodeFieldNumber = 1;
  ::CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse response_code() const;
  void set_response_code(::CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse value);

  // @@protoc_insertion_point(class_scope:CMsgGC_Client_UseServerModificationItem_Response)
 private:
  void set_has_response_code();
  void clear_has_response_code();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int response_code_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGC_Client_UseServerModificationItem_ResponseImpl();
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_UseServerModificationItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGC_GameServer_UseServerModificationItem) */ {
 public:
  CMsgGC_GameServer_UseServerModificationItem();
  virtual ~CMsgGC_GameServer_UseServerModificationItem();

  CMsgGC_GameServer_UseServerModificationItem(const CMsgGC_GameServer_UseServerModificationItem& from);

  inline CMsgGC_GameServer_UseServerModificationItem& operator=(const CMsgGC_GameServer_UseServerModificationItem& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGC_GameServer_UseServerModificationItem(CMsgGC_GameServer_UseServerModificationItem&& from) noexcept
    : CMsgGC_GameServer_UseServerModificationItem() {
    *this = ::std::move(from);
  }

  inline CMsgGC_GameServer_UseServerModificationItem& operator=(CMsgGC_GameServer_UseServerModificationItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_UseServerModificationItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGC_GameServer_UseServerModificationItem* internal_default_instance() {
    return reinterpret_cast<const CMsgGC_GameServer_UseServerModificationItem*>(
               &_CMsgGC_GameServer_UseServerModificationItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    50;

  void Swap(CMsgGC_GameServer_UseServerModificationItem* other);
  friend void swap(CMsgGC_GameServer_UseServerModificationItem& a, CMsgGC_GameServer_UseServerModificationItem& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGC_GameServer_UseServerModificationItem* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGC_GameServer_UseServerModificationItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGC_GameServer_UseServerModificationItem& from);
  void MergeFrom(const CMsgGC_GameServer_UseServerModificationItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGC_GameServer_UseServerModificationItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .EServerModificationItemType modification_type = 1 [default = kGameServerModificationItem_Halloween];
  bool has_modification_type() const;
  void clear_modification_type();
  static const int kModificationTypeFieldNumber = 1;
  ::EServerModificationItemType modification_type() const;
  void set_modification_type(::EServerModificationItemType value);

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_UseServerModificationItem)
 private:
  void set_has_modification_type();
  void clear_has_modification_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int modification_type_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGC_GameServer_UseServerModificationItemImpl();
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_UseServerModificationItem_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGC_GameServer_UseServerModificationItem_Response) */ {
 public:
  CMsgGC_GameServer_UseServerModificationItem_Response();
  virtual ~CMsgGC_GameServer_UseServerModificationItem_Response();

  CMsgGC_GameServer_UseServerModificationItem_Response(const CMsgGC_GameServer_UseServerModificationItem_Response& from);

  inline CMsgGC_GameServer_UseServerModificationItem_Response& operator=(const CMsgGC_GameServer_UseServerModificationItem_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGC_GameServer_UseServerModificationItem_Response(CMsgGC_GameServer_UseServerModificationItem_Response&& from) noexcept
    : CMsgGC_GameServer_UseServerModificationItem_Response() {
    *this = ::std::move(from);
  }

  inline CMsgGC_GameServer_UseServerModificationItem_Response& operator=(CMsgGC_GameServer_UseServerModificationItem_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_UseServerModificationItem_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGC_GameServer_UseServerModificationItem_Response* internal_default_instance() {
    return reinterpret_cast<const CMsgGC_GameServer_UseServerModificationItem_Response*>(
               &_CMsgGC_GameServer_UseServerModificationItem_Response_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    51;

  void Swap(CMsgGC_GameServer_UseServerModificationItem_Response* other);
  friend void swap(CMsgGC_GameServer_UseServerModificationItem_Response& a, CMsgGC_GameServer_UseServerModificationItem_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGC_GameServer_UseServerModificationItem_Response* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGC_GameServer_UseServerModificationItem_Response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGC_GameServer_UseServerModificationItem_Response& from);
  void MergeFrom(const CMsgGC_GameServer_UseServerModificationItem_Response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGC_GameServer_UseServerModificationItem_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse EServerModificationItemServerResponse;
  static const EServerModificationItemServerResponse kServerModificationItemServerResponse_Accepted =
    CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_kServerModificationItemServerResponse_Accepted;
  static const EServerModificationItemServerResponse kServerModificationItemServerResponse_NoVoteCalled =
    CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_kServerModificationItemServerResponse_NoVoteCalled;
  static const EServerModificationItemServerResponse kServerModificationItemServerResponse_VoteFailed =
    CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_kServerModificationItemServerResponse_VoteFailed;
  static inline bool EServerModificationItemServerResponse_IsValid(int value) {
    return CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_IsValid(value);
  }
  static const EServerModificationItemServerResponse EServerModificationItemServerResponse_MIN =
    CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_EServerModificationItemServerResponse_MIN;
  static const EServerModificationItemServerResponse EServerModificationItemServerResponse_MAX =
    CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_EServerModificationItemServerResponse_MAX;
  static const int EServerModificationItemServerResponse_ARRAYSIZE =
    CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_EServerModificationItemServerResponse_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EServerModificationItemServerResponse_descriptor() {
    return CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_descriptor();
  }
  static inline const ::std::string& EServerModificationItemServerResponse_Name(EServerModificationItemServerResponse value) {
    return CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_Name(value);
  }
  static inline bool EServerModificationItemServerResponse_Parse(const ::std::string& name,
      EServerModificationItemServerResponse* value) {
    return CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .EServerModificationItemType modification_type = 1 [default = kGameServerModificationItem_Halloween];
  bool has_modification_type() const;
  void clear_modification_type();
  static const int kModificationTypeFieldNumber = 1;
  ::EServerModificationItemType modification_type() const;
  void set_modification_type(::EServerModificationItemType value);

  // optional .CMsgGC_GameServer_UseServerModificationItem_Response.EServerModificationItemServerResponse server_response_code = 2 [default = kServerModificationItemServerResponse_Accepted];
  bool has_server_response_code() const;
  void clear_server_response_code();
  static const int kServerResponseCodeFieldNumber = 2;
  ::CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse server_response_code() const;
  void set_server_response_code(::CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse value);

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_UseServerModificationItem_Response)
 private:
  void set_has_modification_type();
  void clear_has_modification_type();
  void set_has_server_response_code();
  void clear_has_server_response_code();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int modification_type_;
  int server_response_code_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGC_GameServer_UseServerModificationItem_ResponseImpl();
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_ServerModificationItemExpired : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGC_GameServer_ServerModificationItemExpired) */ {
 public:
  CMsgGC_GameServer_ServerModificationItemExpired();
  virtual ~CMsgGC_GameServer_ServerModificationItemExpired();

  CMsgGC_GameServer_ServerModificationItemExpired(const CMsgGC_GameServer_ServerModificationItemExpired& from);

  inline CMsgGC_GameServer_ServerModificationItemExpired& operator=(const CMsgGC_GameServer_ServerModificationItemExpired& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGC_GameServer_ServerModificationItemExpired(CMsgGC_GameServer_ServerModificationItemExpired&& from) noexcept
    : CMsgGC_GameServer_ServerModificationItemExpired() {
    *this = ::std::move(from);
  }

  inline CMsgGC_GameServer_ServerModificationItemExpired& operator=(CMsgGC_GameServer_ServerModificationItemExpired&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_ServerModificationItemExpired& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGC_GameServer_ServerModificationItemExpired* internal_default_instance() {
    return reinterpret_cast<const CMsgGC_GameServer_ServerModificationItemExpired*>(
               &_CMsgGC_GameServer_ServerModificationItemExpired_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    52;

  void Swap(CMsgGC_GameServer_ServerModificationItemExpired* other);
  friend void swap(CMsgGC_GameServer_ServerModificationItemExpired& a, CMsgGC_GameServer_ServerModificationItemExpired& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGC_GameServer_ServerModificationItemExpired* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGC_GameServer_ServerModificationItemExpired* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGC_GameServer_ServerModificationItemExpired& from);
  void MergeFrom(const CMsgGC_GameServer_ServerModificationItemExpired& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGC_GameServer_ServerModificationItemExpired* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .EServerModificationItemType modification_type = 1 [default = kGameServerModificationItem_Halloween];
  bool has_modification_type() const;
  void clear_modification_type();
  static const int kModificationTypeFieldNumber = 1;
  ::EServerModificationItemType modification_type() const;
  void set_modification_type(::EServerModificationItemType value);

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_ServerModificationItemExpired)
 private:
  void set_has_modification_type();
  void clear_has_modification_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int modification_type_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGC_GameServer_ServerModificationItemExpiredImpl();
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_ServerModificationItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGC_GameServer_ServerModificationItem) */ {
 public:
  CMsgGC_GameServer_ServerModificationItem();
  virtual ~CMsgGC_GameServer_ServerModificationItem();

  CMsgGC_GameServer_ServerModificationItem(const CMsgGC_GameServer_ServerModificationItem& from);

  inline CMsgGC_GameServer_ServerModificationItem& operator=(const CMsgGC_GameServer_ServerModificationItem& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGC_GameServer_ServerModificationItem(CMsgGC_GameServer_ServerModificationItem&& from) noexcept
    : CMsgGC_GameServer_ServerModificationItem() {
    *this = ::std::move(from);
  }

  inline CMsgGC_GameServer_ServerModificationItem& operator=(CMsgGC_GameServer_ServerModificationItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_ServerModificationItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGC_GameServer_ServerModificationItem* internal_default_instance() {
    return reinterpret_cast<const CMsgGC_GameServer_ServerModificationItem*>(
               &_CMsgGC_GameServer_ServerModificationItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    53;

  void Swap(CMsgGC_GameServer_ServerModificationItem* other);
  friend void swap(CMsgGC_GameServer_ServerModificationItem& a, CMsgGC_GameServer_ServerModificationItem& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGC_GameServer_ServerModificationItem* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGC_GameServer_ServerModificationItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGC_GameServer_ServerModificationItem& from);
  void MergeFrom(const CMsgGC_GameServer_ServerModificationItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGC_GameServer_ServerModificationItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool active = 2;
  bool has_active() const;
  void clear_active();
  static const int kActiveFieldNumber = 2;
  bool active() const;
  void set_active(bool value);

  // optional .EServerModificationItemType modification_type = 1 [default = kGameServerModificationItem_Halloween];
  bool has_modification_type() const;
  void clear_modification_type();
  static const int kModificationTypeFieldNumber = 1;
  ::EServerModificationItemType modification_type() const;
  void set_modification_type(::EServerModificationItemType value);

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_ServerModificationItem)
 private:
  void set_has_modification_type();
  void clear_has_modification_type();
  void set_has_active();
  void clear_has_active();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool active_;
  int modification_type_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGC_GameServer_ServerModificationItemImpl();
};
// -------------------------------------------------------------------

class CMsgGC_Halloween_ReservedItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGC_Halloween_ReservedItem) */ {
 public:
  CMsgGC_Halloween_ReservedItem();
  virtual ~CMsgGC_Halloween_ReservedItem();

  CMsgGC_Halloween_ReservedItem(const CMsgGC_Halloween_ReservedItem& from);

  inline CMsgGC_Halloween_ReservedItem& operator=(const CMsgGC_Halloween_ReservedItem& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGC_Halloween_ReservedItem(CMsgGC_Halloween_ReservedItem&& from) noexcept
    : CMsgGC_Halloween_ReservedItem() {
    *this = ::std::move(from);
  }

  inline CMsgGC_Halloween_ReservedItem& operator=(CMsgGC_Halloween_ReservedItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_Halloween_ReservedItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGC_Halloween_ReservedItem* internal_default_instance() {
    return reinterpret_cast<const CMsgGC_Halloween_ReservedItem*>(
               &_CMsgGC_Halloween_ReservedItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    54;

  void Swap(CMsgGC_Halloween_ReservedItem* other);
  friend void swap(CMsgGC_Halloween_ReservedItem& a, CMsgGC_Halloween_ReservedItem& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGC_Halloween_ReservedItem* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGC_Halloween_ReservedItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGC_Halloween_ReservedItem& from);
  void MergeFrom(const CMsgGC_Halloween_ReservedItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGC_Halloween_ReservedItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float x = 1;
  int x_size() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x(int index) const;
  void set_x(int index, float value);
  void add_x(float value);
  const ::google::protobuf::RepeatedField< float >&
      x() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_x();

  // repeated float y = 2;
  int y_size() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y(int index) const;
  void set_y(int index, float value);
  void add_y(float value);
  const ::google::protobuf::RepeatedField< float >&
      y() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_y();

  // repeated float z = 3;
  int z_size() const;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z(int index) const;
  void set_z(int index, float value);
  void add_z(float value);
  const ::google::protobuf::RepeatedField< float >&
      z() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_z();

  // optional uint32 spawn_meta_info = 7;
  bool has_spawn_meta_info() const;
  void clear_spawn_meta_info();
  static const int kSpawnMetaInfoFieldNumber = 7;
  ::google::protobuf::uint32 spawn_meta_info() const;
  void set_spawn_meta_info(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGC_Halloween_ReservedItem)
 private:
  void set_has_spawn_meta_info();
  void clear_has_spawn_meta_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< float > x_;
  ::google::protobuf::RepeatedField< float > y_;
  ::google::protobuf::RepeatedField< float > z_;
  ::google::protobuf::uint32 spawn_meta_info_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGC_Halloween_ReservedItemImpl();
};
// -------------------------------------------------------------------

class CMsgGC_Halloween_GrantItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGC_Halloween_GrantItem) */ {
 public:
  CMsgGC_Halloween_GrantItem();
  virtual ~CMsgGC_Halloween_GrantItem();

  CMsgGC_Halloween_GrantItem(const CMsgGC_Halloween_GrantItem& from);

  inline CMsgGC_Halloween_GrantItem& operator=(const CMsgGC_Halloween_GrantItem& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGC_Halloween_GrantItem(CMsgGC_Halloween_GrantItem&& from) noexcept
    : CMsgGC_Halloween_GrantItem() {
    *this = ::std::move(from);
  }

  inline CMsgGC_Halloween_GrantItem& operator=(CMsgGC_Halloween_GrantItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_Halloween_GrantItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGC_Halloween_GrantItem* internal_default_instance() {
    return reinterpret_cast<const CMsgGC_Halloween_GrantItem*>(
               &_CMsgGC_Halloween_GrantItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    55;

  void Swap(CMsgGC_Halloween_GrantItem* other);
  friend void swap(CMsgGC_Halloween_GrantItem& a, CMsgGC_Halloween_GrantItem& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGC_Halloween_GrantItem* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGC_Halloween_GrantItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGC_Halloween_GrantItem& from);
  void MergeFrom(const CMsgGC_Halloween_GrantItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGC_Halloween_GrantItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 recipient_account_id = 1;
  bool has_recipient_account_id() const;
  void clear_recipient_account_id();
  static const int kRecipientAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 recipient_account_id() const;
  void set_recipient_account_id(::google::protobuf::uint32 value);

  // optional uint32 level_id = 2;
  bool has_level_id() const;
  void clear_level_id();
  static const int kLevelIdFieldNumber = 2;
  ::google::protobuf::uint32 level_id() const;
  void set_level_id(::google::protobuf::uint32 value);

  // optional bool flagged = 3;
  bool has_flagged() const;
  void clear_flagged();
  static const int kFlaggedFieldNumber = 3;
  bool flagged() const;
  void set_flagged(bool value);

  // @@protoc_insertion_point(class_scope:CMsgGC_Halloween_GrantItem)
 private:
  void set_has_recipient_account_id();
  void clear_has_recipient_account_id();
  void set_has_level_id();
  void clear_has_level_id();
  void set_has_flagged();
  void clear_has_flagged();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 recipient_account_id_;
  ::google::protobuf::uint32 level_id_;
  bool flagged_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGC_Halloween_GrantItemImpl();
};
// -------------------------------------------------------------------

class CMsgGC_Halloween_GrantItemResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGC_Halloween_GrantItemResponse) */ {
 public:
  CMsgGC_Halloween_GrantItemResponse();
  virtual ~CMsgGC_Halloween_GrantItemResponse();

  CMsgGC_Halloween_GrantItemResponse(const CMsgGC_Halloween_GrantItemResponse& from);

  inline CMsgGC_Halloween_GrantItemResponse& operator=(const CMsgGC_Halloween_GrantItemResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGC_Halloween_GrantItemResponse(CMsgGC_Halloween_GrantItemResponse&& from) noexcept
    : CMsgGC_Halloween_GrantItemResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGC_Halloween_GrantItemResponse& operator=(CMsgGC_Halloween_GrantItemResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_Halloween_GrantItemResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGC_Halloween_GrantItemResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGC_Halloween_GrantItemResponse*>(
               &_CMsgGC_Halloween_GrantItemResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    56;

  void Swap(CMsgGC_Halloween_GrantItemResponse* other);
  friend void swap(CMsgGC_Halloween_GrantItemResponse& a, CMsgGC_Halloween_GrantItemResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGC_Halloween_GrantItemResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGC_Halloween_GrantItemResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGC_Halloween_GrantItemResponse& from);
  void MergeFrom(const CMsgGC_Halloween_GrantItemResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGC_Halloween_GrantItemResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 recipient_account_id = 1;
  bool has_recipient_account_id() const;
  void clear_recipient_account_id();
  static const int kRecipientAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 recipient_account_id() const;
  void set_recipient_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGC_Halloween_GrantItemResponse)
 private:
  void set_has_recipient_account_id();
  void clear_has_recipient_account_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 recipient_account_id_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGC_Halloween_GrantItemResponseImpl();
};
// -------------------------------------------------------------------

class CMsgGC_Halloween_ItemClaimed : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGC_Halloween_ItemClaimed) */ {
 public:
  CMsgGC_Halloween_ItemClaimed();
  virtual ~CMsgGC_Halloween_ItemClaimed();

  CMsgGC_Halloween_ItemClaimed(const CMsgGC_Halloween_ItemClaimed& from);

  inline CMsgGC_Halloween_ItemClaimed& operator=(const CMsgGC_Halloween_ItemClaimed& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGC_Halloween_ItemClaimed(CMsgGC_Halloween_ItemClaimed&& from) noexcept
    : CMsgGC_Halloween_ItemClaimed() {
    *this = ::std::move(from);
  }

  inline CMsgGC_Halloween_ItemClaimed& operator=(CMsgGC_Halloween_ItemClaimed&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_Halloween_ItemClaimed& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGC_Halloween_ItemClaimed* internal_default_instance() {
    return reinterpret_cast<const CMsgGC_Halloween_ItemClaimed*>(
               &_CMsgGC_Halloween_ItemClaimed_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    57;

  void Swap(CMsgGC_Halloween_ItemClaimed* other);
  friend void swap(CMsgGC_Halloween_ItemClaimed& a, CMsgGC_Halloween_ItemClaimed& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGC_Halloween_ItemClaimed* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGC_Halloween_ItemClaimed* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGC_Halloween_ItemClaimed& from);
  void MergeFrom(const CMsgGC_Halloween_ItemClaimed& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGC_Halloween_ItemClaimed* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgGC_Halloween_ItemClaimed)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGC_Halloween_ItemClaimedImpl();
};
// -------------------------------------------------------------------

class CMsgGC_PickupItemEligibility_Query : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGC_PickupItemEligibility_Query) */ {
 public:
  CMsgGC_PickupItemEligibility_Query();
  virtual ~CMsgGC_PickupItemEligibility_Query();

  CMsgGC_PickupItemEligibility_Query(const CMsgGC_PickupItemEligibility_Query& from);

  inline CMsgGC_PickupItemEligibility_Query& operator=(const CMsgGC_PickupItemEligibility_Query& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGC_PickupItemEligibility_Query(CMsgGC_PickupItemEligibility_Query&& from) noexcept
    : CMsgGC_PickupItemEligibility_Query() {
    *this = ::std::move(from);
  }

  inline CMsgGC_PickupItemEligibility_Query& operator=(CMsgGC_PickupItemEligibility_Query&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_PickupItemEligibility_Query& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGC_PickupItemEligibility_Query* internal_default_instance() {
    return reinterpret_cast<const CMsgGC_PickupItemEligibility_Query*>(
               &_CMsgGC_PickupItemEligibility_Query_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    58;

  void Swap(CMsgGC_PickupItemEligibility_Query* other);
  friend void swap(CMsgGC_PickupItemEligibility_Query& a, CMsgGC_PickupItemEligibility_Query& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGC_PickupItemEligibility_Query* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGC_PickupItemEligibility_Query* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGC_PickupItemEligibility_Query& from);
  void MergeFrom(const CMsgGC_PickupItemEligibility_Query& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGC_PickupItemEligibility_Query* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 seconds_ago = 2;
  bool has_seconds_ago() const;
  void clear_seconds_ago();
  static const int kSecondsAgoFieldNumber = 2;
  ::google::protobuf::uint32 seconds_ago() const;
  void set_seconds_ago(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGC_PickupItemEligibility_Query)
 private:
  void set_has_account_id();
  void clear_has_account_id();
  void set_has_seconds_ago();
  void clear_has_seconds_ago();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 seconds_ago_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGC_PickupItemEligibility_QueryImpl();
};
// -------------------------------------------------------------------

class CMsgGC_PickupItemEligibility_QueryResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGC_PickupItemEligibility_QueryResponse) */ {
 public:
  CMsgGC_PickupItemEligibility_QueryResponse();
  virtual ~CMsgGC_PickupItemEligibility_QueryResponse();

  CMsgGC_PickupItemEligibility_QueryResponse(const CMsgGC_PickupItemEligibility_QueryResponse& from);

  inline CMsgGC_PickupItemEligibility_QueryResponse& operator=(const CMsgGC_PickupItemEligibility_QueryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGC_PickupItemEligibility_QueryResponse(CMsgGC_PickupItemEligibility_QueryResponse&& from) noexcept
    : CMsgGC_PickupItemEligibility_QueryResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGC_PickupItemEligibility_QueryResponse& operator=(CMsgGC_PickupItemEligibility_QueryResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_PickupItemEligibility_QueryResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGC_PickupItemEligibility_QueryResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGC_PickupItemEligibility_QueryResponse*>(
               &_CMsgGC_PickupItemEligibility_QueryResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    59;

  void Swap(CMsgGC_PickupItemEligibility_QueryResponse* other);
  friend void swap(CMsgGC_PickupItemEligibility_QueryResponse& a, CMsgGC_PickupItemEligibility_QueryResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGC_PickupItemEligibility_QueryResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGC_PickupItemEligibility_QueryResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGC_PickupItemEligibility_QueryResponse& from);
  void MergeFrom(const CMsgGC_PickupItemEligibility_QueryResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGC_PickupItemEligibility_QueryResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional bool was_eligible = 2;
  bool has_was_eligible() const;
  void clear_was_eligible();
  static const int kWasEligibleFieldNumber = 2;
  bool was_eligible() const;
  void set_was_eligible(bool value);

  // optional uint32 level_id = 3;
  bool has_level_id() const;
  void clear_level_id();
  static const int kLevelIdFieldNumber = 3;
  ::google::protobuf::uint32 level_id() const;
  void set_level_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGC_PickupItemEligibility_QueryResponse)
 private:
  void set_has_account_id();
  void clear_has_account_id();
  void set_has_was_eligible();
  void clear_has_was_eligible();
  void set_has_level_id();
  void clear_has_level_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  bool was_eligible_;
  ::google::protobuf::uint32 level_id_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGC_PickupItemEligibility_QueryResponseImpl();
};
// -------------------------------------------------------------------

class CSOTFPartyMember : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CSOTFPartyMember) */ {
 public:
  CSOTFPartyMember();
  virtual ~CSOTFPartyMember();

  CSOTFPartyMember(const CSOTFPartyMember& from);

  inline CSOTFPartyMember& operator=(const CSOTFPartyMember& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSOTFPartyMember(CSOTFPartyMember&& from) noexcept
    : CSOTFPartyMember() {
    *this = ::std::move(from);
  }

  inline CSOTFPartyMember& operator=(CSOTFPartyMember&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFPartyMember& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSOTFPartyMember* internal_default_instance() {
    return reinterpret_cast<const CSOTFPartyMember*>(
               &_CSOTFPartyMember_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    60;

  void Swap(CSOTFPartyMember* other);
  friend void swap(CSOTFPartyMember& a, CSOTFPartyMember& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSOTFPartyMember* New() const PROTOBUF_FINAL { return New(NULL); }

  CSOTFPartyMember* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CSOTFPartyMember& from);
  void MergeFrom(const CSOTFPartyMember& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CSOTFPartyMember* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 completed_missions = 3;
  bool has_completed_missions() const;
  void clear_completed_missions();
  static const int kCompletedMissionsFieldNumber = 3;
  ::google::protobuf::uint32 completed_missions() const;
  void set_completed_missions(::google::protobuf::uint32 value);

  // optional uint32 badge_level = 4;
  bool has_badge_level() const;
  void clear_badge_level();
  static const int kBadgeLevelFieldNumber = 4;
  ::google::protobuf::uint32 badge_level() const;
  void set_badge_level(::google::protobuf::uint32 value);

  // optional bool owns_ticket = 2;
  bool has_owns_ticket() const;
  void clear_owns_ticket();
  static const int kOwnsTicketFieldNumber = 2;
  bool owns_ticket() const;
  void set_owns_ticket(bool value);

  // optional bool squad_surplus = 5;
  bool has_squad_surplus() const;
  void clear_squad_surplus();
  static const int kSquadSurplusFieldNumber = 5;
  bool squad_surplus() const;
  void set_squad_surplus(bool value);

  // optional bool is_banned = 8 [default = false];
  bool has_is_banned() const;
  void clear_is_banned();
  static const int kIsBannedFieldNumber = 8;
  bool is_banned() const;
  void set_is_banned(bool value);

  // optional bool competitive_access = 9;
  bool has_competitive_access() const;
  void clear_competitive_access();
  static const int kCompetitiveAccessFieldNumber = 9;
  bool competitive_access() const;
  void set_competitive_access(bool value);

  // optional uint32 ladder_rank = 12;
  bool has_ladder_rank() const;
  void clear_ladder_rank();
  static const int kLadderRankFieldNumber = 12;
  ::google::protobuf::uint32 ladder_rank() const;
  void set_ladder_rank(::google::protobuf::uint32 value);

  // optional bool is_low_priority = 13 [default = false];
  bool has_is_low_priority() const;
  void clear_is_low_priority();
  static const int kIsLowPriorityFieldNumber = 13;
  bool is_low_priority() const;
  void set_is_low_priority(bool value);

  // optional uint32 experience = 14;
  bool has_experience() const;
  void clear_experience();
  static const int kExperienceFieldNumber = 14;
  ::google::protobuf::uint32 experience() const;
  void set_experience(::google::protobuf::uint32 value);

  // optional uint32 skillrating = 15 [default = 10000];
  bool has_skillrating() const;
  void clear_skillrating();
  static const int kSkillratingFieldNumber = 15;
  ::google::protobuf::uint32 skillrating() const;
  void set_skillrating(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSOTFPartyMember)
 private:
  void set_has_owns_ticket();
  void clear_has_owns_ticket();
  void set_has_completed_missions();
  void clear_has_completed_missions();
  void set_has_badge_level();
  void clear_has_badge_level();
  void set_has_squad_surplus();
  void clear_has_squad_surplus();
  void set_has_is_banned();
  void clear_has_is_banned();
  void set_has_competitive_access();
  void clear_has_competitive_access();
  void set_has_ladder_rank();
  void clear_has_ladder_rank();
  void set_has_is_low_priority();
  void clear_has_is_low_priority();
  void set_has_experience();
  void clear_has_experience();
  void set_has_skillrating();
  void clear_has_skillrating();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 completed_missions_;
  ::google::protobuf::uint32 badge_level_;
  bool owns_ticket_;
  bool squad_surplus_;
  bool is_banned_;
  bool competitive_access_;
  ::google::protobuf::uint32 ladder_rank_;
  bool is_low_priority_;
  ::google::protobuf::uint32 experience_;
  ::google::protobuf::uint32 skillrating_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCSOTFPartyMemberImpl();
};
// -------------------------------------------------------------------

class CMsgMatchSearchCriteria : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgMatchSearchCriteria) */ {
 public:
  CMsgMatchSearchCriteria();
  virtual ~CMsgMatchSearchCriteria();

  CMsgMatchSearchCriteria(const CMsgMatchSearchCriteria& from);

  inline CMsgMatchSearchCriteria& operator=(const CMsgMatchSearchCriteria& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgMatchSearchCriteria(CMsgMatchSearchCriteria&& from) noexcept
    : CMsgMatchSearchCriteria() {
    *this = ::std::move(from);
  }

  inline CMsgMatchSearchCriteria& operator=(CMsgMatchSearchCriteria&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMatchSearchCriteria& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgMatchSearchCriteria* internal_default_instance() {
    return reinterpret_cast<const CMsgMatchSearchCriteria*>(
               &_CMsgMatchSearchCriteria_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    61;

  void Swap(CMsgMatchSearchCriteria* other);
  friend void swap(CMsgMatchSearchCriteria& a, CMsgMatchSearchCriteria& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgMatchSearchCriteria* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgMatchSearchCriteria* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgMatchSearchCriteria& from);
  void MergeFrom(const CMsgMatchSearchCriteria& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgMatchSearchCriteria* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string mvm_missions = 9;
  int mvm_missions_size() const;
  void clear_mvm_missions();
  static const int kMvmMissionsFieldNumber = 9;
  const ::std::string& mvm_missions(int index) const;
  ::std::string* mutable_mvm_missions(int index);
  void set_mvm_missions(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_mvm_missions(int index, ::std::string&& value);
  #endif
  void set_mvm_missions(int index, const char* value);
  void set_mvm_missions(int index, const char* value, size_t size);
  ::std::string* add_mvm_missions();
  void add_mvm_missions(const ::std::string& value);
  #if LANG_CXX11
  void add_mvm_missions(::std::string&& value);
  #endif
  void add_mvm_missions(const char* value);
  void add_mvm_missions(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& mvm_missions() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_mvm_missions();

  // optional string mvm_mannup_tour = 10;
  bool has_mvm_mannup_tour() const;
  void clear_mvm_mannup_tour();
  static const int kMvmMannupTourFieldNumber = 10;
  const ::std::string& mvm_mannup_tour() const;
  void set_mvm_mannup_tour(const ::std::string& value);
  #if LANG_CXX11
  void set_mvm_mannup_tour(::std::string&& value);
  #endif
  void set_mvm_mannup_tour(const char* value);
  void set_mvm_mannup_tour(const char* value, size_t size);
  ::std::string* mutable_mvm_mannup_tour();
  ::std::string* release_mvm_mannup_tour();
  void set_allocated_mvm_mannup_tour(::std::string* mvm_mannup_tour);

  // optional .CMsgCasualMatchmakingSearchCriteria casual_criteria = 12;
  bool has_casual_criteria() const;
  void clear_casual_criteria();
  static const int kCasualCriteriaFieldNumber = 12;
  const ::CMsgCasualMatchmakingSearchCriteria& casual_criteria() const;
  ::CMsgCasualMatchmakingSearchCriteria* release_casual_criteria();
  ::CMsgCasualMatchmakingSearchCriteria* mutable_casual_criteria();
  void set_allocated_casual_criteria(::CMsgCasualMatchmakingSearchCriteria* casual_criteria);

  // optional bool late_join_ok = 5;
  bool has_late_join_ok() const;
  void clear_late_join_ok();
  static const int kLateJoinOkFieldNumber = 5;
  bool late_join_ok() const;
  void set_late_join_ok(bool value);

  // optional bool play_for_bragging_rights = 6;
  bool has_play_for_bragging_rights() const;
  void clear_play_for_bragging_rights();
  static const int kPlayForBraggingRightsFieldNumber = 6;
  bool play_for_bragging_rights() const;
  void set_play_for_bragging_rights(bool value);

  // optional .TF_MatchmakingMode matchmaking_mode = 7 [default = TF_Matchmaking_INVALID];
  bool has_matchmaking_mode() const;
  void clear_matchmaking_mode();
  static const int kMatchmakingModeFieldNumber = 7;
  ::TF_MatchmakingMode matchmaking_mode() const;
  void set_matchmaking_mode(::TF_MatchmakingMode value);

  // optional uint32 quickplay_game_type = 8;
  bool has_quickplay_game_type() const;
  void clear_quickplay_game_type();
  static const int kQuickplayGameTypeFieldNumber = 8;
  ::google::protobuf::uint32 quickplay_game_type() const;
  void set_quickplay_game_type(::google::protobuf::uint32 value);

  // optional uint32 ladder_game_type = 11;
  bool has_ladder_game_type() const;
  void clear_ladder_game_type();
  static const int kLadderGameTypeFieldNumber = 11;
  ::google::protobuf::uint32 ladder_game_type() const;
  void set_ladder_game_type(::google::protobuf::uint32 value);

  // optional uint32 custom_ping_tolerance = 13 [default = 0];
  bool has_custom_ping_tolerance() const;
  void clear_custom_ping_tolerance();
  static const int kCustomPingToleranceFieldNumber = 13;
  ::google::protobuf::uint32 custom_ping_tolerance() const;
  void set_custom_ping_tolerance(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgMatchSearchCriteria)
 private:
  void set_has_matchmaking_mode();
  void clear_has_matchmaking_mode();
  void set_has_late_join_ok();
  void clear_has_late_join_ok();
  void set_has_custom_ping_tolerance();
  void clear_has_custom_ping_tolerance();
  void set_has_mvm_mannup_tour();
  void clear_has_mvm_mannup_tour();
  void set_has_play_for_bragging_rights();
  void clear_has_play_for_bragging_rights();
  void set_has_quickplay_game_type();
  void clear_has_quickplay_game_type();
  void set_has_ladder_game_type();
  void clear_has_ladder_game_type();
  void set_has_casual_criteria();
  void clear_has_casual_criteria();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> mvm_missions_;
  ::google::protobuf::internal::ArenaStringPtr mvm_mannup_tour_;
  ::CMsgCasualMatchmakingSearchCriteria* casual_criteria_;
  bool late_join_ok_;
  bool play_for_bragging_rights_;
  int matchmaking_mode_;
  ::google::protobuf::uint32 quickplay_game_type_;
  ::google::protobuf::uint32 ladder_game_type_;
  ::google::protobuf::uint32 custom_ping_tolerance_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgMatchSearchCriteriaImpl();
};
// -------------------------------------------------------------------

class CMsgCasualMatchmakingSearchCriteria : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgCasualMatchmakingSearchCriteria) */ {
 public:
  CMsgCasualMatchmakingSearchCriteria();
  virtual ~CMsgCasualMatchmakingSearchCriteria();

  CMsgCasualMatchmakingSearchCriteria(const CMsgCasualMatchmakingSearchCriteria& from);

  inline CMsgCasualMatchmakingSearchCriteria& operator=(const CMsgCasualMatchmakingSearchCriteria& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgCasualMatchmakingSearchCriteria(CMsgCasualMatchmakingSearchCriteria&& from) noexcept
    : CMsgCasualMatchmakingSearchCriteria() {
    *this = ::std::move(from);
  }

  inline CMsgCasualMatchmakingSearchCriteria& operator=(CMsgCasualMatchmakingSearchCriteria&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgCasualMatchmakingSearchCriteria& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgCasualMatchmakingSearchCriteria* internal_default_instance() {
    return reinterpret_cast<const CMsgCasualMatchmakingSearchCriteria*>(
               &_CMsgCasualMatchmakingSearchCriteria_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    62;

  void Swap(CMsgCasualMatchmakingSearchCriteria* other);
  friend void swap(CMsgCasualMatchmakingSearchCriteria& a, CMsgCasualMatchmakingSearchCriteria& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgCasualMatchmakingSearchCriteria* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgCasualMatchmakingSearchCriteria* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgCasualMatchmakingSearchCriteria& from);
  void MergeFrom(const CMsgCasualMatchmakingSearchCriteria& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgCasualMatchmakingSearchCriteria* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed32 selected_maps_bits = 3;
  int selected_maps_bits_size() const;
  void clear_selected_maps_bits();
  static const int kSelectedMapsBitsFieldNumber = 3;
  ::google::protobuf::uint32 selected_maps_bits(int index) const;
  void set_selected_maps_bits(int index, ::google::protobuf::uint32 value);
  void add_selected_maps_bits(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      selected_maps_bits() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_selected_maps_bits();

  // @@protoc_insertion_point(class_scope:CMsgCasualMatchmakingSearchCriteria)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > selected_maps_bits_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgCasualMatchmakingSearchCriteriaImpl();
};
// -------------------------------------------------------------------

class CMsgCreateOrUpdateParty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgCreateOrUpdateParty) */ {
 public:
  CMsgCreateOrUpdateParty();
  virtual ~CMsgCreateOrUpdateParty();

  CMsgCreateOrUpdateParty(const CMsgCreateOrUpdateParty& from);

  inline CMsgCreateOrUpdateParty& operator=(const CMsgCreateOrUpdateParty& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgCreateOrUpdateParty(CMsgCreateOrUpdateParty&& from) noexcept
    : CMsgCreateOrUpdateParty() {
    *this = ::std::move(from);
  }

  inline CMsgCreateOrUpdateParty& operator=(CMsgCreateOrUpdateParty&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgCreateOrUpdateParty& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgCreateOrUpdateParty* internal_default_instance() {
    return reinterpret_cast<const CMsgCreateOrUpdateParty*>(
               &_CMsgCreateOrUpdateParty_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    63;

  void Swap(CMsgCreateOrUpdateParty* other);
  friend void swap(CMsgCreateOrUpdateParty& a, CMsgCreateOrUpdateParty& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgCreateOrUpdateParty* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgCreateOrUpdateParty* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgCreateOrUpdateParty& from);
  void MergeFrom(const CMsgCreateOrUpdateParty& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgCreateOrUpdateParty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgMatchSearchCriteria search_criteria = 1;
  bool has_search_criteria() const;
  void clear_search_criteria();
  static const int kSearchCriteriaFieldNumber = 1;
  const ::CMsgMatchSearchCriteria& search_criteria() const;
  ::CMsgMatchSearchCriteria* release_search_criteria();
  ::CMsgMatchSearchCriteria* mutable_search_criteria();
  void set_allocated_search_criteria(::CMsgMatchSearchCriteria* search_criteria);

  // optional fixed64 steam_lobby_id = 3;
  bool has_steam_lobby_id() const;
  void clear_steam_lobby_id();
  static const int kSteamLobbyIdFieldNumber = 3;
  ::google::protobuf::uint64 steam_lobby_id() const;
  void set_steam_lobby_id(::google::protobuf::uint64 value);

  // optional bool squad_surplus = 4;
  bool has_squad_surplus() const;
  void clear_squad_surplus();
  static const int kSquadSurplusFieldNumber = 4;
  bool squad_surplus() const;
  void set_squad_surplus(bool value);

  // optional .TF_Matchmaking_WizardStep wizard_step = 5 [default = TF_Matchmaking_WizardStep_INVALID];
  bool has_wizard_step() const;
  void clear_wizard_step();
  static const int kWizardStepFieldNumber = 5;
  ::TF_Matchmaking_WizardStep wizard_step() const;
  void set_wizard_step(::TF_Matchmaking_WizardStep value);

  // optional uint32 client_version = 6 [default = 1225];
  bool has_client_version() const;
  void clear_client_version();
  static const int kClientVersionFieldNumber = 6;
  ::google::protobuf::uint32 client_version() const;
  void set_client_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgCreateOrUpdateParty)
 private:
  void set_has_search_criteria();
  void clear_has_search_criteria();
  void set_has_steam_lobby_id();
  void clear_has_steam_lobby_id();
  void set_has_squad_surplus();
  void clear_has_squad_surplus();
  void set_has_wizard_step();
  void clear_has_wizard_step();
  void set_has_client_version();
  void clear_has_client_version();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::CMsgMatchSearchCriteria* search_criteria_;
  ::google::protobuf::uint64 steam_lobby_id_;
  bool squad_surplus_;
  int wizard_step_;
  ::google::protobuf::uint32 client_version_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgCreateOrUpdatePartyImpl();
};
// -------------------------------------------------------------------

class CMsgCreateOrUpdatePartyReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgCreateOrUpdatePartyReply) */ {
 public:
  CMsgCreateOrUpdatePartyReply();
  virtual ~CMsgCreateOrUpdatePartyReply();

  CMsgCreateOrUpdatePartyReply(const CMsgCreateOrUpdatePartyReply& from);

  inline CMsgCreateOrUpdatePartyReply& operator=(const CMsgCreateOrUpdatePartyReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgCreateOrUpdatePartyReply(CMsgCreateOrUpdatePartyReply&& from) noexcept
    : CMsgCreateOrUpdatePartyReply() {
    *this = ::std::move(from);
  }

  inline CMsgCreateOrUpdatePartyReply& operator=(CMsgCreateOrUpdatePartyReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgCreateOrUpdatePartyReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgCreateOrUpdatePartyReply* internal_default_instance() {
    return reinterpret_cast<const CMsgCreateOrUpdatePartyReply*>(
               &_CMsgCreateOrUpdatePartyReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    64;

  void Swap(CMsgCreateOrUpdatePartyReply* other);
  friend void swap(CMsgCreateOrUpdatePartyReply& a, CMsgCreateOrUpdatePartyReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgCreateOrUpdatePartyReply* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgCreateOrUpdatePartyReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgCreateOrUpdatePartyReply& from);
  void MergeFrom(const CMsgCreateOrUpdatePartyReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgCreateOrUpdatePartyReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string message = 2;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // optional uint32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // optional .TF_Matchmaking_WizardStep wizard_step = 3 [default = TF_Matchmaking_WizardStep_INVALID];
  bool has_wizard_step() const;
  void clear_wizard_step();
  static const int kWizardStepFieldNumber = 3;
  ::TF_Matchmaking_WizardStep wizard_step() const;
  void set_wizard_step(::TF_Matchmaking_WizardStep value);

  // @@protoc_insertion_point(class_scope:CMsgCreateOrUpdatePartyReply)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_message();
  void clear_has_message();
  void set_has_wizard_step();
  void clear_has_wizard_step();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::uint32 result_;
  int wizard_step_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgCreateOrUpdatePartyReplyImpl();
};
// -------------------------------------------------------------------

class CSOTFParty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CSOTFParty) */ {
 public:
  CSOTFParty();
  virtual ~CSOTFParty();

  CSOTFParty(const CSOTFParty& from);

  inline CSOTFParty& operator=(const CSOTFParty& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSOTFParty(CSOTFParty&& from) noexcept
    : CSOTFParty() {
    *this = ::std::move(from);
  }

  inline CSOTFParty& operator=(CSOTFParty&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFParty& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSOTFParty* internal_default_instance() {
    return reinterpret_cast<const CSOTFParty*>(
               &_CSOTFParty_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    65;

  void Swap(CSOTFParty* other);
  friend void swap(CSOTFParty& a, CSOTFParty& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSOTFParty* New() const PROTOBUF_FINAL { return New(NULL); }

  CSOTFParty* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CSOTFParty& from);
  void MergeFrom(const CSOTFParty& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CSOTFParty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CSOTFParty_State State;
  static const State UI =
    CSOTFParty_State_UI;
  static const State FINDING_MATCH =
    CSOTFParty_State_FINDING_MATCH;
  static const State IN_MATCH =
    CSOTFParty_State_IN_MATCH;
  static const State AWAITING_RESERVATION_CONFIRMATION =
    CSOTFParty_State_AWAITING_RESERVATION_CONFIRMATION;
  static inline bool State_IsValid(int value) {
    return CSOTFParty_State_IsValid(value);
  }
  static const State State_MIN =
    CSOTFParty_State_State_MIN;
  static const State State_MAX =
    CSOTFParty_State_State_MAX;
  static const int State_ARRAYSIZE =
    CSOTFParty_State_State_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  State_descriptor() {
    return CSOTFParty_State_descriptor();
  }
  static inline const ::std::string& State_Name(State value) {
    return CSOTFParty_State_Name(value);
  }
  static inline bool State_Parse(const ::std::string& name,
      State* value) {
    return CSOTFParty_State_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated fixed64 member_ids = 3;
  int member_ids_size() const;
  void clear_member_ids();
  static const int kMemberIdsFieldNumber = 3;
  ::google::protobuf::uint64 member_ids(int index) const;
  void set_member_ids(int index, ::google::protobuf::uint64 value);
  void add_member_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      member_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_member_ids();

  // repeated fixed64 pending_invites = 5;
  int pending_invites_size() const;
  void clear_pending_invites();
  static const int kPendingInvitesFieldNumber = 5;
  ::google::protobuf::uint64 pending_invites(int index) const;
  void set_pending_invites(int index, ::google::protobuf::uint64 value);
  void add_pending_invites(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      pending_invites() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_pending_invites();

  // repeated uint32 searching_players_by_group = 10;
  int searching_players_by_group_size() const;
  void clear_searching_players_by_group();
  static const int kSearchingPlayersByGroupFieldNumber = 10;
  ::google::protobuf::uint32 searching_players_by_group(int index) const;
  void set_searching_players_by_group(int index, ::google::protobuf::uint32 value);
  void add_searching_players_by_group(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      searching_players_by_group() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_searching_players_by_group();

  // repeated .CSOTFPartyMember members = 13;
  int members_size() const;
  void clear_members();
  static const int kMembersFieldNumber = 13;
  const ::CSOTFPartyMember& members(int index) const;
  ::CSOTFPartyMember* mutable_members(int index);
  ::CSOTFPartyMember* add_members();
  ::google::protobuf::RepeatedPtrField< ::CSOTFPartyMember >*
      mutable_members();
  const ::google::protobuf::RepeatedPtrField< ::CSOTFPartyMember >&
      members() const;

  // repeated string search_mvm_missions = 31;
  int search_mvm_missions_size() const;
  void clear_search_mvm_missions();
  static const int kSearchMvmMissionsFieldNumber = 31;
  const ::std::string& search_mvm_missions(int index) const;
  ::std::string* mutable_search_mvm_missions(int index);
  void set_search_mvm_missions(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_search_mvm_missions(int index, ::std::string&& value);
  #endif
  void set_search_mvm_missions(int index, const char* value);
  void set_search_mvm_missions(int index, const char* value, size_t size);
  ::std::string* add_search_mvm_missions();
  void add_search_mvm_missions(const ::std::string& value);
  #if LANG_CXX11
  void add_search_mvm_missions(::std::string&& value);
  #endif
  void add_search_mvm_missions(const char* value);
  void add_search_mvm_missions(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& search_mvm_missions() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_search_mvm_missions();

  // optional string search_mvm_mannup_tour = 32;
  bool has_search_mvm_mannup_tour() const;
  void clear_search_mvm_mannup_tour();
  static const int kSearchMvmMannupTourFieldNumber = 32;
  const ::std::string& search_mvm_mannup_tour() const;
  void set_search_mvm_mannup_tour(const ::std::string& value);
  #if LANG_CXX11
  void set_search_mvm_mannup_tour(::std::string&& value);
  #endif
  void set_search_mvm_mannup_tour(const char* value);
  void set_search_mvm_mannup_tour(const char* value, size_t size);
  ::std::string* mutable_search_mvm_mannup_tour();
  ::std::string* release_search_mvm_mannup_tour();
  void set_allocated_search_mvm_mannup_tour(::std::string* search_mvm_mannup_tour);

  // optional .CMsgCasualMatchmakingSearchCriteria search_casual = 34;
  bool has_search_casual() const;
  void clear_search_casual();
  static const int kSearchCasualFieldNumber = 34;
  const ::CMsgCasualMatchmakingSearchCriteria& search_casual() const;
  ::CMsgCasualMatchmakingSearchCriteria* release_search_casual();
  ::CMsgCasualMatchmakingSearchCriteria* mutable_search_casual();
  void set_allocated_search_casual(::CMsgCasualMatchmakingSearchCriteria* search_casual);

  // optional uint64 party_id = 1 [(.key_field) = true];
  bool has_party_id() const;
  void clear_party_id();
  static const int kPartyIdFieldNumber = 1;
  ::google::protobuf::uint64 party_id() const;
  void set_party_id(::google::protobuf::uint64 value);

  // optional fixed64 leader_id = 2;
  bool has_leader_id() const;
  void clear_leader_id();
  static const int kLeaderIdFieldNumber = 2;
  ::google::protobuf::uint64 leader_id() const;
  void set_leader_id(::google::protobuf::uint64 value);

  // optional .CSOTFParty.State state = 6 [default = UI];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 6;
  ::CSOTFParty_State state() const;
  void set_state(::CSOTFParty_State value);

  // optional uint32 started_matchmaking_time = 7;
  bool has_started_matchmaking_time() const;
  void clear_started_matchmaking_time();
  static const int kStartedMatchmakingTimeFieldNumber = 7;
  ::google::protobuf::uint32 started_matchmaking_time() const;
  void set_started_matchmaking_time(::google::protobuf::uint32 value);

  // optional uint32 matchmaking_ban_time = 18;
  bool has_matchmaking_ban_time() const;
  void clear_matchmaking_ban_time();
  static const int kMatchmakingBanTimeFieldNumber = 18;
  ::google::protobuf::uint32 matchmaking_ban_time() const;
  void set_matchmaking_ban_time(::google::protobuf::uint32 value);

  // optional uint32 matchmaking_ban_account_id = 19;
  bool has_matchmaking_ban_account_id() const;
  void clear_matchmaking_ban_account_id();
  static const int kMatchmakingBanAccountIdFieldNumber = 19;
  ::google::protobuf::uint32 matchmaking_ban_account_id() const;
  void set_matchmaking_ban_account_id(::google::protobuf::uint32 value);

  // optional uint32 matchmaking_low_priority_time = 20;
  bool has_matchmaking_low_priority_time() const;
  void clear_matchmaking_low_priority_time();
  static const int kMatchmakingLowPriorityTimeFieldNumber = 20;
  ::google::protobuf::uint32 matchmaking_low_priority_time() const;
  void set_matchmaking_low_priority_time(::google::protobuf::uint32 value);

  // optional bool search_late_join_ok = 23;
  bool has_search_late_join_ok() const;
  void clear_search_late_join_ok();
  static const int kSearchLateJoinOkFieldNumber = 23;
  bool search_late_join_ok() const;
  void set_search_late_join_ok(bool value);

  // optional bool search_play_for_bragging_rights = 26;
  bool has_search_play_for_bragging_rights() const;
  void clear_search_play_for_bragging_rights();
  static const int kSearchPlayForBraggingRightsFieldNumber = 26;
  bool search_play_for_bragging_rights() const;
  void set_search_play_for_bragging_rights(bool value);

  // optional uint32 custom_ping_tolerance = 36;
  bool has_custom_ping_tolerance() const;
  void clear_custom_ping_tolerance();
  static const int kCustomPingToleranceFieldNumber = 36;
  ::google::protobuf::uint32 custom_ping_tolerance() const;
  void set_custom_ping_tolerance(::google::protobuf::uint32 value);

  // optional fixed64 steam_lobby_id = 27;
  bool has_steam_lobby_id() const;
  void clear_steam_lobby_id();
  static const int kSteamLobbyIdFieldNumber = 27;
  ::google::protobuf::uint64 steam_lobby_id() const;
  void set_steam_lobby_id(::google::protobuf::uint64 value);

  // optional uint32 search_quickplay_game_type = 28;
  bool has_search_quickplay_game_type() const;
  void clear_search_quickplay_game_type();
  static const int kSearchQuickplayGameTypeFieldNumber = 28;
  ::google::protobuf::uint32 search_quickplay_game_type() const;
  void set_search_quickplay_game_type(::google::protobuf::uint32 value);

  // optional .TF_Matchmaking_WizardStep wizard_step = 29 [default = TF_Matchmaking_WizardStep_INVALID];
  bool has_wizard_step() const;
  void clear_wizard_step();
  static const int kWizardStepFieldNumber = 29;
  ::TF_Matchmaking_WizardStep wizard_step() const;
  void set_wizard_step(::TF_Matchmaking_WizardStep value);

  // optional .TF_MatchmakingMode matchmaking_mode = 30 [default = TF_Matchmaking_INVALID];
  bool has_matchmaking_mode() const;
  void clear_matchmaking_mode();
  static const int kMatchmakingModeFieldNumber = 30;
  ::TF_MatchmakingMode matchmaking_mode() const;
  void set_matchmaking_mode(::TF_MatchmakingMode value);

  // optional uint32 search_ladder_game_type = 33;
  bool has_search_ladder_game_type() const;
  void clear_search_ladder_game_type();
  static const int kSearchLadderGameTypeFieldNumber = 33;
  ::google::protobuf::uint32 search_ladder_game_type() const;
  void set_search_ladder_game_type(::google::protobuf::uint32 value);

  // optional uint64 associated_lobby_id = 35;
  bool has_associated_lobby_id() const;
  void clear_associated_lobby_id();
  static const int kAssociatedLobbyIdFieldNumber = 35;
  ::google::protobuf::uint64 associated_lobby_id() const;
  void set_associated_lobby_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CSOTFParty)
 private:
  void set_has_party_id();
  void clear_has_party_id();
  void set_has_leader_id();
  void clear_has_leader_id();
  void set_has_associated_lobby_id();
  void clear_has_associated_lobby_id();
  void set_has_state();
  void clear_has_state();
  void set_has_wizard_step();
  void clear_has_wizard_step();
  void set_has_started_matchmaking_time();
  void clear_has_started_matchmaking_time();
  void set_has_steam_lobby_id();
  void clear_has_steam_lobby_id();
  void set_has_matchmaking_mode();
  void clear_has_matchmaking_mode();
  void set_has_search_late_join_ok();
  void clear_has_search_late_join_ok();
  void set_has_search_mvm_mannup_tour();
  void clear_has_search_mvm_mannup_tour();
  void set_has_search_play_for_bragging_rights();
  void clear_has_search_play_for_bragging_rights();
  void set_has_search_quickplay_game_type();
  void clear_has_search_quickplay_game_type();
  void set_has_search_ladder_game_type();
  void clear_has_search_ladder_game_type();
  void set_has_search_casual();
  void clear_has_search_casual();
  void set_has_custom_ping_tolerance();
  void clear_has_custom_ping_tolerance();
  void set_has_matchmaking_ban_time();
  void clear_has_matchmaking_ban_time();
  void set_has_matchmaking_ban_account_id();
  void clear_has_matchmaking_ban_account_id();
  void set_has_matchmaking_low_priority_time();
  void clear_has_matchmaking_low_priority_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > member_ids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > pending_invites_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > searching_players_by_group_;
  ::google::protobuf::RepeatedPtrField< ::CSOTFPartyMember > members_;
  ::google::protobuf::RepeatedPtrField< ::std::string> search_mvm_missions_;
  ::google::protobuf::internal::ArenaStringPtr search_mvm_mannup_tour_;
  ::CMsgCasualMatchmakingSearchCriteria* search_casual_;
  ::google::protobuf::uint64 party_id_;
  ::google::protobuf::uint64 leader_id_;
  int state_;
  ::google::protobuf::uint32 started_matchmaking_time_;
  ::google::protobuf::uint32 matchmaking_ban_time_;
  ::google::protobuf::uint32 matchmaking_ban_account_id_;
  ::google::protobuf::uint32 matchmaking_low_priority_time_;
  bool search_late_join_ok_;
  bool search_play_for_bragging_rights_;
  ::google::protobuf::uint32 custom_ping_tolerance_;
  ::google::protobuf::uint64 steam_lobby_id_;
  ::google::protobuf::uint32 search_quickplay_game_type_;
  int wizard_step_;
  int matchmaking_mode_;
  ::google::protobuf::uint32 search_ladder_game_type_;
  ::google::protobuf::uint64 associated_lobby_id_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCSOTFPartyImpl();
};
// -------------------------------------------------------------------

class CSOTFPartyInvite_PartyMember : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CSOTFPartyInvite.PartyMember) */ {
 public:
  CSOTFPartyInvite_PartyMember();
  virtual ~CSOTFPartyInvite_PartyMember();

  CSOTFPartyInvite_PartyMember(const CSOTFPartyInvite_PartyMember& from);

  inline CSOTFPartyInvite_PartyMember& operator=(const CSOTFPartyInvite_PartyMember& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSOTFPartyInvite_PartyMember(CSOTFPartyInvite_PartyMember&& from) noexcept
    : CSOTFPartyInvite_PartyMember() {
    *this = ::std::move(from);
  }

  inline CSOTFPartyInvite_PartyMember& operator=(CSOTFPartyInvite_PartyMember&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFPartyInvite_PartyMember& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSOTFPartyInvite_PartyMember* internal_default_instance() {
    return reinterpret_cast<const CSOTFPartyInvite_PartyMember*>(
               &_CSOTFPartyInvite_PartyMember_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    66;

  void Swap(CSOTFPartyInvite_PartyMember* other);
  friend void swap(CSOTFPartyInvite_PartyMember& a, CSOTFPartyInvite_PartyMember& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSOTFPartyInvite_PartyMember* New() const PROTOBUF_FINAL { return New(NULL); }

  CSOTFPartyInvite_PartyMember* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CSOTFPartyInvite_PartyMember& from);
  void MergeFrom(const CSOTFPartyInvite_PartyMember& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CSOTFPartyInvite_PartyMember* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional fixed64 steam_id = 2;
  bool has_steam_id() const;
  void clear_steam_id();
  static const int kSteamIdFieldNumber = 2;
  ::google::protobuf::uint64 steam_id() const;
  void set_steam_id(::google::protobuf::uint64 value);

  // optional uint32 avatar = 3;
  bool has_avatar() const;
  void clear_avatar();
  static const int kAvatarFieldNumber = 3;
  ::google::protobuf::uint32 avatar() const;
  void set_avatar(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSOTFPartyInvite.PartyMember)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_steam_id();
  void clear_has_steam_id();
  void set_has_avatar();
  void clear_has_avatar();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 steam_id_;
  ::google::protobuf::uint32 avatar_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCSOTFPartyInvite_PartyMemberImpl();
};
// -------------------------------------------------------------------

class CSOTFPartyInvite : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CSOTFPartyInvite) */ {
 public:
  CSOTFPartyInvite();
  virtual ~CSOTFPartyInvite();

  CSOTFPartyInvite(const CSOTFPartyInvite& from);

  inline CSOTFPartyInvite& operator=(const CSOTFPartyInvite& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSOTFPartyInvite(CSOTFPartyInvite&& from) noexcept
    : CSOTFPartyInvite() {
    *this = ::std::move(from);
  }

  inline CSOTFPartyInvite& operator=(CSOTFPartyInvite&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFPartyInvite& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSOTFPartyInvite* internal_default_instance() {
    return reinterpret_cast<const CSOTFPartyInvite*>(
               &_CSOTFPartyInvite_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    67;

  void Swap(CSOTFPartyInvite* other);
  friend void swap(CSOTFPartyInvite& a, CSOTFPartyInvite& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSOTFPartyInvite* New() const PROTOBUF_FINAL { return New(NULL); }

  CSOTFPartyInvite* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CSOTFPartyInvite& from);
  void MergeFrom(const CSOTFPartyInvite& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CSOTFPartyInvite* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CSOTFPartyInvite_PartyMember PartyMember;

  // accessors -------------------------------------------------------

  // repeated .CSOTFPartyInvite.PartyMember members = 4;
  int members_size() const;
  void clear_members();
  static const int kMembersFieldNumber = 4;
  const ::CSOTFPartyInvite_PartyMember& members(int index) const;
  ::CSOTFPartyInvite_PartyMember* mutable_members(int index);
  ::CSOTFPartyInvite_PartyMember* add_members();
  ::google::protobuf::RepeatedPtrField< ::CSOTFPartyInvite_PartyMember >*
      mutable_members();
  const ::google::protobuf::RepeatedPtrField< ::CSOTFPartyInvite_PartyMember >&
      members() const;

  // optional string sender_name = 3;
  bool has_sender_name() const;
  void clear_sender_name();
  static const int kSenderNameFieldNumber = 3;
  const ::std::string& sender_name() const;
  void set_sender_name(const ::std::string& value);
  #if LANG_CXX11
  void set_sender_name(::std::string&& value);
  #endif
  void set_sender_name(const char* value);
  void set_sender_name(const char* value, size_t size);
  ::std::string* mutable_sender_name();
  ::std::string* release_sender_name();
  void set_allocated_sender_name(::std::string* sender_name);

  // optional uint64 group_id = 1 [(.key_field) = true];
  bool has_group_id() const;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  ::google::protobuf::uint64 group_id() const;
  void set_group_id(::google::protobuf::uint64 value);

  // optional fixed64 sender_id = 2;
  bool has_sender_id() const;
  void clear_sender_id();
  static const int kSenderIdFieldNumber = 2;
  ::google::protobuf::uint64 sender_id() const;
  void set_sender_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CSOTFPartyInvite)
 private:
  void set_has_group_id();
  void clear_has_group_id();
  void set_has_sender_id();
  void clear_has_sender_id();
  void set_has_sender_name();
  void clear_has_sender_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CSOTFPartyInvite_PartyMember > members_;
  ::google::protobuf::internal::ArenaStringPtr sender_name_;
  ::google::protobuf::uint64 group_id_;
  ::google::protobuf::uint64 sender_id_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCSOTFPartyInviteImpl();
};
// -------------------------------------------------------------------

class CTFLobbyMember : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CTFLobbyMember) */ {
 public:
  CTFLobbyMember();
  virtual ~CTFLobbyMember();

  CTFLobbyMember(const CTFLobbyMember& from);

  inline CTFLobbyMember& operator=(const CTFLobbyMember& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CTFLobbyMember(CTFLobbyMember&& from) noexcept
    : CTFLobbyMember() {
    *this = ::std::move(from);
  }

  inline CTFLobbyMember& operator=(CTFLobbyMember&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CTFLobbyMember& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CTFLobbyMember* internal_default_instance() {
    return reinterpret_cast<const CTFLobbyMember*>(
               &_CTFLobbyMember_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    68;

  void Swap(CTFLobbyMember* other);
  friend void swap(CTFLobbyMember& a, CTFLobbyMember& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CTFLobbyMember* New() const PROTOBUF_FINAL { return New(NULL); }

  CTFLobbyMember* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CTFLobbyMember& from);
  void MergeFrom(const CTFLobbyMember& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CTFLobbyMember* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CTFLobbyMember_ConnectState ConnectState;
  static const ConnectState INVALID =
    CTFLobbyMember_ConnectState_INVALID;
  static const ConnectState RESERVATION_PENDING =
    CTFLobbyMember_ConnectState_RESERVATION_PENDING;
  static const ConnectState RESERVED =
    CTFLobbyMember_ConnectState_RESERVED;
  static const ConnectState CONNECTED =
    CTFLobbyMember_ConnectState_CONNECTED;
  static const ConnectState DISCONNECTED =
    CTFLobbyMember_ConnectState_DISCONNECTED;
  static inline bool ConnectState_IsValid(int value) {
    return CTFLobbyMember_ConnectState_IsValid(value);
  }
  static const ConnectState ConnectState_MIN =
    CTFLobbyMember_ConnectState_ConnectState_MIN;
  static const ConnectState ConnectState_MAX =
    CTFLobbyMember_ConnectState_ConnectState_MAX;
  static const int ConnectState_ARRAYSIZE =
    CTFLobbyMember_ConnectState_ConnectState_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ConnectState_descriptor() {
    return CTFLobbyMember_ConnectState_descriptor();
  }
  static inline const ::std::string& ConnectState_Name(ConnectState value) {
    return CTFLobbyMember_ConnectState_Name(value);
  }
  static inline bool ConnectState_Parse(const ::std::string& name,
      ConnectState* value) {
    return CTFLobbyMember_ConnectState_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string name = 6;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 6;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional fixed64 id = 1 [(.key_field) = true];
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // optional .TF_GC_TEAM team = 3 [default = TF_GC_TEAM_DEFENDERS];
  bool has_team() const;
  void clear_team();
  static const int kTeamFieldNumber = 3;
  ::TF_GC_TEAM team() const;
  void set_team(::TF_GC_TEAM value);

  // optional .TFLobbyReadyState ready_state = 11 [default = TFLobbyReadyState_UNDECLARED];
  bool has_ready_state() const;
  void clear_ready_state();
  static const int kReadyStateFieldNumber = 11;
  ::TFLobbyReadyState ready_state() const;
  void set_ready_state(::TFLobbyReadyState value);

  // optional uint64 party_id = 12;
  bool has_party_id() const;
  void clear_party_id();
  static const int kPartyIdFieldNumber = 12;
  ::google::protobuf::uint64 party_id() const;
  void set_party_id(::google::protobuf::uint64 value);

  // optional .CTFLobbyMember.ConnectState connect_state = 13 [default = INVALID];
  bool has_connect_state() const;
  void clear_connect_state();
  static const int kConnectStateFieldNumber = 13;
  ::CTFLobbyMember_ConnectState connect_state() const;
  void set_connect_state(::CTFLobbyMember_ConnectState value);

  // optional bool squad_surplus = 14;
  bool has_squad_surplus() const;
  void clear_squad_surplus();
  static const int kSquadSurplusFieldNumber = 14;
  bool squad_surplus() const;
  void set_squad_surplus(bool value);

  // optional uint32 badge_level = 15;
  bool has_badge_level() const;
  void clear_badge_level();
  static const int kBadgeLevelFieldNumber = 15;
  ::google::protobuf::uint32 badge_level() const;
  void set_badge_level(::google::protobuf::uint32 value);

  // optional uint32 last_connect_time = 17;
  bool has_last_connect_time() const;
  void clear_last_connect_time();
  static const int kLastConnectTimeFieldNumber = 17;
  ::google::protobuf::uint32 last_connect_time() const;
  void set_last_connect_time(::google::protobuf::uint32 value);

  // optional uint32 skillrating = 16 [default = 10000];
  bool has_skillrating() const;
  void clear_skillrating();
  static const int kSkillratingFieldNumber = 16;
  ::google::protobuf::uint32 skillrating() const;
  void set_skillrating(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CTFLobbyMember)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_team();
  void clear_has_team();
  void set_has_connect_state();
  void clear_has_connect_state();
  void set_has_name();
  void clear_has_name();
  void set_has_ready_state();
  void clear_has_ready_state();
  void set_has_party_id();
  void clear_has_party_id();
  void set_has_squad_surplus();
  void clear_has_squad_surplus();
  void set_has_badge_level();
  void clear_has_badge_level();
  void set_has_skillrating();
  void clear_has_skillrating();
  void set_has_last_connect_time();
  void clear_has_last_connect_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 id_;
  int team_;
  int ready_state_;
  ::google::protobuf::uint64 party_id_;
  int connect_state_;
  bool squad_surplus_;
  ::google::protobuf::uint32 badge_level_;
  ::google::protobuf::uint32 last_connect_time_;
  ::google::protobuf::uint32 skillrating_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCTFLobbyMemberImpl();
};
// -------------------------------------------------------------------

class CLobbyPendingPlayerReport : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CLobbyPendingPlayerReport) */ {
 public:
  CLobbyPendingPlayerReport();
  virtual ~CLobbyPendingPlayerReport();

  CLobbyPendingPlayerReport(const CLobbyPendingPlayerReport& from);

  inline CLobbyPendingPlayerReport& operator=(const CLobbyPendingPlayerReport& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CLobbyPendingPlayerReport(CLobbyPendingPlayerReport&& from) noexcept
    : CLobbyPendingPlayerReport() {
    *this = ::std::move(from);
  }

  inline CLobbyPendingPlayerReport& operator=(CLobbyPendingPlayerReport&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CLobbyPendingPlayerReport& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CLobbyPendingPlayerReport* internal_default_instance() {
    return reinterpret_cast<const CLobbyPendingPlayerReport*>(
               &_CLobbyPendingPlayerReport_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    69;

  void Swap(CLobbyPendingPlayerReport* other);
  friend void swap(CLobbyPendingPlayerReport& a, CLobbyPendingPlayerReport& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CLobbyPendingPlayerReport* New() const PROTOBUF_FINAL { return New(NULL); }

  CLobbyPendingPlayerReport* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CLobbyPendingPlayerReport& from);
  void MergeFrom(const CLobbyPendingPlayerReport& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CLobbyPendingPlayerReport* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional fixed32 date = 2;
  bool has_date() const;
  void clear_date();
  static const int kDateFieldNumber = 2;
  ::google::protobuf::uint32 date() const;
  void set_date(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CLobbyPendingPlayerReport)
 private:
  void set_has_account_id();
  void clear_has_account_id();
  void set_has_date();
  void clear_has_date();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 date_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCLobbyPendingPlayerReportImpl();
};
// -------------------------------------------------------------------

class CSOTFGameServerLobby : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CSOTFGameServerLobby) */ {
 public:
  CSOTFGameServerLobby();
  virtual ~CSOTFGameServerLobby();

  CSOTFGameServerLobby(const CSOTFGameServerLobby& from);

  inline CSOTFGameServerLobby& operator=(const CSOTFGameServerLobby& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSOTFGameServerLobby(CSOTFGameServerLobby&& from) noexcept
    : CSOTFGameServerLobby() {
    *this = ::std::move(from);
  }

  inline CSOTFGameServerLobby& operator=(CSOTFGameServerLobby&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFGameServerLobby& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSOTFGameServerLobby* internal_default_instance() {
    return reinterpret_cast<const CSOTFGameServerLobby*>(
               &_CSOTFGameServerLobby_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    70;

  void Swap(CSOTFGameServerLobby* other);
  friend void swap(CSOTFGameServerLobby& a, CSOTFGameServerLobby& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSOTFGameServerLobby* New() const PROTOBUF_FINAL { return New(NULL); }

  CSOTFGameServerLobby* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CSOTFGameServerLobby& from);
  void MergeFrom(const CSOTFGameServerLobby& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CSOTFGameServerLobby* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CSOTFGameServerLobby_State State;
  static const State UNKNOWN =
    CSOTFGameServerLobby_State_UNKNOWN;
  static const State SERVERSETUP =
    CSOTFGameServerLobby_State_SERVERSETUP;
  static const State RUN =
    CSOTFGameServerLobby_State_RUN;
  static inline bool State_IsValid(int value) {
    return CSOTFGameServerLobby_State_IsValid(value);
  }
  static const State State_MIN =
    CSOTFGameServerLobby_State_State_MIN;
  static const State State_MAX =
    CSOTFGameServerLobby_State_State_MAX;
  static const int State_ARRAYSIZE =
    CSOTFGameServerLobby_State_State_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  State_descriptor() {
    return CSOTFGameServerLobby_State_descriptor();
  }
  static inline const ::std::string& State_Name(State value) {
    return CSOTFGameServerLobby_State_Name(value);
  }
  static inline bool State_Parse(const ::std::string& name,
      State* value) {
    return CSOTFGameServerLobby_State_Parse(name, value);
  }

  typedef CSOTFGameServerLobby_LobbyType LobbyType;
  static const LobbyType INVALID =
    CSOTFGameServerLobby_LobbyType_INVALID;
  static const LobbyType MATCH =
    CSOTFGameServerLobby_LobbyType_MATCH;
  static const LobbyType PRACTICE =
    CSOTFGameServerLobby_LobbyType_PRACTICE;
  static const LobbyType TOURNAMENT =
    CSOTFGameServerLobby_LobbyType_TOURNAMENT;
  static const LobbyType TUTORIAL =
    CSOTFGameServerLobby_LobbyType_TUTORIAL;
  static inline bool LobbyType_IsValid(int value) {
    return CSOTFGameServerLobby_LobbyType_IsValid(value);
  }
  static const LobbyType LobbyType_MIN =
    CSOTFGameServerLobby_LobbyType_LobbyType_MIN;
  static const LobbyType LobbyType_MAX =
    CSOTFGameServerLobby_LobbyType_LobbyType_MAX;
  static const int LobbyType_ARRAYSIZE =
    CSOTFGameServerLobby_LobbyType_LobbyType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  LobbyType_descriptor() {
    return CSOTFGameServerLobby_LobbyType_descriptor();
  }
  static inline const ::std::string& LobbyType_Name(LobbyType value) {
    return CSOTFGameServerLobby_LobbyType_Name(value);
  }
  static inline bool LobbyType_Parse(const ::std::string& name,
      LobbyType* value) {
    return CSOTFGameServerLobby_LobbyType_Parse(name, value);
  }

  typedef CSOTFGameServerLobby_WarMatch WarMatch;
  static const WarMatch NOPE =
    CSOTFGameServerLobby_WarMatch_NOPE;
  static const WarMatch INVADERS_ARE_PYRO =
    CSOTFGameServerLobby_WarMatch_INVADERS_ARE_PYRO;
  static const WarMatch INVADERS_ARE_HEAVY =
    CSOTFGameServerLobby_WarMatch_INVADERS_ARE_HEAVY;
  static inline bool WarMatch_IsValid(int value) {
    return CSOTFGameServerLobby_WarMatch_IsValid(value);
  }
  static const WarMatch WarMatch_MIN =
    CSOTFGameServerLobby_WarMatch_WarMatch_MIN;
  static const WarMatch WarMatch_MAX =
    CSOTFGameServerLobby_WarMatch_WarMatch_MAX;
  static const int WarMatch_ARRAYSIZE =
    CSOTFGameServerLobby_WarMatch_WarMatch_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  WarMatch_descriptor() {
    return CSOTFGameServerLobby_WarMatch_descriptor();
  }
  static inline const ::std::string& WarMatch_Name(WarMatch value) {
    return CSOTFGameServerLobby_WarMatch_Name(value);
  }
  static inline bool WarMatch_Parse(const ::std::string& name,
      WarMatch* value) {
    return CSOTFGameServerLobby_WarMatch_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .CTFLobbyMember members = 2;
  int members_size() const;
  void clear_members();
  static const int kMembersFieldNumber = 2;
  const ::CTFLobbyMember& members(int index) const;
  ::CTFLobbyMember* mutable_members(int index);
  ::CTFLobbyMember* add_members();
  ::google::protobuf::RepeatedPtrField< ::CTFLobbyMember >*
      mutable_members();
  const ::google::protobuf::RepeatedPtrField< ::CTFLobbyMember >&
      members() const;

  // repeated fixed64 pending_invites = 10;
  int pending_invites_size() const;
  void clear_pending_invites();
  static const int kPendingInvitesFieldNumber = 10;
  ::google::protobuf::uint64 pending_invites(int index) const;
  void set_pending_invites(int index, ::google::protobuf::uint64 value);
  void add_pending_invites(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      pending_invites() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_pending_invites();

  // repeated uint32 next_maps_for_vote = 47;
  int next_maps_for_vote_size() const;
  void clear_next_maps_for_vote();
  static const int kNextMapsForVoteFieldNumber = 47;
  ::google::protobuf::uint32 next_maps_for_vote(int index) const;
  void set_next_maps_for_vote(int index, ::google::protobuf::uint32 value);
  void add_next_maps_for_vote(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      next_maps_for_vote() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_next_maps_for_vote();

  // optional string connect = 5;
  bool has_connect() const;
  void clear_connect();
  static const int kConnectFieldNumber = 5;
  const ::std::string& connect() const;
  void set_connect(const ::std::string& value);
  #if LANG_CXX11
  void set_connect(::std::string&& value);
  #endif
  void set_connect(const char* value);
  void set_connect(const char* value, size_t size);
  ::std::string* mutable_connect();
  ::std::string* release_connect();
  void set_allocated_connect(::std::string* connect);

  // optional string game_name = 16;
  bool has_game_name() const;
  void clear_game_name();
  static const int kGameNameFieldNumber = 16;
  const ::std::string& game_name() const;
  void set_game_name(const ::std::string& value);
  #if LANG_CXX11
  void set_game_name(::std::string&& value);
  #endif
  void set_game_name(const char* value);
  void set_game_name(const char* value, size_t size);
  ::std::string* mutable_game_name();
  ::std::string* release_game_name();
  void set_allocated_game_name(::std::string* game_name);

  // optional string map_name = 38;
  bool has_map_name() const;
  void clear_map_name();
  static const int kMapNameFieldNumber = 38;
  const ::std::string& map_name() const;
  void set_map_name(const ::std::string& value);
  #if LANG_CXX11
  void set_map_name(::std::string&& value);
  #endif
  void set_map_name(const char* value);
  void set_map_name(const char* value, size_t size);
  ::std::string* mutable_map_name();
  ::std::string* release_map_name();
  void set_allocated_map_name(::std::string* map_name);

  // optional string mission_name = 39;
  bool has_mission_name() const;
  void clear_mission_name();
  static const int kMissionNameFieldNumber = 39;
  const ::std::string& mission_name() const;
  void set_mission_name(const ::std::string& value);
  #if LANG_CXX11
  void set_mission_name(::std::string&& value);
  #endif
  void set_mission_name(const char* value);
  void set_mission_name(const char* value, size_t size);
  ::std::string* mutable_mission_name();
  ::std::string* release_mission_name();
  void set_allocated_mission_name(::std::string* mission_name);

  // optional string mannup_tour_name = 42;
  bool has_mannup_tour_name() const;
  void clear_mannup_tour_name();
  static const int kMannupTourNameFieldNumber = 42;
  const ::std::string& mannup_tour_name() const;
  void set_mannup_tour_name(const ::std::string& value);
  #if LANG_CXX11
  void set_mannup_tour_name(::std::string&& value);
  #endif
  void set_mannup_tour_name(const char* value);
  void set_mannup_tour_name(const char* value, size_t size);
  ::std::string* mutable_mannup_tour_name();
  ::std::string* release_mannup_tour_name();
  void set_allocated_mannup_tour_name(::std::string* mannup_tour_name);

  // optional uint64 lobby_id = 1 [(.key_field) = true];
  bool has_lobby_id() const;
  void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 1;
  ::google::protobuf::uint64 lobby_id() const;
  void set_lobby_id(::google::protobuf::uint64 value);

  // optional fixed64 server_id = 6 [default = 0];
  bool has_server_id() const;
  void clear_server_id();
  static const int kServerIdFieldNumber = 6;
  ::google::protobuf::uint64 server_id() const;
  void set_server_id(::google::protobuf::uint64 value);

  // optional fixed64 leader_id = 11;
  bool has_leader_id() const;
  void clear_leader_id();
  static const int kLeaderIdFieldNumber = 11;
  ::google::protobuf::uint64 leader_id() const;
  void set_leader_id(::google::protobuf::uint64 value);

  // optional .CSOTFGameServerLobby.State state = 4 [default = UNKNOWN];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 4;
  ::CSOTFGameServerLobby_State state() const;
  void set_state(::CSOTFGameServerLobby_State value);

  // optional uint32 server_region = 21 [default = 0];
  bool has_server_region() const;
  void clear_server_region();
  static const int kServerRegionFieldNumber = 21;
  ::google::protobuf::uint32 server_region() const;
  void set_server_region(::google::protobuf::uint32 value);

  // optional .TF_GC_GameState game_state = 22 [default = TF_GC_GAMESTATE_STATE_INIT];
  bool has_game_state() const;
  void clear_game_state();
  static const int kGameStateFieldNumber = 22;
  ::TF_GC_GameState game_state() const;
  void set_game_state(::TF_GC_GameState value);

  // optional uint32 num_spectators = 23;
  bool has_num_spectators() const;
  void clear_num_spectators();
  static const int kNumSpectatorsFieldNumber = 23;
  ::google::protobuf::uint32 num_spectators() const;
  void set_num_spectators(::google::protobuf::uint32 value);

  // optional float readyup_remaining_time = 26;
  bool has_readyup_remaining_time() const;
  void clear_readyup_remaining_time();
  static const int kReadyupRemainingTimeFieldNumber = 26;
  float readyup_remaining_time() const;
  void set_readyup_remaining_time(float value);

  // optional bool allow_cheats = 13;
  bool has_allow_cheats() const;
  void clear_allow_cheats();
  static const int kAllowCheatsFieldNumber = 13;
  bool allow_cheats() const;
  void set_allow_cheats(bool value);

  // optional bool late_join_eligible = 44;
  bool has_late_join_eligible() const;
  void clear_late_join_eligible();
  static const int kLateJoinEligibleFieldNumber = 44;
  bool late_join_eligible() const;
  void set_late_join_eligible(bool value);

  // optional uint64 match_id = 30 [default = 0];
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 30;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 lobby_mm_version = 48;
  bool has_lobby_mm_version() const;
  void clear_lobby_mm_version();
  static const int kLobbyMmVersionFieldNumber = 48;
  ::google::protobuf::uint32 lobby_mm_version() const;
  void set_lobby_mm_version(::google::protobuf::uint32 value);

  // optional fixed64 load_game_lobby_id = 33;
  bool has_load_game_lobby_id() const;
  void clear_load_game_lobby_id();
  static const int kLoadGameLobbyIdFieldNumber = 33;
  ::google::protobuf::uint64 load_game_lobby_id() const;
  void set_load_game_lobby_id(::google::protobuf::uint64 value);

  // optional uint32 average_rank = 32;
  bool has_average_rank() const;
  void clear_average_rank();
  static const int kAverageRankFieldNumber = 32;
  ::google::protobuf::uint32 average_rank() const;
  void set_average_rank(::google::protobuf::uint32 value);

  // optional uint32 load_game_save_number = 34;
  bool has_load_game_save_number() const;
  void clear_load_game_save_number();
  static const int kLoadGameSaveNumberFieldNumber = 34;
  ::google::protobuf::uint32 load_game_save_number() const;
  void set_load_game_save_number(::google::protobuf::uint32 value);

  // optional fixed32 replay_salt = 35;
  bool has_replay_salt() const;
  void clear_replay_salt();
  static const int kReplaySaltFieldNumber = 35;
  ::google::protobuf::uint32 replay_salt() const;
  void set_replay_salt(::google::protobuf::uint32 value);

  // optional uint32 formed_time = 36;
  bool has_formed_time() const;
  void clear_formed_time();
  static const int kFormedTimeFieldNumber = 36;
  ::google::protobuf::uint32 formed_time() const;
  void set_formed_time(::google::protobuf::uint32 value);

  // optional uint32 match_group = 41;
  bool has_match_group() const;
  void clear_match_group();
  static const int kMatchGroupFieldNumber = 41;
  ::google::protobuf::uint32 match_group() const;
  void set_match_group(::google::protobuf::uint32 value);

  // optional uint32 flags = 43;
  bool has_flags() const;
  void clear_flags();
  static const int kFlagsFieldNumber = 43;
  ::google::protobuf::uint32 flags() const;
  void set_flags(::google::protobuf::uint32 value);

  // optional uint32 fixed_match_size = 45;
  bool has_fixed_match_size() const;
  void clear_fixed_match_size();
  static const int kFixedMatchSizeFieldNumber = 45;
  ::google::protobuf::uint32 fixed_match_size() const;
  void set_fixed_match_size(::google::protobuf::uint32 value);

  // optional .CSOTFGameServerLobby.WarMatch is_war_match = 46 [default = NOPE];
  bool has_is_war_match() const;
  void clear_is_war_match();
  static const int kIsWarMatchFieldNumber = 46;
  ::CSOTFGameServerLobby_WarMatch is_war_match() const;
  void set_is_war_match(::CSOTFGameServerLobby_WarMatch value);

  // optional .CSOTFGameServerLobby.LobbyType lobby_type = 12 [default = INVALID];
  bool has_lobby_type() const;
  void clear_lobby_type();
  static const int kLobbyTypeFieldNumber = 12;
  ::CSOTFGameServerLobby_LobbyType lobby_type() const;
  void set_lobby_type(::CSOTFGameServerLobby_LobbyType value);

  // optional bool allow_spectating = 31 [default = true];
  bool has_allow_spectating() const;
  void clear_allow_spectating();
  static const int kAllowSpectatingFieldNumber = 31;
  bool allow_spectating() const;
  void set_allow_spectating(bool value);

  // @@protoc_insertion_point(class_scope:CSOTFGameServerLobby)
 private:
  void set_has_lobby_id();
  void clear_has_lobby_id();
  void set_has_leader_id();
  void clear_has_leader_id();
  void set_has_server_id();
  void clear_has_server_id();
  void set_has_state();
  void clear_has_state();
  void set_has_connect();
  void clear_has_connect();
  void set_has_lobby_type();
  void clear_has_lobby_type();
  void set_has_allow_cheats();
  void clear_has_allow_cheats();
  void set_has_game_name();
  void clear_has_game_name();
  void set_has_server_region();
  void clear_has_server_region();
  void set_has_game_state();
  void clear_has_game_state();
  void set_has_num_spectators();
  void clear_has_num_spectators();
  void set_has_readyup_remaining_time();
  void clear_has_readyup_remaining_time();
  void set_has_allow_spectating();
  void clear_has_allow_spectating();
  void set_has_average_rank();
  void clear_has_average_rank();
  void set_has_load_game_lobby_id();
  void clear_has_load_game_lobby_id();
  void set_has_load_game_save_number();
  void clear_has_load_game_save_number();
  void set_has_mannup_tour_name();
  void clear_has_mannup_tour_name();
  void set_has_map_name();
  void clear_has_map_name();
  void set_has_mission_name();
  void clear_has_mission_name();
  void set_has_match_group();
  void clear_has_match_group();
  void set_has_match_id();
  void clear_has_match_id();
  void set_has_replay_salt();
  void clear_has_replay_salt();
  void set_has_formed_time();
  void clear_has_formed_time();
  void set_has_flags();
  void clear_has_flags();
  void set_has_late_join_eligible();
  void clear_has_late_join_eligible();
  void set_has_fixed_match_size();
  void clear_has_fixed_match_size();
  void set_has_is_war_match();
  void clear_has_is_war_match();
  void set_has_lobby_mm_version();
  void clear_has_lobby_mm_version();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CTFLobbyMember > members_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > pending_invites_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > next_maps_for_vote_;
  ::google::protobuf::internal::ArenaStringPtr connect_;
  ::google::protobuf::internal::ArenaStringPtr game_name_;
  ::google::protobuf::internal::ArenaStringPtr map_name_;
  ::google::protobuf::internal::ArenaStringPtr mission_name_;
  ::google::protobuf::internal::ArenaStringPtr mannup_tour_name_;
  ::google::protobuf::uint64 lobby_id_;
  ::google::protobuf::uint64 server_id_;
  ::google::protobuf::uint64 leader_id_;
  int state_;
  ::google::protobuf::uint32 server_region_;
  int game_state_;
  ::google::protobuf::uint32 num_spectators_;
  float readyup_remaining_time_;
  bool allow_cheats_;
  bool late_join_eligible_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 lobby_mm_version_;
  ::google::protobuf::uint64 load_game_lobby_id_;
  ::google::protobuf::uint32 average_rank_;
  ::google::protobuf::uint32 load_game_save_number_;
  ::google::protobuf::uint32 replay_salt_;
  ::google::protobuf::uint32 formed_time_;
  ::google::protobuf::uint32 match_group_;
  ::google::protobuf::uint32 flags_;
  ::google::protobuf::uint32 fixed_match_size_;
  int is_war_match_;
  int lobby_type_;
  bool allow_spectating_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCSOTFGameServerLobbyImpl();
};
// -------------------------------------------------------------------

class CMsgExitMatchmaking : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgExitMatchmaking) */ {
 public:
  CMsgExitMatchmaking();
  virtual ~CMsgExitMatchmaking();

  CMsgExitMatchmaking(const CMsgExitMatchmaking& from);

  inline CMsgExitMatchmaking& operator=(const CMsgExitMatchmaking& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgExitMatchmaking(CMsgExitMatchmaking&& from) noexcept
    : CMsgExitMatchmaking() {
    *this = ::std::move(from);
  }

  inline CMsgExitMatchmaking& operator=(CMsgExitMatchmaking&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgExitMatchmaking& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgExitMatchmaking* internal_default_instance() {
    return reinterpret_cast<const CMsgExitMatchmaking*>(
               &_CMsgExitMatchmaking_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    71;

  void Swap(CMsgExitMatchmaking* other);
  friend void swap(CMsgExitMatchmaking& a, CMsgExitMatchmaking& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgExitMatchmaking* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgExitMatchmaking* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgExitMatchmaking& from);
  void MergeFrom(const CMsgExitMatchmaking& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgExitMatchmaking* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 party_id = 2;
  bool has_party_id() const;
  void clear_party_id();
  static const int kPartyIdFieldNumber = 2;
  ::google::protobuf::uint64 party_id() const;
  void set_party_id(::google::protobuf::uint64 value);

  // optional uint64 lobby_id = 3;
  bool has_lobby_id() const;
  void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 3;
  ::google::protobuf::uint64 lobby_id() const;
  void set_lobby_id(::google::protobuf::uint64 value);

  // optional bool explicit_abandon = 1;
  bool has_explicit_abandon() const;
  void clear_explicit_abandon();
  static const int kExplicitAbandonFieldNumber = 1;
  bool explicit_abandon() const;
  void set_explicit_abandon(bool value);

  // @@protoc_insertion_point(class_scope:CMsgExitMatchmaking)
 private:
  void set_has_explicit_abandon();
  void clear_has_explicit_abandon();
  void set_has_party_id();
  void clear_has_party_id();
  void set_has_lobby_id();
  void clear_has_lobby_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 party_id_;
  ::google::protobuf::uint64 lobby_id_;
  bool explicit_abandon_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgExitMatchmakingImpl();
};
// -------------------------------------------------------------------

class CMsgAcceptInvite : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgAcceptInvite) */ {
 public:
  CMsgAcceptInvite();
  virtual ~CMsgAcceptInvite();

  CMsgAcceptInvite(const CMsgAcceptInvite& from);

  inline CMsgAcceptInvite& operator=(const CMsgAcceptInvite& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgAcceptInvite(CMsgAcceptInvite&& from) noexcept
    : CMsgAcceptInvite() {
    *this = ::std::move(from);
  }

  inline CMsgAcceptInvite& operator=(CMsgAcceptInvite&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgAcceptInvite& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgAcceptInvite* internal_default_instance() {
    return reinterpret_cast<const CMsgAcceptInvite*>(
               &_CMsgAcceptInvite_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    72;

  void Swap(CMsgAcceptInvite* other);
  friend void swap(CMsgAcceptInvite& a, CMsgAcceptInvite& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgAcceptInvite* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgAcceptInvite* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgAcceptInvite& from);
  void MergeFrom(const CMsgAcceptInvite& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgAcceptInvite* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 party_id = 1;
  bool has_party_id() const;
  void clear_party_id();
  static const int kPartyIdFieldNumber = 1;
  ::google::protobuf::uint64 party_id() const;
  void set_party_id(::google::protobuf::uint64 value);

  // optional fixed64 steamid_lobby = 2;
  bool has_steamid_lobby() const;
  void clear_steamid_lobby();
  static const int kSteamidLobbyFieldNumber = 2;
  ::google::protobuf::uint64 steamid_lobby() const;
  void set_steamid_lobby(::google::protobuf::uint64 value);

  // optional uint32 client_version = 3 [default = 1225];
  bool has_client_version() const;
  void clear_client_version();
  static const int kClientVersionFieldNumber = 3;
  ::google::protobuf::uint32 client_version() const;
  void set_client_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgAcceptInvite)
 private:
  void set_has_party_id();
  void clear_has_party_id();
  void set_has_steamid_lobby();
  void clear_has_steamid_lobby();
  void set_has_client_version();
  void clear_has_client_version();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 party_id_;
  ::google::protobuf::uint64 steamid_lobby_;
  ::google::protobuf::uint32 client_version_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgAcceptInviteImpl();
};
// -------------------------------------------------------------------

class CMsgAcceptInviteResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgAcceptInviteResponse) */ {
 public:
  CMsgAcceptInviteResponse();
  virtual ~CMsgAcceptInviteResponse();

  CMsgAcceptInviteResponse(const CMsgAcceptInviteResponse& from);

  inline CMsgAcceptInviteResponse& operator=(const CMsgAcceptInviteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgAcceptInviteResponse(CMsgAcceptInviteResponse&& from) noexcept
    : CMsgAcceptInviteResponse() {
    *this = ::std::move(from);
  }

  inline CMsgAcceptInviteResponse& operator=(CMsgAcceptInviteResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgAcceptInviteResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgAcceptInviteResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgAcceptInviteResponse*>(
               &_CMsgAcceptInviteResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    73;

  void Swap(CMsgAcceptInviteResponse* other);
  friend void swap(CMsgAcceptInviteResponse& a, CMsgAcceptInviteResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgAcceptInviteResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgAcceptInviteResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgAcceptInviteResponse& from);
  void MergeFrom(const CMsgAcceptInviteResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgAcceptInviteResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result_code = 1;
  bool has_result_code() const;
  void clear_result_code();
  static const int kResultCodeFieldNumber = 1;
  ::google::protobuf::int32 result_code() const;
  void set_result_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgAcceptInviteResponse)
 private:
  void set_has_result_code();
  void clear_has_result_code();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 result_code_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgAcceptInviteResponseImpl();
};
// -------------------------------------------------------------------

class CMsgReadyUp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgReadyUp) */ {
 public:
  CMsgReadyUp();
  virtual ~CMsgReadyUp();

  CMsgReadyUp(const CMsgReadyUp& from);

  inline CMsgReadyUp& operator=(const CMsgReadyUp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgReadyUp(CMsgReadyUp&& from) noexcept
    : CMsgReadyUp() {
    *this = ::std::move(from);
  }

  inline CMsgReadyUp& operator=(CMsgReadyUp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgReadyUp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgReadyUp* internal_default_instance() {
    return reinterpret_cast<const CMsgReadyUp*>(
               &_CMsgReadyUp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    74;

  void Swap(CMsgReadyUp* other);
  friend void swap(CMsgReadyUp& a, CMsgReadyUp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgReadyUp* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgReadyUp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgReadyUp& from);
  void MergeFrom(const CMsgReadyUp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgReadyUp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TFLobbyReadyState state = 1 [default = TFLobbyReadyState_UNDECLARED];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 1;
  ::TFLobbyReadyState state() const;
  void set_state(::TFLobbyReadyState value);

  // @@protoc_insertion_point(class_scope:CMsgReadyUp)
 private:
  void set_has_state();
  void clear_has_state();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int state_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgReadyUpImpl();
};
// -------------------------------------------------------------------

class CMsgMatchmakingSearchCountRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgMatchmakingSearchCountRequest) */ {
 public:
  CMsgMatchmakingSearchCountRequest();
  virtual ~CMsgMatchmakingSearchCountRequest();

  CMsgMatchmakingSearchCountRequest(const CMsgMatchmakingSearchCountRequest& from);

  inline CMsgMatchmakingSearchCountRequest& operator=(const CMsgMatchmakingSearchCountRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgMatchmakingSearchCountRequest(CMsgMatchmakingSearchCountRequest&& from) noexcept
    : CMsgMatchmakingSearchCountRequest() {
    *this = ::std::move(from);
  }

  inline CMsgMatchmakingSearchCountRequest& operator=(CMsgMatchmakingSearchCountRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMatchmakingSearchCountRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgMatchmakingSearchCountRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgMatchmakingSearchCountRequest*>(
               &_CMsgMatchmakingSearchCountRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    75;

  void Swap(CMsgMatchmakingSearchCountRequest* other);
  friend void swap(CMsgMatchmakingSearchCountRequest& a, CMsgMatchmakingSearchCountRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgMatchmakingSearchCountRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgMatchmakingSearchCountRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgMatchmakingSearchCountRequest& from);
  void MergeFrom(const CMsgMatchmakingSearchCountRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgMatchmakingSearchCountRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgMatchmakingSearchCountRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgMatchmakingSearchCountRequestImpl();
};
// -------------------------------------------------------------------

class CMsgMatchmakingSearchCountResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgMatchmakingSearchCountResponse) */ {
 public:
  CMsgMatchmakingSearchCountResponse();
  virtual ~CMsgMatchmakingSearchCountResponse();

  CMsgMatchmakingSearchCountResponse(const CMsgMatchmakingSearchCountResponse& from);

  inline CMsgMatchmakingSearchCountResponse& operator=(const CMsgMatchmakingSearchCountResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgMatchmakingSearchCountResponse(CMsgMatchmakingSearchCountResponse&& from) noexcept
    : CMsgMatchmakingSearchCountResponse() {
    *this = ::std::move(from);
  }

  inline CMsgMatchmakingSearchCountResponse& operator=(CMsgMatchmakingSearchCountResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMatchmakingSearchCountResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgMatchmakingSearchCountResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgMatchmakingSearchCountResponse*>(
               &_CMsgMatchmakingSearchCountResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    76;

  void Swap(CMsgMatchmakingSearchCountResponse* other);
  friend void swap(CMsgMatchmakingSearchCountResponse& a, CMsgMatchmakingSearchCountResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgMatchmakingSearchCountResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgMatchmakingSearchCountResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgMatchmakingSearchCountResponse& from);
  void MergeFrom(const CMsgMatchmakingSearchCountResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgMatchmakingSearchCountResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 searching_players_by_group = 1;
  int searching_players_by_group_size() const;
  void clear_searching_players_by_group();
  static const int kSearchingPlayersByGroupFieldNumber = 1;
  ::google::protobuf::uint32 searching_players_by_group(int index) const;
  void set_searching_players_by_group(int index, ::google::protobuf::uint32 value);
  void add_searching_players_by_group(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      searching_players_by_group() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_searching_players_by_group();

  // @@protoc_insertion_point(class_scope:CMsgMatchmakingSearchCountResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > searching_players_by_group_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgMatchmakingSearchCountResponseImpl();
};
// -------------------------------------------------------------------

class CMsgKickedFromMatchmakingQueue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgKickedFromMatchmakingQueue) */ {
 public:
  CMsgKickedFromMatchmakingQueue();
  virtual ~CMsgKickedFromMatchmakingQueue();

  CMsgKickedFromMatchmakingQueue(const CMsgKickedFromMatchmakingQueue& from);

  inline CMsgKickedFromMatchmakingQueue& operator=(const CMsgKickedFromMatchmakingQueue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgKickedFromMatchmakingQueue(CMsgKickedFromMatchmakingQueue&& from) noexcept
    : CMsgKickedFromMatchmakingQueue() {
    *this = ::std::move(from);
  }

  inline CMsgKickedFromMatchmakingQueue& operator=(CMsgKickedFromMatchmakingQueue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgKickedFromMatchmakingQueue& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgKickedFromMatchmakingQueue* internal_default_instance() {
    return reinterpret_cast<const CMsgKickedFromMatchmakingQueue*>(
               &_CMsgKickedFromMatchmakingQueue_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    77;

  void Swap(CMsgKickedFromMatchmakingQueue* other);
  friend void swap(CMsgKickedFromMatchmakingQueue& a, CMsgKickedFromMatchmakingQueue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgKickedFromMatchmakingQueue* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgKickedFromMatchmakingQueue* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgKickedFromMatchmakingQueue& from);
  void MergeFrom(const CMsgKickedFromMatchmakingQueue& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgKickedFromMatchmakingQueue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgKickedFromMatchmakingQueue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgKickedFromMatchmakingQueueImpl();
};
// -------------------------------------------------------------------

class CMsgTFJoinChatChannel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgTFJoinChatChannel) */ {
 public:
  CMsgTFJoinChatChannel();
  virtual ~CMsgTFJoinChatChannel();

  CMsgTFJoinChatChannel(const CMsgTFJoinChatChannel& from);

  inline CMsgTFJoinChatChannel& operator=(const CMsgTFJoinChatChannel& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTFJoinChatChannel(CMsgTFJoinChatChannel&& from) noexcept
    : CMsgTFJoinChatChannel() {
    *this = ::std::move(from);
  }

  inline CMsgTFJoinChatChannel& operator=(CMsgTFJoinChatChannel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFJoinChatChannel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTFJoinChatChannel* internal_default_instance() {
    return reinterpret_cast<const CMsgTFJoinChatChannel*>(
               &_CMsgTFJoinChatChannel_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    78;

  void Swap(CMsgTFJoinChatChannel* other);
  friend void swap(CMsgTFJoinChatChannel& a, CMsgTFJoinChatChannel& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTFJoinChatChannel* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgTFJoinChatChannel* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgTFJoinChatChannel& from);
  void MergeFrom(const CMsgTFJoinChatChannel& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgTFJoinChatChannel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string persona_name = 1;
  bool has_persona_name() const;
  void clear_persona_name();
  static const int kPersonaNameFieldNumber = 1;
  const ::std::string& persona_name() const;
  void set_persona_name(const ::std::string& value);
  #if LANG_CXX11
  void set_persona_name(::std::string&& value);
  #endif
  void set_persona_name(const char* value);
  void set_persona_name(const char* value, size_t size);
  ::std::string* mutable_persona_name();
  ::std::string* release_persona_name();
  void set_allocated_persona_name(::std::string* persona_name);

  // optional string channel_name = 2;
  bool has_channel_name() const;
  void clear_channel_name();
  static const int kChannelNameFieldNumber = 2;
  const ::std::string& channel_name() const;
  void set_channel_name(const ::std::string& value);
  #if LANG_CXX11
  void set_channel_name(::std::string&& value);
  #endif
  void set_channel_name(const char* value);
  void set_channel_name(const char* value, size_t size);
  ::std::string* mutable_channel_name();
  ::std::string* release_channel_name();
  void set_allocated_channel_name(::std::string* channel_name);

  // optional string password = 3;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 3;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // optional .ChatChannelType_t channel_type = 4 [default = ChatChannelType_Regional];
  bool has_channel_type() const;
  void clear_channel_type();
  static const int kChannelTypeFieldNumber = 4;
  ::ChatChannelType_t channel_type() const;
  void set_channel_type(::ChatChannelType_t value);

  // @@protoc_insertion_point(class_scope:CMsgTFJoinChatChannel)
 private:
  void set_has_persona_name();
  void clear_has_persona_name();
  void set_has_channel_name();
  void clear_has_channel_name();
  void set_has_password();
  void clear_has_password();
  void set_has_channel_type();
  void clear_has_channel_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr persona_name_;
  ::google::protobuf::internal::ArenaStringPtr channel_name_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  int channel_type_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgTFJoinChatChannelImpl();
};
// -------------------------------------------------------------------

class CMsgTFLeaveChatChannel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgTFLeaveChatChannel) */ {
 public:
  CMsgTFLeaveChatChannel();
  virtual ~CMsgTFLeaveChatChannel();

  CMsgTFLeaveChatChannel(const CMsgTFLeaveChatChannel& from);

  inline CMsgTFLeaveChatChannel& operator=(const CMsgTFLeaveChatChannel& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTFLeaveChatChannel(CMsgTFLeaveChatChannel&& from) noexcept
    : CMsgTFLeaveChatChannel() {
    *this = ::std::move(from);
  }

  inline CMsgTFLeaveChatChannel& operator=(CMsgTFLeaveChatChannel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFLeaveChatChannel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTFLeaveChatChannel* internal_default_instance() {
    return reinterpret_cast<const CMsgTFLeaveChatChannel*>(
               &_CMsgTFLeaveChatChannel_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    79;

  void Swap(CMsgTFLeaveChatChannel* other);
  friend void swap(CMsgTFLeaveChatChannel& a, CMsgTFLeaveChatChannel& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTFLeaveChatChannel* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgTFLeaveChatChannel* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgTFLeaveChatChannel& from);
  void MergeFrom(const CMsgTFLeaveChatChannel& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgTFLeaveChatChannel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string channel_name = 1;
  bool has_channel_name() const;
  void clear_channel_name();
  static const int kChannelNameFieldNumber = 1;
  const ::std::string& channel_name() const;
  void set_channel_name(const ::std::string& value);
  #if LANG_CXX11
  void set_channel_name(::std::string&& value);
  #endif
  void set_channel_name(const char* value);
  void set_channel_name(const char* value, size_t size);
  ::std::string* mutable_channel_name();
  ::std::string* release_channel_name();
  void set_allocated_channel_name(::std::string* channel_name);

  // @@protoc_insertion_point(class_scope:CMsgTFLeaveChatChannel)
 private:
  void set_has_channel_name();
  void clear_has_channel_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr channel_name_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgTFLeaveChatChannelImpl();
};
// -------------------------------------------------------------------

class CMsgTFJoinChatChannelResponse_ChatMember : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgTFJoinChatChannelResponse.ChatMember) */ {
 public:
  CMsgTFJoinChatChannelResponse_ChatMember();
  virtual ~CMsgTFJoinChatChannelResponse_ChatMember();

  CMsgTFJoinChatChannelResponse_ChatMember(const CMsgTFJoinChatChannelResponse_ChatMember& from);

  inline CMsgTFJoinChatChannelResponse_ChatMember& operator=(const CMsgTFJoinChatChannelResponse_ChatMember& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTFJoinChatChannelResponse_ChatMember(CMsgTFJoinChatChannelResponse_ChatMember&& from) noexcept
    : CMsgTFJoinChatChannelResponse_ChatMember() {
    *this = ::std::move(from);
  }

  inline CMsgTFJoinChatChannelResponse_ChatMember& operator=(CMsgTFJoinChatChannelResponse_ChatMember&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFJoinChatChannelResponse_ChatMember& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTFJoinChatChannelResponse_ChatMember* internal_default_instance() {
    return reinterpret_cast<const CMsgTFJoinChatChannelResponse_ChatMember*>(
               &_CMsgTFJoinChatChannelResponse_ChatMember_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    80;

  void Swap(CMsgTFJoinChatChannelResponse_ChatMember* other);
  friend void swap(CMsgTFJoinChatChannelResponse_ChatMember& a, CMsgTFJoinChatChannelResponse_ChatMember& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTFJoinChatChannelResponse_ChatMember* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgTFJoinChatChannelResponse_ChatMember* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgTFJoinChatChannelResponse_ChatMember& from);
  void MergeFrom(const CMsgTFJoinChatChannelResponse_ChatMember& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgTFJoinChatChannelResponse_ChatMember* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string persona_name = 2;
  bool has_persona_name() const;
  void clear_persona_name();
  static const int kPersonaNameFieldNumber = 2;
  const ::std::string& persona_name() const;
  void set_persona_name(const ::std::string& value);
  #if LANG_CXX11
  void set_persona_name(::std::string&& value);
  #endif
  void set_persona_name(const char* value);
  void set_persona_name(const char* value, size_t size);
  ::std::string* mutable_persona_name();
  ::std::string* release_persona_name();
  void set_allocated_persona_name(::std::string* persona_name);

  // optional fixed64 steam_id = 1;
  bool has_steam_id() const;
  void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  ::google::protobuf::uint64 steam_id() const;
  void set_steam_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgTFJoinChatChannelResponse.ChatMember)
 private:
  void set_has_steam_id();
  void clear_has_steam_id();
  void set_has_persona_name();
  void clear_has_persona_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr persona_name_;
  ::google::protobuf::uint64 steam_id_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgTFJoinChatChannelResponse_ChatMemberImpl();
};
// -------------------------------------------------------------------

class CMsgTFJoinChatChannelResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgTFJoinChatChannelResponse) */ {
 public:
  CMsgTFJoinChatChannelResponse();
  virtual ~CMsgTFJoinChatChannelResponse();

  CMsgTFJoinChatChannelResponse(const CMsgTFJoinChatChannelResponse& from);

  inline CMsgTFJoinChatChannelResponse& operator=(const CMsgTFJoinChatChannelResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTFJoinChatChannelResponse(CMsgTFJoinChatChannelResponse&& from) noexcept
    : CMsgTFJoinChatChannelResponse() {
    *this = ::std::move(from);
  }

  inline CMsgTFJoinChatChannelResponse& operator=(CMsgTFJoinChatChannelResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFJoinChatChannelResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTFJoinChatChannelResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgTFJoinChatChannelResponse*>(
               &_CMsgTFJoinChatChannelResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    81;

  void Swap(CMsgTFJoinChatChannelResponse* other);
  friend void swap(CMsgTFJoinChatChannelResponse& a, CMsgTFJoinChatChannelResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTFJoinChatChannelResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgTFJoinChatChannelResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgTFJoinChatChannelResponse& from);
  void MergeFrom(const CMsgTFJoinChatChannelResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgTFJoinChatChannelResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgTFJoinChatChannelResponse_ChatMember ChatMember;

  // accessors -------------------------------------------------------

  // repeated .CMsgTFJoinChatChannelResponse.ChatMember members = 5;
  int members_size() const;
  void clear_members();
  static const int kMembersFieldNumber = 5;
  const ::CMsgTFJoinChatChannelResponse_ChatMember& members(int index) const;
  ::CMsgTFJoinChatChannelResponse_ChatMember* mutable_members(int index);
  ::CMsgTFJoinChatChannelResponse_ChatMember* add_members();
  ::google::protobuf::RepeatedPtrField< ::CMsgTFJoinChatChannelResponse_ChatMember >*
      mutable_members();
  const ::google::protobuf::RepeatedPtrField< ::CMsgTFJoinChatChannelResponse_ChatMember >&
      members() const;

  // optional string channel_name = 2;
  bool has_channel_name() const;
  void clear_channel_name();
  static const int kChannelNameFieldNumber = 2;
  const ::std::string& channel_name() const;
  void set_channel_name(const ::std::string& value);
  #if LANG_CXX11
  void set_channel_name(::std::string&& value);
  #endif
  void set_channel_name(const char* value);
  void set_channel_name(const char* value, size_t size);
  ::std::string* mutable_channel_name();
  ::std::string* release_channel_name();
  void set_allocated_channel_name(::std::string* channel_name);

  // optional uint32 response = 1;
  bool has_response() const;
  void clear_response();
  static const int kResponseFieldNumber = 1;
  ::google::protobuf::uint32 response() const;
  void set_response(::google::protobuf::uint32 value);

  // optional uint32 max_members = 4;
  bool has_max_members() const;
  void clear_max_members();
  static const int kMaxMembersFieldNumber = 4;
  ::google::protobuf::uint32 max_members() const;
  void set_max_members(::google::protobuf::uint32 value);

  // optional fixed64 channel_id = 3;
  bool has_channel_id() const;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  ::google::protobuf::uint64 channel_id() const;
  void set_channel_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgTFJoinChatChannelResponse)
 private:
  void set_has_response();
  void clear_has_response();
  void set_has_channel_name();
  void clear_has_channel_name();
  void set_has_channel_id();
  void clear_has_channel_id();
  void set_has_max_members();
  void clear_has_max_members();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgTFJoinChatChannelResponse_ChatMember > members_;
  ::google::protobuf::internal::ArenaStringPtr channel_name_;
  ::google::protobuf::uint32 response_;
  ::google::protobuf::uint32 max_members_;
  ::google::protobuf::uint64 channel_id_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgTFJoinChatChannelResponseImpl();
};
// -------------------------------------------------------------------

class CMsgTFOtherJoinedChatChannel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgTFOtherJoinedChatChannel) */ {
 public:
  CMsgTFOtherJoinedChatChannel();
  virtual ~CMsgTFOtherJoinedChatChannel();

  CMsgTFOtherJoinedChatChannel(const CMsgTFOtherJoinedChatChannel& from);

  inline CMsgTFOtherJoinedChatChannel& operator=(const CMsgTFOtherJoinedChatChannel& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTFOtherJoinedChatChannel(CMsgTFOtherJoinedChatChannel&& from) noexcept
    : CMsgTFOtherJoinedChatChannel() {
    *this = ::std::move(from);
  }

  inline CMsgTFOtherJoinedChatChannel& operator=(CMsgTFOtherJoinedChatChannel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFOtherJoinedChatChannel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTFOtherJoinedChatChannel* internal_default_instance() {
    return reinterpret_cast<const CMsgTFOtherJoinedChatChannel*>(
               &_CMsgTFOtherJoinedChatChannel_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    82;

  void Swap(CMsgTFOtherJoinedChatChannel* other);
  friend void swap(CMsgTFOtherJoinedChatChannel& a, CMsgTFOtherJoinedChatChannel& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTFOtherJoinedChatChannel* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgTFOtherJoinedChatChannel* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgTFOtherJoinedChatChannel& from);
  void MergeFrom(const CMsgTFOtherJoinedChatChannel& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgTFOtherJoinedChatChannel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string persona_name = 2;
  bool has_persona_name() const;
  void clear_persona_name();
  static const int kPersonaNameFieldNumber = 2;
  const ::std::string& persona_name() const;
  void set_persona_name(const ::std::string& value);
  #if LANG_CXX11
  void set_persona_name(::std::string&& value);
  #endif
  void set_persona_name(const char* value);
  void set_persona_name(const char* value, size_t size);
  ::std::string* mutable_persona_name();
  ::std::string* release_persona_name();
  void set_allocated_persona_name(::std::string* persona_name);

  // optional fixed64 channel_id = 1;
  bool has_channel_id() const;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 1;
  ::google::protobuf::uint64 channel_id() const;
  void set_channel_id(::google::protobuf::uint64 value);

  // optional fixed64 steam_id = 3;
  bool has_steam_id() const;
  void clear_steam_id();
  static const int kSteamIdFieldNumber = 3;
  ::google::protobuf::uint64 steam_id() const;
  void set_steam_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgTFOtherJoinedChatChannel)
 private:
  void set_has_channel_id();
  void clear_has_channel_id();
  void set_has_persona_name();
  void clear_has_persona_name();
  void set_has_steam_id();
  void clear_has_steam_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr persona_name_;
  ::google::protobuf::uint64 channel_id_;
  ::google::protobuf::uint64 steam_id_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgTFOtherJoinedChatChannelImpl();
};
// -------------------------------------------------------------------

class CMsgTFOtherLeftChatChannel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgTFOtherLeftChatChannel) */ {
 public:
  CMsgTFOtherLeftChatChannel();
  virtual ~CMsgTFOtherLeftChatChannel();

  CMsgTFOtherLeftChatChannel(const CMsgTFOtherLeftChatChannel& from);

  inline CMsgTFOtherLeftChatChannel& operator=(const CMsgTFOtherLeftChatChannel& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTFOtherLeftChatChannel(CMsgTFOtherLeftChatChannel&& from) noexcept
    : CMsgTFOtherLeftChatChannel() {
    *this = ::std::move(from);
  }

  inline CMsgTFOtherLeftChatChannel& operator=(CMsgTFOtherLeftChatChannel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFOtherLeftChatChannel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTFOtherLeftChatChannel* internal_default_instance() {
    return reinterpret_cast<const CMsgTFOtherLeftChatChannel*>(
               &_CMsgTFOtherLeftChatChannel_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    83;

  void Swap(CMsgTFOtherLeftChatChannel* other);
  friend void swap(CMsgTFOtherLeftChatChannel& a, CMsgTFOtherLeftChatChannel& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTFOtherLeftChatChannel* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgTFOtherLeftChatChannel* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgTFOtherLeftChatChannel& from);
  void MergeFrom(const CMsgTFOtherLeftChatChannel& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgTFOtherLeftChatChannel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 channel_id = 1;
  bool has_channel_id() const;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 1;
  ::google::protobuf::uint64 channel_id() const;
  void set_channel_id(::google::protobuf::uint64 value);

  // optional fixed64 steam_id = 2;
  bool has_steam_id() const;
  void clear_steam_id();
  static const int kSteamIdFieldNumber = 2;
  ::google::protobuf::uint64 steam_id() const;
  void set_steam_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgTFOtherLeftChatChannel)
 private:
  void set_has_channel_id();
  void clear_has_channel_id();
  void set_has_steam_id();
  void clear_has_steam_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 channel_id_;
  ::google::protobuf::uint64 steam_id_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgTFOtherLeftChatChannelImpl();
};
// -------------------------------------------------------------------

class CMsgTFRequestDefaultChatChannel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgTFRequestDefaultChatChannel) */ {
 public:
  CMsgTFRequestDefaultChatChannel();
  virtual ~CMsgTFRequestDefaultChatChannel();

  CMsgTFRequestDefaultChatChannel(const CMsgTFRequestDefaultChatChannel& from);

  inline CMsgTFRequestDefaultChatChannel& operator=(const CMsgTFRequestDefaultChatChannel& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTFRequestDefaultChatChannel(CMsgTFRequestDefaultChatChannel&& from) noexcept
    : CMsgTFRequestDefaultChatChannel() {
    *this = ::std::move(from);
  }

  inline CMsgTFRequestDefaultChatChannel& operator=(CMsgTFRequestDefaultChatChannel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFRequestDefaultChatChannel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTFRequestDefaultChatChannel* internal_default_instance() {
    return reinterpret_cast<const CMsgTFRequestDefaultChatChannel*>(
               &_CMsgTFRequestDefaultChatChannel_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    84;

  void Swap(CMsgTFRequestDefaultChatChannel* other);
  friend void swap(CMsgTFRequestDefaultChatChannel& a, CMsgTFRequestDefaultChatChannel& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTFRequestDefaultChatChannel* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgTFRequestDefaultChatChannel* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgTFRequestDefaultChatChannel& from);
  void MergeFrom(const CMsgTFRequestDefaultChatChannel& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgTFRequestDefaultChatChannel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgTFRequestDefaultChatChannel)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgTFRequestDefaultChatChannelImpl();
};
// -------------------------------------------------------------------

class CMsgTFRequestDefaultChatChannelResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgTFRequestDefaultChatChannelResponse) */ {
 public:
  CMsgTFRequestDefaultChatChannelResponse();
  virtual ~CMsgTFRequestDefaultChatChannelResponse();

  CMsgTFRequestDefaultChatChannelResponse(const CMsgTFRequestDefaultChatChannelResponse& from);

  inline CMsgTFRequestDefaultChatChannelResponse& operator=(const CMsgTFRequestDefaultChatChannelResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTFRequestDefaultChatChannelResponse(CMsgTFRequestDefaultChatChannelResponse&& from) noexcept
    : CMsgTFRequestDefaultChatChannelResponse() {
    *this = ::std::move(from);
  }

  inline CMsgTFRequestDefaultChatChannelResponse& operator=(CMsgTFRequestDefaultChatChannelResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFRequestDefaultChatChannelResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTFRequestDefaultChatChannelResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgTFRequestDefaultChatChannelResponse*>(
               &_CMsgTFRequestDefaultChatChannelResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    85;

  void Swap(CMsgTFRequestDefaultChatChannelResponse* other);
  friend void swap(CMsgTFRequestDefaultChatChannelResponse& a, CMsgTFRequestDefaultChatChannelResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTFRequestDefaultChatChannelResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgTFRequestDefaultChatChannelResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgTFRequestDefaultChatChannelResponse& from);
  void MergeFrom(const CMsgTFRequestDefaultChatChannelResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgTFRequestDefaultChatChannelResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string channel_name = 1;
  bool has_channel_name() const;
  void clear_channel_name();
  static const int kChannelNameFieldNumber = 1;
  const ::std::string& channel_name() const;
  void set_channel_name(const ::std::string& value);
  #if LANG_CXX11
  void set_channel_name(::std::string&& value);
  #endif
  void set_channel_name(const char* value);
  void set_channel_name(const char* value, size_t size);
  ::std::string* mutable_channel_name();
  ::std::string* release_channel_name();
  void set_allocated_channel_name(::std::string* channel_name);

  // optional fixed64 channel_id = 2;
  bool has_channel_id() const;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 2;
  ::google::protobuf::uint64 channel_id() const;
  void set_channel_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgTFRequestDefaultChatChannelResponse)
 private:
  void set_has_channel_name();
  void clear_has_channel_name();
  void set_has_channel_id();
  void clear_has_channel_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr channel_name_;
  ::google::protobuf::uint64 channel_id_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgTFRequestDefaultChatChannelResponseImpl();
};
// -------------------------------------------------------------------

class CMsgTFRequestChatChannelList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgTFRequestChatChannelList) */ {
 public:
  CMsgTFRequestChatChannelList();
  virtual ~CMsgTFRequestChatChannelList();

  CMsgTFRequestChatChannelList(const CMsgTFRequestChatChannelList& from);

  inline CMsgTFRequestChatChannelList& operator=(const CMsgTFRequestChatChannelList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTFRequestChatChannelList(CMsgTFRequestChatChannelList&& from) noexcept
    : CMsgTFRequestChatChannelList() {
    *this = ::std::move(from);
  }

  inline CMsgTFRequestChatChannelList& operator=(CMsgTFRequestChatChannelList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFRequestChatChannelList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTFRequestChatChannelList* internal_default_instance() {
    return reinterpret_cast<const CMsgTFRequestChatChannelList*>(
               &_CMsgTFRequestChatChannelList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    86;

  void Swap(CMsgTFRequestChatChannelList* other);
  friend void swap(CMsgTFRequestChatChannelList& a, CMsgTFRequestChatChannelList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTFRequestChatChannelList* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgTFRequestChatChannelList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgTFRequestChatChannelList& from);
  void MergeFrom(const CMsgTFRequestChatChannelList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgTFRequestChatChannelList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgTFRequestChatChannelList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgTFRequestChatChannelListImpl();
};
// -------------------------------------------------------------------

class CMsgTFRequestChatChannelListResponse_ChatChannel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgTFRequestChatChannelListResponse.ChatChannel) */ {
 public:
  CMsgTFRequestChatChannelListResponse_ChatChannel();
  virtual ~CMsgTFRequestChatChannelListResponse_ChatChannel();

  CMsgTFRequestChatChannelListResponse_ChatChannel(const CMsgTFRequestChatChannelListResponse_ChatChannel& from);

  inline CMsgTFRequestChatChannelListResponse_ChatChannel& operator=(const CMsgTFRequestChatChannelListResponse_ChatChannel& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTFRequestChatChannelListResponse_ChatChannel(CMsgTFRequestChatChannelListResponse_ChatChannel&& from) noexcept
    : CMsgTFRequestChatChannelListResponse_ChatChannel() {
    *this = ::std::move(from);
  }

  inline CMsgTFRequestChatChannelListResponse_ChatChannel& operator=(CMsgTFRequestChatChannelListResponse_ChatChannel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFRequestChatChannelListResponse_ChatChannel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTFRequestChatChannelListResponse_ChatChannel* internal_default_instance() {
    return reinterpret_cast<const CMsgTFRequestChatChannelListResponse_ChatChannel*>(
               &_CMsgTFRequestChatChannelListResponse_ChatChannel_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    87;

  void Swap(CMsgTFRequestChatChannelListResponse_ChatChannel* other);
  friend void swap(CMsgTFRequestChatChannelListResponse_ChatChannel& a, CMsgTFRequestChatChannelListResponse_ChatChannel& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTFRequestChatChannelListResponse_ChatChannel* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgTFRequestChatChannelListResponse_ChatChannel* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgTFRequestChatChannelListResponse_ChatChannel& from);
  void MergeFrom(const CMsgTFRequestChatChannelListResponse_ChatChannel& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgTFRequestChatChannelListResponse_ChatChannel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string channel_name = 1;
  bool has_channel_name() const;
  void clear_channel_name();
  static const int kChannelNameFieldNumber = 1;
  const ::std::string& channel_name() const;
  void set_channel_name(const ::std::string& value);
  #if LANG_CXX11
  void set_channel_name(::std::string&& value);
  #endif
  void set_channel_name(const char* value);
  void set_channel_name(const char* value, size_t size);
  ::std::string* mutable_channel_name();
  ::std::string* release_channel_name();
  void set_allocated_channel_name(::std::string* channel_name);

  // optional uint32 num_members = 2;
  bool has_num_members() const;
  void clear_num_members();
  static const int kNumMembersFieldNumber = 2;
  ::google::protobuf::uint32 num_members() const;
  void set_num_members(::google::protobuf::uint32 value);

  // optional .ChatChannelType_t channel_type = 3 [default = ChatChannelType_Regional];
  bool has_channel_type() const;
  void clear_channel_type();
  static const int kChannelTypeFieldNumber = 3;
  ::ChatChannelType_t channel_type() const;
  void set_channel_type(::ChatChannelType_t value);

  // @@protoc_insertion_point(class_scope:CMsgTFRequestChatChannelListResponse.ChatChannel)
 private:
  void set_has_channel_name();
  void clear_has_channel_name();
  void set_has_num_members();
  void clear_has_num_members();
  void set_has_channel_type();
  void clear_has_channel_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr channel_name_;
  ::google::protobuf::uint32 num_members_;
  int channel_type_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgTFRequestChatChannelListResponse_ChatChannelImpl();
};
// -------------------------------------------------------------------

class CMsgTFRequestChatChannelListResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgTFRequestChatChannelListResponse) */ {
 public:
  CMsgTFRequestChatChannelListResponse();
  virtual ~CMsgTFRequestChatChannelListResponse();

  CMsgTFRequestChatChannelListResponse(const CMsgTFRequestChatChannelListResponse& from);

  inline CMsgTFRequestChatChannelListResponse& operator=(const CMsgTFRequestChatChannelListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTFRequestChatChannelListResponse(CMsgTFRequestChatChannelListResponse&& from) noexcept
    : CMsgTFRequestChatChannelListResponse() {
    *this = ::std::move(from);
  }

  inline CMsgTFRequestChatChannelListResponse& operator=(CMsgTFRequestChatChannelListResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFRequestChatChannelListResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTFRequestChatChannelListResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgTFRequestChatChannelListResponse*>(
               &_CMsgTFRequestChatChannelListResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    88;

  void Swap(CMsgTFRequestChatChannelListResponse* other);
  friend void swap(CMsgTFRequestChatChannelListResponse& a, CMsgTFRequestChatChannelListResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTFRequestChatChannelListResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgTFRequestChatChannelListResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgTFRequestChatChannelListResponse& from);
  void MergeFrom(const CMsgTFRequestChatChannelListResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgTFRequestChatChannelListResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgTFRequestChatChannelListResponse_ChatChannel ChatChannel;

  // accessors -------------------------------------------------------

  // repeated .CMsgTFRequestChatChannelListResponse.ChatChannel channels = 1;
  int channels_size() const;
  void clear_channels();
  static const int kChannelsFieldNumber = 1;
  const ::CMsgTFRequestChatChannelListResponse_ChatChannel& channels(int index) const;
  ::CMsgTFRequestChatChannelListResponse_ChatChannel* mutable_channels(int index);
  ::CMsgTFRequestChatChannelListResponse_ChatChannel* add_channels();
  ::google::protobuf::RepeatedPtrField< ::CMsgTFRequestChatChannelListResponse_ChatChannel >*
      mutable_channels();
  const ::google::protobuf::RepeatedPtrField< ::CMsgTFRequestChatChannelListResponse_ChatChannel >&
      channels() const;

  // @@protoc_insertion_point(class_scope:CMsgTFRequestChatChannelListResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgTFRequestChatChannelListResponse_ChatChannel > channels_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgTFRequestChatChannelListResponseImpl();
};
// -------------------------------------------------------------------

class CMsgGameServerMatchmakingStatus_Player : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGameServerMatchmakingStatus.Player) */ {
 public:
  CMsgGameServerMatchmakingStatus_Player();
  virtual ~CMsgGameServerMatchmakingStatus_Player();

  CMsgGameServerMatchmakingStatus_Player(const CMsgGameServerMatchmakingStatus_Player& from);

  inline CMsgGameServerMatchmakingStatus_Player& operator=(const CMsgGameServerMatchmakingStatus_Player& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGameServerMatchmakingStatus_Player(CMsgGameServerMatchmakingStatus_Player&& from) noexcept
    : CMsgGameServerMatchmakingStatus_Player() {
    *this = ::std::move(from);
  }

  inline CMsgGameServerMatchmakingStatus_Player& operator=(CMsgGameServerMatchmakingStatus_Player&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGameServerMatchmakingStatus_Player& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGameServerMatchmakingStatus_Player* internal_default_instance() {
    return reinterpret_cast<const CMsgGameServerMatchmakingStatus_Player*>(
               &_CMsgGameServerMatchmakingStatus_Player_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    89;

  void Swap(CMsgGameServerMatchmakingStatus_Player* other);
  friend void swap(CMsgGameServerMatchmakingStatus_Player& a, CMsgGameServerMatchmakingStatus_Player& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGameServerMatchmakingStatus_Player* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGameServerMatchmakingStatus_Player* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGameServerMatchmakingStatus_Player& from);
  void MergeFrom(const CMsgGameServerMatchmakingStatus_Player& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGameServerMatchmakingStatus_Player* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  bool has_steam_id() const;
  void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  ::google::protobuf::uint64 steam_id() const;
  void set_steam_id(::google::protobuf::uint64 value);

  // optional .CMsgGameServerMatchmakingStatus.PlayerConnectState connect_state = 2 [default = INVALID];
  bool has_connect_state() const;
  void clear_connect_state();
  static const int kConnectStateFieldNumber = 2;
  ::CMsgGameServerMatchmakingStatus_PlayerConnectState connect_state() const;
  void set_connect_state(::CMsgGameServerMatchmakingStatus_PlayerConnectState value);

  // @@protoc_insertion_point(class_scope:CMsgGameServerMatchmakingStatus.Player)
 private:
  void set_has_steam_id();
  void clear_has_steam_id();
  void set_has_connect_state();
  void clear_has_connect_state();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 steam_id_;
  int connect_state_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGameServerMatchmakingStatus_PlayerImpl();
};
// -------------------------------------------------------------------

class CMsgGameServerMatchmakingStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGameServerMatchmakingStatus) */ {
 public:
  CMsgGameServerMatchmakingStatus();
  virtual ~CMsgGameServerMatchmakingStatus();

  CMsgGameServerMatchmakingStatus(const CMsgGameServerMatchmakingStatus& from);

  inline CMsgGameServerMatchmakingStatus& operator=(const CMsgGameServerMatchmakingStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGameServerMatchmakingStatus(CMsgGameServerMatchmakingStatus&& from) noexcept
    : CMsgGameServerMatchmakingStatus() {
    *this = ::std::move(from);
  }

  inline CMsgGameServerMatchmakingStatus& operator=(CMsgGameServerMatchmakingStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGameServerMatchmakingStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGameServerMatchmakingStatus* internal_default_instance() {
    return reinterpret_cast<const CMsgGameServerMatchmakingStatus*>(
               &_CMsgGameServerMatchmakingStatus_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    90;

  void Swap(CMsgGameServerMatchmakingStatus* other);
  friend void swap(CMsgGameServerMatchmakingStatus& a, CMsgGameServerMatchmakingStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGameServerMatchmakingStatus* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGameServerMatchmakingStatus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGameServerMatchmakingStatus& from);
  void MergeFrom(const CMsgGameServerMatchmakingStatus& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGameServerMatchmakingStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgGameServerMatchmakingStatus_Player Player;

  typedef CMsgGameServerMatchmakingStatus_PlayerConnectState PlayerConnectState;
  static const PlayerConnectState INVALID =
    CMsgGameServerMatchmakingStatus_PlayerConnectState_INVALID;
  static const PlayerConnectState CONNECTED =
    CMsgGameServerMatchmakingStatus_PlayerConnectState_CONNECTED;
  static const PlayerConnectState RESERVED =
    CMsgGameServerMatchmakingStatus_PlayerConnectState_RESERVED;
  static inline bool PlayerConnectState_IsValid(int value) {
    return CMsgGameServerMatchmakingStatus_PlayerConnectState_IsValid(value);
  }
  static const PlayerConnectState PlayerConnectState_MIN =
    CMsgGameServerMatchmakingStatus_PlayerConnectState_PlayerConnectState_MIN;
  static const PlayerConnectState PlayerConnectState_MAX =
    CMsgGameServerMatchmakingStatus_PlayerConnectState_PlayerConnectState_MAX;
  static const int PlayerConnectState_ARRAYSIZE =
    CMsgGameServerMatchmakingStatus_PlayerConnectState_PlayerConnectState_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PlayerConnectState_descriptor() {
    return CMsgGameServerMatchmakingStatus_PlayerConnectState_descriptor();
  }
  static inline const ::std::string& PlayerConnectState_Name(PlayerConnectState value) {
    return CMsgGameServerMatchmakingStatus_PlayerConnectState_Name(value);
  }
  static inline bool PlayerConnectState_Parse(const ::std::string& name,
      PlayerConnectState* value) {
    return CMsgGameServerMatchmakingStatus_PlayerConnectState_Parse(name, value);
  }

  typedef CMsgGameServerMatchmakingStatus_Event Event;
  static const Event None =
    CMsgGameServerMatchmakingStatus_Event_None;
  static const Event MvMVictory =
    CMsgGameServerMatchmakingStatus_Event_MvMVictory;
  static const Event MvMDefeat =
    CMsgGameServerMatchmakingStatus_Event_MvMDefeat;
  static const Event AcknowledgePlayers =
    CMsgGameServerMatchmakingStatus_Event_AcknowledgePlayers;
  static inline bool Event_IsValid(int value) {
    return CMsgGameServerMatchmakingStatus_Event_IsValid(value);
  }
  static const Event Event_MIN =
    CMsgGameServerMatchmakingStatus_Event_Event_MIN;
  static const Event Event_MAX =
    CMsgGameServerMatchmakingStatus_Event_Event_MAX;
  static const int Event_ARRAYSIZE =
    CMsgGameServerMatchmakingStatus_Event_Event_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Event_descriptor() {
    return CMsgGameServerMatchmakingStatus_Event_descriptor();
  }
  static inline const ::std::string& Event_Name(Event value) {
    return CMsgGameServerMatchmakingStatus_Event_Name(value);
  }
  static inline bool Event_Parse(const ::std::string& name,
      Event* value) {
    return CMsgGameServerMatchmakingStatus_Event_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .CMsgGameServerMatchmakingStatus.Player players = 13;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 13;
  const ::CMsgGameServerMatchmakingStatus_Player& players(int index) const;
  ::CMsgGameServerMatchmakingStatus_Player* mutable_players(int index);
  ::CMsgGameServerMatchmakingStatus_Player* add_players();
  ::google::protobuf::RepeatedPtrField< ::CMsgGameServerMatchmakingStatus_Player >*
      mutable_players();
  const ::google::protobuf::RepeatedPtrField< ::CMsgGameServerMatchmakingStatus_Player >&
      players() const;

  // optional string map = 3;
  bool has_map() const;
  void clear_map();
  static const int kMapFieldNumber = 3;
  const ::std::string& map() const;
  void set_map(const ::std::string& value);
  #if LANG_CXX11
  void set_map(::std::string&& value);
  #endif
  void set_map(const char* value);
  void set_map(const char* value, size_t size);
  ::std::string* mutable_map();
  ::std::string* release_map();
  void set_allocated_map(::std::string* map);

  // optional string tags = 4;
  bool has_tags() const;
  void clear_tags();
  static const int kTagsFieldNumber = 4;
  const ::std::string& tags() const;
  void set_tags(const ::std::string& value);
  #if LANG_CXX11
  void set_tags(::std::string&& value);
  #endif
  void set_tags(const char* value);
  void set_tags(const char* value, size_t size);
  ::std::string* mutable_tags();
  ::std::string* release_tags();
  void set_allocated_tags(::std::string* tags);

  // optional .ServerMatchmakingState matchmaking_state = 1 [default = ServerMatchmakingState_INVALID];
  bool has_matchmaking_state() const;
  void clear_matchmaking_state();
  static const int kMatchmakingStateFieldNumber = 1;
  ::ServerMatchmakingState matchmaking_state() const;
  void set_matchmaking_state(::ServerMatchmakingState value);

  // optional .TF_MatchmakingMode matchmaking_mode = 2 [default = TF_Matchmaking_INVALID];
  bool has_matchmaking_mode() const;
  void clear_matchmaking_mode();
  static const int kMatchmakingModeFieldNumber = 2;
  ::TF_MatchmakingMode matchmaking_mode() const;
  void set_matchmaking_mode(::TF_MatchmakingMode value);

  // optional uint32 bot_count = 5;
  bool has_bot_count() const;
  void clear_bot_count();
  static const int kBotCountFieldNumber = 5;
  ::google::protobuf::uint32 bot_count() const;
  void set_bot_count(::google::protobuf::uint32 value);

  // optional uint32 num_spectators = 6;
  bool has_num_spectators() const;
  void clear_num_spectators();
  static const int kNumSpectatorsFieldNumber = 6;
  ::google::protobuf::uint32 num_spectators() const;
  void set_num_spectators(::google::protobuf::uint32 value);

  // optional uint32 max_players = 7;
  bool has_max_players() const;
  void clear_max_players();
  static const int kMaxPlayersFieldNumber = 7;
  ::google::protobuf::uint32 max_players() const;
  void set_max_players(::google::protobuf::uint32 value);

  // optional uint32 slots_free = 8;
  bool has_slots_free() const;
  void clear_slots_free();
  static const int kSlotsFreeFieldNumber = 8;
  ::google::protobuf::uint32 slots_free() const;
  void set_slots_free(::google::protobuf::uint32 value);

  // optional uint32 server_region = 9;
  bool has_server_region() const;
  void clear_server_region();
  static const int kServerRegionFieldNumber = 9;
  ::google::protobuf::uint32 server_region() const;
  void set_server_region(::google::protobuf::uint32 value);

  // optional float server_loadavg = 10;
  bool has_server_loadavg() const;
  void clear_server_loadavg();
  static const int kServerLoadavgFieldNumber = 10;
  float server_loadavg() const;
  void set_server_loadavg(float value);

  // optional bool server_trusted = 11;
  bool has_server_trusted() const;
  void clear_server_trusted();
  static const int kServerTrustedFieldNumber = 11;
  bool server_trusted() const;
  void set_server_trusted(bool value);

  // optional bool server_dedicated = 12;
  bool has_server_dedicated() const;
  void clear_server_dedicated();
  static const int kServerDedicatedFieldNumber = 12;
  bool server_dedicated() const;
  void set_server_dedicated(bool value);

  // optional .TF_GC_GameState game_state = 14 [default = TF_GC_GAMESTATE_STATE_INIT];
  bool has_game_state() const;
  void clear_game_state();
  static const int kGameStateFieldNumber = 14;
  ::TF_GC_GameState game_state() const;
  void set_game_state(::TF_GC_GameState value);

  // optional .CMsgGameServerMatchmakingStatus.Event event = 15 [default = None];
  bool has_event() const;
  void clear_event();
  static const int kEventFieldNumber = 15;
  ::CMsgGameServerMatchmakingStatus_Event event() const;
  void set_event(::CMsgGameServerMatchmakingStatus_Event value);

  // optional uint32 strict = 17;
  bool has_strict() const;
  void clear_strict();
  static const int kStrictFieldNumber = 17;
  ::google::protobuf::uint32 strict() const;
  void set_strict(::google::protobuf::uint32 value);

  // optional uint32 mvm_wave = 18;
  bool has_mvm_wave() const;
  void clear_mvm_wave();
  static const int kMvmWaveFieldNumber = 18;
  ::google::protobuf::uint32 mvm_wave() const;
  void set_mvm_wave(::google::protobuf::uint32 value);

  // optional uint32 mvm_credits_acquired = 19;
  bool has_mvm_credits_acquired() const;
  void clear_mvm_credits_acquired();
  static const int kMvmCreditsAcquiredFieldNumber = 19;
  ::google::protobuf::uint32 mvm_credits_acquired() const;
  void set_mvm_credits_acquired(::google::protobuf::uint32 value);

  // optional uint32 mvm_credits_dropped = 20;
  bool has_mvm_credits_dropped() const;
  void clear_mvm_credits_dropped();
  static const int kMvmCreditsDroppedFieldNumber = 20;
  ::google::protobuf::uint32 mvm_credits_dropped() const;
  void set_mvm_credits_dropped(::google::protobuf::uint32 value);

  // optional uint32 lobby_mm_version = 24;
  bool has_lobby_mm_version() const;
  void clear_lobby_mm_version();
  static const int kLobbyMmVersionFieldNumber = 24;
  ::google::protobuf::uint32 lobby_mm_version() const;
  void set_lobby_mm_version(::google::protobuf::uint32 value);

  // optional uint32 server_version = 16 [default = 1225];
  bool has_server_version() const;
  void clear_server_version();
  static const int kServerVersionFieldNumber = 16;
  ::google::protobuf::uint32 server_version() const;
  void set_server_version(::google::protobuf::uint32 value);

  // optional sint32 match_group = 23 [default = -1];
  bool has_match_group() const;
  void clear_match_group();
  static const int kMatchGroupFieldNumber = 23;
  ::google::protobuf::int32 match_group() const;
  void set_match_group(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgGameServerMatchmakingStatus)
 private:
  void set_has_server_version();
  void clear_has_server_version();
  void set_has_matchmaking_state();
  void clear_has_matchmaking_state();
  void set_has_matchmaking_mode();
  void clear_has_matchmaking_mode();
  void set_has_map();
  void clear_has_map();
  void set_has_tags();
  void clear_has_tags();
  void set_has_bot_count();
  void clear_has_bot_count();
  void set_has_num_spectators();
  void clear_has_num_spectators();
  void set_has_max_players();
  void clear_has_max_players();
  void set_has_slots_free();
  void clear_has_slots_free();
  void set_has_server_region();
  void clear_has_server_region();
  void set_has_server_loadavg();
  void clear_has_server_loadavg();
  void set_has_server_trusted();
  void clear_has_server_trusted();
  void set_has_server_dedicated();
  void clear_has_server_dedicated();
  void set_has_strict();
  void clear_has_strict();
  void set_has_game_state();
  void clear_has_game_state();
  void set_has_event();
  void clear_has_event();
  void set_has_mvm_wave();
  void clear_has_mvm_wave();
  void set_has_mvm_credits_acquired();
  void clear_has_mvm_credits_acquired();
  void set_has_mvm_credits_dropped();
  void clear_has_mvm_credits_dropped();
  void set_has_match_group();
  void clear_has_match_group();
  void set_has_lobby_mm_version();
  void clear_has_lobby_mm_version();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGameServerMatchmakingStatus_Player > players_;
  ::google::protobuf::internal::ArenaStringPtr map_;
  ::google::protobuf::internal::ArenaStringPtr tags_;
  int matchmaking_state_;
  int matchmaking_mode_;
  ::google::protobuf::uint32 bot_count_;
  ::google::protobuf::uint32 num_spectators_;
  ::google::protobuf::uint32 max_players_;
  ::google::protobuf::uint32 slots_free_;
  ::google::protobuf::uint32 server_region_;
  float server_loadavg_;
  bool server_trusted_;
  bool server_dedicated_;
  int game_state_;
  int event_;
  ::google::protobuf::uint32 strict_;
  ::google::protobuf::uint32 mvm_wave_;
  ::google::protobuf::uint32 mvm_credits_acquired_;
  ::google::protobuf::uint32 mvm_credits_dropped_;
  ::google::protobuf::uint32 lobby_mm_version_;
  ::google::protobuf::uint32 server_version_;
  ::google::protobuf::int32 match_group_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGameServerMatchmakingStatusImpl();
};
// -------------------------------------------------------------------

class CMsgMatchmakingProgress : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgMatchmakingProgress) */ {
 public:
  CMsgMatchmakingProgress();
  virtual ~CMsgMatchmakingProgress();

  CMsgMatchmakingProgress(const CMsgMatchmakingProgress& from);

  inline CMsgMatchmakingProgress& operator=(const CMsgMatchmakingProgress& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgMatchmakingProgress(CMsgMatchmakingProgress&& from) noexcept
    : CMsgMatchmakingProgress() {
    *this = ::std::move(from);
  }

  inline CMsgMatchmakingProgress& operator=(CMsgMatchmakingProgress&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMatchmakingProgress& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgMatchmakingProgress* internal_default_instance() {
    return reinterpret_cast<const CMsgMatchmakingProgress*>(
               &_CMsgMatchmakingProgress_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    91;

  void Swap(CMsgMatchmakingProgress* other);
  friend void swap(CMsgMatchmakingProgress& a, CMsgMatchmakingProgress& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgMatchmakingProgress* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgMatchmakingProgress* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgMatchmakingProgress& from);
  void MergeFrom(const CMsgMatchmakingProgress& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgMatchmakingProgress* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 urgency_pct = 1;
  bool has_urgency_pct() const;
  void clear_urgency_pct();
  static const int kUrgencyPctFieldNumber = 1;
  ::google::protobuf::uint32 urgency_pct() const;
  void set_urgency_pct(::google::protobuf::uint32 value);

  // optional uint32 avg_wait_time_new = 4;
  bool has_avg_wait_time_new() const;
  void clear_avg_wait_time_new();
  static const int kAvgWaitTimeNewFieldNumber = 4;
  ::google::protobuf::uint32 avg_wait_time_new() const;
  void set_avg_wait_time_new(::google::protobuf::uint32 value);

  // optional uint32 avg_wait_time_join_late = 5;
  bool has_avg_wait_time_join_late() const;
  void clear_avg_wait_time_join_late();
  static const int kAvgWaitTimeJoinLateFieldNumber = 5;
  ::google::protobuf::uint32 avg_wait_time_join_late() const;
  void set_avg_wait_time_join_late(::google::protobuf::uint32 value);

  // optional uint32 your_wait_time = 6;
  bool has_your_wait_time() const;
  void clear_your_wait_time();
  static const int kYourWaitTimeFieldNumber = 6;
  ::google::protobuf::uint32 your_wait_time() const;
  void set_your_wait_time(::google::protobuf::uint32 value);

  // optional uint32 matching_worldwide_searching_players = 8;
  bool has_matching_worldwide_searching_players() const;
  void clear_matching_worldwide_searching_players();
  static const int kMatchingWorldwideSearchingPlayersFieldNumber = 8;
  ::google::protobuf::uint32 matching_worldwide_searching_players() const;
  void set_matching_worldwide_searching_players(::google::protobuf::uint32 value);

  // optional uint32 matching_near_you_searching_players = 9;
  bool has_matching_near_you_searching_players() const;
  void clear_matching_near_you_searching_players();
  static const int kMatchingNearYouSearchingPlayersFieldNumber = 9;
  ::google::protobuf::uint32 matching_near_you_searching_players() const;
  void set_matching_near_you_searching_players(::google::protobuf::uint32 value);

  // optional uint32 total_worldwide_searching_players = 13;
  bool has_total_worldwide_searching_players() const;
  void clear_total_worldwide_searching_players();
  static const int kTotalWorldwideSearchingPlayersFieldNumber = 13;
  ::google::protobuf::uint32 total_worldwide_searching_players() const;
  void set_total_worldwide_searching_players(::google::protobuf::uint32 value);

  // optional uint32 total_near_you_searching_players = 14;
  bool has_total_near_you_searching_players() const;
  void clear_total_near_you_searching_players();
  static const int kTotalNearYouSearchingPlayersFieldNumber = 14;
  ::google::protobuf::uint32 total_near_you_searching_players() const;
  void set_total_near_you_searching_players(::google::protobuf::uint32 value);

  // optional uint32 matching_worldwide_active_players = 15;
  bool has_matching_worldwide_active_players() const;
  void clear_matching_worldwide_active_players();
  static const int kMatchingWorldwideActivePlayersFieldNumber = 15;
  ::google::protobuf::uint32 matching_worldwide_active_players() const;
  void set_matching_worldwide_active_players(::google::protobuf::uint32 value);

  // optional uint32 matching_near_you_active_players = 16;
  bool has_matching_near_you_active_players() const;
  void clear_matching_near_you_active_players();
  static const int kMatchingNearYouActivePlayersFieldNumber = 16;
  ::google::protobuf::uint32 matching_near_you_active_players() const;
  void set_matching_near_you_active_players(::google::protobuf::uint32 value);

  // optional uint32 total_worldwide_active_players = 17;
  bool has_total_worldwide_active_players() const;
  void clear_total_worldwide_active_players();
  static const int kTotalWorldwideActivePlayersFieldNumber = 17;
  ::google::protobuf::uint32 total_worldwide_active_players() const;
  void set_total_worldwide_active_players(::google::protobuf::uint32 value);

  // optional uint32 total_near_you_active_players = 18;
  bool has_total_near_you_active_players() const;
  void clear_total_near_you_active_players();
  static const int kTotalNearYouActivePlayersFieldNumber = 18;
  ::google::protobuf::uint32 total_near_you_active_players() const;
  void set_total_near_you_active_players(::google::protobuf::uint32 value);

  // optional uint32 matching_worldwide_empty_gameservers = 19;
  bool has_matching_worldwide_empty_gameservers() const;
  void clear_matching_worldwide_empty_gameservers();
  static const int kMatchingWorldwideEmptyGameserversFieldNumber = 19;
  ::google::protobuf::uint32 matching_worldwide_empty_gameservers() const;
  void set_matching_worldwide_empty_gameservers(::google::protobuf::uint32 value);

  // optional uint32 matching_near_you_empty_gameservers = 20;
  bool has_matching_near_you_empty_gameservers() const;
  void clear_matching_near_you_empty_gameservers();
  static const int kMatchingNearYouEmptyGameserversFieldNumber = 20;
  ::google::protobuf::uint32 matching_near_you_empty_gameservers() const;
  void set_matching_near_you_empty_gameservers(::google::protobuf::uint32 value);

  // optional uint32 total_worldwide_empty_gameservers = 21;
  bool has_total_worldwide_empty_gameservers() const;
  void clear_total_worldwide_empty_gameservers();
  static const int kTotalWorldwideEmptyGameserversFieldNumber = 21;
  ::google::protobuf::uint32 total_worldwide_empty_gameservers() const;
  void set_total_worldwide_empty_gameservers(::google::protobuf::uint32 value);

  // optional uint32 total_near_you_empty_gameservers = 22;
  bool has_total_near_you_empty_gameservers() const;
  void clear_total_near_you_empty_gameservers();
  static const int kTotalNearYouEmptyGameserversFieldNumber = 22;
  ::google::protobuf::uint32 total_near_you_empty_gameservers() const;
  void set_total_near_you_empty_gameservers(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgMatchmakingProgress)
 private:
  void set_has_avg_wait_time_new();
  void clear_has_avg_wait_time_new();
  void set_has_avg_wait_time_join_late();
  void clear_has_avg_wait_time_join_late();
  void set_has_your_wait_time();
  void clear_has_your_wait_time();
  void set_has_matching_worldwide_searching_players();
  void clear_has_matching_worldwide_searching_players();
  void set_has_matching_near_you_searching_players();
  void clear_has_matching_near_you_searching_players();
  void set_has_total_worldwide_searching_players();
  void clear_has_total_worldwide_searching_players();
  void set_has_total_near_you_searching_players();
  void clear_has_total_near_you_searching_players();
  void set_has_matching_worldwide_active_players();
  void clear_has_matching_worldwide_active_players();
  void set_has_matching_near_you_active_players();
  void clear_has_matching_near_you_active_players();
  void set_has_total_worldwide_active_players();
  void clear_has_total_worldwide_active_players();
  void set_has_total_near_you_active_players();
  void clear_has_total_near_you_active_players();
  void set_has_matching_worldwide_empty_gameservers();
  void clear_has_matching_worldwide_empty_gameservers();
  void set_has_matching_near_you_empty_gameservers();
  void clear_has_matching_near_you_empty_gameservers();
  void set_has_total_worldwide_empty_gameservers();
  void clear_has_total_worldwide_empty_gameservers();
  void set_has_total_near_you_empty_gameservers();
  void clear_has_total_near_you_empty_gameservers();
  void set_has_urgency_pct();
  void clear_has_urgency_pct();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 urgency_pct_;
  ::google::protobuf::uint32 avg_wait_time_new_;
  ::google::protobuf::uint32 avg_wait_time_join_late_;
  ::google::protobuf::uint32 your_wait_time_;
  ::google::protobuf::uint32 matching_worldwide_searching_players_;
  ::google::protobuf::uint32 matching_near_you_searching_players_;
  ::google::protobuf::uint32 total_worldwide_searching_players_;
  ::google::protobuf::uint32 total_near_you_searching_players_;
  ::google::protobuf::uint32 matching_worldwide_active_players_;
  ::google::protobuf::uint32 matching_near_you_active_players_;
  ::google::protobuf::uint32 total_worldwide_active_players_;
  ::google::protobuf::uint32 total_near_you_active_players_;
  ::google::protobuf::uint32 matching_worldwide_empty_gameservers_;
  ::google::protobuf::uint32 matching_near_you_empty_gameservers_;
  ::google::protobuf::uint32 total_worldwide_empty_gameservers_;
  ::google::protobuf::uint32 total_near_you_empty_gameservers_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgMatchmakingProgressImpl();
};
// -------------------------------------------------------------------

class CMsgMvMVictoryInfo_Item : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgMvMVictoryInfo.Item) */ {
 public:
  CMsgMvMVictoryInfo_Item();
  virtual ~CMsgMvMVictoryInfo_Item();

  CMsgMvMVictoryInfo_Item(const CMsgMvMVictoryInfo_Item& from);

  inline CMsgMvMVictoryInfo_Item& operator=(const CMsgMvMVictoryInfo_Item& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgMvMVictoryInfo_Item(CMsgMvMVictoryInfo_Item&& from) noexcept
    : CMsgMvMVictoryInfo_Item() {
    *this = ::std::move(from);
  }

  inline CMsgMvMVictoryInfo_Item& operator=(CMsgMvMVictoryInfo_Item&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMvMVictoryInfo_Item& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgMvMVictoryInfo_Item* internal_default_instance() {
    return reinterpret_cast<const CMsgMvMVictoryInfo_Item*>(
               &_CMsgMvMVictoryInfo_Item_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    92;

  void Swap(CMsgMvMVictoryInfo_Item* other);
  friend void swap(CMsgMvMVictoryInfo_Item& a, CMsgMvMVictoryInfo_Item& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgMvMVictoryInfo_Item* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgMvMVictoryInfo_Item* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgMvMVictoryInfo_Item& from);
  void MergeFrom(const CMsgMvMVictoryInfo_Item& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgMvMVictoryInfo_Item* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes item_data = 2;
  bool has_item_data() const;
  void clear_item_data();
  static const int kItemDataFieldNumber = 2;
  const ::std::string& item_data() const;
  void set_item_data(const ::std::string& value);
  #if LANG_CXX11
  void set_item_data(::std::string&& value);
  #endif
  void set_item_data(const char* value);
  void set_item_data(const void* value, size_t size);
  ::std::string* mutable_item_data();
  ::std::string* release_item_data();
  void set_allocated_item_data(::std::string* item_data);

  // optional fixed64 squad_surplus_claimer_steam_id = 3;
  bool has_squad_surplus_claimer_steam_id() const;
  void clear_squad_surplus_claimer_steam_id();
  static const int kSquadSurplusClaimerSteamIdFieldNumber = 3;
  ::google::protobuf::uint64 squad_surplus_claimer_steam_id() const;
  void set_squad_surplus_claimer_steam_id(::google::protobuf::uint64 value);

  // optional .CMsgMvMVictoryInfo.GrantReason grant_reason = 1 [default = INVALID];
  bool has_grant_reason() const;
  void clear_grant_reason();
  static const int kGrantReasonFieldNumber = 1;
  ::CMsgMvMVictoryInfo_GrantReason grant_reason() const;
  void set_grant_reason(::CMsgMvMVictoryInfo_GrantReason value);

  // @@protoc_insertion_point(class_scope:CMsgMvMVictoryInfo.Item)
 private:
  void set_has_grant_reason();
  void clear_has_grant_reason();
  void set_has_item_data();
  void clear_has_item_data();
  void set_has_squad_surplus_claimer_steam_id();
  void clear_has_squad_surplus_claimer_steam_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr item_data_;
  ::google::protobuf::uint64 squad_surplus_claimer_steam_id_;
  int grant_reason_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgMvMVictoryInfo_ItemImpl();
};
// -------------------------------------------------------------------

class CMsgMvMVictoryInfo_Player : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgMvMVictoryInfo.Player) */ {
 public:
  CMsgMvMVictoryInfo_Player();
  virtual ~CMsgMvMVictoryInfo_Player();

  CMsgMvMVictoryInfo_Player(const CMsgMvMVictoryInfo_Player& from);

  inline CMsgMvMVictoryInfo_Player& operator=(const CMsgMvMVictoryInfo_Player& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgMvMVictoryInfo_Player(CMsgMvMVictoryInfo_Player&& from) noexcept
    : CMsgMvMVictoryInfo_Player() {
    *this = ::std::move(from);
  }

  inline CMsgMvMVictoryInfo_Player& operator=(CMsgMvMVictoryInfo_Player&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMvMVictoryInfo_Player& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgMvMVictoryInfo_Player* internal_default_instance() {
    return reinterpret_cast<const CMsgMvMVictoryInfo_Player*>(
               &_CMsgMvMVictoryInfo_Player_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    93;

  void Swap(CMsgMvMVictoryInfo_Player* other);
  friend void swap(CMsgMvMVictoryInfo_Player& a, CMsgMvMVictoryInfo_Player& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgMvMVictoryInfo_Player* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgMvMVictoryInfo_Player* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgMvMVictoryInfo_Player& from);
  void MergeFrom(const CMsgMvMVictoryInfo_Player& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgMvMVictoryInfo_Player* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMsgMvMVictoryInfo.Item items = 8;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 8;
  const ::CMsgMvMVictoryInfo_Item& items(int index) const;
  ::CMsgMvMVictoryInfo_Item* mutable_items(int index);
  ::CMsgMvMVictoryInfo_Item* add_items();
  ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictoryInfo_Item >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictoryInfo_Item >&
      items() const;

  // optional fixed64 steam_id = 1;
  bool has_steam_id() const;
  void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  ::google::protobuf::uint64 steam_id() const;
  void set_steam_id(::google::protobuf::uint64 value);

  // optional bool badge_granted = 3;
  bool has_badge_granted() const;
  void clear_badge_granted();
  static const int kBadgeGrantedFieldNumber = 3;
  bool badge_granted() const;
  void set_badge_granted(bool value);

  // optional bool badge_progress_updated = 4;
  bool has_badge_progress_updated() const;
  void clear_badge_progress_updated();
  static const int kBadgeProgressUpdatedFieldNumber = 4;
  bool badge_progress_updated() const;
  void set_badge_progress_updated(bool value);

  // optional bool badge_leveled = 5;
  bool has_badge_leveled() const;
  void clear_badge_leveled();
  static const int kBadgeLeveledFieldNumber = 5;
  bool badge_leveled() const;
  void set_badge_leveled(bool value);

  // optional bool voucher_missing = 9;
  bool has_voucher_missing() const;
  void clear_voucher_missing();
  static const int kVoucherMissingFieldNumber = 9;
  bool voucher_missing() const;
  void set_voucher_missing(bool value);

  // optional uint32 badge_level = 6;
  bool has_badge_level() const;
  void clear_badge_level();
  static const int kBadgeLevelFieldNumber = 6;
  ::google::protobuf::uint32 badge_level() const;
  void set_badge_level(::google::protobuf::uint32 value);

  // optional uint32 badge_progress_bits = 7;
  bool has_badge_progress_bits() const;
  void clear_badge_progress_bits();
  static const int kBadgeProgressBitsFieldNumber = 7;
  ::google::protobuf::uint32 badge_progress_bits() const;
  void set_badge_progress_bits(::google::protobuf::uint32 value);

  // optional uint32 badge_points = 10;
  bool has_badge_points() const;
  void clear_badge_points();
  static const int kBadgePointsFieldNumber = 10;
  ::google::protobuf::uint32 badge_points() const;
  void set_badge_points(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgMvMVictoryInfo.Player)
 private:
  void set_has_steam_id();
  void clear_has_steam_id();
  void set_has_badge_granted();
  void clear_has_badge_granted();
  void set_has_badge_progress_updated();
  void clear_has_badge_progress_updated();
  void set_has_badge_leveled();
  void clear_has_badge_leveled();
  void set_has_badge_level();
  void clear_has_badge_level();
  void set_has_badge_progress_bits();
  void clear_has_badge_progress_bits();
  void set_has_voucher_missing();
  void clear_has_voucher_missing();
  void set_has_badge_points();
  void clear_has_badge_points();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictoryInfo_Item > items_;
  ::google::protobuf::uint64 steam_id_;
  bool badge_granted_;
  bool badge_progress_updated_;
  bool badge_leveled_;
  bool voucher_missing_;
  ::google::protobuf::uint32 badge_level_;
  ::google::protobuf::uint32 badge_progress_bits_;
  ::google::protobuf::uint32 badge_points_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgMvMVictoryInfo_PlayerImpl();
};
// -------------------------------------------------------------------

class CMsgMvMVictoryInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgMvMVictoryInfo) */ {
 public:
  CMsgMvMVictoryInfo();
  virtual ~CMsgMvMVictoryInfo();

  CMsgMvMVictoryInfo(const CMsgMvMVictoryInfo& from);

  inline CMsgMvMVictoryInfo& operator=(const CMsgMvMVictoryInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgMvMVictoryInfo(CMsgMvMVictoryInfo&& from) noexcept
    : CMsgMvMVictoryInfo() {
    *this = ::std::move(from);
  }

  inline CMsgMvMVictoryInfo& operator=(CMsgMvMVictoryInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMvMVictoryInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgMvMVictoryInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgMvMVictoryInfo*>(
               &_CMsgMvMVictoryInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    94;

  void Swap(CMsgMvMVictoryInfo* other);
  friend void swap(CMsgMvMVictoryInfo& a, CMsgMvMVictoryInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgMvMVictoryInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgMvMVictoryInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgMvMVictoryInfo& from);
  void MergeFrom(const CMsgMvMVictoryInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgMvMVictoryInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgMvMVictoryInfo_Item Item;
  typedef CMsgMvMVictoryInfo_Player Player;

  typedef CMsgMvMVictoryInfo_GrantReason GrantReason;
  static const GrantReason INVALID =
    CMsgMvMVictoryInfo_GrantReason_INVALID;
  static const GrantReason BADGE_LEVELED =
    CMsgMvMVictoryInfo_GrantReason_BADGE_LEVELED;
  static const GrantReason SQUAD_SURPLUS =
    CMsgMvMVictoryInfo_GrantReason_SQUAD_SURPLUS;
  static const GrantReason MANN_UP =
    CMsgMvMVictoryInfo_GrantReason_MANN_UP;
  static const GrantReason HELP_A_NOOB =
    CMsgMvMVictoryInfo_GrantReason_HELP_A_NOOB;
  static inline bool GrantReason_IsValid(int value) {
    return CMsgMvMVictoryInfo_GrantReason_IsValid(value);
  }
  static const GrantReason GrantReason_MIN =
    CMsgMvMVictoryInfo_GrantReason_GrantReason_MIN;
  static const GrantReason GrantReason_MAX =
    CMsgMvMVictoryInfo_GrantReason_GrantReason_MAX;
  static const int GrantReason_ARRAYSIZE =
    CMsgMvMVictoryInfo_GrantReason_GrantReason_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  GrantReason_descriptor() {
    return CMsgMvMVictoryInfo_GrantReason_descriptor();
  }
  static inline const ::std::string& GrantReason_Name(GrantReason value) {
    return CMsgMvMVictoryInfo_GrantReason_Name(value);
  }
  static inline bool GrantReason_Parse(const ::std::string& name,
      GrantReason* value) {
    return CMsgMvMVictoryInfo_GrantReason_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .CMsgMvMVictoryInfo.Player players = 1;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 1;
  const ::CMsgMvMVictoryInfo_Player& players(int index) const;
  ::CMsgMvMVictoryInfo_Player* mutable_players(int index);
  ::CMsgMvMVictoryInfo_Player* add_players();
  ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictoryInfo_Player >*
      mutable_players();
  const ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictoryInfo_Player >&
      players() const;

  // optional string tour_name = 2;
  bool has_tour_name() const;
  void clear_tour_name();
  static const int kTourNameFieldNumber = 2;
  const ::std::string& tour_name() const;
  void set_tour_name(const ::std::string& value);
  #if LANG_CXX11
  void set_tour_name(::std::string&& value);
  #endif
  void set_tour_name(const char* value);
  void set_tour_name(const char* value, size_t size);
  ::std::string* mutable_tour_name();
  ::std::string* release_tour_name();
  void set_allocated_tour_name(::std::string* tour_name);

  // optional string mission_name = 3;
  bool has_mission_name() const;
  void clear_mission_name();
  static const int kMissionNameFieldNumber = 3;
  const ::std::string& mission_name() const;
  void set_mission_name(const ::std::string& value);
  #if LANG_CXX11
  void set_mission_name(::std::string&& value);
  #endif
  void set_mission_name(const char* value);
  void set_mission_name(const char* value, size_t size);
  ::std::string* mutable_mission_name();
  ::std::string* release_mission_name();
  void set_allocated_mission_name(::std::string* mission_name);

  // @@protoc_insertion_point(class_scope:CMsgMvMVictoryInfo)
 private:
  void set_has_tour_name();
  void clear_has_tour_name();
  void set_has_mission_name();
  void clear_has_mission_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictoryInfo_Player > players_;
  ::google::protobuf::internal::ArenaStringPtr tour_name_;
  ::google::protobuf::internal::ArenaStringPtr mission_name_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgMvMVictoryInfoImpl();
};
// -------------------------------------------------------------------

class CGCMsgTFHelloResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CGCMsgTFHelloResponse) */ {
 public:
  CGCMsgTFHelloResponse();
  virtual ~CGCMsgTFHelloResponse();

  CGCMsgTFHelloResponse(const CGCMsgTFHelloResponse& from);

  inline CGCMsgTFHelloResponse& operator=(const CGCMsgTFHelloResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CGCMsgTFHelloResponse(CGCMsgTFHelloResponse&& from) noexcept
    : CGCMsgTFHelloResponse() {
    *this = ::std::move(from);
  }

  inline CGCMsgTFHelloResponse& operator=(CGCMsgTFHelloResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgTFHelloResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CGCMsgTFHelloResponse* internal_default_instance() {
    return reinterpret_cast<const CGCMsgTFHelloResponse*>(
               &_CGCMsgTFHelloResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    95;

  void Swap(CGCMsgTFHelloResponse* other);
  friend void swap(CGCMsgTFHelloResponse& a, CGCMsgTFHelloResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CGCMsgTFHelloResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CGCMsgTFHelloResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CGCMsgTFHelloResponse& from);
  void MergeFrom(const CGCMsgTFHelloResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CGCMsgTFHelloResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 version_checksum = 2;
  int version_checksum_size() const;
  void clear_version_checksum();
  static const int kVersionChecksumFieldNumber = 2;
  ::google::protobuf::uint64 version_checksum(int index) const;
  void set_version_checksum(int index, ::google::protobuf::uint64 value);
  void add_version_checksum(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      version_checksum() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_version_checksum();

  // optional uint32 version_check = 1;
  bool has_version_check() const;
  void clear_version_check();
  static const int kVersionCheckFieldNumber = 1;
  ::google::protobuf::uint32 version_check() const;
  void set_version_check(::google::protobuf::uint32 value);

  // optional uint32 version_verbose = 3;
  bool has_version_verbose() const;
  void clear_version_verbose();
  static const int kVersionVerboseFieldNumber = 3;
  ::google::protobuf::uint32 version_verbose() const;
  void set_version_verbose(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CGCMsgTFHelloResponse)
 private:
  void set_has_version_check();
  void clear_has_version_check();
  void set_has_version_verbose();
  void clear_has_version_verbose();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > version_checksum_;
  ::google::protobuf::uint32 version_check_;
  ::google::protobuf::uint32 version_verbose_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCGCMsgTFHelloResponseImpl();
};
// -------------------------------------------------------------------

class CGCMsgTFSync : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CGCMsgTFSync) */ {
 public:
  CGCMsgTFSync();
  virtual ~CGCMsgTFSync();

  CGCMsgTFSync(const CGCMsgTFSync& from);

  inline CGCMsgTFSync& operator=(const CGCMsgTFSync& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CGCMsgTFSync(CGCMsgTFSync&& from) noexcept
    : CGCMsgTFSync() {
    *this = ::std::move(from);
  }

  inline CGCMsgTFSync& operator=(CGCMsgTFSync&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgTFSync& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CGCMsgTFSync* internal_default_instance() {
    return reinterpret_cast<const CGCMsgTFSync*>(
               &_CGCMsgTFSync_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    96;

  void Swap(CGCMsgTFSync* other);
  friend void swap(CGCMsgTFSync& a, CGCMsgTFSync& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CGCMsgTFSync* New() const PROTOBUF_FINAL { return New(NULL); }

  CGCMsgTFSync* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CGCMsgTFSync& from);
  void MergeFrom(const CGCMsgTFSync& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CGCMsgTFSync* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes version_checksum = 1;
  bool has_version_checksum() const;
  void clear_version_checksum();
  static const int kVersionChecksumFieldNumber = 1;
  const ::std::string& version_checksum() const;
  void set_version_checksum(const ::std::string& value);
  #if LANG_CXX11
  void set_version_checksum(::std::string&& value);
  #endif
  void set_version_checksum(const char* value);
  void set_version_checksum(const void* value, size_t size);
  ::std::string* mutable_version_checksum();
  ::std::string* release_version_checksum();
  void set_allocated_version_checksum(::std::string* version_checksum);

  // optional bytes version_checksum_ex = 5;
  bool has_version_checksum_ex() const;
  void clear_version_checksum_ex();
  static const int kVersionChecksumExFieldNumber = 5;
  const ::std::string& version_checksum_ex() const;
  void set_version_checksum_ex(const ::std::string& value);
  #if LANG_CXX11
  void set_version_checksum_ex(::std::string&& value);
  #endif
  void set_version_checksum_ex(const char* value);
  void set_version_checksum_ex(const void* value, size_t size);
  ::std::string* mutable_version_checksum_ex();
  ::std::string* release_version_checksum_ex();
  void set_allocated_version_checksum_ex(::std::string* version_checksum_ex);

  // optional uint32 version_check = 2;
  bool has_version_check() const;
  void clear_version_check();
  static const int kVersionCheckFieldNumber = 2;
  ::google::protobuf::uint32 version_check() const;
  void set_version_check(::google::protobuf::uint32 value);

  // optional uint32 version_check_ex = 3;
  bool has_version_check_ex() const;
  void clear_version_check_ex();
  static const int kVersionCheckExFieldNumber = 3;
  ::google::protobuf::uint32 version_check_ex() const;
  void set_version_check_ex(::google::protobuf::uint32 value);

  // optional uint32 version_check_ex2 = 4;
  bool has_version_check_ex2() const;
  void clear_version_check_ex2();
  static const int kVersionCheckEx2FieldNumber = 4;
  ::google::protobuf::uint32 version_check_ex2() const;
  void set_version_check_ex2(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CGCMsgTFSync)
 private:
  void set_has_version_checksum();
  void clear_has_version_checksum();
  void set_has_version_check();
  void clear_has_version_check();
  void set_has_version_check_ex();
  void clear_has_version_check_ex();
  void set_has_version_check_ex2();
  void clear_has_version_check_ex2();
  void set_has_version_checksum_ex();
  void clear_has_version_checksum_ex();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr version_checksum_;
  ::google::protobuf::internal::ArenaStringPtr version_checksum_ex_;
  ::google::protobuf::uint32 version_check_;
  ::google::protobuf::uint32 version_check_ex_;
  ::google::protobuf::uint32 version_check_ex2_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCGCMsgTFSyncImpl();
};
// -------------------------------------------------------------------

class CGCMsgTFSyncEx : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CGCMsgTFSyncEx) */ {
 public:
  CGCMsgTFSyncEx();
  virtual ~CGCMsgTFSyncEx();

  CGCMsgTFSyncEx(const CGCMsgTFSyncEx& from);

  inline CGCMsgTFSyncEx& operator=(const CGCMsgTFSyncEx& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CGCMsgTFSyncEx(CGCMsgTFSyncEx&& from) noexcept
    : CGCMsgTFSyncEx() {
    *this = ::std::move(from);
  }

  inline CGCMsgTFSyncEx& operator=(CGCMsgTFSyncEx&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgTFSyncEx& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CGCMsgTFSyncEx* internal_default_instance() {
    return reinterpret_cast<const CGCMsgTFSyncEx*>(
               &_CGCMsgTFSyncEx_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    97;

  void Swap(CGCMsgTFSyncEx* other);
  friend void swap(CGCMsgTFSyncEx& a, CGCMsgTFSyncEx& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CGCMsgTFSyncEx* New() const PROTOBUF_FINAL { return New(NULL); }

  CGCMsgTFSyncEx* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CGCMsgTFSyncEx& from);
  void MergeFrom(const CGCMsgTFSyncEx& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CGCMsgTFSyncEx* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string version_checksum = 1;
  bool has_version_checksum() const;
  void clear_version_checksum();
  static const int kVersionChecksumFieldNumber = 1;
  const ::std::string& version_checksum() const;
  void set_version_checksum(const ::std::string& value);
  #if LANG_CXX11
  void set_version_checksum(::std::string&& value);
  #endif
  void set_version_checksum(const char* value);
  void set_version_checksum(const char* value, size_t size);
  ::std::string* mutable_version_checksum();
  ::std::string* release_version_checksum();
  void set_allocated_version_checksum(::std::string* version_checksum);

  // optional bytes version_checksum_ex = 2;
  bool has_version_checksum_ex() const;
  void clear_version_checksum_ex();
  static const int kVersionChecksumExFieldNumber = 2;
  const ::std::string& version_checksum_ex() const;
  void set_version_checksum_ex(const ::std::string& value);
  #if LANG_CXX11
  void set_version_checksum_ex(::std::string&& value);
  #endif
  void set_version_checksum_ex(const char* value);
  void set_version_checksum_ex(const void* value, size_t size);
  ::std::string* mutable_version_checksum_ex();
  ::std::string* release_version_checksum_ex();
  void set_allocated_version_checksum_ex(::std::string* version_checksum_ex);

  // optional uint32 version_check = 3;
  bool has_version_check() const;
  void clear_version_check();
  static const int kVersionCheckFieldNumber = 3;
  ::google::protobuf::uint32 version_check() const;
  void set_version_check(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CGCMsgTFSyncEx)
 private:
  void set_has_version_checksum();
  void clear_has_version_checksum();
  void set_has_version_checksum_ex();
  void clear_has_version_checksum_ex();
  void set_has_version_check();
  void clear_has_version_check();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr version_checksum_;
  ::google::protobuf::internal::ArenaStringPtr version_checksum_ex_;
  ::google::protobuf::uint32 version_check_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCGCMsgTFSyncExImpl();
};
// -------------------------------------------------------------------

class CMsgMvMVictory_Player : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgMvMVictory.Player) */ {
 public:
  CMsgMvMVictory_Player();
  virtual ~CMsgMvMVictory_Player();

  CMsgMvMVictory_Player(const CMsgMvMVictory_Player& from);

  inline CMsgMvMVictory_Player& operator=(const CMsgMvMVictory_Player& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgMvMVictory_Player(CMsgMvMVictory_Player&& from) noexcept
    : CMsgMvMVictory_Player() {
    *this = ::std::move(from);
  }

  inline CMsgMvMVictory_Player& operator=(CMsgMvMVictory_Player&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMvMVictory_Player& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgMvMVictory_Player* internal_default_instance() {
    return reinterpret_cast<const CMsgMvMVictory_Player*>(
               &_CMsgMvMVictory_Player_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    98;

  void Swap(CMsgMvMVictory_Player* other);
  friend void swap(CMsgMvMVictory_Player& a, CMsgMvMVictory_Player& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgMvMVictory_Player* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgMvMVictory_Player* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgMvMVictory_Player& from);
  void MergeFrom(const CMsgMvMVictory_Player& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgMvMVictory_Player* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  bool has_steam_id() const;
  void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  ::google::protobuf::uint64 steam_id() const;
  void set_steam_id(::google::protobuf::uint64 value);

  // optional bool squad_surplus = 2;
  bool has_squad_surplus() const;
  void clear_squad_surplus();
  static const int kSquadSurplusFieldNumber = 2;
  bool squad_surplus() const;
  void set_squad_surplus(bool value);

  // @@protoc_insertion_point(class_scope:CMsgMvMVictory.Player)
 private:
  void set_has_steam_id();
  void clear_has_steam_id();
  void set_has_squad_surplus();
  void clear_has_squad_surplus();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 steam_id_;
  bool squad_surplus_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgMvMVictory_PlayerImpl();
};
// -------------------------------------------------------------------

class CMsgMvMVictory : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgMvMVictory) */ {
 public:
  CMsgMvMVictory();
  virtual ~CMsgMvMVictory();

  CMsgMvMVictory(const CMsgMvMVictory& from);

  inline CMsgMvMVictory& operator=(const CMsgMvMVictory& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgMvMVictory(CMsgMvMVictory&& from) noexcept
    : CMsgMvMVictory() {
    *this = ::std::move(from);
  }

  inline CMsgMvMVictory& operator=(CMsgMvMVictory&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMvMVictory& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgMvMVictory* internal_default_instance() {
    return reinterpret_cast<const CMsgMvMVictory*>(
               &_CMsgMvMVictory_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    99;

  void Swap(CMsgMvMVictory* other);
  friend void swap(CMsgMvMVictory& a, CMsgMvMVictory& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgMvMVictory* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgMvMVictory* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgMvMVictory& from);
  void MergeFrom(const CMsgMvMVictory& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgMvMVictory* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgMvMVictory_Player Player;

  // accessors -------------------------------------------------------

  // repeated .CMsgMvMVictory.Player players = 2;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 2;
  const ::CMsgMvMVictory_Player& players(int index) const;
  ::CMsgMvMVictory_Player* mutable_players(int index);
  ::CMsgMvMVictory_Player* add_players();
  ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictory_Player >*
      mutable_players();
  const ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictory_Player >&
      players() const;

  // optional string tour_name_mannup = 5;
  bool has_tour_name_mannup() const;
  void clear_tour_name_mannup();
  static const int kTourNameMannupFieldNumber = 5;
  const ::std::string& tour_name_mannup() const;
  void set_tour_name_mannup(const ::std::string& value);
  #if LANG_CXX11
  void set_tour_name_mannup(::std::string&& value);
  #endif
  void set_tour_name_mannup(const char* value);
  void set_tour_name_mannup(const char* value, size_t size);
  ::std::string* mutable_tour_name_mannup();
  ::std::string* release_tour_name_mannup();
  void set_allocated_tour_name_mannup(::std::string* tour_name_mannup);

  // optional string mission_name = 6;
  bool has_mission_name() const;
  void clear_mission_name();
  static const int kMissionNameFieldNumber = 6;
  const ::std::string& mission_name() const;
  void set_mission_name(const ::std::string& value);
  #if LANG_CXX11
  void set_mission_name(::std::string&& value);
  #endif
  void set_mission_name(const char* value);
  void set_mission_name(const char* value, size_t size);
  ::std::string* mutable_mission_name();
  ::std::string* release_mission_name();
  void set_allocated_mission_name(::std::string* mission_name);

  // optional uint32 legacy_mission_index = 1;
  bool has_legacy_mission_index() const;
  void clear_legacy_mission_index();
  static const int kLegacyMissionIndexFieldNumber = 1;
  ::google::protobuf::uint32 legacy_mission_index() const;
  void set_legacy_mission_index(::google::protobuf::uint32 value);

  // optional fixed32 event_time = 4;
  bool has_event_time() const;
  void clear_event_time();
  static const int kEventTimeFieldNumber = 4;
  ::google::protobuf::uint32 event_time() const;
  void set_event_time(::google::protobuf::uint32 value);

  // optional uint64 lobby_id = 3;
  bool has_lobby_id() const;
  void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 3;
  ::google::protobuf::uint64 lobby_id() const;
  void set_lobby_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgMvMVictory)
 private:
  void set_has_legacy_mission_index();
  void clear_has_legacy_mission_index();
  void set_has_tour_name_mannup();
  void clear_has_tour_name_mannup();
  void set_has_mission_name();
  void clear_has_mission_name();
  void set_has_lobby_id();
  void clear_has_lobby_id();
  void set_has_event_time();
  void clear_has_event_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictory_Player > players_;
  ::google::protobuf::internal::ArenaStringPtr tour_name_mannup_;
  ::google::protobuf::internal::ArenaStringPtr mission_name_;
  ::google::protobuf::uint32 legacy_mission_index_;
  ::google::protobuf::uint32 event_time_;
  ::google::protobuf::uint64 lobby_id_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgMvMVictoryImpl();
};
// -------------------------------------------------------------------

class CMsgMvMMannUpVictoryReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgMvMMannUpVictoryReply) */ {
 public:
  CMsgMvMMannUpVictoryReply();
  virtual ~CMsgMvMMannUpVictoryReply();

  CMsgMvMMannUpVictoryReply(const CMsgMvMMannUpVictoryReply& from);

  inline CMsgMvMMannUpVictoryReply& operator=(const CMsgMvMMannUpVictoryReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgMvMMannUpVictoryReply(CMsgMvMMannUpVictoryReply&& from) noexcept
    : CMsgMvMMannUpVictoryReply() {
    *this = ::std::move(from);
  }

  inline CMsgMvMMannUpVictoryReply& operator=(CMsgMvMMannUpVictoryReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMvMMannUpVictoryReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgMvMMannUpVictoryReply* internal_default_instance() {
    return reinterpret_cast<const CMsgMvMMannUpVictoryReply*>(
               &_CMsgMvMMannUpVictoryReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    100;

  void Swap(CMsgMvMMannUpVictoryReply* other);
  friend void swap(CMsgMvMMannUpVictoryReply& a, CMsgMvMMannUpVictoryReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgMvMMannUpVictoryReply* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgMvMMannUpVictoryReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgMvMMannUpVictoryReply& from);
  void MergeFrom(const CMsgMvMMannUpVictoryReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgMvMMannUpVictoryReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgMvMMannUpVictoryReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgMvMMannUpVictoryReplyImpl();
};
// -------------------------------------------------------------------

class CMsgGameServerKickingLobby : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGameServerKickingLobby) */ {
 public:
  CMsgGameServerKickingLobby();
  virtual ~CMsgGameServerKickingLobby();

  CMsgGameServerKickingLobby(const CMsgGameServerKickingLobby& from);

  inline CMsgGameServerKickingLobby& operator=(const CMsgGameServerKickingLobby& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGameServerKickingLobby(CMsgGameServerKickingLobby&& from) noexcept
    : CMsgGameServerKickingLobby() {
    *this = ::std::move(from);
  }

  inline CMsgGameServerKickingLobby& operator=(CMsgGameServerKickingLobby&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGameServerKickingLobby& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGameServerKickingLobby* internal_default_instance() {
    return reinterpret_cast<const CMsgGameServerKickingLobby*>(
               &_CMsgGameServerKickingLobby_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    101;

  void Swap(CMsgGameServerKickingLobby* other);
  friend void swap(CMsgGameServerKickingLobby& a, CMsgGameServerKickingLobby& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGameServerKickingLobby* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGameServerKickingLobby* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGameServerKickingLobby& from);
  void MergeFrom(const CMsgGameServerKickingLobby& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGameServerKickingLobby* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 connected_players = 1;
  int connected_players_size() const;
  void clear_connected_players();
  static const int kConnectedPlayersFieldNumber = 1;
  ::google::protobuf::uint64 connected_players(int index) const;
  void set_connected_players(int index, ::google::protobuf::uint64 value);
  void add_connected_players(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      connected_players() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_connected_players();

  // optional uint64 lobby_id = 3;
  bool has_lobby_id() const;
  void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 3;
  ::google::protobuf::uint64 lobby_id() const;
  void set_lobby_id(::google::protobuf::uint64 value);

  // optional uint64 match_id = 4;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 4;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional bool create_party = 2 [default = true];
  bool has_create_party() const;
  void clear_create_party();
  static const int kCreatePartyFieldNumber = 2;
  bool create_party() const;
  void set_create_party(bool value);

  // @@protoc_insertion_point(class_scope:CMsgGameServerKickingLobby)
 private:
  void set_has_create_party();
  void clear_has_create_party();
  void set_has_lobby_id();
  void clear_has_lobby_id();
  void set_has_match_id();
  void clear_has_match_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > connected_players_;
  ::google::protobuf::uint64 lobby_id_;
  ::google::protobuf::uint64 match_id_;
  bool create_party_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGameServerKickingLobbyImpl();
};
// -------------------------------------------------------------------

class CMsgGameServerKickingLobbyResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGameServerKickingLobbyResponse) */ {
 public:
  CMsgGameServerKickingLobbyResponse();
  virtual ~CMsgGameServerKickingLobbyResponse();

  CMsgGameServerKickingLobbyResponse(const CMsgGameServerKickingLobbyResponse& from);

  inline CMsgGameServerKickingLobbyResponse& operator=(const CMsgGameServerKickingLobbyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGameServerKickingLobbyResponse(CMsgGameServerKickingLobbyResponse&& from) noexcept
    : CMsgGameServerKickingLobbyResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGameServerKickingLobbyResponse& operator=(CMsgGameServerKickingLobbyResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGameServerKickingLobbyResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGameServerKickingLobbyResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGameServerKickingLobbyResponse*>(
               &_CMsgGameServerKickingLobbyResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    102;

  void Swap(CMsgGameServerKickingLobbyResponse* other);
  friend void swap(CMsgGameServerKickingLobbyResponse& a, CMsgGameServerKickingLobbyResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGameServerKickingLobbyResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGameServerKickingLobbyResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGameServerKickingLobbyResponse& from);
  void MergeFrom(const CMsgGameServerKickingLobbyResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGameServerKickingLobbyResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgGameServerKickingLobbyResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGameServerKickingLobbyResponseImpl();
};
// -------------------------------------------------------------------

class CMsgLeaveGameAndPrepareToJoinParty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgLeaveGameAndPrepareToJoinParty) */ {
 public:
  CMsgLeaveGameAndPrepareToJoinParty();
  virtual ~CMsgLeaveGameAndPrepareToJoinParty();

  CMsgLeaveGameAndPrepareToJoinParty(const CMsgLeaveGameAndPrepareToJoinParty& from);

  inline CMsgLeaveGameAndPrepareToJoinParty& operator=(const CMsgLeaveGameAndPrepareToJoinParty& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgLeaveGameAndPrepareToJoinParty(CMsgLeaveGameAndPrepareToJoinParty&& from) noexcept
    : CMsgLeaveGameAndPrepareToJoinParty() {
    *this = ::std::move(from);
  }

  inline CMsgLeaveGameAndPrepareToJoinParty& operator=(CMsgLeaveGameAndPrepareToJoinParty&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgLeaveGameAndPrepareToJoinParty& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgLeaveGameAndPrepareToJoinParty* internal_default_instance() {
    return reinterpret_cast<const CMsgLeaveGameAndPrepareToJoinParty*>(
               &_CMsgLeaveGameAndPrepareToJoinParty_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    103;

  void Swap(CMsgLeaveGameAndPrepareToJoinParty* other);
  friend void swap(CMsgLeaveGameAndPrepareToJoinParty& a, CMsgLeaveGameAndPrepareToJoinParty& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgLeaveGameAndPrepareToJoinParty* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgLeaveGameAndPrepareToJoinParty* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgLeaveGameAndPrepareToJoinParty& from);
  void MergeFrom(const CMsgLeaveGameAndPrepareToJoinParty& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgLeaveGameAndPrepareToJoinParty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 party_id = 1;
  bool has_party_id() const;
  void clear_party_id();
  static const int kPartyIdFieldNumber = 1;
  ::google::protobuf::uint64 party_id() const;
  void set_party_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgLeaveGameAndPrepareToJoinParty)
 private:
  void set_has_party_id();
  void clear_has_party_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 party_id_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgLeaveGameAndPrepareToJoinPartyImpl();
};
// -------------------------------------------------------------------

class CMsgPlayerLeftMatch : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgPlayerLeftMatch) */ {
 public:
  CMsgPlayerLeftMatch();
  virtual ~CMsgPlayerLeftMatch();

  CMsgPlayerLeftMatch(const CMsgPlayerLeftMatch& from);

  inline CMsgPlayerLeftMatch& operator=(const CMsgPlayerLeftMatch& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgPlayerLeftMatch(CMsgPlayerLeftMatch&& from) noexcept
    : CMsgPlayerLeftMatch() {
    *this = ::std::move(from);
  }

  inline CMsgPlayerLeftMatch& operator=(CMsgPlayerLeftMatch&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPlayerLeftMatch& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgPlayerLeftMatch* internal_default_instance() {
    return reinterpret_cast<const CMsgPlayerLeftMatch*>(
               &_CMsgPlayerLeftMatch_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    104;

  void Swap(CMsgPlayerLeftMatch* other);
  friend void swap(CMsgPlayerLeftMatch& a, CMsgPlayerLeftMatch& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgPlayerLeftMatch* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgPlayerLeftMatch* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgPlayerLeftMatch& from);
  void MergeFrom(const CMsgPlayerLeftMatch& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgPlayerLeftMatch* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMsgTFXPSource xp_breakdown = 6;
  int xp_breakdown_size() const;
  void clear_xp_breakdown();
  static const int kXpBreakdownFieldNumber = 6;
  const ::CMsgTFXPSource& xp_breakdown(int index) const;
  ::CMsgTFXPSource* mutable_xp_breakdown(int index);
  ::CMsgTFXPSource* add_xp_breakdown();
  ::google::protobuf::RepeatedPtrField< ::CMsgTFXPSource >*
      mutable_xp_breakdown();
  const ::google::protobuf::RepeatedPtrField< ::CMsgTFXPSource >&
      xp_breakdown() const;

  // optional fixed64 steam_id = 1;
  bool has_steam_id() const;
  void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  ::google::protobuf::uint64 steam_id() const;
  void set_steam_id(::google::protobuf::uint64 value);

  // optional .TFMatchLeaveReason leave_reason = 2 [default = TFMatchLeaveReason_UNSPECIFIED];
  bool has_leave_reason() const;
  void clear_leave_reason();
  static const int kLeaveReasonFieldNumber = 2;
  ::TFMatchLeaveReason leave_reason() const;
  void set_leave_reason(::TFMatchLeaveReason value);

  // optional bool was_abandon = 3;
  bool has_was_abandon() const;
  void clear_was_abandon();
  static const int kWasAbandonFieldNumber = 3;
  bool was_abandon() const;
  void set_was_abandon(bool value);

  // optional uint64 lobby_id = 4;
  bool has_lobby_id() const;
  void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 4;
  ::google::protobuf::uint64 lobby_id() const;
  void set_lobby_id(::google::protobuf::uint64 value);

  // optional uint64 match_id = 5;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 5;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgPlayerLeftMatch)
 private:
  void set_has_steam_id();
  void clear_has_steam_id();
  void set_has_leave_reason();
  void clear_has_leave_reason();
  void set_has_was_abandon();
  void clear_has_was_abandon();
  void set_has_lobby_id();
  void clear_has_lobby_id();
  void set_has_match_id();
  void clear_has_match_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgTFXPSource > xp_breakdown_;
  ::google::protobuf::uint64 steam_id_;
  int leave_reason_;
  bool was_abandon_;
  ::google::protobuf::uint64 lobby_id_;
  ::google::protobuf::uint64 match_id_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgPlayerLeftMatchImpl();
};
// -------------------------------------------------------------------

class CMsgPlayerLeftMatchResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgPlayerLeftMatchResponse) */ {
 public:
  CMsgPlayerLeftMatchResponse();
  virtual ~CMsgPlayerLeftMatchResponse();

  CMsgPlayerLeftMatchResponse(const CMsgPlayerLeftMatchResponse& from);

  inline CMsgPlayerLeftMatchResponse& operator=(const CMsgPlayerLeftMatchResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgPlayerLeftMatchResponse(CMsgPlayerLeftMatchResponse&& from) noexcept
    : CMsgPlayerLeftMatchResponse() {
    *this = ::std::move(from);
  }

  inline CMsgPlayerLeftMatchResponse& operator=(CMsgPlayerLeftMatchResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPlayerLeftMatchResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgPlayerLeftMatchResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgPlayerLeftMatchResponse*>(
               &_CMsgPlayerLeftMatchResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    105;

  void Swap(CMsgPlayerLeftMatchResponse* other);
  friend void swap(CMsgPlayerLeftMatchResponse& a, CMsgPlayerLeftMatchResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgPlayerLeftMatchResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgPlayerLeftMatchResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgPlayerLeftMatchResponse& from);
  void MergeFrom(const CMsgPlayerLeftMatchResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgPlayerLeftMatchResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgPlayerLeftMatchResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgPlayerLeftMatchResponseImpl();
};
// -------------------------------------------------------------------

class CMsgPlayerVoteKickedAfterLeavingMatch : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgPlayerVoteKickedAfterLeavingMatch) */ {
 public:
  CMsgPlayerVoteKickedAfterLeavingMatch();
  virtual ~CMsgPlayerVoteKickedAfterLeavingMatch();

  CMsgPlayerVoteKickedAfterLeavingMatch(const CMsgPlayerVoteKickedAfterLeavingMatch& from);

  inline CMsgPlayerVoteKickedAfterLeavingMatch& operator=(const CMsgPlayerVoteKickedAfterLeavingMatch& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgPlayerVoteKickedAfterLeavingMatch(CMsgPlayerVoteKickedAfterLeavingMatch&& from) noexcept
    : CMsgPlayerVoteKickedAfterLeavingMatch() {
    *this = ::std::move(from);
  }

  inline CMsgPlayerVoteKickedAfterLeavingMatch& operator=(CMsgPlayerVoteKickedAfterLeavingMatch&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPlayerVoteKickedAfterLeavingMatch& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgPlayerVoteKickedAfterLeavingMatch* internal_default_instance() {
    return reinterpret_cast<const CMsgPlayerVoteKickedAfterLeavingMatch*>(
               &_CMsgPlayerVoteKickedAfterLeavingMatch_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    106;

  void Swap(CMsgPlayerVoteKickedAfterLeavingMatch* other);
  friend void swap(CMsgPlayerVoteKickedAfterLeavingMatch& a, CMsgPlayerVoteKickedAfterLeavingMatch& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgPlayerVoteKickedAfterLeavingMatch* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgPlayerVoteKickedAfterLeavingMatch* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgPlayerVoteKickedAfterLeavingMatch& from);
  void MergeFrom(const CMsgPlayerVoteKickedAfterLeavingMatch& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgPlayerVoteKickedAfterLeavingMatch* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  bool has_steam_id() const;
  void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  ::google::protobuf::uint64 steam_id() const;
  void set_steam_id(::google::protobuf::uint64 value);

  // optional fixed64 lobby_id = 2;
  bool has_lobby_id() const;
  void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 2;
  ::google::protobuf::uint64 lobby_id() const;
  void set_lobby_id(::google::protobuf::uint64 value);

  // optional fixed64 match_id = 3;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 3;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgPlayerVoteKickedAfterLeavingMatch)
 private:
  void set_has_steam_id();
  void clear_has_steam_id();
  void set_has_lobby_id();
  void clear_has_lobby_id();
  void set_has_match_id();
  void clear_has_match_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 steam_id_;
  ::google::protobuf::uint64 lobby_id_;
  ::google::protobuf::uint64 match_id_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgPlayerVoteKickedAfterLeavingMatchImpl();
};
// -------------------------------------------------------------------

class CMsgPlayerVoteKickedAfterLeavingMatchResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgPlayerVoteKickedAfterLeavingMatchResponse) */ {
 public:
  CMsgPlayerVoteKickedAfterLeavingMatchResponse();
  virtual ~CMsgPlayerVoteKickedAfterLeavingMatchResponse();

  CMsgPlayerVoteKickedAfterLeavingMatchResponse(const CMsgPlayerVoteKickedAfterLeavingMatchResponse& from);

  inline CMsgPlayerVoteKickedAfterLeavingMatchResponse& operator=(const CMsgPlayerVoteKickedAfterLeavingMatchResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgPlayerVoteKickedAfterLeavingMatchResponse(CMsgPlayerVoteKickedAfterLeavingMatchResponse&& from) noexcept
    : CMsgPlayerVoteKickedAfterLeavingMatchResponse() {
    *this = ::std::move(from);
  }

  inline CMsgPlayerVoteKickedAfterLeavingMatchResponse& operator=(CMsgPlayerVoteKickedAfterLeavingMatchResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPlayerVoteKickedAfterLeavingMatchResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgPlayerVoteKickedAfterLeavingMatchResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgPlayerVoteKickedAfterLeavingMatchResponse*>(
               &_CMsgPlayerVoteKickedAfterLeavingMatchResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    107;

  void Swap(CMsgPlayerVoteKickedAfterLeavingMatchResponse* other);
  friend void swap(CMsgPlayerVoteKickedAfterLeavingMatchResponse& a, CMsgPlayerVoteKickedAfterLeavingMatchResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgPlayerVoteKickedAfterLeavingMatchResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgPlayerVoteKickedAfterLeavingMatchResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgPlayerVoteKickedAfterLeavingMatchResponse& from);
  void MergeFrom(const CMsgPlayerVoteKickedAfterLeavingMatchResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgPlayerVoteKickedAfterLeavingMatchResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgPlayerVoteKickedAfterLeavingMatchResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgPlayerVoteKickedAfterLeavingMatchResponseImpl();
};
// -------------------------------------------------------------------

class CMsgHalloween_ServerBossEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgHalloween_ServerBossEvent) */ {
 public:
  CMsgHalloween_ServerBossEvent();
  virtual ~CMsgHalloween_ServerBossEvent();

  CMsgHalloween_ServerBossEvent(const CMsgHalloween_ServerBossEvent& from);

  inline CMsgHalloween_ServerBossEvent& operator=(const CMsgHalloween_ServerBossEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgHalloween_ServerBossEvent(CMsgHalloween_ServerBossEvent&& from) noexcept
    : CMsgHalloween_ServerBossEvent() {
    *this = ::std::move(from);
  }

  inline CMsgHalloween_ServerBossEvent& operator=(CMsgHalloween_ServerBossEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgHalloween_ServerBossEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgHalloween_ServerBossEvent* internal_default_instance() {
    return reinterpret_cast<const CMsgHalloween_ServerBossEvent*>(
               &_CMsgHalloween_ServerBossEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    108;

  void Swap(CMsgHalloween_ServerBossEvent* other);
  friend void swap(CMsgHalloween_ServerBossEvent& a, CMsgHalloween_ServerBossEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgHalloween_ServerBossEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgHalloween_ServerBossEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgHalloween_ServerBossEvent& from);
  void MergeFrom(const CMsgHalloween_ServerBossEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgHalloween_ServerBossEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 event_counter = 1;
  bool has_event_counter() const;
  void clear_event_counter();
  static const int kEventCounterFieldNumber = 1;
  ::google::protobuf::uint32 event_counter() const;
  void set_event_counter(::google::protobuf::uint32 value);

  // optional uint32 timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  ::google::protobuf::uint32 timestamp() const;
  void set_timestamp(::google::protobuf::uint32 value);

  // optional uint32 boss_type = 3;
  bool has_boss_type() const;
  void clear_boss_type();
  static const int kBossTypeFieldNumber = 3;
  ::google::protobuf::uint32 boss_type() const;
  void set_boss_type(::google::protobuf::uint32 value);

  // optional uint32 boss_level = 4;
  bool has_boss_level() const;
  void clear_boss_level();
  static const int kBossLevelFieldNumber = 4;
  ::google::protobuf::uint32 boss_level() const;
  void set_boss_level(::google::protobuf::uint32 value);

  // optional uint32 event_type = 5;
  bool has_event_type() const;
  void clear_event_type();
  static const int kEventTypeFieldNumber = 5;
  ::google::protobuf::uint32 event_type() const;
  void set_event_type(::google::protobuf::uint32 value);

  // optional uint32 players_involved = 6;
  bool has_players_involved() const;
  void clear_players_involved();
  static const int kPlayersInvolvedFieldNumber = 6;
  ::google::protobuf::uint32 players_involved() const;
  void set_players_involved(::google::protobuf::uint32 value);

  // optional float elapsed_time = 7;
  bool has_elapsed_time() const;
  void clear_elapsed_time();
  static const int kElapsedTimeFieldNumber = 7;
  float elapsed_time() const;
  void set_elapsed_time(float value);

  // @@protoc_insertion_point(class_scope:CMsgHalloween_ServerBossEvent)
 private:
  void set_has_event_counter();
  void clear_has_event_counter();
  void set_has_timestamp();
  void clear_has_timestamp();
  void set_has_boss_type();
  void clear_has_boss_type();
  void set_has_boss_level();
  void clear_has_boss_level();
  void set_has_event_type();
  void clear_has_event_type();
  void set_has_players_involved();
  void clear_has_players_involved();
  void set_has_elapsed_time();
  void clear_has_elapsed_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 event_counter_;
  ::google::protobuf::uint32 timestamp_;
  ::google::protobuf::uint32 boss_type_;
  ::google::protobuf::uint32 boss_level_;
  ::google::protobuf::uint32 event_type_;
  ::google::protobuf::uint32 players_involved_;
  float elapsed_time_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgHalloween_ServerBossEventImpl();
};
// -------------------------------------------------------------------

class CMsgHalloween_Merasmus2012 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgHalloween_Merasmus2012) */ {
 public:
  CMsgHalloween_Merasmus2012();
  virtual ~CMsgHalloween_Merasmus2012();

  CMsgHalloween_Merasmus2012(const CMsgHalloween_Merasmus2012& from);

  inline CMsgHalloween_Merasmus2012& operator=(const CMsgHalloween_Merasmus2012& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgHalloween_Merasmus2012(CMsgHalloween_Merasmus2012&& from) noexcept
    : CMsgHalloween_Merasmus2012() {
    *this = ::std::move(from);
  }

  inline CMsgHalloween_Merasmus2012& operator=(CMsgHalloween_Merasmus2012&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgHalloween_Merasmus2012& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgHalloween_Merasmus2012* internal_default_instance() {
    return reinterpret_cast<const CMsgHalloween_Merasmus2012*>(
               &_CMsgHalloween_Merasmus2012_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    109;

  void Swap(CMsgHalloween_Merasmus2012* other);
  friend void swap(CMsgHalloween_Merasmus2012& a, CMsgHalloween_Merasmus2012& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgHalloween_Merasmus2012* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgHalloween_Merasmus2012* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgHalloween_Merasmus2012& from);
  void MergeFrom(const CMsgHalloween_Merasmus2012& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgHalloween_Merasmus2012* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 event_counter = 1;
  bool has_event_counter() const;
  void clear_event_counter();
  static const int kEventCounterFieldNumber = 1;
  ::google::protobuf::uint32 event_counter() const;
  void set_event_counter(::google::protobuf::uint32 value);

  // optional fixed32 time_submitted = 2;
  bool has_time_submitted() const;
  void clear_time_submitted();
  static const int kTimeSubmittedFieldNumber = 2;
  ::google::protobuf::uint32 time_submitted() const;
  void set_time_submitted(::google::protobuf::uint32 value);

  // optional bool is_valve_server = 3;
  bool has_is_valve_server() const;
  void clear_is_valve_server();
  static const int kIsValveServerFieldNumber = 3;
  bool is_valve_server() const;
  void set_is_valve_server(bool value);

  // optional uint32 boss_level = 4;
  bool has_boss_level() const;
  void clear_boss_level();
  static const int kBossLevelFieldNumber = 4;
  ::google::protobuf::uint32 boss_level() const;
  void set_boss_level(::google::protobuf::uint32 value);

  // optional uint32 spawned_health = 5;
  bool has_spawned_health() const;
  void clear_spawned_health();
  static const int kSpawnedHealthFieldNumber = 5;
  ::google::protobuf::uint32 spawned_health() const;
  void set_spawned_health(::google::protobuf::uint32 value);

  // optional uint32 remaining_health = 6;
  bool has_remaining_health() const;
  void clear_remaining_health();
  static const int kRemainingHealthFieldNumber = 6;
  ::google::protobuf::uint32 remaining_health() const;
  void set_remaining_health(::google::protobuf::uint32 value);

  // optional uint32 life_time = 7;
  bool has_life_time() const;
  void clear_life_time();
  static const int kLifeTimeFieldNumber = 7;
  ::google::protobuf::uint32 life_time() const;
  void set_life_time(::google::protobuf::uint32 value);

  // optional uint32 bomb_kills = 8;
  bool has_bomb_kills() const;
  void clear_bomb_kills();
  static const int kBombKillsFieldNumber = 8;
  ::google::protobuf::uint32 bomb_kills() const;
  void set_bomb_kills(::google::protobuf::uint32 value);

  // optional uint32 staff_kills = 9;
  bool has_staff_kills() const;
  void clear_staff_kills();
  static const int kStaffKillsFieldNumber = 9;
  ::google::protobuf::uint32 staff_kills() const;
  void set_staff_kills(::google::protobuf::uint32 value);

  // optional uint32 pvp_kills = 10;
  bool has_pvp_kills() const;
  void clear_pvp_kills();
  static const int kPvpKillsFieldNumber = 10;
  ::google::protobuf::uint32 pvp_kills() const;
  void set_pvp_kills(::google::protobuf::uint32 value);

  // optional uint32 prophunt_time1 = 11;
  bool has_prophunt_time1() const;
  void clear_prophunt_time1();
  static const int kProphuntTime1FieldNumber = 11;
  ::google::protobuf::uint32 prophunt_time1() const;
  void set_prophunt_time1(::google::protobuf::uint32 value);

  // optional uint32 prophunt_time2 = 12;
  bool has_prophunt_time2() const;
  void clear_prophunt_time2();
  static const int kProphuntTime2FieldNumber = 12;
  ::google::protobuf::uint32 prophunt_time2() const;
  void set_prophunt_time2(::google::protobuf::uint32 value);

  // optional uint32 dmg_scout = 13;
  bool has_dmg_scout() const;
  void clear_dmg_scout();
  static const int kDmgScoutFieldNumber = 13;
  ::google::protobuf::uint32 dmg_scout() const;
  void set_dmg_scout(::google::protobuf::uint32 value);

  // optional uint32 dmg_sniper = 14;
  bool has_dmg_sniper() const;
  void clear_dmg_sniper();
  static const int kDmgSniperFieldNumber = 14;
  ::google::protobuf::uint32 dmg_sniper() const;
  void set_dmg_sniper(::google::protobuf::uint32 value);

  // optional uint32 dmg_soldier = 15;
  bool has_dmg_soldier() const;
  void clear_dmg_soldier();
  static const int kDmgSoldierFieldNumber = 15;
  ::google::protobuf::uint32 dmg_soldier() const;
  void set_dmg_soldier(::google::protobuf::uint32 value);

  // optional uint32 dmg_demo = 16;
  bool has_dmg_demo() const;
  void clear_dmg_demo();
  static const int kDmgDemoFieldNumber = 16;
  ::google::protobuf::uint32 dmg_demo() const;
  void set_dmg_demo(::google::protobuf::uint32 value);

  // optional uint32 dmg_medic = 17;
  bool has_dmg_medic() const;
  void clear_dmg_medic();
  static const int kDmgMedicFieldNumber = 17;
  ::google::protobuf::uint32 dmg_medic() const;
  void set_dmg_medic(::google::protobuf::uint32 value);

  // optional uint32 dmg_heavy = 18;
  bool has_dmg_heavy() const;
  void clear_dmg_heavy();
  static const int kDmgHeavyFieldNumber = 18;
  ::google::protobuf::uint32 dmg_heavy() const;
  void set_dmg_heavy(::google::protobuf::uint32 value);

  // optional uint32 dmg_pyro = 19;
  bool has_dmg_pyro() const;
  void clear_dmg_pyro();
  static const int kDmgPyroFieldNumber = 19;
  ::google::protobuf::uint32 dmg_pyro() const;
  void set_dmg_pyro(::google::protobuf::uint32 value);

  // optional uint32 dmg_spy = 20;
  bool has_dmg_spy() const;
  void clear_dmg_spy();
  static const int kDmgSpyFieldNumber = 20;
  ::google::protobuf::uint32 dmg_spy() const;
  void set_dmg_spy(::google::protobuf::uint32 value);

  // optional uint32 dmg_engineer = 21;
  bool has_dmg_engineer() const;
  void clear_dmg_engineer();
  static const int kDmgEngineerFieldNumber = 21;
  ::google::protobuf::uint32 dmg_engineer() const;
  void set_dmg_engineer(::google::protobuf::uint32 value);

  // optional uint32 scout_count = 22;
  bool has_scout_count() const;
  void clear_scout_count();
  static const int kScoutCountFieldNumber = 22;
  ::google::protobuf::uint32 scout_count() const;
  void set_scout_count(::google::protobuf::uint32 value);

  // optional uint32 sniper_count = 23;
  bool has_sniper_count() const;
  void clear_sniper_count();
  static const int kSniperCountFieldNumber = 23;
  ::google::protobuf::uint32 sniper_count() const;
  void set_sniper_count(::google::protobuf::uint32 value);

  // optional uint32 solider_count = 24;
  bool has_solider_count() const;
  void clear_solider_count();
  static const int kSoliderCountFieldNumber = 24;
  ::google::protobuf::uint32 solider_count() const;
  void set_solider_count(::google::protobuf::uint32 value);

  // optional uint32 demo_count = 25;
  bool has_demo_count() const;
  void clear_demo_count();
  static const int kDemoCountFieldNumber = 25;
  ::google::protobuf::uint32 demo_count() const;
  void set_demo_count(::google::protobuf::uint32 value);

  // optional uint32 medic_count = 26;
  bool has_medic_count() const;
  void clear_medic_count();
  static const int kMedicCountFieldNumber = 26;
  ::google::protobuf::uint32 medic_count() const;
  void set_medic_count(::google::protobuf::uint32 value);

  // optional uint32 heavy_count = 27;
  bool has_heavy_count() const;
  void clear_heavy_count();
  static const int kHeavyCountFieldNumber = 27;
  ::google::protobuf::uint32 heavy_count() const;
  void set_heavy_count(::google::protobuf::uint32 value);

  // optional uint32 pyro_count = 28;
  bool has_pyro_count() const;
  void clear_pyro_count();
  static const int kPyroCountFieldNumber = 28;
  ::google::protobuf::uint32 pyro_count() const;
  void set_pyro_count(::google::protobuf::uint32 value);

  // optional uint32 spy_count = 29;
  bool has_spy_count() const;
  void clear_spy_count();
  static const int kSpyCountFieldNumber = 29;
  ::google::protobuf::uint32 spy_count() const;
  void set_spy_count(::google::protobuf::uint32 value);

  // optional uint32 engineer_count = 30;
  bool has_engineer_count() const;
  void clear_engineer_count();
  static const int kEngineerCountFieldNumber = 30;
  ::google::protobuf::uint32 engineer_count() const;
  void set_engineer_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgHalloween_Merasmus2012)
 private:
  void set_has_event_counter();
  void clear_has_event_counter();
  void set_has_time_submitted();
  void clear_has_time_submitted();
  void set_has_is_valve_server();
  void clear_has_is_valve_server();
  void set_has_boss_level();
  void clear_has_boss_level();
  void set_has_spawned_health();
  void clear_has_spawned_health();
  void set_has_remaining_health();
  void clear_has_remaining_health();
  void set_has_life_time();
  void clear_has_life_time();
  void set_has_bomb_kills();
  void clear_has_bomb_kills();
  void set_has_staff_kills();
  void clear_has_staff_kills();
  void set_has_pvp_kills();
  void clear_has_pvp_kills();
  void set_has_prophunt_time1();
  void clear_has_prophunt_time1();
  void set_has_prophunt_time2();
  void clear_has_prophunt_time2();
  void set_has_dmg_scout();
  void clear_has_dmg_scout();
  void set_has_dmg_sniper();
  void clear_has_dmg_sniper();
  void set_has_dmg_soldier();
  void clear_has_dmg_soldier();
  void set_has_dmg_demo();
  void clear_has_dmg_demo();
  void set_has_dmg_medic();
  void clear_has_dmg_medic();
  void set_has_dmg_heavy();
  void clear_has_dmg_heavy();
  void set_has_dmg_pyro();
  void clear_has_dmg_pyro();
  void set_has_dmg_spy();
  void clear_has_dmg_spy();
  void set_has_dmg_engineer();
  void clear_has_dmg_engineer();
  void set_has_scout_count();
  void clear_has_scout_count();
  void set_has_sniper_count();
  void clear_has_sniper_count();
  void set_has_solider_count();
  void clear_has_solider_count();
  void set_has_demo_count();
  void clear_has_demo_count();
  void set_has_medic_count();
  void clear_has_medic_count();
  void set_has_heavy_count();
  void clear_has_heavy_count();
  void set_has_pyro_count();
  void clear_has_pyro_count();
  void set_has_spy_count();
  void clear_has_spy_count();
  void set_has_engineer_count();
  void clear_has_engineer_count();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 event_counter_;
  ::google::protobuf::uint32 time_submitted_;
  bool is_valve_server_;
  ::google::protobuf::uint32 boss_level_;
  ::google::protobuf::uint32 spawned_health_;
  ::google::protobuf::uint32 remaining_health_;
  ::google::protobuf::uint32 life_time_;
  ::google::protobuf::uint32 bomb_kills_;
  ::google::protobuf::uint32 staff_kills_;
  ::google::protobuf::uint32 pvp_kills_;
  ::google::protobuf::uint32 prophunt_time1_;
  ::google::protobuf::uint32 prophunt_time2_;
  ::google::protobuf::uint32 dmg_scout_;
  ::google::protobuf::uint32 dmg_sniper_;
  ::google::protobuf::uint32 dmg_soldier_;
  ::google::protobuf::uint32 dmg_demo_;
  ::google::protobuf::uint32 dmg_medic_;
  ::google::protobuf::uint32 dmg_heavy_;
  ::google::protobuf::uint32 dmg_pyro_;
  ::google::protobuf::uint32 dmg_spy_;
  ::google::protobuf::uint32 dmg_engineer_;
  ::google::protobuf::uint32 scout_count_;
  ::google::protobuf::uint32 sniper_count_;
  ::google::protobuf::uint32 solider_count_;
  ::google::protobuf::uint32 demo_count_;
  ::google::protobuf::uint32 medic_count_;
  ::google::protobuf::uint32 heavy_count_;
  ::google::protobuf::uint32 pyro_count_;
  ::google::protobuf::uint32 spy_count_;
  ::google::protobuf::uint32 engineer_count_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgHalloween_Merasmus2012Impl();
};
// -------------------------------------------------------------------

class CMsgUpdateHalloweenMerasmusLootLevel_Player : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgUpdateHalloweenMerasmusLootLevel.Player) */ {
 public:
  CMsgUpdateHalloweenMerasmusLootLevel_Player();
  virtual ~CMsgUpdateHalloweenMerasmusLootLevel_Player();

  CMsgUpdateHalloweenMerasmusLootLevel_Player(const CMsgUpdateHalloweenMerasmusLootLevel_Player& from);

  inline CMsgUpdateHalloweenMerasmusLootLevel_Player& operator=(const CMsgUpdateHalloweenMerasmusLootLevel_Player& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgUpdateHalloweenMerasmusLootLevel_Player(CMsgUpdateHalloweenMerasmusLootLevel_Player&& from) noexcept
    : CMsgUpdateHalloweenMerasmusLootLevel_Player() {
    *this = ::std::move(from);
  }

  inline CMsgUpdateHalloweenMerasmusLootLevel_Player& operator=(CMsgUpdateHalloweenMerasmusLootLevel_Player&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgUpdateHalloweenMerasmusLootLevel_Player& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgUpdateHalloweenMerasmusLootLevel_Player* internal_default_instance() {
    return reinterpret_cast<const CMsgUpdateHalloweenMerasmusLootLevel_Player*>(
               &_CMsgUpdateHalloweenMerasmusLootLevel_Player_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    110;

  void Swap(CMsgUpdateHalloweenMerasmusLootLevel_Player* other);
  friend void swap(CMsgUpdateHalloweenMerasmusLootLevel_Player& a, CMsgUpdateHalloweenMerasmusLootLevel_Player& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgUpdateHalloweenMerasmusLootLevel_Player* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgUpdateHalloweenMerasmusLootLevel_Player* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgUpdateHalloweenMerasmusLootLevel_Player& from);
  void MergeFrom(const CMsgUpdateHalloweenMerasmusLootLevel_Player& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgUpdateHalloweenMerasmusLootLevel_Player* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  bool has_steam_id() const;
  void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  ::google::protobuf::uint64 steam_id() const;
  void set_steam_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgUpdateHalloweenMerasmusLootLevel.Player)
 private:
  void set_has_steam_id();
  void clear_has_steam_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 steam_id_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgUpdateHalloweenMerasmusLootLevel_PlayerImpl();
};
// -------------------------------------------------------------------

class CMsgUpdateHalloweenMerasmusLootLevel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgUpdateHalloweenMerasmusLootLevel) */ {
 public:
  CMsgUpdateHalloweenMerasmusLootLevel();
  virtual ~CMsgUpdateHalloweenMerasmusLootLevel();

  CMsgUpdateHalloweenMerasmusLootLevel(const CMsgUpdateHalloweenMerasmusLootLevel& from);

  inline CMsgUpdateHalloweenMerasmusLootLevel& operator=(const CMsgUpdateHalloweenMerasmusLootLevel& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgUpdateHalloweenMerasmusLootLevel(CMsgUpdateHalloweenMerasmusLootLevel&& from) noexcept
    : CMsgUpdateHalloweenMerasmusLootLevel() {
    *this = ::std::move(from);
  }

  inline CMsgUpdateHalloweenMerasmusLootLevel& operator=(CMsgUpdateHalloweenMerasmusLootLevel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgUpdateHalloweenMerasmusLootLevel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgUpdateHalloweenMerasmusLootLevel* internal_default_instance() {
    return reinterpret_cast<const CMsgUpdateHalloweenMerasmusLootLevel*>(
               &_CMsgUpdateHalloweenMerasmusLootLevel_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    111;

  void Swap(CMsgUpdateHalloweenMerasmusLootLevel* other);
  friend void swap(CMsgUpdateHalloweenMerasmusLootLevel& a, CMsgUpdateHalloweenMerasmusLootLevel& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgUpdateHalloweenMerasmusLootLevel* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgUpdateHalloweenMerasmusLootLevel* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgUpdateHalloweenMerasmusLootLevel& from);
  void MergeFrom(const CMsgUpdateHalloweenMerasmusLootLevel& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgUpdateHalloweenMerasmusLootLevel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgUpdateHalloweenMerasmusLootLevel_Player Player;

  // accessors -------------------------------------------------------

  // repeated .CMsgUpdateHalloweenMerasmusLootLevel.Player players = 1;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 1;
  const ::CMsgUpdateHalloweenMerasmusLootLevel_Player& players(int index) const;
  ::CMsgUpdateHalloweenMerasmusLootLevel_Player* mutable_players(int index);
  ::CMsgUpdateHalloweenMerasmusLootLevel_Player* add_players();
  ::google::protobuf::RepeatedPtrField< ::CMsgUpdateHalloweenMerasmusLootLevel_Player >*
      mutable_players();
  const ::google::protobuf::RepeatedPtrField< ::CMsgUpdateHalloweenMerasmusLootLevel_Player >&
      players() const;

  // optional uint32 merasmus_level = 2;
  bool has_merasmus_level() const;
  void clear_merasmus_level();
  static const int kMerasmusLevelFieldNumber = 2;
  ::google::protobuf::uint32 merasmus_level() const;
  void set_merasmus_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgUpdateHalloweenMerasmusLootLevel)
 private:
  void set_has_merasmus_level();
  void clear_has_merasmus_level();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgUpdateHalloweenMerasmusLootLevel_Player > players_;
  ::google::protobuf::uint32 merasmus_level_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgUpdateHalloweenMerasmusLootLevelImpl();
};
// -------------------------------------------------------------------

class CAttribute_String : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CAttribute_String) */ {
 public:
  CAttribute_String();
  virtual ~CAttribute_String();

  CAttribute_String(const CAttribute_String& from);

  inline CAttribute_String& operator=(const CAttribute_String& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CAttribute_String(CAttribute_String&& from) noexcept
    : CAttribute_String() {
    *this = ::std::move(from);
  }

  inline CAttribute_String& operator=(CAttribute_String&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CAttribute_String& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CAttribute_String* internal_default_instance() {
    return reinterpret_cast<const CAttribute_String*>(
               &_CAttribute_String_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    112;

  void Swap(CAttribute_String* other);
  friend void swap(CAttribute_String& a, CAttribute_String& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CAttribute_String* New() const PROTOBUF_FINAL { return New(NULL); }

  CAttribute_String* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CAttribute_String& from);
  void MergeFrom(const CAttribute_String& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CAttribute_String* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string value = 1;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 1;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:CAttribute_String)
 private:
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCAttribute_StringImpl();
};
// -------------------------------------------------------------------

class CAttribute_DynamicRecipeComponent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CAttribute_DynamicRecipeComponent) */ {
 public:
  CAttribute_DynamicRecipeComponent();
  virtual ~CAttribute_DynamicRecipeComponent();

  CAttribute_DynamicRecipeComponent(const CAttribute_DynamicRecipeComponent& from);

  inline CAttribute_DynamicRecipeComponent& operator=(const CAttribute_DynamicRecipeComponent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CAttribute_DynamicRecipeComponent(CAttribute_DynamicRecipeComponent&& from) noexcept
    : CAttribute_DynamicRecipeComponent() {
    *this = ::std::move(from);
  }

  inline CAttribute_DynamicRecipeComponent& operator=(CAttribute_DynamicRecipeComponent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CAttribute_DynamicRecipeComponent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CAttribute_DynamicRecipeComponent* internal_default_instance() {
    return reinterpret_cast<const CAttribute_DynamicRecipeComponent*>(
               &_CAttribute_DynamicRecipeComponent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    113;

  void Swap(CAttribute_DynamicRecipeComponent* other);
  friend void swap(CAttribute_DynamicRecipeComponent& a, CAttribute_DynamicRecipeComponent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CAttribute_DynamicRecipeComponent* New() const PROTOBUF_FINAL { return New(NULL); }

  CAttribute_DynamicRecipeComponent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CAttribute_DynamicRecipeComponent& from);
  void MergeFrom(const CAttribute_DynamicRecipeComponent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CAttribute_DynamicRecipeComponent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string attributes_string = 4;
  bool has_attributes_string() const;
  void clear_attributes_string();
  static const int kAttributesStringFieldNumber = 4;
  const ::std::string& attributes_string() const;
  void set_attributes_string(const ::std::string& value);
  #if LANG_CXX11
  void set_attributes_string(::std::string&& value);
  #endif
  void set_attributes_string(const char* value);
  void set_attributes_string(const char* value, size_t size);
  ::std::string* mutable_attributes_string();
  ::std::string* release_attributes_string();
  void set_allocated_attributes_string(::std::string* attributes_string);

  // optional uint32 def_index = 1;
  bool has_def_index() const;
  void clear_def_index();
  static const int kDefIndexFieldNumber = 1;
  ::google::protobuf::uint32 def_index() const;
  void set_def_index(::google::protobuf::uint32 value);

  // optional uint32 item_quality = 2;
  bool has_item_quality() const;
  void clear_item_quality();
  static const int kItemQualityFieldNumber = 2;
  ::google::protobuf::uint32 item_quality() const;
  void set_item_quality(::google::protobuf::uint32 value);

  // optional uint32 component_flags = 3;
  bool has_component_flags() const;
  void clear_component_flags();
  static const int kComponentFlagsFieldNumber = 3;
  ::google::protobuf::uint32 component_flags() const;
  void set_component_flags(::google::protobuf::uint32 value);

  // optional uint32 num_required = 5;
  bool has_num_required() const;
  void clear_num_required();
  static const int kNumRequiredFieldNumber = 5;
  ::google::protobuf::uint32 num_required() const;
  void set_num_required(::google::protobuf::uint32 value);

  // optional uint32 num_fulfilled = 6;
  bool has_num_fulfilled() const;
  void clear_num_fulfilled();
  static const int kNumFulfilledFieldNumber = 6;
  ::google::protobuf::uint32 num_fulfilled() const;
  void set_num_fulfilled(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CAttribute_DynamicRecipeComponent)
 private:
  void set_has_def_index();
  void clear_has_def_index();
  void set_has_item_quality();
  void clear_has_item_quality();
  void set_has_component_flags();
  void clear_has_component_flags();
  void set_has_attributes_string();
  void clear_has_attributes_string();
  void set_has_num_required();
  void clear_has_num_required();
  void set_has_num_fulfilled();
  void clear_has_num_fulfilled();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr attributes_string_;
  ::google::protobuf::uint32 def_index_;
  ::google::protobuf::uint32 item_quality_;
  ::google::protobuf::uint32 component_flags_;
  ::google::protobuf::uint32 num_required_;
  ::google::protobuf::uint32 num_fulfilled_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCAttribute_DynamicRecipeComponentImpl();
};
// -------------------------------------------------------------------

class CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT) */ {
 public:
  CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT();
  virtual ~CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT();

  CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT(const CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT& from);

  inline CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT& operator=(const CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT(CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT&& from) noexcept
    : CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT() {
    *this = ::std::move(from);
  }

  inline CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT& operator=(CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT* internal_default_instance() {
    return reinterpret_cast<const CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT*>(
               &_CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    114;

  void Swap(CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT* other);
  friend void swap(CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT& a, CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT* New() const PROTOBUF_FINAL { return New(NULL); }

  CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT& from);
  void MergeFrom(const CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string attributes_string = 6;
  bool has_attributes_string() const;
  void clear_attributes_string();
  static const int kAttributesStringFieldNumber = 6;
  const ::std::string& attributes_string() const;
  void set_attributes_string(const ::std::string& value);
  #if LANG_CXX11
  void set_attributes_string(::std::string&& value);
  #endif
  void set_attributes_string(const char* value);
  void set_attributes_string(const char* value, size_t size);
  ::std::string* mutable_attributes_string();
  ::std::string* release_attributes_string();
  void set_allocated_attributes_string(::std::string* attributes_string);

  // optional uint32 def_index = 1;
  bool has_def_index() const;
  void clear_def_index();
  static const int kDefIndexFieldNumber = 1;
  ::google::protobuf::uint32 def_index() const;
  void set_def_index(::google::protobuf::uint32 value);

  // optional uint32 item_def = 2;
  bool has_item_def() const;
  void clear_item_def();
  static const int kItemDefFieldNumber = 2;
  ::google::protobuf::uint32 item_def() const;
  void set_item_def(::google::protobuf::uint32 value);

  // optional uint32 item_quality = 3;
  bool has_item_quality() const;
  void clear_item_quality();
  static const int kItemQualityFieldNumber = 3;
  ::google::protobuf::uint32 item_quality() const;
  void set_item_quality(::google::protobuf::uint32 value);

  // optional uint32 component_flags = 4;
  bool has_component_flags() const;
  void clear_component_flags();
  static const int kComponentFlagsFieldNumber = 4;
  ::google::protobuf::uint32 component_flags() const;
  void set_component_flags(::google::protobuf::uint32 value);

  // optional uint32 item_flags = 5;
  bool has_item_flags() const;
  void clear_item_flags();
  static const int kItemFlagsFieldNumber = 5;
  ::google::protobuf::uint32 item_flags() const;
  void set_item_flags(::google::protobuf::uint32 value);

  // optional uint32 num_required = 7;
  bool has_num_required() const;
  void clear_num_required();
  static const int kNumRequiredFieldNumber = 7;
  ::google::protobuf::uint32 num_required() const;
  void set_num_required(::google::protobuf::uint32 value);

  // optional uint32 item_count = 8;
  bool has_item_count() const;
  void clear_item_count();
  static const int kItemCountFieldNumber = 8;
  ::google::protobuf::uint32 item_count() const;
  void set_item_count(::google::protobuf::uint32 value);

  // optional uint32 num_fulfilled = 9;
  bool has_num_fulfilled() const;
  void clear_num_fulfilled();
  static const int kNumFulfilledFieldNumber = 9;
  ::google::protobuf::uint32 num_fulfilled() const;
  void set_num_fulfilled(::google::protobuf::uint32 value);

  // optional uint32 items_fulfilled = 10;
  bool has_items_fulfilled() const;
  void clear_items_fulfilled();
  static const int kItemsFulfilledFieldNumber = 10;
  ::google::protobuf::uint32 items_fulfilled() const;
  void set_items_fulfilled(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT)
 private:
  void set_has_def_index();
  void clear_has_def_index();
  void set_has_item_def();
  void clear_has_item_def();
  void set_has_item_quality();
  void clear_has_item_quality();
  void set_has_component_flags();
  void clear_has_component_flags();
  void set_has_item_flags();
  void clear_has_item_flags();
  void set_has_attributes_string();
  void clear_has_attributes_string();
  void set_has_num_required();
  void clear_has_num_required();
  void set_has_item_count();
  void clear_has_item_count();
  void set_has_num_fulfilled();
  void clear_has_num_fulfilled();
  void set_has_items_fulfilled();
  void clear_has_items_fulfilled();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr attributes_string_;
  ::google::protobuf::uint32 def_index_;
  ::google::protobuf::uint32 item_def_;
  ::google::protobuf::uint32 item_quality_;
  ::google::protobuf::uint32 component_flags_;
  ::google::protobuf::uint32 item_flags_;
  ::google::protobuf::uint32 num_required_;
  ::google::protobuf::uint32 item_count_;
  ::google::protobuf::uint32 num_fulfilled_;
  ::google::protobuf::uint32 items_fulfilled_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUTImpl();
};
// -------------------------------------------------------------------

class CAttribute_ItemSlotCriteria : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CAttribute_ItemSlotCriteria) */ {
 public:
  CAttribute_ItemSlotCriteria();
  virtual ~CAttribute_ItemSlotCriteria();

  CAttribute_ItemSlotCriteria(const CAttribute_ItemSlotCriteria& from);

  inline CAttribute_ItemSlotCriteria& operator=(const CAttribute_ItemSlotCriteria& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CAttribute_ItemSlotCriteria(CAttribute_ItemSlotCriteria&& from) noexcept
    : CAttribute_ItemSlotCriteria() {
    *this = ::std::move(from);
  }

  inline CAttribute_ItemSlotCriteria& operator=(CAttribute_ItemSlotCriteria&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CAttribute_ItemSlotCriteria& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CAttribute_ItemSlotCriteria* internal_default_instance() {
    return reinterpret_cast<const CAttribute_ItemSlotCriteria*>(
               &_CAttribute_ItemSlotCriteria_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    115;

  void Swap(CAttribute_ItemSlotCriteria* other);
  friend void swap(CAttribute_ItemSlotCriteria& a, CAttribute_ItemSlotCriteria& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CAttribute_ItemSlotCriteria* New() const PROTOBUF_FINAL { return New(NULL); }

  CAttribute_ItemSlotCriteria* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CAttribute_ItemSlotCriteria& from);
  void MergeFrom(const CAttribute_ItemSlotCriteria& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CAttribute_ItemSlotCriteria* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string tags = 1;
  bool has_tags() const;
  void clear_tags();
  static const int kTagsFieldNumber = 1;
  const ::std::string& tags() const;
  void set_tags(const ::std::string& value);
  #if LANG_CXX11
  void set_tags(::std::string&& value);
  #endif
  void set_tags(const char* value);
  void set_tags(const char* value, size_t size);
  ::std::string* mutable_tags();
  ::std::string* release_tags();
  void set_allocated_tags(::std::string* tags);

  // @@protoc_insertion_point(class_scope:CAttribute_ItemSlotCriteria)
 private:
  void set_has_tags();
  void clear_has_tags();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr tags_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCAttribute_ItemSlotCriteriaImpl();
};
// -------------------------------------------------------------------

class CMsgSetItemSlotAttribute : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSetItemSlotAttribute) */ {
 public:
  CMsgSetItemSlotAttribute();
  virtual ~CMsgSetItemSlotAttribute();

  CMsgSetItemSlotAttribute(const CMsgSetItemSlotAttribute& from);

  inline CMsgSetItemSlotAttribute& operator=(const CMsgSetItemSlotAttribute& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSetItemSlotAttribute(CMsgSetItemSlotAttribute&& from) noexcept
    : CMsgSetItemSlotAttribute() {
    *this = ::std::move(from);
  }

  inline CMsgSetItemSlotAttribute& operator=(CMsgSetItemSlotAttribute&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSetItemSlotAttribute& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSetItemSlotAttribute* internal_default_instance() {
    return reinterpret_cast<const CMsgSetItemSlotAttribute*>(
               &_CMsgSetItemSlotAttribute_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    116;

  void Swap(CMsgSetItemSlotAttribute* other);
  friend void swap(CMsgSetItemSlotAttribute& a, CMsgSetItemSlotAttribute& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSetItemSlotAttribute* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSetItemSlotAttribute* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSetItemSlotAttribute& from);
  void MergeFrom(const CMsgSetItemSlotAttribute& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSetItemSlotAttribute* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 item_id = 1;
  bool has_item_id() const;
  void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::uint64 item_id() const;
  void set_item_id(::google::protobuf::uint64 value);

  // optional uint64 slot_item_original_id = 2;
  bool has_slot_item_original_id() const;
  void clear_slot_item_original_id();
  static const int kSlotItemOriginalIdFieldNumber = 2;
  ::google::protobuf::uint64 slot_item_original_id() const;
  void set_slot_item_original_id(::google::protobuf::uint64 value);

  // optional uint32 slot_index = 3;
  bool has_slot_index() const;
  void clear_slot_index();
  static const int kSlotIndexFieldNumber = 3;
  ::google::protobuf::uint32 slot_index() const;
  void set_slot_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSetItemSlotAttribute)
 private:
  void set_has_item_id();
  void clear_has_item_id();
  void set_has_slot_item_original_id();
  void clear_has_slot_item_original_id();
  void set_has_slot_index();
  void clear_has_slot_index();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 item_id_;
  ::google::protobuf::uint64 slot_item_original_id_;
  ::google::protobuf::uint32 slot_index_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgSetItemSlotAttributeImpl();
};
// -------------------------------------------------------------------

class CSOWarData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CSOWarData) */ {
 public:
  CSOWarData();
  virtual ~CSOWarData();

  CSOWarData(const CSOWarData& from);

  inline CSOWarData& operator=(const CSOWarData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSOWarData(CSOWarData&& from) noexcept
    : CSOWarData() {
    *this = ::std::move(from);
  }

  inline CSOWarData& operator=(CSOWarData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOWarData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSOWarData* internal_default_instance() {
    return reinterpret_cast<const CSOWarData*>(
               &_CSOWarData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    117;

  void Swap(CSOWarData* other);
  friend void swap(CSOWarData& a, CSOWarData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSOWarData* New() const PROTOBUF_FINAL { return New(NULL); }

  CSOWarData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CSOWarData& from);
  void MergeFrom(const CSOWarData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CSOWarData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1 [(.key_field) = true];
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 war_id = 2 [(.key_field) = true];
  bool has_war_id() const;
  void clear_war_id();
  static const int kWarIdFieldNumber = 2;
  ::google::protobuf::uint32 war_id() const;
  void set_war_id(::google::protobuf::uint32 value);

  // optional uint32 affiliation = 3;
  bool has_affiliation() const;
  void clear_affiliation();
  static const int kAffiliationFieldNumber = 3;
  ::google::protobuf::uint32 affiliation() const;
  void set_affiliation(::google::protobuf::uint32 value);

  // optional uint32 points_scored = 4;
  bool has_points_scored() const;
  void clear_points_scored();
  static const int kPointsScoredFieldNumber = 4;
  ::google::protobuf::uint32 points_scored() const;
  void set_points_scored(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSOWarData)
 private:
  void set_has_account_id();
  void clear_has_account_id();
  void set_has_war_id();
  void clear_has_war_id();
  void set_has_affiliation();
  void clear_has_affiliation();
  void set_has_points_scored();
  void clear_has_points_scored();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 war_id_;
  ::google::protobuf::uint32 affiliation_;
  ::google::protobuf::uint32 points_scored_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCSOWarDataImpl();
};
// -------------------------------------------------------------------

class CGCMsgGC_War_IndividualUpdate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CGCMsgGC_War_IndividualUpdate) */ {
 public:
  CGCMsgGC_War_IndividualUpdate();
  virtual ~CGCMsgGC_War_IndividualUpdate();

  CGCMsgGC_War_IndividualUpdate(const CGCMsgGC_War_IndividualUpdate& from);

  inline CGCMsgGC_War_IndividualUpdate& operator=(const CGCMsgGC_War_IndividualUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CGCMsgGC_War_IndividualUpdate(CGCMsgGC_War_IndividualUpdate&& from) noexcept
    : CGCMsgGC_War_IndividualUpdate() {
    *this = ::std::move(from);
  }

  inline CGCMsgGC_War_IndividualUpdate& operator=(CGCMsgGC_War_IndividualUpdate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgGC_War_IndividualUpdate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CGCMsgGC_War_IndividualUpdate* internal_default_instance() {
    return reinterpret_cast<const CGCMsgGC_War_IndividualUpdate*>(
               &_CGCMsgGC_War_IndividualUpdate_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    118;

  void Swap(CGCMsgGC_War_IndividualUpdate* other);
  friend void swap(CGCMsgGC_War_IndividualUpdate& a, CGCMsgGC_War_IndividualUpdate& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CGCMsgGC_War_IndividualUpdate* New() const PROTOBUF_FINAL { return New(NULL); }

  CGCMsgGC_War_IndividualUpdate* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CGCMsgGC_War_IndividualUpdate& from);
  void MergeFrom(const CGCMsgGC_War_IndividualUpdate& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CGCMsgGC_War_IndividualUpdate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  bool has_steam_id() const;
  void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  ::google::protobuf::uint64 steam_id() const;
  void set_steam_id(::google::protobuf::uint64 value);

  // optional uint32 war_id = 2;
  bool has_war_id() const;
  void clear_war_id();
  static const int kWarIdFieldNumber = 2;
  ::google::protobuf::uint32 war_id() const;
  void set_war_id(::google::protobuf::uint32 value);

  // optional uint32 score = 3;
  bool has_score() const;
  void clear_score();
  static const int kScoreFieldNumber = 3;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CGCMsgGC_War_IndividualUpdate)
 private:
  void set_has_steam_id();
  void clear_has_steam_id();
  void set_has_war_id();
  void clear_has_war_id();
  void set_has_score();
  void clear_has_score();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 steam_id_;
  ::google::protobuf::uint32 war_id_;
  ::google::protobuf::uint32 score_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCGCMsgGC_War_IndividualUpdateImpl();
};
// -------------------------------------------------------------------

class CGCMsgGC_War_JoinWar : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CGCMsgGC_War_JoinWar) */ {
 public:
  CGCMsgGC_War_JoinWar();
  virtual ~CGCMsgGC_War_JoinWar();

  CGCMsgGC_War_JoinWar(const CGCMsgGC_War_JoinWar& from);

  inline CGCMsgGC_War_JoinWar& operator=(const CGCMsgGC_War_JoinWar& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CGCMsgGC_War_JoinWar(CGCMsgGC_War_JoinWar&& from) noexcept
    : CGCMsgGC_War_JoinWar() {
    *this = ::std::move(from);
  }

  inline CGCMsgGC_War_JoinWar& operator=(CGCMsgGC_War_JoinWar&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgGC_War_JoinWar& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CGCMsgGC_War_JoinWar* internal_default_instance() {
    return reinterpret_cast<const CGCMsgGC_War_JoinWar*>(
               &_CGCMsgGC_War_JoinWar_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    119;

  void Swap(CGCMsgGC_War_JoinWar* other);
  friend void swap(CGCMsgGC_War_JoinWar& a, CGCMsgGC_War_JoinWar& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CGCMsgGC_War_JoinWar* New() const PROTOBUF_FINAL { return New(NULL); }

  CGCMsgGC_War_JoinWar* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CGCMsgGC_War_JoinWar& from);
  void MergeFrom(const CGCMsgGC_War_JoinWar& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CGCMsgGC_War_JoinWar* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 affiliation = 1;
  bool has_affiliation() const;
  void clear_affiliation();
  static const int kAffiliationFieldNumber = 1;
  ::google::protobuf::uint32 affiliation() const;
  void set_affiliation(::google::protobuf::uint32 value);

  // optional uint32 war_id = 2;
  bool has_war_id() const;
  void clear_war_id();
  static const int kWarIdFieldNumber = 2;
  ::google::protobuf::uint32 war_id() const;
  void set_war_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CGCMsgGC_War_JoinWar)
 private:
  void set_has_affiliation();
  void clear_has_affiliation();
  void set_has_war_id();
  void clear_has_war_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 affiliation_;
  ::google::protobuf::uint32 war_id_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCGCMsgGC_War_JoinWarImpl();
};
// -------------------------------------------------------------------

class CGCMsgGC_War_RequestGlobalStats : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CGCMsgGC_War_RequestGlobalStats) */ {
 public:
  CGCMsgGC_War_RequestGlobalStats();
  virtual ~CGCMsgGC_War_RequestGlobalStats();

  CGCMsgGC_War_RequestGlobalStats(const CGCMsgGC_War_RequestGlobalStats& from);

  inline CGCMsgGC_War_RequestGlobalStats& operator=(const CGCMsgGC_War_RequestGlobalStats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CGCMsgGC_War_RequestGlobalStats(CGCMsgGC_War_RequestGlobalStats&& from) noexcept
    : CGCMsgGC_War_RequestGlobalStats() {
    *this = ::std::move(from);
  }

  inline CGCMsgGC_War_RequestGlobalStats& operator=(CGCMsgGC_War_RequestGlobalStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgGC_War_RequestGlobalStats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CGCMsgGC_War_RequestGlobalStats* internal_default_instance() {
    return reinterpret_cast<const CGCMsgGC_War_RequestGlobalStats*>(
               &_CGCMsgGC_War_RequestGlobalStats_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    120;

  void Swap(CGCMsgGC_War_RequestGlobalStats* other);
  friend void swap(CGCMsgGC_War_RequestGlobalStats& a, CGCMsgGC_War_RequestGlobalStats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CGCMsgGC_War_RequestGlobalStats* New() const PROTOBUF_FINAL { return New(NULL); }

  CGCMsgGC_War_RequestGlobalStats* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CGCMsgGC_War_RequestGlobalStats& from);
  void MergeFrom(const CGCMsgGC_War_RequestGlobalStats& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CGCMsgGC_War_RequestGlobalStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 war_id = 1;
  bool has_war_id() const;
  void clear_war_id();
  static const int kWarIdFieldNumber = 1;
  ::google::protobuf::uint32 war_id() const;
  void set_war_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CGCMsgGC_War_RequestGlobalStats)
 private:
  void set_has_war_id();
  void clear_has_war_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 war_id_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCGCMsgGC_War_RequestGlobalStatsImpl();
};
// -------------------------------------------------------------------

class CGCMsgGC_War_GlobalStatsResponse_SideScore : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CGCMsgGC_War_GlobalStatsResponse.SideScore) */ {
 public:
  CGCMsgGC_War_GlobalStatsResponse_SideScore();
  virtual ~CGCMsgGC_War_GlobalStatsResponse_SideScore();

  CGCMsgGC_War_GlobalStatsResponse_SideScore(const CGCMsgGC_War_GlobalStatsResponse_SideScore& from);

  inline CGCMsgGC_War_GlobalStatsResponse_SideScore& operator=(const CGCMsgGC_War_GlobalStatsResponse_SideScore& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CGCMsgGC_War_GlobalStatsResponse_SideScore(CGCMsgGC_War_GlobalStatsResponse_SideScore&& from) noexcept
    : CGCMsgGC_War_GlobalStatsResponse_SideScore() {
    *this = ::std::move(from);
  }

  inline CGCMsgGC_War_GlobalStatsResponse_SideScore& operator=(CGCMsgGC_War_GlobalStatsResponse_SideScore&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgGC_War_GlobalStatsResponse_SideScore& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CGCMsgGC_War_GlobalStatsResponse_SideScore* internal_default_instance() {
    return reinterpret_cast<const CGCMsgGC_War_GlobalStatsResponse_SideScore*>(
               &_CGCMsgGC_War_GlobalStatsResponse_SideScore_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    121;

  void Swap(CGCMsgGC_War_GlobalStatsResponse_SideScore* other);
  friend void swap(CGCMsgGC_War_GlobalStatsResponse_SideScore& a, CGCMsgGC_War_GlobalStatsResponse_SideScore& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CGCMsgGC_War_GlobalStatsResponse_SideScore* New() const PROTOBUF_FINAL { return New(NULL); }

  CGCMsgGC_War_GlobalStatsResponse_SideScore* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CGCMsgGC_War_GlobalStatsResponse_SideScore& from);
  void MergeFrom(const CGCMsgGC_War_GlobalStatsResponse_SideScore& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CGCMsgGC_War_GlobalStatsResponse_SideScore* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 score = 2;
  bool has_score() const;
  void clear_score();
  static const int kScoreFieldNumber = 2;
  ::google::protobuf::uint64 score() const;
  void set_score(::google::protobuf::uint64 value);

  // optional uint32 side = 1;
  bool has_side() const;
  void clear_side();
  static const int kSideFieldNumber = 1;
  ::google::protobuf::uint32 side() const;
  void set_side(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CGCMsgGC_War_GlobalStatsResponse.SideScore)
 private:
  void set_has_side();
  void clear_has_side();
  void set_has_score();
  void clear_has_score();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 score_;
  ::google::protobuf::uint32 side_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCGCMsgGC_War_GlobalStatsResponse_SideScoreImpl();
};
// -------------------------------------------------------------------

class CGCMsgGC_War_GlobalStatsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CGCMsgGC_War_GlobalStatsResponse) */ {
 public:
  CGCMsgGC_War_GlobalStatsResponse();
  virtual ~CGCMsgGC_War_GlobalStatsResponse();

  CGCMsgGC_War_GlobalStatsResponse(const CGCMsgGC_War_GlobalStatsResponse& from);

  inline CGCMsgGC_War_GlobalStatsResponse& operator=(const CGCMsgGC_War_GlobalStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CGCMsgGC_War_GlobalStatsResponse(CGCMsgGC_War_GlobalStatsResponse&& from) noexcept
    : CGCMsgGC_War_GlobalStatsResponse() {
    *this = ::std::move(from);
  }

  inline CGCMsgGC_War_GlobalStatsResponse& operator=(CGCMsgGC_War_GlobalStatsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgGC_War_GlobalStatsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CGCMsgGC_War_GlobalStatsResponse* internal_default_instance() {
    return reinterpret_cast<const CGCMsgGC_War_GlobalStatsResponse*>(
               &_CGCMsgGC_War_GlobalStatsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    122;

  void Swap(CGCMsgGC_War_GlobalStatsResponse* other);
  friend void swap(CGCMsgGC_War_GlobalStatsResponse& a, CGCMsgGC_War_GlobalStatsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CGCMsgGC_War_GlobalStatsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CGCMsgGC_War_GlobalStatsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CGCMsgGC_War_GlobalStatsResponse& from);
  void MergeFrom(const CGCMsgGC_War_GlobalStatsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CGCMsgGC_War_GlobalStatsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CGCMsgGC_War_GlobalStatsResponse_SideScore SideScore;

  // accessors -------------------------------------------------------

  // repeated .CGCMsgGC_War_GlobalStatsResponse.SideScore side_scores = 1;
  int side_scores_size() const;
  void clear_side_scores();
  static const int kSideScoresFieldNumber = 1;
  const ::CGCMsgGC_War_GlobalStatsResponse_SideScore& side_scores(int index) const;
  ::CGCMsgGC_War_GlobalStatsResponse_SideScore* mutable_side_scores(int index);
  ::CGCMsgGC_War_GlobalStatsResponse_SideScore* add_side_scores();
  ::google::protobuf::RepeatedPtrField< ::CGCMsgGC_War_GlobalStatsResponse_SideScore >*
      mutable_side_scores();
  const ::google::protobuf::RepeatedPtrField< ::CGCMsgGC_War_GlobalStatsResponse_SideScore >&
      side_scores() const;

  // optional uint32 war_id = 2;
  bool has_war_id() const;
  void clear_war_id();
  static const int kWarIdFieldNumber = 2;
  ::google::protobuf::uint32 war_id() const;
  void set_war_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CGCMsgGC_War_GlobalStatsResponse)
 private:
  void set_has_war_id();
  void clear_has_war_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CGCMsgGC_War_GlobalStatsResponse_SideScore > side_scores_;
  ::google::protobuf::uint32 war_id_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCGCMsgGC_War_GlobalStatsResponseImpl();
};
// -------------------------------------------------------------------

class CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate) */ {
 public:
  CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate();
  virtual ~CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate();

  CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate(const CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate& from);

  inline CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate& operator=(const CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate(CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate&& from) noexcept
    : CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate() {
    *this = ::std::move(from);
  }

  inline CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate& operator=(CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate* internal_default_instance() {
    return reinterpret_cast<const CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate*>(
               &_CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    123;

  void Swap(CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate* other);
  friend void swap(CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate& a, CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate* New() const PROTOBUF_FINAL { return New(NULL); }

  CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate& from);
  void MergeFrom(const CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes score_id = 4;
  bool has_score_id() const;
  void clear_score_id();
  static const int kScoreIdFieldNumber = 4;
  const ::std::string& score_id() const;
  void set_score_id(const ::std::string& value);
  #if LANG_CXX11
  void set_score_id(::std::string&& value);
  #endif
  void set_score_id(const char* value);
  void set_score_id(const void* value, size_t size);
  ::std::string* mutable_score_id();
  ::std::string* release_score_id();
  void set_allocated_score_id(::std::string* score_id);

  // optional uint32 score = 2;
  bool has_score() const;
  void clear_score();
  static const int kScoreFieldNumber = 2;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // optional uint32 type = 3;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // optional uint32 score_check = 5;
  bool has_score_check() const;
  void clear_score_check();
  static const int kScoreCheckFieldNumber = 5;
  ::google::protobuf::uint32 score_check() const;
  void set_score_check(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate)
 private:
  void set_has_score();
  void clear_has_score();
  void set_has_type();
  void clear_has_type();
  void set_has_score_id();
  void clear_has_score_id();
  void set_has_score_check();
  void clear_has_score_check();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr score_id_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 score_check_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCGCMsgGC_PlayerDuckLeaderboard_IndividualUpdateImpl();
};
// -------------------------------------------------------------------

class CAttribute_WorldItemPlacement : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CAttribute_WorldItemPlacement) */ {
 public:
  CAttribute_WorldItemPlacement();
  virtual ~CAttribute_WorldItemPlacement();

  CAttribute_WorldItemPlacement(const CAttribute_WorldItemPlacement& from);

  inline CAttribute_WorldItemPlacement& operator=(const CAttribute_WorldItemPlacement& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CAttribute_WorldItemPlacement(CAttribute_WorldItemPlacement&& from) noexcept
    : CAttribute_WorldItemPlacement() {
    *this = ::std::move(from);
  }

  inline CAttribute_WorldItemPlacement& operator=(CAttribute_WorldItemPlacement&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CAttribute_WorldItemPlacement& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CAttribute_WorldItemPlacement* internal_default_instance() {
    return reinterpret_cast<const CAttribute_WorldItemPlacement*>(
               &_CAttribute_WorldItemPlacement_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    124;

  void Swap(CAttribute_WorldItemPlacement* other);
  friend void swap(CAttribute_WorldItemPlacement& a, CAttribute_WorldItemPlacement& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CAttribute_WorldItemPlacement* New() const PROTOBUF_FINAL { return New(NULL); }

  CAttribute_WorldItemPlacement* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CAttribute_WorldItemPlacement& from);
  void MergeFrom(const CAttribute_WorldItemPlacement& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CAttribute_WorldItemPlacement* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 original_item_id = 1;
  bool has_original_item_id() const;
  void clear_original_item_id();
  static const int kOriginalItemIdFieldNumber = 1;
  ::google::protobuf::uint64 original_item_id() const;
  void set_original_item_id(::google::protobuf::uint64 value);

  // optional float pos_x = 2;
  bool has_pos_x() const;
  void clear_pos_x();
  static const int kPosXFieldNumber = 2;
  float pos_x() const;
  void set_pos_x(float value);

  // optional float pos_y = 3;
  bool has_pos_y() const;
  void clear_pos_y();
  static const int kPosYFieldNumber = 3;
  float pos_y() const;
  void set_pos_y(float value);

  // optional float pos_z = 4;
  bool has_pos_z() const;
  void clear_pos_z();
  static const int kPosZFieldNumber = 4;
  float pos_z() const;
  void set_pos_z(float value);

  // optional float ang_x = 5;
  bool has_ang_x() const;
  void clear_ang_x();
  static const int kAngXFieldNumber = 5;
  float ang_x() const;
  void set_ang_x(float value);

  // optional float ang_y = 6;
  bool has_ang_y() const;
  void clear_ang_y();
  static const int kAngYFieldNumber = 6;
  float ang_y() const;
  void set_ang_y(float value);

  // optional float ang_z = 7;
  bool has_ang_z() const;
  void clear_ang_z();
  static const int kAngZFieldNumber = 7;
  float ang_z() const;
  void set_ang_z(float value);

  // @@protoc_insertion_point(class_scope:CAttribute_WorldItemPlacement)
 private:
  void set_has_original_item_id();
  void clear_has_original_item_id();
  void set_has_pos_x();
  void clear_has_pos_x();
  void set_has_pos_y();
  void clear_has_pos_y();
  void set_has_pos_z();
  void clear_has_pos_z();
  void set_has_ang_x();
  void clear_has_ang_x();
  void set_has_ang_y();
  void clear_has_ang_y();
  void set_has_ang_z();
  void clear_has_ang_z();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 original_item_id_;
  float pos_x_;
  float pos_y_;
  float pos_z_;
  float ang_x_;
  float ang_y_;
  float ang_z_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCAttribute_WorldItemPlacementImpl();
};
// -------------------------------------------------------------------

class CGCMsg_WorldItemPlacement_Update : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CGCMsg_WorldItemPlacement_Update) */ {
 public:
  CGCMsg_WorldItemPlacement_Update();
  virtual ~CGCMsg_WorldItemPlacement_Update();

  CGCMsg_WorldItemPlacement_Update(const CGCMsg_WorldItemPlacement_Update& from);

  inline CGCMsg_WorldItemPlacement_Update& operator=(const CGCMsg_WorldItemPlacement_Update& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CGCMsg_WorldItemPlacement_Update(CGCMsg_WorldItemPlacement_Update&& from) noexcept
    : CGCMsg_WorldItemPlacement_Update() {
    *this = ::std::move(from);
  }

  inline CGCMsg_WorldItemPlacement_Update& operator=(CGCMsg_WorldItemPlacement_Update&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsg_WorldItemPlacement_Update& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CGCMsg_WorldItemPlacement_Update* internal_default_instance() {
    return reinterpret_cast<const CGCMsg_WorldItemPlacement_Update*>(
               &_CGCMsg_WorldItemPlacement_Update_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    125;

  void Swap(CGCMsg_WorldItemPlacement_Update* other);
  friend void swap(CGCMsg_WorldItemPlacement_Update& a, CGCMsg_WorldItemPlacement_Update& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CGCMsg_WorldItemPlacement_Update* New() const PROTOBUF_FINAL { return New(NULL); }

  CGCMsg_WorldItemPlacement_Update* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CGCMsg_WorldItemPlacement_Update& from);
  void MergeFrom(const CGCMsg_WorldItemPlacement_Update& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CGCMsg_WorldItemPlacement_Update* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string attrib_name = 9;
  bool has_attrib_name() const;
  void clear_attrib_name();
  static const int kAttribNameFieldNumber = 9;
  const ::std::string& attrib_name() const;
  void set_attrib_name(const ::std::string& value);
  #if LANG_CXX11
  void set_attrib_name(::std::string&& value);
  #endif
  void set_attrib_name(const char* value);
  void set_attrib_name(const char* value, size_t size);
  ::std::string* mutable_attrib_name();
  ::std::string* release_attrib_name();
  void set_allocated_attrib_name(::std::string* attrib_name);

  // optional uint64 original_item_id = 1;
  bool has_original_item_id() const;
  void clear_original_item_id();
  static const int kOriginalItemIdFieldNumber = 1;
  ::google::protobuf::uint64 original_item_id() const;
  void set_original_item_id(::google::protobuf::uint64 value);

  // optional float pos_x = 2;
  bool has_pos_x() const;
  void clear_pos_x();
  static const int kPosXFieldNumber = 2;
  float pos_x() const;
  void set_pos_x(float value);

  // optional float pos_y = 3;
  bool has_pos_y() const;
  void clear_pos_y();
  static const int kPosYFieldNumber = 3;
  float pos_y() const;
  void set_pos_y(float value);

  // optional float pos_z = 4;
  bool has_pos_z() const;
  void clear_pos_z();
  static const int kPosZFieldNumber = 4;
  float pos_z() const;
  void set_pos_z(float value);

  // optional float ang_x = 5;
  bool has_ang_x() const;
  void clear_ang_x();
  static const int kAngXFieldNumber = 5;
  float ang_x() const;
  void set_ang_x(float value);

  // optional float ang_y = 6;
  bool has_ang_y() const;
  void clear_ang_y();
  static const int kAngYFieldNumber = 6;
  float ang_y() const;
  void set_ang_y(float value);

  // optional float ang_z = 7;
  bool has_ang_z() const;
  void clear_ang_z();
  static const int kAngZFieldNumber = 7;
  float ang_z() const;
  void set_ang_z(float value);

  // optional bool force_remove_all = 8;
  bool has_force_remove_all() const;
  void clear_force_remove_all();
  static const int kForceRemoveAllFieldNumber = 8;
  bool force_remove_all() const;
  void set_force_remove_all(bool value);

  // @@protoc_insertion_point(class_scope:CGCMsg_WorldItemPlacement_Update)
 private:
  void set_has_original_item_id();
  void clear_has_original_item_id();
  void set_has_pos_x();
  void clear_has_pos_x();
  void set_has_pos_y();
  void clear_has_pos_y();
  void set_has_pos_z();
  void clear_has_pos_z();
  void set_has_ang_x();
  void clear_has_ang_x();
  void set_has_ang_y();
  void clear_has_ang_y();
  void set_has_ang_z();
  void clear_has_ang_z();
  void set_has_force_remove_all();
  void clear_has_force_remove_all();
  void set_has_attrib_name();
  void clear_has_attrib_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr attrib_name_;
  ::google::protobuf::uint64 original_item_id_;
  float pos_x_;
  float pos_y_;
  float pos_z_;
  float ang_x_;
  float ang_y_;
  float ang_z_;
  bool force_remove_all_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCGCMsg_WorldItemPlacement_UpdateImpl();
};
// -------------------------------------------------------------------

class CMsgAcknowledgeXP : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgAcknowledgeXP) */ {
 public:
  CMsgAcknowledgeXP();
  virtual ~CMsgAcknowledgeXP();

  CMsgAcknowledgeXP(const CMsgAcknowledgeXP& from);

  inline CMsgAcknowledgeXP& operator=(const CMsgAcknowledgeXP& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgAcknowledgeXP(CMsgAcknowledgeXP&& from) noexcept
    : CMsgAcknowledgeXP() {
    *this = ::std::move(from);
  }

  inline CMsgAcknowledgeXP& operator=(CMsgAcknowledgeXP&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgAcknowledgeXP& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgAcknowledgeXP* internal_default_instance() {
    return reinterpret_cast<const CMsgAcknowledgeXP*>(
               &_CMsgAcknowledgeXP_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    126;

  void Swap(CMsgAcknowledgeXP* other);
  friend void swap(CMsgAcknowledgeXP& a, CMsgAcknowledgeXP& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgAcknowledgeXP* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgAcknowledgeXP* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgAcknowledgeXP& from);
  void MergeFrom(const CMsgAcknowledgeXP& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgAcknowledgeXP* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 match_group = 1;
  bool has_match_group() const;
  void clear_match_group();
  static const int kMatchGroupFieldNumber = 1;
  ::google::protobuf::int32 match_group() const;
  void set_match_group(::google::protobuf::int32 value);

  // optional uint32 predicted_experience = 2;
  bool has_predicted_experience() const;
  void clear_predicted_experience();
  static const int kPredictedExperienceFieldNumber = 2;
  ::google::protobuf::uint32 predicted_experience() const;
  void set_predicted_experience(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgAcknowledgeXP)
 private:
  void set_has_match_group();
  void clear_has_match_group();
  void set_has_predicted_experience();
  void clear_has_predicted_experience();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 match_group_;
  ::google::protobuf::uint32 predicted_experience_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgAcknowledgeXPImpl();
};
// -------------------------------------------------------------------

class CMsgTFXPSource : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgTFXPSource) */ {
 public:
  CMsgTFXPSource();
  virtual ~CMsgTFXPSource();

  CMsgTFXPSource(const CMsgTFXPSource& from);

  inline CMsgTFXPSource& operator=(const CMsgTFXPSource& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTFXPSource(CMsgTFXPSource&& from) noexcept
    : CMsgTFXPSource() {
    *this = ::std::move(from);
  }

  inline CMsgTFXPSource& operator=(CMsgTFXPSource&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFXPSource& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTFXPSource* internal_default_instance() {
    return reinterpret_cast<const CMsgTFXPSource*>(
               &_CMsgTFXPSource_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    127;

  void Swap(CMsgTFXPSource* other);
  friend void swap(CMsgTFXPSource& a, CMsgTFXPSource& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTFXPSource* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgTFXPSource* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgTFXPSource& from);
  void MergeFrom(const CMsgTFXPSource& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgTFXPSource* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgTFXPSource_XPSourceType XPSourceType;
  static const XPSourceType SOURCE_SCORE =
    CMsgTFXPSource_XPSourceType_SOURCE_SCORE;
  static const XPSourceType SOURCE_OBJECTIVE_BONUS =
    CMsgTFXPSource_XPSourceType_SOURCE_OBJECTIVE_BONUS;
  static const XPSourceType SOURCE_COMPLETED_MATCH =
    CMsgTFXPSource_XPSourceType_SOURCE_COMPLETED_MATCH;
  static const XPSourceType SOURCE_COMPETITIVE_ABANDON =
    CMsgTFXPSource_XPSourceType_SOURCE_COMPETITIVE_ABANDON;
  static const XPSourceType SOURCE_COMPETITIVE_WIN =
    CMsgTFXPSource_XPSourceType_SOURCE_COMPETITIVE_WIN;
  static const XPSourceType SOURCE_COMPETITIVE_LOSS =
    CMsgTFXPSource_XPSourceType_SOURCE_COMPETITIVE_LOSS;
  static const XPSourceType SOURCE_AUTOBALANCE_BONUS =
    CMsgTFXPSource_XPSourceType_SOURCE_AUTOBALANCE_BONUS;
  static const XPSourceType NUM_SOURCE_TYPES =
    CMsgTFXPSource_XPSourceType_NUM_SOURCE_TYPES;
  static inline bool XPSourceType_IsValid(int value) {
    return CMsgTFXPSource_XPSourceType_IsValid(value);
  }
  static const XPSourceType XPSourceType_MIN =
    CMsgTFXPSource_XPSourceType_XPSourceType_MIN;
  static const XPSourceType XPSourceType_MAX =
    CMsgTFXPSource_XPSourceType_XPSourceType_MAX;
  static const int XPSourceType_ARRAYSIZE =
    CMsgTFXPSource_XPSourceType_XPSourceType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  XPSourceType_descriptor() {
    return CMsgTFXPSource_XPSourceType_descriptor();
  }
  static inline const ::std::string& XPSourceType_Name(XPSourceType value) {
    return CMsgTFXPSource_XPSourceType_Name(value);
  }
  static inline bool XPSourceType_Parse(const ::std::string& name,
      XPSourceType* value) {
    return CMsgTFXPSource_XPSourceType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CMsgTFXPSource.XPSourceType type = 1 [default = SOURCE_SCORE, (.key_field) = true];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::CMsgTFXPSource_XPSourceType type() const;
  void set_type(::CMsgTFXPSource_XPSourceType value);

  // optional int32 amount = 2;
  bool has_amount() const;
  void clear_amount();
  static const int kAmountFieldNumber = 2;
  ::google::protobuf::int32 amount() const;
  void set_amount(::google::protobuf::int32 value);

  // optional int32 match_group = 3;
  bool has_match_group() const;
  void clear_match_group();
  static const int kMatchGroupFieldNumber = 3;
  ::google::protobuf::int32 match_group() const;
  void set_match_group(::google::protobuf::int32 value);

  // optional uint32 account_id = 4 [(.key_field) = true];
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 4;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint64 match_id = 5 [(.key_field) = true];
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 5;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgTFXPSource)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_amount();
  void clear_has_amount();
  void set_has_match_group();
  void clear_has_match_group();
  void set_has_account_id();
  void clear_has_account_id();
  void set_has_match_id();
  void clear_has_match_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int type_;
  ::google::protobuf::int32 amount_;
  ::google::protobuf::int32 match_group_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint64 match_id_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgTFXPSourceImpl();
};
// -------------------------------------------------------------------

class CMsgTFXPSourceBreakdown : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgTFXPSourceBreakdown) */ {
 public:
  CMsgTFXPSourceBreakdown();
  virtual ~CMsgTFXPSourceBreakdown();

  CMsgTFXPSourceBreakdown(const CMsgTFXPSourceBreakdown& from);

  inline CMsgTFXPSourceBreakdown& operator=(const CMsgTFXPSourceBreakdown& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTFXPSourceBreakdown(CMsgTFXPSourceBreakdown&& from) noexcept
    : CMsgTFXPSourceBreakdown() {
    *this = ::std::move(from);
  }

  inline CMsgTFXPSourceBreakdown& operator=(CMsgTFXPSourceBreakdown&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFXPSourceBreakdown& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTFXPSourceBreakdown* internal_default_instance() {
    return reinterpret_cast<const CMsgTFXPSourceBreakdown*>(
               &_CMsgTFXPSourceBreakdown_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    128;

  void Swap(CMsgTFXPSourceBreakdown* other);
  friend void swap(CMsgTFXPSourceBreakdown& a, CMsgTFXPSourceBreakdown& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTFXPSourceBreakdown* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgTFXPSourceBreakdown* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgTFXPSourceBreakdown& from);
  void MergeFrom(const CMsgTFXPSourceBreakdown& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgTFXPSourceBreakdown* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMsgTFXPSource sources = 1;
  int sources_size() const;
  void clear_sources();
  static const int kSourcesFieldNumber = 1;
  const ::CMsgTFXPSource& sources(int index) const;
  ::CMsgTFXPSource* mutable_sources(int index);
  ::CMsgTFXPSource* add_sources();
  ::google::protobuf::RepeatedPtrField< ::CMsgTFXPSource >*
      mutable_sources();
  const ::google::protobuf::RepeatedPtrField< ::CMsgTFXPSource >&
      sources() const;

  // @@protoc_insertion_point(class_scope:CMsgTFXPSourceBreakdown)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgTFXPSource > sources_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgTFXPSourceBreakdownImpl();
};
// -------------------------------------------------------------------

class CMsgTFClientInit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgTFClientInit) */ {
 public:
  CMsgTFClientInit();
  virtual ~CMsgTFClientInit();

  CMsgTFClientInit(const CMsgTFClientInit& from);

  inline CMsgTFClientInit& operator=(const CMsgTFClientInit& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgTFClientInit(CMsgTFClientInit&& from) noexcept
    : CMsgTFClientInit() {
    *this = ::std::move(from);
  }

  inline CMsgTFClientInit& operator=(CMsgTFClientInit&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFClientInit& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgTFClientInit* internal_default_instance() {
    return reinterpret_cast<const CMsgTFClientInit*>(
               &_CMsgTFClientInit_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    129;

  void Swap(CMsgTFClientInit* other);
  friend void swap(CMsgTFClientInit& a, CMsgTFClientInit& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgTFClientInit* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgTFClientInit* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgTFClientInit& from);
  void MergeFrom(const CMsgTFClientInit& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgTFClientInit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 client_version = 1;
  bool has_client_version() const;
  void clear_client_version();
  static const int kClientVersionFieldNumber = 1;
  ::google::protobuf::uint32 client_version() const;
  void set_client_version(::google::protobuf::uint32 value);

  // optional int32 language = 2;
  bool has_language() const;
  void clear_language();
  static const int kLanguageFieldNumber = 2;
  ::google::protobuf::int32 language() const;
  void set_language(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgTFClientInit)
 private:
  void set_has_client_version();
  void clear_has_client_version();
  void set_has_language();
  void clear_has_language();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 client_version_;
  ::google::protobuf::int32 language_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgTFClientInitImpl();
};
// -------------------------------------------------------------------

class CMsgGCNotification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGCNotification) */ {
 public:
  CMsgGCNotification();
  virtual ~CMsgGCNotification();

  CMsgGCNotification(const CMsgGCNotification& from);

  inline CMsgGCNotification& operator=(const CMsgGCNotification& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCNotification(CMsgGCNotification&& from) noexcept
    : CMsgGCNotification() {
    *this = ::std::move(from);
  }

  inline CMsgGCNotification& operator=(CMsgGCNotification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCNotification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCNotification* internal_default_instance() {
    return reinterpret_cast<const CMsgGCNotification*>(
               &_CMsgGCNotification_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    130;

  void Swap(CMsgGCNotification* other);
  friend void swap(CMsgGCNotification& a, CMsgGCNotification& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCNotification* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCNotification* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCNotification& from);
  void MergeFrom(const CMsgGCNotification& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCNotification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgGCNotification_NotificationType NotificationType;
  static const NotificationType NOTIFICATION_REPORTED_PLAYER_BANNED =
    CMsgGCNotification_NotificationType_NOTIFICATION_REPORTED_PLAYER_BANNED;
  static const NotificationType NOTIFICATION_CUSTOM_STRING =
    CMsgGCNotification_NotificationType_NOTIFICATION_CUSTOM_STRING;
  static const NotificationType NOTIFICATION_MM_BAN_DUE_TO_EXCESSIVE_REPORTS =
    CMsgGCNotification_NotificationType_NOTIFICATION_MM_BAN_DUE_TO_EXCESSIVE_REPORTS;
  static const NotificationType NOTIFICATION_REPORTED_PLAYER_WAS_BANNED =
    CMsgGCNotification_NotificationType_NOTIFICATION_REPORTED_PLAYER_WAS_BANNED;
  static const NotificationType NOTIFICATION_SUPPORT_MESSAGE =
    CMsgGCNotification_NotificationType_NOTIFICATION_SUPPORT_MESSAGE;
  static const NotificationType NOTIFICATION_NUM_TYPES =
    CMsgGCNotification_NotificationType_NOTIFICATION_NUM_TYPES;
  static inline bool NotificationType_IsValid(int value) {
    return CMsgGCNotification_NotificationType_IsValid(value);
  }
  static const NotificationType NotificationType_MIN =
    CMsgGCNotification_NotificationType_NotificationType_MIN;
  static const NotificationType NotificationType_MAX =
    CMsgGCNotification_NotificationType_NotificationType_MAX;
  static const int NotificationType_ARRAYSIZE =
    CMsgGCNotification_NotificationType_NotificationType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  NotificationType_descriptor() {
    return CMsgGCNotification_NotificationType_descriptor();
  }
  static inline const ::std::string& NotificationType_Name(NotificationType value) {
    return CMsgGCNotification_NotificationType_Name(value);
  }
  static inline bool NotificationType_Parse(const ::std::string& name,
      NotificationType* value) {
    return CMsgGCNotification_NotificationType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string notification_string = 5;
  bool has_notification_string() const;
  void clear_notification_string();
  static const int kNotificationStringFieldNumber = 5;
  const ::std::string& notification_string() const;
  void set_notification_string(const ::std::string& value);
  #if LANG_CXX11
  void set_notification_string(::std::string&& value);
  #endif
  void set_notification_string(const char* value);
  void set_notification_string(const char* value, size_t size);
  ::std::string* mutable_notification_string();
  ::std::string* release_notification_string();
  void set_allocated_notification_string(::std::string* notification_string);

  // optional uint64 notification_id = 1 [(.key_field) = true];
  bool has_notification_id() const;
  void clear_notification_id();
  static const int kNotificationIdFieldNumber = 1;
  ::google::protobuf::uint64 notification_id() const;
  void set_notification_id(::google::protobuf::uint64 value);

  // optional uint32 account_id = 2;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional fixed32 expiration_time = 3;
  bool has_expiration_time() const;
  void clear_expiration_time();
  static const int kExpirationTimeFieldNumber = 3;
  ::google::protobuf::uint32 expiration_time() const;
  void set_expiration_time(::google::protobuf::uint32 value);

  // optional .CMsgGCNotification.NotificationType type = 4 [default = NOTIFICATION_CUSTOM_STRING];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  ::CMsgGCNotification_NotificationType type() const;
  void set_type(::CMsgGCNotification_NotificationType value);

  // @@protoc_insertion_point(class_scope:CMsgGCNotification)
 private:
  void set_has_notification_id();
  void clear_has_notification_id();
  void set_has_account_id();
  void clear_has_account_id();
  void set_has_expiration_time();
  void clear_has_expiration_time();
  void set_has_type();
  void clear_has_type();
  void set_has_notification_string();
  void clear_has_notification_string();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr notification_string_;
  ::google::protobuf::uint64 notification_id_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 expiration_time_;
  int type_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGCNotificationImpl();
};
// -------------------------------------------------------------------

class CMsgGCNotificationQueue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGCNotificationQueue) */ {
 public:
  CMsgGCNotificationQueue();
  virtual ~CMsgGCNotificationQueue();

  CMsgGCNotificationQueue(const CMsgGCNotificationQueue& from);

  inline CMsgGCNotificationQueue& operator=(const CMsgGCNotificationQueue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCNotificationQueue(CMsgGCNotificationQueue&& from) noexcept
    : CMsgGCNotificationQueue() {
    *this = ::std::move(from);
  }

  inline CMsgGCNotificationQueue& operator=(CMsgGCNotificationQueue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCNotificationQueue& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCNotificationQueue* internal_default_instance() {
    return reinterpret_cast<const CMsgGCNotificationQueue*>(
               &_CMsgGCNotificationQueue_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    131;

  void Swap(CMsgGCNotificationQueue* other);
  friend void swap(CMsgGCNotificationQueue& a, CMsgGCNotificationQueue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCNotificationQueue* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCNotificationQueue* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCNotificationQueue& from);
  void MergeFrom(const CMsgGCNotificationQueue& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCNotificationQueue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMsgGCNotification notifications = 1;
  int notifications_size() const;
  void clear_notifications();
  static const int kNotificationsFieldNumber = 1;
  const ::CMsgGCNotification& notifications(int index) const;
  ::CMsgGCNotification* mutable_notifications(int index);
  ::CMsgGCNotification* add_notifications();
  ::google::protobuf::RepeatedPtrField< ::CMsgGCNotification >*
      mutable_notifications();
  const ::google::protobuf::RepeatedPtrField< ::CMsgGCNotification >&
      notifications() const;

  // @@protoc_insertion_point(class_scope:CMsgGCNotificationQueue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGCNotification > notifications_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGCNotificationQueueImpl();
};
// -------------------------------------------------------------------

class CMsgNotificationAcknowledge : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgNotificationAcknowledge) */ {
 public:
  CMsgNotificationAcknowledge();
  virtual ~CMsgNotificationAcknowledge();

  CMsgNotificationAcknowledge(const CMsgNotificationAcknowledge& from);

  inline CMsgNotificationAcknowledge& operator=(const CMsgNotificationAcknowledge& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgNotificationAcknowledge(CMsgNotificationAcknowledge&& from) noexcept
    : CMsgNotificationAcknowledge() {
    *this = ::std::move(from);
  }

  inline CMsgNotificationAcknowledge& operator=(CMsgNotificationAcknowledge&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgNotificationAcknowledge& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgNotificationAcknowledge* internal_default_instance() {
    return reinterpret_cast<const CMsgNotificationAcknowledge*>(
               &_CMsgNotificationAcknowledge_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    132;

  void Swap(CMsgNotificationAcknowledge* other);
  friend void swap(CMsgNotificationAcknowledge& a, CMsgNotificationAcknowledge& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgNotificationAcknowledge* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgNotificationAcknowledge* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgNotificationAcknowledge& from);
  void MergeFrom(const CMsgNotificationAcknowledge& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgNotificationAcknowledge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 notification_id = 2;
  bool has_notification_id() const;
  void clear_notification_id();
  static const int kNotificationIdFieldNumber = 2;
  ::google::protobuf::uint64 notification_id() const;
  void set_notification_id(::google::protobuf::uint64 value);

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgNotificationAcknowledge)
 private:
  void set_has_account_id();
  void clear_has_account_id();
  void set_has_notification_id();
  void clear_has_notification_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 notification_id_;
  ::google::protobuf::uint32 account_id_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgNotificationAcknowledgeImpl();
};
// -------------------------------------------------------------------

class CMsgNotificationAcknowledgeReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgNotificationAcknowledgeReply) */ {
 public:
  CMsgNotificationAcknowledgeReply();
  virtual ~CMsgNotificationAcknowledgeReply();

  CMsgNotificationAcknowledgeReply(const CMsgNotificationAcknowledgeReply& from);

  inline CMsgNotificationAcknowledgeReply& operator=(const CMsgNotificationAcknowledgeReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgNotificationAcknowledgeReply(CMsgNotificationAcknowledgeReply&& from) noexcept
    : CMsgNotificationAcknowledgeReply() {
    *this = ::std::move(from);
  }

  inline CMsgNotificationAcknowledgeReply& operator=(CMsgNotificationAcknowledgeReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgNotificationAcknowledgeReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgNotificationAcknowledgeReply* internal_default_instance() {
    return reinterpret_cast<const CMsgNotificationAcknowledgeReply*>(
               &_CMsgNotificationAcknowledgeReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    133;

  void Swap(CMsgNotificationAcknowledgeReply* other);
  friend void swap(CMsgNotificationAcknowledgeReply& a, CMsgNotificationAcknowledgeReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgNotificationAcknowledgeReply* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgNotificationAcknowledgeReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgNotificationAcknowledgeReply& from);
  void MergeFrom(const CMsgNotificationAcknowledgeReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgNotificationAcknowledgeReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgNotificationAcknowledgeReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgNotificationAcknowledgeReplyImpl();
};
// -------------------------------------------------------------------

class CMsgGC_Match_Result_Player : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGC_Match_Result.Player) */ {
 public:
  CMsgGC_Match_Result_Player();
  virtual ~CMsgGC_Match_Result_Player();

  CMsgGC_Match_Result_Player(const CMsgGC_Match_Result_Player& from);

  inline CMsgGC_Match_Result_Player& operator=(const CMsgGC_Match_Result_Player& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGC_Match_Result_Player(CMsgGC_Match_Result_Player&& from) noexcept
    : CMsgGC_Match_Result_Player() {
    *this = ::std::move(from);
  }

  inline CMsgGC_Match_Result_Player& operator=(CMsgGC_Match_Result_Player&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_Match_Result_Player& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGC_Match_Result_Player* internal_default_instance() {
    return reinterpret_cast<const CMsgGC_Match_Result_Player*>(
               &_CMsgGC_Match_Result_Player_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    134;

  void Swap(CMsgGC_Match_Result_Player* other);
  friend void swap(CMsgGC_Match_Result_Player& a, CMsgGC_Match_Result_Player& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGC_Match_Result_Player* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGC_Match_Result_Player* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGC_Match_Result_Player& from);
  void MergeFrom(const CMsgGC_Match_Result_Player& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGC_Match_Result_Player* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMsgTFXPSource xp_breakdown = 21;
  int xp_breakdown_size() const;
  void clear_xp_breakdown();
  static const int kXpBreakdownFieldNumber = 21;
  const ::CMsgTFXPSource& xp_breakdown(int index) const;
  ::CMsgTFXPSource* mutable_xp_breakdown(int index);
  ::CMsgTFXPSource* add_xp_breakdown();
  ::google::protobuf::RepeatedPtrField< ::CMsgTFXPSource >*
      mutable_xp_breakdown();
  const ::google::protobuf::RepeatedPtrField< ::CMsgTFXPSource >&
      xp_breakdown() const;

  // optional fixed64 steam_id = 1;
  bool has_steam_id() const;
  void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  ::google::protobuf::uint64 steam_id() const;
  void set_steam_id(::google::protobuf::uint64 value);

  // optional uint64 party_id = 2;
  bool has_party_id() const;
  void clear_party_id();
  static const int kPartyIdFieldNumber = 2;
  ::google::protobuf::uint64 party_id() const;
  void set_party_id(::google::protobuf::uint64 value);

  // optional uint32 team = 3;
  bool has_team() const;
  void clear_team();
  static const int kTeamFieldNumber = 3;
  ::google::protobuf::uint32 team() const;
  void set_team(::google::protobuf::uint32 value);

  // optional uint32 score = 4;
  bool has_score() const;
  void clear_score();
  static const int kScoreFieldNumber = 4;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // optional uint32 ping = 5;
  bool has_ping() const;
  void clear_ping();
  static const int kPingFieldNumber = 5;
  ::google::protobuf::uint32 ping() const;
  void set_ping(::google::protobuf::uint32 value);

  // optional uint32 flags = 6;
  bool has_flags() const;
  void clear_flags();
  static const int kFlagsFieldNumber = 6;
  ::google::protobuf::uint32 flags() const;
  void set_flags(::google::protobuf::uint32 value);

  // optional uint32 rank = 9;
  bool has_rank() const;
  void clear_rank();
  static const int kRankFieldNumber = 9;
  ::google::protobuf::uint32 rank() const;
  void set_rank(::google::protobuf::uint32 value);

  // optional uint32 classes_played = 10;
  bool has_classes_played() const;
  void clear_classes_played();
  static const int kClassesPlayedFieldNumber = 10;
  ::google::protobuf::uint32 classes_played() const;
  void set_classes_played(::google::protobuf::uint32 value);

  // optional uint32 kills = 11;
  bool has_kills() const;
  void clear_kills();
  static const int kKillsFieldNumber = 11;
  ::google::protobuf::uint32 kills() const;
  void set_kills(::google::protobuf::uint32 value);

  // optional uint32 deaths = 12;
  bool has_deaths() const;
  void clear_deaths();
  static const int kDeathsFieldNumber = 12;
  ::google::protobuf::uint32 deaths() const;
  void set_deaths(::google::protobuf::uint32 value);

  // optional uint32 damage = 13;
  bool has_damage() const;
  void clear_damage();
  static const int kDamageFieldNumber = 13;
  ::google::protobuf::uint32 damage() const;
  void set_damage(::google::protobuf::uint32 value);

  // optional uint32 healing = 14;
  bool has_healing() const;
  void clear_healing();
  static const int kHealingFieldNumber = 14;
  ::google::protobuf::uint32 healing() const;
  void set_healing(::google::protobuf::uint32 value);

  // optional uint32 support = 15;
  bool has_support() const;
  void clear_support();
  static const int kSupportFieldNumber = 15;
  ::google::protobuf::uint32 support() const;
  void set_support(::google::protobuf::uint32 value);

  // optional uint32 score_medal = 16;
  bool has_score_medal() const;
  void clear_score_medal();
  static const int kScoreMedalFieldNumber = 16;
  ::google::protobuf::uint32 score_medal() const;
  void set_score_medal(::google::protobuf::uint32 value);

  // optional uint32 kills_medal = 17;
  bool has_kills_medal() const;
  void clear_kills_medal();
  static const int kKillsMedalFieldNumber = 17;
  ::google::protobuf::uint32 kills_medal() const;
  void set_kills_medal(::google::protobuf::uint32 value);

  // optional uint32 damage_medal = 18;
  bool has_damage_medal() const;
  void clear_damage_medal();
  static const int kDamageMedalFieldNumber = 18;
  ::google::protobuf::uint32 damage_medal() const;
  void set_damage_medal(::google::protobuf::uint32 value);

  // optional uint32 healing_medal = 19;
  bool has_healing_medal() const;
  void clear_healing_medal();
  static const int kHealingMedalFieldNumber = 19;
  ::google::protobuf::uint32 healing_medal() const;
  void set_healing_medal(::google::protobuf::uint32 value);

  // optional uint32 support_medal = 20;
  bool has_support_medal() const;
  void clear_support_medal();
  static const int kSupportMedalFieldNumber = 20;
  ::google::protobuf::uint32 support_medal() const;
  void set_support_medal(::google::protobuf::uint32 value);

  // optional uint32 leave_time = 22;
  bool has_leave_time() const;
  void clear_leave_time();
  static const int kLeaveTimeFieldNumber = 22;
  ::google::protobuf::uint32 leave_time() const;
  void set_leave_time(::google::protobuf::uint32 value);

  // optional .TFMatchLeaveReason leave_reason = 23 [default = TFMatchLeaveReason_UNSPECIFIED];
  bool has_leave_reason() const;
  void clear_leave_reason();
  static const int kLeaveReasonFieldNumber = 23;
  ::TFMatchLeaveReason leave_reason() const;
  void set_leave_reason(::TFMatchLeaveReason value);

  // optional uint32 connect_time = 24;
  bool has_connect_time() const;
  void clear_connect_time();
  static const int kConnectTimeFieldNumber = 24;
  ::google::protobuf::uint32 connect_time() const;
  void set_connect_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGC_Match_Result.Player)
 private:
  void set_has_steam_id();
  void clear_has_steam_id();
  void set_has_party_id();
  void clear_has_party_id();
  void set_has_team();
  void clear_has_team();
  void set_has_score();
  void clear_has_score();
  void set_has_ping();
  void clear_has_ping();
  void set_has_flags();
  void clear_has_flags();
  void set_has_rank();
  void clear_has_rank();
  void set_has_classes_played();
  void clear_has_classes_played();
  void set_has_kills();
  void clear_has_kills();
  void set_has_deaths();
  void clear_has_deaths();
  void set_has_damage();
  void clear_has_damage();
  void set_has_healing();
  void clear_has_healing();
  void set_has_support();
  void clear_has_support();
  void set_has_score_medal();
  void clear_has_score_medal();
  void set_has_kills_medal();
  void clear_has_kills_medal();
  void set_has_damage_medal();
  void clear_has_damage_medal();
  void set_has_healing_medal();
  void clear_has_healing_medal();
  void set_has_support_medal();
  void clear_has_support_medal();
  void set_has_leave_time();
  void clear_has_leave_time();
  void set_has_leave_reason();
  void clear_has_leave_reason();
  void set_has_connect_time();
  void clear_has_connect_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgTFXPSource > xp_breakdown_;
  ::google::protobuf::uint64 steam_id_;
  ::google::protobuf::uint64 party_id_;
  ::google::protobuf::uint32 team_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 ping_;
  ::google::protobuf::uint32 flags_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 classes_played_;
  ::google::protobuf::uint32 kills_;
  ::google::protobuf::uint32 deaths_;
  ::google::protobuf::uint32 damage_;
  ::google::protobuf::uint32 healing_;
  ::google::protobuf::uint32 support_;
  ::google::protobuf::uint32 score_medal_;
  ::google::protobuf::uint32 kills_medal_;
  ::google::protobuf::uint32 damage_medal_;
  ::google::protobuf::uint32 healing_medal_;
  ::google::protobuf::uint32 support_medal_;
  ::google::protobuf::uint32 leave_time_;
  int leave_reason_;
  ::google::protobuf::uint32 connect_time_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGC_Match_Result_PlayerImpl();
};
// -------------------------------------------------------------------

class CMsgGC_Match_Result : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGC_Match_Result) */ {
 public:
  CMsgGC_Match_Result();
  virtual ~CMsgGC_Match_Result();

  CMsgGC_Match_Result(const CMsgGC_Match_Result& from);

  inline CMsgGC_Match_Result& operator=(const CMsgGC_Match_Result& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGC_Match_Result(CMsgGC_Match_Result&& from) noexcept
    : CMsgGC_Match_Result() {
    *this = ::std::move(from);
  }

  inline CMsgGC_Match_Result& operator=(CMsgGC_Match_Result&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_Match_Result& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGC_Match_Result* internal_default_instance() {
    return reinterpret_cast<const CMsgGC_Match_Result*>(
               &_CMsgGC_Match_Result_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    135;

  void Swap(CMsgGC_Match_Result* other);
  friend void swap(CMsgGC_Match_Result& a, CMsgGC_Match_Result& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGC_Match_Result* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGC_Match_Result* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGC_Match_Result& from);
  void MergeFrom(const CMsgGC_Match_Result& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGC_Match_Result* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgGC_Match_Result_Player Player;

  typedef CMsgGC_Match_Result_Status Status;
  static const Status MATCH_SUCCEEDED =
    CMsgGC_Match_Result_Status_MATCH_SUCCEEDED;
  static const Status MATCH_FAILED_GC =
    CMsgGC_Match_Result_Status_MATCH_FAILED_GC;
  static const Status MATCH_FAILED_TRUSTED =
    CMsgGC_Match_Result_Status_MATCH_FAILED_TRUSTED;
  static const Status MATCH_FAILED_ABANDON =
    CMsgGC_Match_Result_Status_MATCH_FAILED_ABANDON;
  static const Status MATCH_FAILED_UNKNOWN =
    CMsgGC_Match_Result_Status_MATCH_FAILED_UNKNOWN;
  static const Status MATCH_FAILED_TIMEOUT =
    CMsgGC_Match_Result_Status_MATCH_FAILED_TIMEOUT;
  static const Status MATCH_FINISHED_ABANDON =
    CMsgGC_Match_Result_Status_MATCH_FINISHED_ABANDON;
  static inline bool Status_IsValid(int value) {
    return CMsgGC_Match_Result_Status_IsValid(value);
  }
  static const Status Status_MIN =
    CMsgGC_Match_Result_Status_Status_MIN;
  static const Status Status_MAX =
    CMsgGC_Match_Result_Status_Status_MAX;
  static const int Status_ARRAYSIZE =
    CMsgGC_Match_Result_Status_Status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Status_descriptor() {
    return CMsgGC_Match_Result_Status_descriptor();
  }
  static inline const ::std::string& Status_Name(Status value) {
    return CMsgGC_Match_Result_Status_Name(value);
  }
  static inline bool Status_Parse(const ::std::string& name,
      Status* value) {
    return CMsgGC_Match_Result_Status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .CMsgGC_Match_Result.Player players = 10;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 10;
  const ::CMsgGC_Match_Result_Player& players(int index) const;
  ::CMsgGC_Match_Result_Player* mutable_players(int index);
  ::CMsgGC_Match_Result_Player* add_players();
  ::google::protobuf::RepeatedPtrField< ::CMsgGC_Match_Result_Player >*
      mutable_players();
  const ::google::protobuf::RepeatedPtrField< ::CMsgGC_Match_Result_Player >&
      players() const;

  // optional uint64 match_id = 1 [(.key_field) = true];
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional int32 match_group = 2;
  bool has_match_group() const;
  void clear_match_group();
  static const int kMatchGroupFieldNumber = 2;
  ::google::protobuf::int32 match_group() const;
  void set_match_group(::google::protobuf::int32 value);

  // optional .CMsgGC_Match_Result.Status status = 3 [default = MATCH_SUCCEEDED];
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 3;
  ::CMsgGC_Match_Result_Status status() const;
  void set_status(::CMsgGC_Match_Result_Status value);

  // optional uint32 duration = 4;
  bool has_duration() const;
  void clear_duration();
  static const int kDurationFieldNumber = 4;
  ::google::protobuf::uint32 duration() const;
  void set_duration(::google::protobuf::uint32 value);

  // optional uint32 red_score = 5;
  bool has_red_score() const;
  void clear_red_score();
  static const int kRedScoreFieldNumber = 5;
  ::google::protobuf::uint32 red_score() const;
  void set_red_score(::google::protobuf::uint32 value);

  // optional uint32 blue_score = 6;
  bool has_blue_score() const;
  void clear_blue_score();
  static const int kBlueScoreFieldNumber = 6;
  ::google::protobuf::uint32 blue_score() const;
  void set_blue_score(::google::protobuf::uint32 value);

  // optional uint32 winning_team = 7;
  bool has_winning_team() const;
  void clear_winning_team();
  static const int kWinningTeamFieldNumber = 7;
  ::google::protobuf::uint32 winning_team() const;
  void set_winning_team(::google::protobuf::uint32 value);

  // optional uint32 map_index = 8;
  bool has_map_index() const;
  void clear_map_index();
  static const int kMapIndexFieldNumber = 8;
  ::google::protobuf::uint32 map_index() const;
  void set_map_index(::google::protobuf::uint32 value);

  // optional uint32 game_type = 9 [default = 0];
  bool has_game_type() const;
  void clear_game_type();
  static const int kGameTypeFieldNumber = 9;
  ::google::protobuf::uint32 game_type() const;
  void set_game_type(::google::protobuf::uint32 value);

  // optional uint32 win_reason = 13;
  bool has_win_reason() const;
  void clear_win_reason();
  static const int kWinReasonFieldNumber = 13;
  ::google::protobuf::uint32 win_reason() const;
  void set_win_reason(::google::protobuf::uint32 value);

  // optional uint32 flags = 14;
  bool has_flags() const;
  void clear_flags();
  static const int kFlagsFieldNumber = 14;
  ::google::protobuf::uint32 flags() const;
  void set_flags(::google::protobuf::uint32 value);

  // optional uint32 bots = 16;
  bool has_bots() const;
  void clear_bots();
  static const int kBotsFieldNumber = 16;
  ::google::protobuf::uint32 bots() const;
  void set_bots(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGC_Match_Result)
 private:
  void set_has_match_id();
  void clear_has_match_id();
  void set_has_match_group();
  void clear_has_match_group();
  void set_has_status();
  void clear_has_status();
  void set_has_duration();
  void clear_has_duration();
  void set_has_red_score();
  void clear_has_red_score();
  void set_has_blue_score();
  void clear_has_blue_score();
  void set_has_winning_team();
  void clear_has_winning_team();
  void set_has_map_index();
  void clear_has_map_index();
  void set_has_game_type();
  void clear_has_game_type();
  void set_has_win_reason();
  void clear_has_win_reason();
  void set_has_flags();
  void clear_has_flags();
  void set_has_bots();
  void clear_has_bots();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGC_Match_Result_Player > players_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::int32 match_group_;
  int status_;
  ::google::protobuf::uint32 duration_;
  ::google::protobuf::uint32 red_score_;
  ::google::protobuf::uint32 blue_score_;
  ::google::protobuf::uint32 winning_team_;
  ::google::protobuf::uint32 map_index_;
  ::google::protobuf::uint32 game_type_;
  ::google::protobuf::uint32 win_reason_;
  ::google::protobuf::uint32 flags_;
  ::google::protobuf::uint32 bots_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGC_Match_ResultImpl();
};
// -------------------------------------------------------------------

class CMsgGC_Match_ResultResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGC_Match_ResultResponse) */ {
 public:
  CMsgGC_Match_ResultResponse();
  virtual ~CMsgGC_Match_ResultResponse();

  CMsgGC_Match_ResultResponse(const CMsgGC_Match_ResultResponse& from);

  inline CMsgGC_Match_ResultResponse& operator=(const CMsgGC_Match_ResultResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGC_Match_ResultResponse(CMsgGC_Match_ResultResponse&& from) noexcept
    : CMsgGC_Match_ResultResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGC_Match_ResultResponse& operator=(CMsgGC_Match_ResultResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_Match_ResultResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGC_Match_ResultResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGC_Match_ResultResponse*>(
               &_CMsgGC_Match_ResultResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    136;

  void Swap(CMsgGC_Match_ResultResponse* other);
  friend void swap(CMsgGC_Match_ResultResponse& a, CMsgGC_Match_ResultResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGC_Match_ResultResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGC_Match_ResultResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGC_Match_ResultResponse& from);
  void MergeFrom(const CMsgGC_Match_ResultResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGC_Match_ResultResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgGC_Match_ResultResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGC_Match_ResultResponseImpl();
};
// -------------------------------------------------------------------

class CEconItemPreviewDataBlock : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CEconItemPreviewDataBlock) */ {
 public:
  CEconItemPreviewDataBlock();
  virtual ~CEconItemPreviewDataBlock();

  CEconItemPreviewDataBlock(const CEconItemPreviewDataBlock& from);

  inline CEconItemPreviewDataBlock& operator=(const CEconItemPreviewDataBlock& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CEconItemPreviewDataBlock(CEconItemPreviewDataBlock&& from) noexcept
    : CEconItemPreviewDataBlock() {
    *this = ::std::move(from);
  }

  inline CEconItemPreviewDataBlock& operator=(CEconItemPreviewDataBlock&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CEconItemPreviewDataBlock& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CEconItemPreviewDataBlock* internal_default_instance() {
    return reinterpret_cast<const CEconItemPreviewDataBlock*>(
               &_CEconItemPreviewDataBlock_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    137;

  void Swap(CEconItemPreviewDataBlock* other);
  friend void swap(CEconItemPreviewDataBlock& a, CEconItemPreviewDataBlock& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CEconItemPreviewDataBlock* New() const PROTOBUF_FINAL { return New(NULL); }

  CEconItemPreviewDataBlock* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CEconItemPreviewDataBlock& from);
  void MergeFrom(const CEconItemPreviewDataBlock& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CEconItemPreviewDataBlock* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CSOEconItem econitem = 1;
  bool has_econitem() const;
  void clear_econitem();
  static const int kEconitemFieldNumber = 1;
  const ::CSOEconItem& econitem() const;
  ::CSOEconItem* release_econitem();
  ::CSOEconItem* mutable_econitem();
  void set_allocated_econitem(::CSOEconItem* econitem);

  // @@protoc_insertion_point(class_scope:CEconItemPreviewDataBlock)
 private:
  void set_has_econitem();
  void clear_has_econitem();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::CSOEconItem* econitem_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCEconItemPreviewDataBlockImpl();
};
// -------------------------------------------------------------------

class CMsgGC_Client2GCEconPreviewDataBlockRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGC_Client2GCEconPreviewDataBlockRequest) */ {
 public:
  CMsgGC_Client2GCEconPreviewDataBlockRequest();
  virtual ~CMsgGC_Client2GCEconPreviewDataBlockRequest();

  CMsgGC_Client2GCEconPreviewDataBlockRequest(const CMsgGC_Client2GCEconPreviewDataBlockRequest& from);

  inline CMsgGC_Client2GCEconPreviewDataBlockRequest& operator=(const CMsgGC_Client2GCEconPreviewDataBlockRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGC_Client2GCEconPreviewDataBlockRequest(CMsgGC_Client2GCEconPreviewDataBlockRequest&& from) noexcept
    : CMsgGC_Client2GCEconPreviewDataBlockRequest() {
    *this = ::std::move(from);
  }

  inline CMsgGC_Client2GCEconPreviewDataBlockRequest& operator=(CMsgGC_Client2GCEconPreviewDataBlockRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_Client2GCEconPreviewDataBlockRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGC_Client2GCEconPreviewDataBlockRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgGC_Client2GCEconPreviewDataBlockRequest*>(
               &_CMsgGC_Client2GCEconPreviewDataBlockRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    138;

  void Swap(CMsgGC_Client2GCEconPreviewDataBlockRequest* other);
  friend void swap(CMsgGC_Client2GCEconPreviewDataBlockRequest& a, CMsgGC_Client2GCEconPreviewDataBlockRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGC_Client2GCEconPreviewDataBlockRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGC_Client2GCEconPreviewDataBlockRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGC_Client2GCEconPreviewDataBlockRequest& from);
  void MergeFrom(const CMsgGC_Client2GCEconPreviewDataBlockRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGC_Client2GCEconPreviewDataBlockRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 param_s = 1;
  bool has_param_s() const;
  void clear_param_s();
  static const int kParamSFieldNumber = 1;
  ::google::protobuf::uint64 param_s() const;
  void set_param_s(::google::protobuf::uint64 value);

  // optional uint64 param_a = 2;
  bool has_param_a() const;
  void clear_param_a();
  static const int kParamAFieldNumber = 2;
  ::google::protobuf::uint64 param_a() const;
  void set_param_a(::google::protobuf::uint64 value);

  // optional uint64 param_d = 3;
  bool has_param_d() const;
  void clear_param_d();
  static const int kParamDFieldNumber = 3;
  ::google::protobuf::uint64 param_d() const;
  void set_param_d(::google::protobuf::uint64 value);

  // optional uint64 param_m = 4;
  bool has_param_m() const;
  void clear_param_m();
  static const int kParamMFieldNumber = 4;
  ::google::protobuf::uint64 param_m() const;
  void set_param_m(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgGC_Client2GCEconPreviewDataBlockRequest)
 private:
  void set_has_param_s();
  void clear_has_param_s();
  void set_has_param_a();
  void clear_has_param_a();
  void set_has_param_d();
  void clear_has_param_d();
  void set_has_param_m();
  void clear_has_param_m();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 param_s_;
  ::google::protobuf::uint64 param_a_;
  ::google::protobuf::uint64 param_d_;
  ::google::protobuf::uint64 param_m_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGC_Client2GCEconPreviewDataBlockRequestImpl();
};
// -------------------------------------------------------------------

class CMsgGC_Client2GCEconPreviewDataBlockResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGC_Client2GCEconPreviewDataBlockResponse) */ {
 public:
  CMsgGC_Client2GCEconPreviewDataBlockResponse();
  virtual ~CMsgGC_Client2GCEconPreviewDataBlockResponse();

  CMsgGC_Client2GCEconPreviewDataBlockResponse(const CMsgGC_Client2GCEconPreviewDataBlockResponse& from);

  inline CMsgGC_Client2GCEconPreviewDataBlockResponse& operator=(const CMsgGC_Client2GCEconPreviewDataBlockResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGC_Client2GCEconPreviewDataBlockResponse(CMsgGC_Client2GCEconPreviewDataBlockResponse&& from) noexcept
    : CMsgGC_Client2GCEconPreviewDataBlockResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGC_Client2GCEconPreviewDataBlockResponse& operator=(CMsgGC_Client2GCEconPreviewDataBlockResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_Client2GCEconPreviewDataBlockResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGC_Client2GCEconPreviewDataBlockResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGC_Client2GCEconPreviewDataBlockResponse*>(
               &_CMsgGC_Client2GCEconPreviewDataBlockResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    139;

  void Swap(CMsgGC_Client2GCEconPreviewDataBlockResponse* other);
  friend void swap(CMsgGC_Client2GCEconPreviewDataBlockResponse& a, CMsgGC_Client2GCEconPreviewDataBlockResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGC_Client2GCEconPreviewDataBlockResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGC_Client2GCEconPreviewDataBlockResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGC_Client2GCEconPreviewDataBlockResponse& from);
  void MergeFrom(const CMsgGC_Client2GCEconPreviewDataBlockResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGC_Client2GCEconPreviewDataBlockResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CEconItemPreviewDataBlock iteminfo = 1;
  bool has_iteminfo() const;
  void clear_iteminfo();
  static const int kIteminfoFieldNumber = 1;
  const ::CEconItemPreviewDataBlock& iteminfo() const;
  ::CEconItemPreviewDataBlock* release_iteminfo();
  ::CEconItemPreviewDataBlock* mutable_iteminfo();
  void set_allocated_iteminfo(::CEconItemPreviewDataBlock* iteminfo);

  // @@protoc_insertion_point(class_scope:CMsgGC_Client2GCEconPreviewDataBlockResponse)
 private:
  void set_has_iteminfo();
  void clear_has_iteminfo();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::CEconItemPreviewDataBlock* iteminfo_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGC_Client2GCEconPreviewDataBlockResponseImpl();
};
// -------------------------------------------------------------------

class CSOTFLadderPlayerStats : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CSOTFLadderPlayerStats) */ {
 public:
  CSOTFLadderPlayerStats();
  virtual ~CSOTFLadderPlayerStats();

  CSOTFLadderPlayerStats(const CSOTFLadderPlayerStats& from);

  inline CSOTFLadderPlayerStats& operator=(const CSOTFLadderPlayerStats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSOTFLadderPlayerStats(CSOTFLadderPlayerStats&& from) noexcept
    : CSOTFLadderPlayerStats() {
    *this = ::std::move(from);
  }

  inline CSOTFLadderPlayerStats& operator=(CSOTFLadderPlayerStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFLadderPlayerStats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSOTFLadderPlayerStats* internal_default_instance() {
    return reinterpret_cast<const CSOTFLadderPlayerStats*>(
               &_CSOTFLadderPlayerStats_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    140;

  void Swap(CSOTFLadderPlayerStats* other);
  friend void swap(CSOTFLadderPlayerStats& a, CSOTFLadderPlayerStats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSOTFLadderPlayerStats* New() const PROTOBUF_FINAL { return New(NULL); }

  CSOTFLadderPlayerStats* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CSOTFLadderPlayerStats& from);
  void MergeFrom(const CSOTFLadderPlayerStats& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CSOTFLadderPlayerStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1 [(.key_field) = true];
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional int32 match_group = 2 [(.key_field) = true];
  bool has_match_group() const;
  void clear_match_group();
  static const int kMatchGroupFieldNumber = 2;
  ::google::protobuf::int32 match_group() const;
  void set_match_group(::google::protobuf::int32 value);

  // optional uint32 season_id = 3 [(.key_field) = true];
  bool has_season_id() const;
  void clear_season_id();
  static const int kSeasonIdFieldNumber = 3;
  ::google::protobuf::uint32 season_id() const;
  void set_season_id(::google::protobuf::uint32 value);

  // optional uint32 rank = 6;
  bool has_rank() const;
  void clear_rank();
  static const int kRankFieldNumber = 6;
  ::google::protobuf::uint32 rank() const;
  void set_rank(::google::protobuf::uint32 value);

  // optional uint32 highest_rank = 7;
  bool has_highest_rank() const;
  void clear_highest_rank();
  static const int kHighestRankFieldNumber = 7;
  ::google::protobuf::uint32 highest_rank() const;
  void set_highest_rank(::google::protobuf::uint32 value);

  // optional uint32 experience = 8;
  bool has_experience() const;
  void clear_experience();
  static const int kExperienceFieldNumber = 8;
  ::google::protobuf::uint32 experience() const;
  void set_experience(::google::protobuf::uint32 value);

  // optional uint32 games = 9;
  bool has_games() const;
  void clear_games();
  static const int kGamesFieldNumber = 9;
  ::google::protobuf::uint32 games() const;
  void set_games(::google::protobuf::uint32 value);

  // optional uint32 score = 10;
  bool has_score() const;
  void clear_score();
  static const int kScoreFieldNumber = 10;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // optional uint32 kills = 11;
  bool has_kills() const;
  void clear_kills();
  static const int kKillsFieldNumber = 11;
  ::google::protobuf::uint32 kills() const;
  void set_kills(::google::protobuf::uint32 value);

  // optional uint32 deaths = 12;
  bool has_deaths() const;
  void clear_deaths();
  static const int kDeathsFieldNumber = 12;
  ::google::protobuf::uint32 deaths() const;
  void set_deaths(::google::protobuf::uint32 value);

  // optional uint32 damage = 13;
  bool has_damage() const;
  void clear_damage();
  static const int kDamageFieldNumber = 13;
  ::google::protobuf::uint32 damage() const;
  void set_damage(::google::protobuf::uint32 value);

  // optional uint32 healing = 14;
  bool has_healing() const;
  void clear_healing();
  static const int kHealingFieldNumber = 14;
  ::google::protobuf::uint32 healing() const;
  void set_healing(::google::protobuf::uint32 value);

  // optional uint32 support = 15;
  bool has_support() const;
  void clear_support();
  static const int kSupportFieldNumber = 15;
  ::google::protobuf::uint32 support() const;
  void set_support(::google::protobuf::uint32 value);

  // optional uint32 score_bronze = 16;
  bool has_score_bronze() const;
  void clear_score_bronze();
  static const int kScoreBronzeFieldNumber = 16;
  ::google::protobuf::uint32 score_bronze() const;
  void set_score_bronze(::google::protobuf::uint32 value);

  // optional uint32 score_silver = 17;
  bool has_score_silver() const;
  void clear_score_silver();
  static const int kScoreSilverFieldNumber = 17;
  ::google::protobuf::uint32 score_silver() const;
  void set_score_silver(::google::protobuf::uint32 value);

  // optional uint32 score_gold = 18;
  bool has_score_gold() const;
  void clear_score_gold();
  static const int kScoreGoldFieldNumber = 18;
  ::google::protobuf::uint32 score_gold() const;
  void set_score_gold(::google::protobuf::uint32 value);

  // optional uint32 kills_bronze = 19;
  bool has_kills_bronze() const;
  void clear_kills_bronze();
  static const int kKillsBronzeFieldNumber = 19;
  ::google::protobuf::uint32 kills_bronze() const;
  void set_kills_bronze(::google::protobuf::uint32 value);

  // optional uint32 kills_silver = 20;
  bool has_kills_silver() const;
  void clear_kills_silver();
  static const int kKillsSilverFieldNumber = 20;
  ::google::protobuf::uint32 kills_silver() const;
  void set_kills_silver(::google::protobuf::uint32 value);

  // optional uint32 kills_gold = 21;
  bool has_kills_gold() const;
  void clear_kills_gold();
  static const int kKillsGoldFieldNumber = 21;
  ::google::protobuf::uint32 kills_gold() const;
  void set_kills_gold(::google::protobuf::uint32 value);

  // optional uint32 damage_bronze = 22;
  bool has_damage_bronze() const;
  void clear_damage_bronze();
  static const int kDamageBronzeFieldNumber = 22;
  ::google::protobuf::uint32 damage_bronze() const;
  void set_damage_bronze(::google::protobuf::uint32 value);

  // optional uint32 damage_silver = 23;
  bool has_damage_silver() const;
  void clear_damage_silver();
  static const int kDamageSilverFieldNumber = 23;
  ::google::protobuf::uint32 damage_silver() const;
  void set_damage_silver(::google::protobuf::uint32 value);

  // optional uint32 damage_gold = 24;
  bool has_damage_gold() const;
  void clear_damage_gold();
  static const int kDamageGoldFieldNumber = 24;
  ::google::protobuf::uint32 damage_gold() const;
  void set_damage_gold(::google::protobuf::uint32 value);

  // optional uint32 healing_bronze = 25;
  bool has_healing_bronze() const;
  void clear_healing_bronze();
  static const int kHealingBronzeFieldNumber = 25;
  ::google::protobuf::uint32 healing_bronze() const;
  void set_healing_bronze(::google::protobuf::uint32 value);

  // optional uint32 healing_silver = 26;
  bool has_healing_silver() const;
  void clear_healing_silver();
  static const int kHealingSilverFieldNumber = 26;
  ::google::protobuf::uint32 healing_silver() const;
  void set_healing_silver(::google::protobuf::uint32 value);

  // optional uint32 healing_gold = 27;
  bool has_healing_gold() const;
  void clear_healing_gold();
  static const int kHealingGoldFieldNumber = 27;
  ::google::protobuf::uint32 healing_gold() const;
  void set_healing_gold(::google::protobuf::uint32 value);

  // optional uint32 support_bronze = 28;
  bool has_support_bronze() const;
  void clear_support_bronze();
  static const int kSupportBronzeFieldNumber = 28;
  ::google::protobuf::uint32 support_bronze() const;
  void set_support_bronze(::google::protobuf::uint32 value);

  // optional uint32 support_silver = 29;
  bool has_support_silver() const;
  void clear_support_silver();
  static const int kSupportSilverFieldNumber = 29;
  ::google::protobuf::uint32 support_silver() const;
  void set_support_silver(::google::protobuf::uint32 value);

  // optional uint32 support_gold = 30;
  bool has_support_gold() const;
  void clear_support_gold();
  static const int kSupportGoldFieldNumber = 30;
  ::google::protobuf::uint32 support_gold() const;
  void set_support_gold(::google::protobuf::uint32 value);

  // optional uint32 last_ackd_experience = 32;
  bool has_last_ackd_experience() const;
  void clear_last_ackd_experience();
  static const int kLastAckdExperienceFieldNumber = 32;
  ::google::protobuf::uint32 last_ackd_experience() const;
  void set_last_ackd_experience(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSOTFLadderPlayerStats)
 private:
  void set_has_account_id();
  void clear_has_account_id();
  void set_has_match_group();
  void clear_has_match_group();
  void set_has_season_id();
  void clear_has_season_id();
  void set_has_rank();
  void clear_has_rank();
  void set_has_highest_rank();
  void clear_has_highest_rank();
  void set_has_experience();
  void clear_has_experience();
  void set_has_last_ackd_experience();
  void clear_has_last_ackd_experience();
  void set_has_games();
  void clear_has_games();
  void set_has_score();
  void clear_has_score();
  void set_has_kills();
  void clear_has_kills();
  void set_has_deaths();
  void clear_has_deaths();
  void set_has_damage();
  void clear_has_damage();
  void set_has_healing();
  void clear_has_healing();
  void set_has_support();
  void clear_has_support();
  void set_has_score_bronze();
  void clear_has_score_bronze();
  void set_has_score_silver();
  void clear_has_score_silver();
  void set_has_score_gold();
  void clear_has_score_gold();
  void set_has_kills_bronze();
  void clear_has_kills_bronze();
  void set_has_kills_silver();
  void clear_has_kills_silver();
  void set_has_kills_gold();
  void clear_has_kills_gold();
  void set_has_damage_bronze();
  void clear_has_damage_bronze();
  void set_has_damage_silver();
  void clear_has_damage_silver();
  void set_has_damage_gold();
  void clear_has_damage_gold();
  void set_has_healing_bronze();
  void clear_has_healing_bronze();
  void set_has_healing_silver();
  void clear_has_healing_silver();
  void set_has_healing_gold();
  void clear_has_healing_gold();
  void set_has_support_bronze();
  void clear_has_support_bronze();
  void set_has_support_silver();
  void clear_has_support_silver();
  void set_has_support_gold();
  void clear_has_support_gold();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::int32 match_group_;
  ::google::protobuf::uint32 season_id_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 highest_rank_;
  ::google::protobuf::uint32 experience_;
  ::google::protobuf::uint32 games_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 kills_;
  ::google::protobuf::uint32 deaths_;
  ::google::protobuf::uint32 damage_;
  ::google::protobuf::uint32 healing_;
  ::google::protobuf::uint32 support_;
  ::google::protobuf::uint32 score_bronze_;
  ::google::protobuf::uint32 score_silver_;
  ::google::protobuf::uint32 score_gold_;
  ::google::protobuf::uint32 kills_bronze_;
  ::google::protobuf::uint32 kills_silver_;
  ::google::protobuf::uint32 kills_gold_;
  ::google::protobuf::uint32 damage_bronze_;
  ::google::protobuf::uint32 damage_silver_;
  ::google::protobuf::uint32 damage_gold_;
  ::google::protobuf::uint32 healing_bronze_;
  ::google::protobuf::uint32 healing_silver_;
  ::google::protobuf::uint32 healing_gold_;
  ::google::protobuf::uint32 support_bronze_;
  ::google::protobuf::uint32 support_silver_;
  ::google::protobuf::uint32 support_gold_;
  ::google::protobuf::uint32 last_ackd_experience_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCSOTFLadderPlayerStatsImpl();
};
// -------------------------------------------------------------------

class CSOTFRatingData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CSOTFRatingData) */ {
 public:
  CSOTFRatingData();
  virtual ~CSOTFRatingData();

  CSOTFRatingData(const CSOTFRatingData& from);

  inline CSOTFRatingData& operator=(const CSOTFRatingData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSOTFRatingData(CSOTFRatingData&& from) noexcept
    : CSOTFRatingData() {
    *this = ::std::move(from);
  }

  inline CSOTFRatingData& operator=(CSOTFRatingData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFRatingData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSOTFRatingData* internal_default_instance() {
    return reinterpret_cast<const CSOTFRatingData*>(
               &_CSOTFRatingData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    141;

  void Swap(CSOTFRatingData* other);
  friend void swap(CSOTFRatingData& a, CSOTFRatingData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSOTFRatingData* New() const PROTOBUF_FINAL { return New(NULL); }

  CSOTFRatingData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CSOTFRatingData& from);
  void MergeFrom(const CSOTFRatingData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CSOTFRatingData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1 [(.key_field) = true];
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional int32 rating_type = 2 [(.key_field) = true];
  bool has_rating_type() const;
  void clear_rating_type();
  static const int kRatingTypeFieldNumber = 2;
  ::google::protobuf::int32 rating_type() const;
  void set_rating_type(::google::protobuf::int32 value);

  // optional uint32 rating_primary = 3;
  bool has_rating_primary() const;
  void clear_rating_primary();
  static const int kRatingPrimaryFieldNumber = 3;
  ::google::protobuf::uint32 rating_primary() const;
  void set_rating_primary(::google::protobuf::uint32 value);

  // optional uint32 rating_secondary = 4;
  bool has_rating_secondary() const;
  void clear_rating_secondary();
  static const int kRatingSecondaryFieldNumber = 4;
  ::google::protobuf::uint32 rating_secondary() const;
  void set_rating_secondary(::google::protobuf::uint32 value);

  // optional uint32 rating_tertiary = 5;
  bool has_rating_tertiary() const;
  void clear_rating_tertiary();
  static const int kRatingTertiaryFieldNumber = 5;
  ::google::protobuf::uint32 rating_tertiary() const;
  void set_rating_tertiary(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSOTFRatingData)
 private:
  void set_has_account_id();
  void clear_has_account_id();
  void set_has_rating_type();
  void clear_has_rating_type();
  void set_has_rating_primary();
  void clear_has_rating_primary();
  void set_has_rating_secondary();
  void clear_has_rating_secondary();
  void set_has_rating_tertiary();
  void clear_has_rating_tertiary();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::int32 rating_type_;
  ::google::protobuf::uint32 rating_primary_;
  ::google::protobuf::uint32 rating_secondary_;
  ::google::protobuf::uint32 rating_tertiary_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCSOTFRatingDataImpl();
};
// -------------------------------------------------------------------

class CMsgGC_TFVoteKickPlayerRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGC_TFVoteKickPlayerRequest) */ {
 public:
  CMsgGC_TFVoteKickPlayerRequest();
  virtual ~CMsgGC_TFVoteKickPlayerRequest();

  CMsgGC_TFVoteKickPlayerRequest(const CMsgGC_TFVoteKickPlayerRequest& from);

  inline CMsgGC_TFVoteKickPlayerRequest& operator=(const CMsgGC_TFVoteKickPlayerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGC_TFVoteKickPlayerRequest(CMsgGC_TFVoteKickPlayerRequest&& from) noexcept
    : CMsgGC_TFVoteKickPlayerRequest() {
    *this = ::std::move(from);
  }

  inline CMsgGC_TFVoteKickPlayerRequest& operator=(CMsgGC_TFVoteKickPlayerRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_TFVoteKickPlayerRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGC_TFVoteKickPlayerRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgGC_TFVoteKickPlayerRequest*>(
               &_CMsgGC_TFVoteKickPlayerRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    142;

  void Swap(CMsgGC_TFVoteKickPlayerRequest* other);
  friend void swap(CMsgGC_TFVoteKickPlayerRequest& a, CMsgGC_TFVoteKickPlayerRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGC_TFVoteKickPlayerRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGC_TFVoteKickPlayerRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGC_TFVoteKickPlayerRequest& from);
  void MergeFrom(const CMsgGC_TFVoteKickPlayerRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGC_TFVoteKickPlayerRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 target_id = 2;
  bool has_target_id() const;
  void clear_target_id();
  static const int kTargetIdFieldNumber = 2;
  ::google::protobuf::uint64 target_id() const;
  void set_target_id(::google::protobuf::uint64 value);

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGC_TFVoteKickPlayerRequest)
 private:
  void set_has_account_id();
  void clear_has_account_id();
  void set_has_target_id();
  void clear_has_target_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 target_id_;
  ::google::protobuf::uint32 account_id_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGC_TFVoteKickPlayerRequestImpl();
};
// -------------------------------------------------------------------

class CMsgGC_VoteKickPlayerRequestResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGC_VoteKickPlayerRequestResponse) */ {
 public:
  CMsgGC_VoteKickPlayerRequestResponse();
  virtual ~CMsgGC_VoteKickPlayerRequestResponse();

  CMsgGC_VoteKickPlayerRequestResponse(const CMsgGC_VoteKickPlayerRequestResponse& from);

  inline CMsgGC_VoteKickPlayerRequestResponse& operator=(const CMsgGC_VoteKickPlayerRequestResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGC_VoteKickPlayerRequestResponse(CMsgGC_VoteKickPlayerRequestResponse&& from) noexcept
    : CMsgGC_VoteKickPlayerRequestResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGC_VoteKickPlayerRequestResponse& operator=(CMsgGC_VoteKickPlayerRequestResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_VoteKickPlayerRequestResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGC_VoteKickPlayerRequestResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGC_VoteKickPlayerRequestResponse*>(
               &_CMsgGC_VoteKickPlayerRequestResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    143;

  void Swap(CMsgGC_VoteKickPlayerRequestResponse* other);
  friend void swap(CMsgGC_VoteKickPlayerRequestResponse& a, CMsgGC_VoteKickPlayerRequestResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGC_VoteKickPlayerRequestResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGC_VoteKickPlayerRequestResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGC_VoteKickPlayerRequestResponse& from);
  void MergeFrom(const CMsgGC_VoteKickPlayerRequestResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGC_VoteKickPlayerRequestResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool allowed = 1;
  bool has_allowed() const;
  void clear_allowed();
  static const int kAllowedFieldNumber = 1;
  bool allowed() const;
  void set_allowed(bool value);

  // @@protoc_insertion_point(class_scope:CMsgGC_VoteKickPlayerRequestResponse)
 private:
  void set_has_allowed();
  void clear_has_allowed();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool allowed_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGC_VoteKickPlayerRequestResponseImpl();
};
// -------------------------------------------------------------------

class CMsgGC_DailyCompetitiveStatsRollup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGC_DailyCompetitiveStatsRollup) */ {
 public:
  CMsgGC_DailyCompetitiveStatsRollup();
  virtual ~CMsgGC_DailyCompetitiveStatsRollup();

  CMsgGC_DailyCompetitiveStatsRollup(const CMsgGC_DailyCompetitiveStatsRollup& from);

  inline CMsgGC_DailyCompetitiveStatsRollup& operator=(const CMsgGC_DailyCompetitiveStatsRollup& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGC_DailyCompetitiveStatsRollup(CMsgGC_DailyCompetitiveStatsRollup&& from) noexcept
    : CMsgGC_DailyCompetitiveStatsRollup() {
    *this = ::std::move(from);
  }

  inline CMsgGC_DailyCompetitiveStatsRollup& operator=(CMsgGC_DailyCompetitiveStatsRollup&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_DailyCompetitiveStatsRollup& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGC_DailyCompetitiveStatsRollup* internal_default_instance() {
    return reinterpret_cast<const CMsgGC_DailyCompetitiveStatsRollup*>(
               &_CMsgGC_DailyCompetitiveStatsRollup_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    144;

  void Swap(CMsgGC_DailyCompetitiveStatsRollup* other);
  friend void swap(CMsgGC_DailyCompetitiveStatsRollup& a, CMsgGC_DailyCompetitiveStatsRollup& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGC_DailyCompetitiveStatsRollup* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGC_DailyCompetitiveStatsRollup* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGC_DailyCompetitiveStatsRollup& from);
  void MergeFrom(const CMsgGC_DailyCompetitiveStatsRollup& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGC_DailyCompetitiveStatsRollup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgGC_DailyCompetitiveStatsRollup)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGC_DailyCompetitiveStatsRollupImpl();
};
// -------------------------------------------------------------------

class CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry) */ {
 public:
  CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry();
  virtual ~CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry();

  CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry(const CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry& from);

  inline CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry& operator=(const CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry(CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry&& from) noexcept
    : CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry() {
    *this = ::std::move(from);
  }

  inline CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry& operator=(CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry* internal_default_instance() {
    return reinterpret_cast<const CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry*>(
               &_CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    145;

  void Swap(CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry* other);
  friend void swap(CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry& a, CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry& from);
  void MergeFrom(const CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rank = 1;
  bool has_rank() const;
  void clear_rank();
  static const int kRankFieldNumber = 1;
  ::google::protobuf::uint32 rank() const;
  void set_rank(::google::protobuf::uint32 value);

  // optional uint32 records = 2;
  bool has_records() const;
  void clear_records();
  static const int kRecordsFieldNumber = 2;
  ::google::protobuf::uint32 records() const;
  void set_records(::google::protobuf::uint32 value);

  // optional uint32 avg_score = 3;
  bool has_avg_score() const;
  void clear_avg_score();
  static const int kAvgScoreFieldNumber = 3;
  ::google::protobuf::uint32 avg_score() const;
  void set_avg_score(::google::protobuf::uint32 value);

  // optional uint32 stdev_score = 4;
  bool has_stdev_score() const;
  void clear_stdev_score();
  static const int kStdevScoreFieldNumber = 4;
  ::google::protobuf::uint32 stdev_score() const;
  void set_stdev_score(::google::protobuf::uint32 value);

  // optional uint32 avg_kills = 5;
  bool has_avg_kills() const;
  void clear_avg_kills();
  static const int kAvgKillsFieldNumber = 5;
  ::google::protobuf::uint32 avg_kills() const;
  void set_avg_kills(::google::protobuf::uint32 value);

  // optional uint32 stdev_kills = 6;
  bool has_stdev_kills() const;
  void clear_stdev_kills();
  static const int kStdevKillsFieldNumber = 6;
  ::google::protobuf::uint32 stdev_kills() const;
  void set_stdev_kills(::google::protobuf::uint32 value);

  // optional uint32 avg_damage = 7;
  bool has_avg_damage() const;
  void clear_avg_damage();
  static const int kAvgDamageFieldNumber = 7;
  ::google::protobuf::uint32 avg_damage() const;
  void set_avg_damage(::google::protobuf::uint32 value);

  // optional uint32 stdev_damage = 8;
  bool has_stdev_damage() const;
  void clear_stdev_damage();
  static const int kStdevDamageFieldNumber = 8;
  ::google::protobuf::uint32 stdev_damage() const;
  void set_stdev_damage(::google::protobuf::uint32 value);

  // optional uint32 avg_healing = 9;
  bool has_avg_healing() const;
  void clear_avg_healing();
  static const int kAvgHealingFieldNumber = 9;
  ::google::protobuf::uint32 avg_healing() const;
  void set_avg_healing(::google::protobuf::uint32 value);

  // optional uint32 stdev_healing = 10;
  bool has_stdev_healing() const;
  void clear_stdev_healing();
  static const int kStdevHealingFieldNumber = 10;
  ::google::protobuf::uint32 stdev_healing() const;
  void set_stdev_healing(::google::protobuf::uint32 value);

  // optional uint32 avg_support = 11;
  bool has_avg_support() const;
  void clear_avg_support();
  static const int kAvgSupportFieldNumber = 11;
  ::google::protobuf::uint32 avg_support() const;
  void set_avg_support(::google::protobuf::uint32 value);

  // optional uint32 stdev_support = 12;
  bool has_stdev_support() const;
  void clear_stdev_support();
  static const int kStdevSupportFieldNumber = 12;
  ::google::protobuf::uint32 stdev_support() const;
  void set_stdev_support(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry)
 private:
  void set_has_rank();
  void clear_has_rank();
  void set_has_records();
  void clear_has_records();
  void set_has_avg_score();
  void clear_has_avg_score();
  void set_has_stdev_score();
  void clear_has_stdev_score();
  void set_has_avg_kills();
  void clear_has_avg_kills();
  void set_has_stdev_kills();
  void clear_has_stdev_kills();
  void set_has_avg_damage();
  void clear_has_avg_damage();
  void set_has_stdev_damage();
  void clear_has_stdev_damage();
  void set_has_avg_healing();
  void clear_has_avg_healing();
  void set_has_stdev_healing();
  void clear_has_stdev_healing();
  void set_has_avg_support();
  void clear_has_avg_support();
  void set_has_stdev_support();
  void clear_has_stdev_support();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 records_;
  ::google::protobuf::uint32 avg_score_;
  ::google::protobuf::uint32 stdev_score_;
  ::google::protobuf::uint32 avg_kills_;
  ::google::protobuf::uint32 stdev_kills_;
  ::google::protobuf::uint32 avg_damage_;
  ::google::protobuf::uint32 stdev_damage_;
  ::google::protobuf::uint32 avg_healing_;
  ::google::protobuf::uint32 stdev_healing_;
  ::google::protobuf::uint32 avg_support_;
  ::google::protobuf::uint32 stdev_support_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntryImpl();
};
// -------------------------------------------------------------------

class CMsgGC_DailyCompetitiveStatsRollup_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGC_DailyCompetitiveStatsRollup_Response) */ {
 public:
  CMsgGC_DailyCompetitiveStatsRollup_Response();
  virtual ~CMsgGC_DailyCompetitiveStatsRollup_Response();

  CMsgGC_DailyCompetitiveStatsRollup_Response(const CMsgGC_DailyCompetitiveStatsRollup_Response& from);

  inline CMsgGC_DailyCompetitiveStatsRollup_Response& operator=(const CMsgGC_DailyCompetitiveStatsRollup_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGC_DailyCompetitiveStatsRollup_Response(CMsgGC_DailyCompetitiveStatsRollup_Response&& from) noexcept
    : CMsgGC_DailyCompetitiveStatsRollup_Response() {
    *this = ::std::move(from);
  }

  inline CMsgGC_DailyCompetitiveStatsRollup_Response& operator=(CMsgGC_DailyCompetitiveStatsRollup_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_DailyCompetitiveStatsRollup_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGC_DailyCompetitiveStatsRollup_Response* internal_default_instance() {
    return reinterpret_cast<const CMsgGC_DailyCompetitiveStatsRollup_Response*>(
               &_CMsgGC_DailyCompetitiveStatsRollup_Response_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    146;

  void Swap(CMsgGC_DailyCompetitiveStatsRollup_Response* other);
  friend void swap(CMsgGC_DailyCompetitiveStatsRollup_Response& a, CMsgGC_DailyCompetitiveStatsRollup_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGC_DailyCompetitiveStatsRollup_Response* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGC_DailyCompetitiveStatsRollup_Response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGC_DailyCompetitiveStatsRollup_Response& from);
  void MergeFrom(const CMsgGC_DailyCompetitiveStatsRollup_Response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGC_DailyCompetitiveStatsRollup_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry RankBucketEntry;

  // accessors -------------------------------------------------------

  // repeated .CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry rankdata = 1;
  int rankdata_size() const;
  void clear_rankdata();
  static const int kRankdataFieldNumber = 1;
  const ::CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry& rankdata(int index) const;
  ::CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry* mutable_rankdata(int index);
  ::CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry* add_rankdata();
  ::google::protobuf::RepeatedPtrField< ::CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry >*
      mutable_rankdata();
  const ::google::protobuf::RepeatedPtrField< ::CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry >&
      rankdata() const;

  // @@protoc_insertion_point(class_scope:CMsgGC_DailyCompetitiveStatsRollup_Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry > rankdata_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGC_DailyCompetitiveStatsRollup_ResponseImpl();
};
// -------------------------------------------------------------------

class CMsgGC_ReportPlayer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGC_ReportPlayer) */ {
 public:
  CMsgGC_ReportPlayer();
  virtual ~CMsgGC_ReportPlayer();

  CMsgGC_ReportPlayer(const CMsgGC_ReportPlayer& from);

  inline CMsgGC_ReportPlayer& operator=(const CMsgGC_ReportPlayer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGC_ReportPlayer(CMsgGC_ReportPlayer&& from) noexcept
    : CMsgGC_ReportPlayer() {
    *this = ::std::move(from);
  }

  inline CMsgGC_ReportPlayer& operator=(CMsgGC_ReportPlayer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_ReportPlayer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGC_ReportPlayer* internal_default_instance() {
    return reinterpret_cast<const CMsgGC_ReportPlayer*>(
               &_CMsgGC_ReportPlayer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    147;

  void Swap(CMsgGC_ReportPlayer* other);
  friend void swap(CMsgGC_ReportPlayer& a, CMsgGC_ReportPlayer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGC_ReportPlayer* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGC_ReportPlayer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGC_ReportPlayer& from);
  void MergeFrom(const CMsgGC_ReportPlayer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGC_ReportPlayer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgGC_ReportPlayer_EReason EReason;
  static const EReason kReason_INVALID =
    CMsgGC_ReportPlayer_EReason_kReason_INVALID;
  static const EReason kReason_CHEATING =
    CMsgGC_ReportPlayer_EReason_kReason_CHEATING;
  static const EReason kReason_IDLE =
    CMsgGC_ReportPlayer_EReason_kReason_IDLE;
  static const EReason kReason_HARASSMENT =
    CMsgGC_ReportPlayer_EReason_kReason_HARASSMENT;
  static const EReason kReason_GRIEFING =
    CMsgGC_ReportPlayer_EReason_kReason_GRIEFING;
  static const EReason kReason_COUNT =
    CMsgGC_ReportPlayer_EReason_kReason_COUNT;
  static inline bool EReason_IsValid(int value) {
    return CMsgGC_ReportPlayer_EReason_IsValid(value);
  }
  static const EReason EReason_MIN =
    CMsgGC_ReportPlayer_EReason_EReason_MIN;
  static const EReason EReason_MAX =
    CMsgGC_ReportPlayer_EReason_EReason_MAX;
  static const int EReason_ARRAYSIZE =
    CMsgGC_ReportPlayer_EReason_EReason_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EReason_descriptor() {
    return CMsgGC_ReportPlayer_EReason_descriptor();
  }
  static inline const ::std::string& EReason_Name(EReason value) {
    return CMsgGC_ReportPlayer_EReason_Name(value);
  }
  static inline bool EReason_Parse(const ::std::string& name,
      EReason* value) {
    return CMsgGC_ReportPlayer_EReason_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint32 account_id_target = 1;
  bool has_account_id_target() const;
  void clear_account_id_target();
  static const int kAccountIdTargetFieldNumber = 1;
  ::google::protobuf::uint32 account_id_target() const;
  void set_account_id_target(::google::protobuf::uint32 value);

  // optional .CMsgGC_ReportPlayer.EReason reason = 2 [default = kReason_INVALID];
  bool has_reason() const;
  void clear_reason();
  static const int kReasonFieldNumber = 2;
  ::CMsgGC_ReportPlayer_EReason reason() const;
  void set_reason(::CMsgGC_ReportPlayer_EReason value);

  // @@protoc_insertion_point(class_scope:CMsgGC_ReportPlayer)
 private:
  void set_has_account_id_target();
  void clear_has_account_id_target();
  void set_has_reason();
  void clear_has_reason();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_target_;
  int reason_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGC_ReportPlayerImpl();
};
// -------------------------------------------------------------------

class CSOTFMatchResultPlayerStats : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CSOTFMatchResultPlayerStats) */ {
 public:
  CSOTFMatchResultPlayerStats();
  virtual ~CSOTFMatchResultPlayerStats();

  CSOTFMatchResultPlayerStats(const CSOTFMatchResultPlayerStats& from);

  inline CSOTFMatchResultPlayerStats& operator=(const CSOTFMatchResultPlayerStats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CSOTFMatchResultPlayerStats(CSOTFMatchResultPlayerStats&& from) noexcept
    : CSOTFMatchResultPlayerStats() {
    *this = ::std::move(from);
  }

  inline CSOTFMatchResultPlayerStats& operator=(CSOTFMatchResultPlayerStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFMatchResultPlayerStats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CSOTFMatchResultPlayerStats* internal_default_instance() {
    return reinterpret_cast<const CSOTFMatchResultPlayerStats*>(
               &_CSOTFMatchResultPlayerStats_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    148;

  void Swap(CSOTFMatchResultPlayerStats* other);
  friend void swap(CSOTFMatchResultPlayerStats& a, CSOTFMatchResultPlayerStats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CSOTFMatchResultPlayerStats* New() const PROTOBUF_FINAL { return New(NULL); }

  CSOTFMatchResultPlayerStats* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CSOTFMatchResultPlayerStats& from);
  void MergeFrom(const CSOTFMatchResultPlayerStats& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CSOTFMatchResultPlayerStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1 [(.key_field) = true];
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 account_id = 2 [(.key_field) = true];
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional int32 match_group = 3 [(.key_field) = true];
  bool has_match_group() const;
  void clear_match_group();
  static const int kMatchGroupFieldNumber = 3;
  ::google::protobuf::int32 match_group() const;
  void set_match_group(::google::protobuf::int32 value);

  // optional uint32 endtime = 4;
  bool has_endtime() const;
  void clear_endtime();
  static const int kEndtimeFieldNumber = 4;
  ::google::protobuf::uint32 endtime() const;
  void set_endtime(::google::protobuf::uint32 value);

  // optional uint32 season_id = 5;
  bool has_season_id() const;
  void clear_season_id();
  static const int kSeasonIdFieldNumber = 5;
  ::google::protobuf::uint32 season_id() const;
  void set_season_id(::google::protobuf::uint32 value);

  // optional uint32 status = 6;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 6;
  ::google::protobuf::uint32 status() const;
  void set_status(::google::protobuf::uint32 value);

  // optional uint32 party_id = 7;
  bool has_party_id() const;
  void clear_party_id();
  static const int kPartyIdFieldNumber = 7;
  ::google::protobuf::uint32 party_id() const;
  void set_party_id(::google::protobuf::uint32 value);

  // optional uint32 team = 8;
  bool has_team() const;
  void clear_team();
  static const int kTeamFieldNumber = 8;
  ::google::protobuf::uint32 team() const;
  void set_team(::google::protobuf::uint32 value);

  // optional uint32 score = 9;
  bool has_score() const;
  void clear_score();
  static const int kScoreFieldNumber = 9;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // optional uint32 ping = 10;
  bool has_ping() const;
  void clear_ping();
  static const int kPingFieldNumber = 10;
  ::google::protobuf::uint32 ping() const;
  void set_ping(::google::protobuf::uint32 value);

  // optional uint32 flags = 11;
  bool has_flags() const;
  void clear_flags();
  static const int kFlagsFieldNumber = 11;
  ::google::protobuf::uint32 flags() const;
  void set_flags(::google::protobuf::uint32 value);

  // optional uint32 display_rating = 12;
  bool has_display_rating() const;
  void clear_display_rating();
  static const int kDisplayRatingFieldNumber = 12;
  ::google::protobuf::uint32 display_rating() const;
  void set_display_rating(::google::protobuf::uint32 value);

  // optional int32 display_rating_change = 13;
  bool has_display_rating_change() const;
  void clear_display_rating_change();
  static const int kDisplayRatingChangeFieldNumber = 13;
  ::google::protobuf::int32 display_rating_change() const;
  void set_display_rating_change(::google::protobuf::int32 value);

  // optional uint32 rank = 14;
  bool has_rank() const;
  void clear_rank();
  static const int kRankFieldNumber = 14;
  ::google::protobuf::uint32 rank() const;
  void set_rank(::google::protobuf::uint32 value);

  // optional uint32 classes_played = 15;
  bool has_classes_played() const;
  void clear_classes_played();
  static const int kClassesPlayedFieldNumber = 15;
  ::google::protobuf::uint32 classes_played() const;
  void set_classes_played(::google::protobuf::uint32 value);

  // optional uint32 kills = 16;
  bool has_kills() const;
  void clear_kills();
  static const int kKillsFieldNumber = 16;
  ::google::protobuf::uint32 kills() const;
  void set_kills(::google::protobuf::uint32 value);

  // optional uint32 deaths = 17;
  bool has_deaths() const;
  void clear_deaths();
  static const int kDeathsFieldNumber = 17;
  ::google::protobuf::uint32 deaths() const;
  void set_deaths(::google::protobuf::uint32 value);

  // optional uint32 damage = 18;
  bool has_damage() const;
  void clear_damage();
  static const int kDamageFieldNumber = 18;
  ::google::protobuf::uint32 damage() const;
  void set_damage(::google::protobuf::uint32 value);

  // optional uint32 healing = 19;
  bool has_healing() const;
  void clear_healing();
  static const int kHealingFieldNumber = 19;
  ::google::protobuf::uint32 healing() const;
  void set_healing(::google::protobuf::uint32 value);

  // optional uint32 support = 20;
  bool has_support() const;
  void clear_support();
  static const int kSupportFieldNumber = 20;
  ::google::protobuf::uint32 support() const;
  void set_support(::google::protobuf::uint32 value);

  // optional uint32 score_medal = 21;
  bool has_score_medal() const;
  void clear_score_medal();
  static const int kScoreMedalFieldNumber = 21;
  ::google::protobuf::uint32 score_medal() const;
  void set_score_medal(::google::protobuf::uint32 value);

  // optional uint32 kills_medal = 22;
  bool has_kills_medal() const;
  void clear_kills_medal();
  static const int kKillsMedalFieldNumber = 22;
  ::google::protobuf::uint32 kills_medal() const;
  void set_kills_medal(::google::protobuf::uint32 value);

  // optional uint32 damage_medal = 23;
  bool has_damage_medal() const;
  void clear_damage_medal();
  static const int kDamageMedalFieldNumber = 23;
  ::google::protobuf::uint32 damage_medal() const;
  void set_damage_medal(::google::protobuf::uint32 value);

  // optional uint32 healing_medal = 24;
  bool has_healing_medal() const;
  void clear_healing_medal();
  static const int kHealingMedalFieldNumber = 24;
  ::google::protobuf::uint32 healing_medal() const;
  void set_healing_medal(::google::protobuf::uint32 value);

  // optional uint32 support_medal = 25;
  bool has_support_medal() const;
  void clear_support_medal();
  static const int kSupportMedalFieldNumber = 25;
  ::google::protobuf::uint32 support_medal() const;
  void set_support_medal(::google::protobuf::uint32 value);

  // optional uint32 map_index = 26;
  bool has_map_index() const;
  void clear_map_index();
  static const int kMapIndexFieldNumber = 26;
  ::google::protobuf::uint32 map_index() const;
  void set_map_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSOTFMatchResultPlayerStats)
 private:
  void set_has_match_id();
  void clear_has_match_id();
  void set_has_account_id();
  void clear_has_account_id();
  void set_has_match_group();
  void clear_has_match_group();
  void set_has_endtime();
  void clear_has_endtime();
  void set_has_season_id();
  void clear_has_season_id();
  void set_has_status();
  void clear_has_status();
  void set_has_party_id();
  void clear_has_party_id();
  void set_has_team();
  void clear_has_team();
  void set_has_score();
  void clear_has_score();
  void set_has_ping();
  void clear_has_ping();
  void set_has_flags();
  void clear_has_flags();
  void set_has_display_rating();
  void clear_has_display_rating();
  void set_has_display_rating_change();
  void clear_has_display_rating_change();
  void set_has_rank();
  void clear_has_rank();
  void set_has_classes_played();
  void clear_has_classes_played();
  void set_has_kills();
  void clear_has_kills();
  void set_has_deaths();
  void clear_has_deaths();
  void set_has_damage();
  void clear_has_damage();
  void set_has_healing();
  void clear_has_healing();
  void set_has_support();
  void clear_has_support();
  void set_has_score_medal();
  void clear_has_score_medal();
  void set_has_kills_medal();
  void clear_has_kills_medal();
  void set_has_damage_medal();
  void clear_has_damage_medal();
  void set_has_healing_medal();
  void clear_has_healing_medal();
  void set_has_support_medal();
  void clear_has_support_medal();
  void set_has_map_index();
  void clear_has_map_index();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::int32 match_group_;
  ::google::protobuf::uint32 endtime_;
  ::google::protobuf::uint32 season_id_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 party_id_;
  ::google::protobuf::uint32 team_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 ping_;
  ::google::protobuf::uint32 flags_;
  ::google::protobuf::uint32 display_rating_;
  ::google::protobuf::int32 display_rating_change_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 classes_played_;
  ::google::protobuf::uint32 kills_;
  ::google::protobuf::uint32 deaths_;
  ::google::protobuf::uint32 damage_;
  ::google::protobuf::uint32 healing_;
  ::google::protobuf::uint32 support_;
  ::google::protobuf::uint32 score_medal_;
  ::google::protobuf::uint32 kills_medal_;
  ::google::protobuf::uint32 damage_medal_;
  ::google::protobuf::uint32 healing_medal_;
  ::google::protobuf::uint32 support_medal_;
  ::google::protobuf::uint32 map_index_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCSOTFMatchResultPlayerStatsImpl();
};
// -------------------------------------------------------------------

class CMsgGCRequestMatchMakerStats : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGCRequestMatchMakerStats) */ {
 public:
  CMsgGCRequestMatchMakerStats();
  virtual ~CMsgGCRequestMatchMakerStats();

  CMsgGCRequestMatchMakerStats(const CMsgGCRequestMatchMakerStats& from);

  inline CMsgGCRequestMatchMakerStats& operator=(const CMsgGCRequestMatchMakerStats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCRequestMatchMakerStats(CMsgGCRequestMatchMakerStats&& from) noexcept
    : CMsgGCRequestMatchMakerStats() {
    *this = ::std::move(from);
  }

  inline CMsgGCRequestMatchMakerStats& operator=(CMsgGCRequestMatchMakerStats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCRequestMatchMakerStats& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCRequestMatchMakerStats* internal_default_instance() {
    return reinterpret_cast<const CMsgGCRequestMatchMakerStats*>(
               &_CMsgGCRequestMatchMakerStats_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    149;

  void Swap(CMsgGCRequestMatchMakerStats* other);
  friend void swap(CMsgGCRequestMatchMakerStats& a, CMsgGCRequestMatchMakerStats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCRequestMatchMakerStats* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCRequestMatchMakerStats* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCRequestMatchMakerStats& from);
  void MergeFrom(const CMsgGCRequestMatchMakerStats& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCRequestMatchMakerStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgGCRequestMatchMakerStats)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGCRequestMatchMakerStatsImpl();
};
// -------------------------------------------------------------------

class CMsgGCDataCenterPopulation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGCDataCenterPopulation) */ {
 public:
  CMsgGCDataCenterPopulation();
  virtual ~CMsgGCDataCenterPopulation();

  CMsgGCDataCenterPopulation(const CMsgGCDataCenterPopulation& from);

  inline CMsgGCDataCenterPopulation& operator=(const CMsgGCDataCenterPopulation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCDataCenterPopulation(CMsgGCDataCenterPopulation&& from) noexcept
    : CMsgGCDataCenterPopulation() {
    *this = ::std::move(from);
  }

  inline CMsgGCDataCenterPopulation& operator=(CMsgGCDataCenterPopulation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCDataCenterPopulation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCDataCenterPopulation* internal_default_instance() {
    return reinterpret_cast<const CMsgGCDataCenterPopulation*>(
               &_CMsgGCDataCenterPopulation_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    150;

  void Swap(CMsgGCDataCenterPopulation* other);
  friend void swap(CMsgGCDataCenterPopulation& a, CMsgGCDataCenterPopulation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCDataCenterPopulation* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCDataCenterPopulation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCDataCenterPopulation& from);
  void MergeFrom(const CMsgGCDataCenterPopulation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCDataCenterPopulation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional float health_ratio = 2;
  bool has_health_ratio() const;
  void clear_health_ratio();
  static const int kHealthRatioFieldNumber = 2;
  float health_ratio() const;
  void set_health_ratio(float value);

  // @@protoc_insertion_point(class_scope:CMsgGCDataCenterPopulation)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_health_ratio();
  void clear_has_health_ratio();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  float health_ratio_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGCDataCenterPopulationImpl();
};
// -------------------------------------------------------------------

class CMsgGCMatchGroupDataCenterPopulation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGCMatchGroupDataCenterPopulation) */ {
 public:
  CMsgGCMatchGroupDataCenterPopulation();
  virtual ~CMsgGCMatchGroupDataCenterPopulation();

  CMsgGCMatchGroupDataCenterPopulation(const CMsgGCMatchGroupDataCenterPopulation& from);

  inline CMsgGCMatchGroupDataCenterPopulation& operator=(const CMsgGCMatchGroupDataCenterPopulation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCMatchGroupDataCenterPopulation(CMsgGCMatchGroupDataCenterPopulation&& from) noexcept
    : CMsgGCMatchGroupDataCenterPopulation() {
    *this = ::std::move(from);
  }

  inline CMsgGCMatchGroupDataCenterPopulation& operator=(CMsgGCMatchGroupDataCenterPopulation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCMatchGroupDataCenterPopulation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCMatchGroupDataCenterPopulation* internal_default_instance() {
    return reinterpret_cast<const CMsgGCMatchGroupDataCenterPopulation*>(
               &_CMsgGCMatchGroupDataCenterPopulation_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    151;

  void Swap(CMsgGCMatchGroupDataCenterPopulation* other);
  friend void swap(CMsgGCMatchGroupDataCenterPopulation& a, CMsgGCMatchGroupDataCenterPopulation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCMatchGroupDataCenterPopulation* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCMatchGroupDataCenterPopulation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCMatchGroupDataCenterPopulation& from);
  void MergeFrom(const CMsgGCMatchGroupDataCenterPopulation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCMatchGroupDataCenterPopulation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CMsgGCDataCenterPopulation data_center_population = 1;
  int data_center_population_size() const;
  void clear_data_center_population();
  static const int kDataCenterPopulationFieldNumber = 1;
  const ::CMsgGCDataCenterPopulation& data_center_population(int index) const;
  ::CMsgGCDataCenterPopulation* mutable_data_center_population(int index);
  ::CMsgGCDataCenterPopulation* add_data_center_population();
  ::google::protobuf::RepeatedPtrField< ::CMsgGCDataCenterPopulation >*
      mutable_data_center_population();
  const ::google::protobuf::RepeatedPtrField< ::CMsgGCDataCenterPopulation >&
      data_center_population() const;

  // @@protoc_insertion_point(class_scope:CMsgGCMatchGroupDataCenterPopulation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGCDataCenterPopulation > data_center_population_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGCMatchGroupDataCenterPopulationImpl();
};
// -------------------------------------------------------------------

class CMsgGCMatchMakerStatsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGCMatchMakerStatsResponse) */ {
 public:
  CMsgGCMatchMakerStatsResponse();
  virtual ~CMsgGCMatchMakerStatsResponse();

  CMsgGCMatchMakerStatsResponse(const CMsgGCMatchMakerStatsResponse& from);

  inline CMsgGCMatchMakerStatsResponse& operator=(const CMsgGCMatchMakerStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCMatchMakerStatsResponse(CMsgGCMatchMakerStatsResponse&& from) noexcept
    : CMsgGCMatchMakerStatsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCMatchMakerStatsResponse& operator=(CMsgGCMatchMakerStatsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCMatchMakerStatsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCMatchMakerStatsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCMatchMakerStatsResponse*>(
               &_CMsgGCMatchMakerStatsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    152;

  void Swap(CMsgGCMatchMakerStatsResponse* other);
  friend void swap(CMsgGCMatchMakerStatsResponse& a, CMsgGCMatchMakerStatsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCMatchMakerStatsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCMatchMakerStatsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCMatchMakerStatsResponse& from);
  void MergeFrom(const CMsgGCMatchMakerStatsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCMatchMakerStatsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 map_count = 1;
  int map_count_size() const;
  void clear_map_count();
  static const int kMapCountFieldNumber = 1;
  ::google::protobuf::uint32 map_count(int index) const;
  void set_map_count(int index, ::google::protobuf::uint32 value);
  void add_map_count(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      map_count() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_map_count();

  // repeated .CMsgGCMatchGroupDataCenterPopulation matchgroup_data_center_population = 2;
  int matchgroup_data_center_population_size() const;
  void clear_matchgroup_data_center_population();
  static const int kMatchgroupDataCenterPopulationFieldNumber = 2;
  const ::CMsgGCMatchGroupDataCenterPopulation& matchgroup_data_center_population(int index) const;
  ::CMsgGCMatchGroupDataCenterPopulation* mutable_matchgroup_data_center_population(int index);
  ::CMsgGCMatchGroupDataCenterPopulation* add_matchgroup_data_center_population();
  ::google::protobuf::RepeatedPtrField< ::CMsgGCMatchGroupDataCenterPopulation >*
      mutable_matchgroup_data_center_population();
  const ::google::protobuf::RepeatedPtrField< ::CMsgGCMatchGroupDataCenterPopulation >&
      matchgroup_data_center_population() const;

  // @@protoc_insertion_point(class_scope:CMsgGCMatchMakerStatsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > map_count_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGCMatchGroupDataCenterPopulation > matchgroup_data_center_population_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGCMatchMakerStatsResponseImpl();
};
// -------------------------------------------------------------------

class CMsgGCMatchHistoryLoad : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGCMatchHistoryLoad) */ {
 public:
  CMsgGCMatchHistoryLoad();
  virtual ~CMsgGCMatchHistoryLoad();

  CMsgGCMatchHistoryLoad(const CMsgGCMatchHistoryLoad& from);

  inline CMsgGCMatchHistoryLoad& operator=(const CMsgGCMatchHistoryLoad& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCMatchHistoryLoad(CMsgGCMatchHistoryLoad&& from) noexcept
    : CMsgGCMatchHistoryLoad() {
    *this = ::std::move(from);
  }

  inline CMsgGCMatchHistoryLoad& operator=(CMsgGCMatchHistoryLoad&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCMatchHistoryLoad& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCMatchHistoryLoad* internal_default_instance() {
    return reinterpret_cast<const CMsgGCMatchHistoryLoad*>(
               &_CMsgGCMatchHistoryLoad_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    153;

  void Swap(CMsgGCMatchHistoryLoad* other);
  friend void swap(CMsgGCMatchHistoryLoad& a, CMsgGCMatchHistoryLoad& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCMatchHistoryLoad* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCMatchHistoryLoad* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCMatchHistoryLoad& from);
  void MergeFrom(const CMsgGCMatchHistoryLoad& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCMatchHistoryLoad* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgGCMatchHistoryLoad)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGCMatchHistoryLoadImpl();
};
// -------------------------------------------------------------------

class CMsgGCDataCenterPing_Update_PingEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGCDataCenterPing_Update.PingEntry) */ {
 public:
  CMsgGCDataCenterPing_Update_PingEntry();
  virtual ~CMsgGCDataCenterPing_Update_PingEntry();

  CMsgGCDataCenterPing_Update_PingEntry(const CMsgGCDataCenterPing_Update_PingEntry& from);

  inline CMsgGCDataCenterPing_Update_PingEntry& operator=(const CMsgGCDataCenterPing_Update_PingEntry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCDataCenterPing_Update_PingEntry(CMsgGCDataCenterPing_Update_PingEntry&& from) noexcept
    : CMsgGCDataCenterPing_Update_PingEntry() {
    *this = ::std::move(from);
  }

  inline CMsgGCDataCenterPing_Update_PingEntry& operator=(CMsgGCDataCenterPing_Update_PingEntry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCDataCenterPing_Update_PingEntry& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCDataCenterPing_Update_PingEntry* internal_default_instance() {
    return reinterpret_cast<const CMsgGCDataCenterPing_Update_PingEntry*>(
               &_CMsgGCDataCenterPing_Update_PingEntry_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    154;

  void Swap(CMsgGCDataCenterPing_Update_PingEntry* other);
  friend void swap(CMsgGCDataCenterPing_Update_PingEntry& a, CMsgGCDataCenterPing_Update_PingEntry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCDataCenterPing_Update_PingEntry* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCDataCenterPing_Update_PingEntry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCDataCenterPing_Update_PingEntry& from);
  void MergeFrom(const CMsgGCDataCenterPing_Update_PingEntry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCDataCenterPing_Update_PingEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 ping = 2;
  bool has_ping() const;
  void clear_ping();
  static const int kPingFieldNumber = 2;
  ::google::protobuf::uint32 ping() const;
  void set_ping(::google::protobuf::uint32 value);

  // optional .CMsgGCDataCenterPing_Update.Status ping_status = 3 [default = Normal];
  bool has_ping_status() const;
  void clear_ping_status();
  static const int kPingStatusFieldNumber = 3;
  ::CMsgGCDataCenterPing_Update_Status ping_status() const;
  void set_ping_status(::CMsgGCDataCenterPing_Update_Status value);

  // @@protoc_insertion_point(class_scope:CMsgGCDataCenterPing_Update.PingEntry)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_ping();
  void clear_has_ping();
  void set_has_ping_status();
  void clear_has_ping_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 ping_;
  int ping_status_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGCDataCenterPing_Update_PingEntryImpl();
};
// -------------------------------------------------------------------

class CMsgGCDataCenterPing_Update : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGCDataCenterPing_Update) */ {
 public:
  CMsgGCDataCenterPing_Update();
  virtual ~CMsgGCDataCenterPing_Update();

  CMsgGCDataCenterPing_Update(const CMsgGCDataCenterPing_Update& from);

  inline CMsgGCDataCenterPing_Update& operator=(const CMsgGCDataCenterPing_Update& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCDataCenterPing_Update(CMsgGCDataCenterPing_Update&& from) noexcept
    : CMsgGCDataCenterPing_Update() {
    *this = ::std::move(from);
  }

  inline CMsgGCDataCenterPing_Update& operator=(CMsgGCDataCenterPing_Update&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCDataCenterPing_Update& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCDataCenterPing_Update* internal_default_instance() {
    return reinterpret_cast<const CMsgGCDataCenterPing_Update*>(
               &_CMsgGCDataCenterPing_Update_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    155;

  void Swap(CMsgGCDataCenterPing_Update* other);
  friend void swap(CMsgGCDataCenterPing_Update& a, CMsgGCDataCenterPing_Update& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCDataCenterPing_Update* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCDataCenterPing_Update* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCDataCenterPing_Update& from);
  void MergeFrom(const CMsgGCDataCenterPing_Update& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCDataCenterPing_Update* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgGCDataCenterPing_Update_PingEntry PingEntry;

  typedef CMsgGCDataCenterPing_Update_Status Status;
  static const Status Invalid =
    CMsgGCDataCenterPing_Update_Status_Invalid;
  static const Status Normal =
    CMsgGCDataCenterPing_Update_Status_Normal;
  static const Status Unreachable =
    CMsgGCDataCenterPing_Update_Status_Unreachable;
  static const Status FallbackToDCPing =
    CMsgGCDataCenterPing_Update_Status_FallbackToDCPing;
  static inline bool Status_IsValid(int value) {
    return CMsgGCDataCenterPing_Update_Status_IsValid(value);
  }
  static const Status Status_MIN =
    CMsgGCDataCenterPing_Update_Status_Status_MIN;
  static const Status Status_MAX =
    CMsgGCDataCenterPing_Update_Status_Status_MAX;
  static const int Status_ARRAYSIZE =
    CMsgGCDataCenterPing_Update_Status_Status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Status_descriptor() {
    return CMsgGCDataCenterPing_Update_Status_descriptor();
  }
  static inline const ::std::string& Status_Name(Status value) {
    return CMsgGCDataCenterPing_Update_Status_Name(value);
  }
  static inline bool Status_Parse(const ::std::string& name,
      Status* value) {
    return CMsgGCDataCenterPing_Update_Status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .CMsgGCDataCenterPing_Update.PingEntry pingdata = 1;
  int pingdata_size() const;
  void clear_pingdata();
  static const int kPingdataFieldNumber = 1;
  const ::CMsgGCDataCenterPing_Update_PingEntry& pingdata(int index) const;
  ::CMsgGCDataCenterPing_Update_PingEntry* mutable_pingdata(int index);
  ::CMsgGCDataCenterPing_Update_PingEntry* add_pingdata();
  ::google::protobuf::RepeatedPtrField< ::CMsgGCDataCenterPing_Update_PingEntry >*
      mutable_pingdata();
  const ::google::protobuf::RepeatedPtrField< ::CMsgGCDataCenterPing_Update_PingEntry >&
      pingdata() const;

  // @@protoc_insertion_point(class_scope:CMsgGCDataCenterPing_Update)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGCDataCenterPing_Update_PingEntry > pingdata_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGCDataCenterPing_UpdateImpl();
};
// -------------------------------------------------------------------

class CMsgGC_KickPlayerFromLobby : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGC_KickPlayerFromLobby) */ {
 public:
  CMsgGC_KickPlayerFromLobby();
  virtual ~CMsgGC_KickPlayerFromLobby();

  CMsgGC_KickPlayerFromLobby(const CMsgGC_KickPlayerFromLobby& from);

  inline CMsgGC_KickPlayerFromLobby& operator=(const CMsgGC_KickPlayerFromLobby& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGC_KickPlayerFromLobby(CMsgGC_KickPlayerFromLobby&& from) noexcept
    : CMsgGC_KickPlayerFromLobby() {
    *this = ::std::move(from);
  }

  inline CMsgGC_KickPlayerFromLobby& operator=(CMsgGC_KickPlayerFromLobby&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_KickPlayerFromLobby& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGC_KickPlayerFromLobby* internal_default_instance() {
    return reinterpret_cast<const CMsgGC_KickPlayerFromLobby*>(
               &_CMsgGC_KickPlayerFromLobby_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    156;

  void Swap(CMsgGC_KickPlayerFromLobby* other);
  friend void swap(CMsgGC_KickPlayerFromLobby& a, CMsgGC_KickPlayerFromLobby& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGC_KickPlayerFromLobby* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGC_KickPlayerFromLobby* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGC_KickPlayerFromLobby& from);
  void MergeFrom(const CMsgGC_KickPlayerFromLobby& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGC_KickPlayerFromLobby* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 targetID = 1;
  bool has_targetid() const;
  void clear_targetid();
  static const int kTargetIDFieldNumber = 1;
  ::google::protobuf::uint64 targetid() const;
  void set_targetid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgGC_KickPlayerFromLobby)
 private:
  void set_has_targetid();
  void clear_has_targetid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 targetid_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGC_KickPlayerFromLobbyImpl();
};
// -------------------------------------------------------------------

class CMsgGCSurveyRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGCSurveyRequest) */ {
 public:
  CMsgGCSurveyRequest();
  virtual ~CMsgGCSurveyRequest();

  CMsgGCSurveyRequest(const CMsgGCSurveyRequest& from);

  inline CMsgGCSurveyRequest& operator=(const CMsgGCSurveyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCSurveyRequest(CMsgGCSurveyRequest&& from) noexcept
    : CMsgGCSurveyRequest() {
    *this = ::std::move(from);
  }

  inline CMsgGCSurveyRequest& operator=(CMsgGCSurveyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCSurveyRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCSurveyRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgGCSurveyRequest*>(
               &_CMsgGCSurveyRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    157;

  void Swap(CMsgGCSurveyRequest* other);
  friend void swap(CMsgGCSurveyRequest& a, CMsgGCSurveyRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCSurveyRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCSurveyRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCSurveyRequest& from);
  void MergeFrom(const CMsgGCSurveyRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCSurveyRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 2;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 2;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional .SurveyQuestionType question_type = 1 [default = QUESTION_MATCH_QUALITY];
  bool has_question_type() const;
  void clear_question_type();
  static const int kQuestionTypeFieldNumber = 1;
  ::SurveyQuestionType question_type() const;
  void set_question_type(::SurveyQuestionType value);

  // @@protoc_insertion_point(class_scope:CMsgGCSurveyRequest)
 private:
  void set_has_question_type();
  void clear_has_question_type();
  void set_has_match_id();
  void clear_has_match_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  int question_type_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGCSurveyRequestImpl();
};
// -------------------------------------------------------------------

class CMsgGCSurveyResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGCSurveyResponse) */ {
 public:
  CMsgGCSurveyResponse();
  virtual ~CMsgGCSurveyResponse();

  CMsgGCSurveyResponse(const CMsgGCSurveyResponse& from);

  inline CMsgGCSurveyResponse& operator=(const CMsgGCSurveyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCSurveyResponse(CMsgGCSurveyResponse&& from) noexcept
    : CMsgGCSurveyResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCSurveyResponse& operator=(CMsgGCSurveyResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCSurveyResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCSurveyResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCSurveyResponse*>(
               &_CMsgGCSurveyResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    158;

  void Swap(CMsgGCSurveyResponse* other);
  friend void swap(CMsgGCSurveyResponse& a, CMsgGCSurveyResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCSurveyResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCSurveyResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCSurveyResponse& from);
  void MergeFrom(const CMsgGCSurveyResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCSurveyResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 2;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 2;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional .SurveyQuestionType question_type = 1 [default = QUESTION_MATCH_QUALITY];
  bool has_question_type() const;
  void clear_question_type();
  static const int kQuestionTypeFieldNumber = 1;
  ::SurveyQuestionType question_type() const;
  void set_question_type(::SurveyQuestionType value);

  // optional int32 response = 3;
  bool has_response() const;
  void clear_response();
  static const int kResponseFieldNumber = 3;
  ::google::protobuf::int32 response() const;
  void set_response(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCSurveyResponse)
 private:
  void set_has_question_type();
  void clear_has_question_type();
  void set_has_match_id();
  void clear_has_match_id();
  void set_has_response();
  void clear_has_response();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  int question_type_;
  ::google::protobuf::int32 response_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGCSurveyResponseImpl();
};
// -------------------------------------------------------------------

class CMsgGCNewMatchForLobbyRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGCNewMatchForLobbyRequest) */ {
 public:
  CMsgGCNewMatchForLobbyRequest();
  virtual ~CMsgGCNewMatchForLobbyRequest();

  CMsgGCNewMatchForLobbyRequest(const CMsgGCNewMatchForLobbyRequest& from);

  inline CMsgGCNewMatchForLobbyRequest& operator=(const CMsgGCNewMatchForLobbyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCNewMatchForLobbyRequest(CMsgGCNewMatchForLobbyRequest&& from) noexcept
    : CMsgGCNewMatchForLobbyRequest() {
    *this = ::std::move(from);
  }

  inline CMsgGCNewMatchForLobbyRequest& operator=(CMsgGCNewMatchForLobbyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCNewMatchForLobbyRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCNewMatchForLobbyRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgGCNewMatchForLobbyRequest*>(
               &_CMsgGCNewMatchForLobbyRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    159;

  void Swap(CMsgGCNewMatchForLobbyRequest* other);
  friend void swap(CMsgGCNewMatchForLobbyRequest& a, CMsgGCNewMatchForLobbyRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCNewMatchForLobbyRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCNewMatchForLobbyRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCNewMatchForLobbyRequest& from);
  void MergeFrom(const CMsgGCNewMatchForLobbyRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCNewMatchForLobbyRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 current_match_id = 1;
  bool has_current_match_id() const;
  void clear_current_match_id();
  static const int kCurrentMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 current_match_id() const;
  void set_current_match_id(::google::protobuf::uint64 value);

  // optional uint64 lobby_id = 3;
  bool has_lobby_id() const;
  void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 3;
  ::google::protobuf::uint64 lobby_id() const;
  void set_lobby_id(::google::protobuf::uint64 value);

  // optional uint32 next_map_id = 2;
  bool has_next_map_id() const;
  void clear_next_map_id();
  static const int kNextMapIdFieldNumber = 2;
  ::google::protobuf::uint32 next_map_id() const;
  void set_next_map_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCNewMatchForLobbyRequest)
 private:
  void set_has_current_match_id();
  void clear_has_current_match_id();
  void set_has_next_map_id();
  void clear_has_next_map_id();
  void set_has_lobby_id();
  void clear_has_lobby_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 current_match_id_;
  ::google::protobuf::uint64 lobby_id_;
  ::google::protobuf::uint32 next_map_id_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGCNewMatchForLobbyRequestImpl();
};
// -------------------------------------------------------------------

class CMsgGCNewMatchForLobbyResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGCNewMatchForLobbyResponse) */ {
 public:
  CMsgGCNewMatchForLobbyResponse();
  virtual ~CMsgGCNewMatchForLobbyResponse();

  CMsgGCNewMatchForLobbyResponse(const CMsgGCNewMatchForLobbyResponse& from);

  inline CMsgGCNewMatchForLobbyResponse& operator=(const CMsgGCNewMatchForLobbyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCNewMatchForLobbyResponse(CMsgGCNewMatchForLobbyResponse&& from) noexcept
    : CMsgGCNewMatchForLobbyResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCNewMatchForLobbyResponse& operator=(CMsgGCNewMatchForLobbyResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCNewMatchForLobbyResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCNewMatchForLobbyResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCNewMatchForLobbyResponse*>(
               &_CMsgGCNewMatchForLobbyResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    160;

  void Swap(CMsgGCNewMatchForLobbyResponse* other);
  friend void swap(CMsgGCNewMatchForLobbyResponse& a, CMsgGCNewMatchForLobbyResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCNewMatchForLobbyResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCNewMatchForLobbyResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCNewMatchForLobbyResponse& from);
  void MergeFrom(const CMsgGCNewMatchForLobbyResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCNewMatchForLobbyResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool success = 1;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:CMsgGCNewMatchForLobbyResponse)
 private:
  void set_has_success();
  void clear_has_success();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool success_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGCNewMatchForLobbyResponseImpl();
};
// -------------------------------------------------------------------

class CMsgGCChangeMatchPlayerTeamsRequest_Member : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGCChangeMatchPlayerTeamsRequest.Member) */ {
 public:
  CMsgGCChangeMatchPlayerTeamsRequest_Member();
  virtual ~CMsgGCChangeMatchPlayerTeamsRequest_Member();

  CMsgGCChangeMatchPlayerTeamsRequest_Member(const CMsgGCChangeMatchPlayerTeamsRequest_Member& from);

  inline CMsgGCChangeMatchPlayerTeamsRequest_Member& operator=(const CMsgGCChangeMatchPlayerTeamsRequest_Member& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCChangeMatchPlayerTeamsRequest_Member(CMsgGCChangeMatchPlayerTeamsRequest_Member&& from) noexcept
    : CMsgGCChangeMatchPlayerTeamsRequest_Member() {
    *this = ::std::move(from);
  }

  inline CMsgGCChangeMatchPlayerTeamsRequest_Member& operator=(CMsgGCChangeMatchPlayerTeamsRequest_Member&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCChangeMatchPlayerTeamsRequest_Member& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCChangeMatchPlayerTeamsRequest_Member* internal_default_instance() {
    return reinterpret_cast<const CMsgGCChangeMatchPlayerTeamsRequest_Member*>(
               &_CMsgGCChangeMatchPlayerTeamsRequest_Member_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    161;

  void Swap(CMsgGCChangeMatchPlayerTeamsRequest_Member* other);
  friend void swap(CMsgGCChangeMatchPlayerTeamsRequest_Member& a, CMsgGCChangeMatchPlayerTeamsRequest_Member& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCChangeMatchPlayerTeamsRequest_Member* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCChangeMatchPlayerTeamsRequest_Member* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCChangeMatchPlayerTeamsRequest_Member& from);
  void MergeFrom(const CMsgGCChangeMatchPlayerTeamsRequest_Member& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCChangeMatchPlayerTeamsRequest_Member* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 member_id = 1;
  bool has_member_id() const;
  void clear_member_id();
  static const int kMemberIdFieldNumber = 1;
  ::google::protobuf::uint64 member_id() const;
  void set_member_id(::google::protobuf::uint64 value);

  // optional .TF_GC_TEAM new_team = 2 [default = TF_GC_TEAM_NOTEAM];
  bool has_new_team() const;
  void clear_new_team();
  static const int kNewTeamFieldNumber = 2;
  ::TF_GC_TEAM new_team() const;
  void set_new_team(::TF_GC_TEAM value);

  // @@protoc_insertion_point(class_scope:CMsgGCChangeMatchPlayerTeamsRequest.Member)
 private:
  void set_has_member_id();
  void clear_has_member_id();
  void set_has_new_team();
  void clear_has_new_team();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 member_id_;
  int new_team_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGCChangeMatchPlayerTeamsRequest_MemberImpl();
};
// -------------------------------------------------------------------

class CMsgGCChangeMatchPlayerTeamsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGCChangeMatchPlayerTeamsRequest) */ {
 public:
  CMsgGCChangeMatchPlayerTeamsRequest();
  virtual ~CMsgGCChangeMatchPlayerTeamsRequest();

  CMsgGCChangeMatchPlayerTeamsRequest(const CMsgGCChangeMatchPlayerTeamsRequest& from);

  inline CMsgGCChangeMatchPlayerTeamsRequest& operator=(const CMsgGCChangeMatchPlayerTeamsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCChangeMatchPlayerTeamsRequest(CMsgGCChangeMatchPlayerTeamsRequest&& from) noexcept
    : CMsgGCChangeMatchPlayerTeamsRequest() {
    *this = ::std::move(from);
  }

  inline CMsgGCChangeMatchPlayerTeamsRequest& operator=(CMsgGCChangeMatchPlayerTeamsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCChangeMatchPlayerTeamsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCChangeMatchPlayerTeamsRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgGCChangeMatchPlayerTeamsRequest*>(
               &_CMsgGCChangeMatchPlayerTeamsRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    162;

  void Swap(CMsgGCChangeMatchPlayerTeamsRequest* other);
  friend void swap(CMsgGCChangeMatchPlayerTeamsRequest& a, CMsgGCChangeMatchPlayerTeamsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCChangeMatchPlayerTeamsRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCChangeMatchPlayerTeamsRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCChangeMatchPlayerTeamsRequest& from);
  void MergeFrom(const CMsgGCChangeMatchPlayerTeamsRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCChangeMatchPlayerTeamsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgGCChangeMatchPlayerTeamsRequest_Member Member;

  // accessors -------------------------------------------------------

  // repeated .CMsgGCChangeMatchPlayerTeamsRequest.Member member = 3;
  int member_size() const;
  void clear_member();
  static const int kMemberFieldNumber = 3;
  const ::CMsgGCChangeMatchPlayerTeamsRequest_Member& member(int index) const;
  ::CMsgGCChangeMatchPlayerTeamsRequest_Member* mutable_member(int index);
  ::CMsgGCChangeMatchPlayerTeamsRequest_Member* add_member();
  ::google::protobuf::RepeatedPtrField< ::CMsgGCChangeMatchPlayerTeamsRequest_Member >*
      mutable_member();
  const ::google::protobuf::RepeatedPtrField< ::CMsgGCChangeMatchPlayerTeamsRequest_Member >&
      member() const;

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional uint64 lobby_id = 2;
  bool has_lobby_id() const;
  void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 2;
  ::google::protobuf::uint64 lobby_id() const;
  void set_lobby_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgGCChangeMatchPlayerTeamsRequest)
 private:
  void set_has_match_id();
  void clear_has_match_id();
  void set_has_lobby_id();
  void clear_has_lobby_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGCChangeMatchPlayerTeamsRequest_Member > member_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint64 lobby_id_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGCChangeMatchPlayerTeamsRequestImpl();
};
// -------------------------------------------------------------------

class CMsgGCChangeMatchPlayerTeamsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGCChangeMatchPlayerTeamsResponse) */ {
 public:
  CMsgGCChangeMatchPlayerTeamsResponse();
  virtual ~CMsgGCChangeMatchPlayerTeamsResponse();

  CMsgGCChangeMatchPlayerTeamsResponse(const CMsgGCChangeMatchPlayerTeamsResponse& from);

  inline CMsgGCChangeMatchPlayerTeamsResponse& operator=(const CMsgGCChangeMatchPlayerTeamsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCChangeMatchPlayerTeamsResponse(CMsgGCChangeMatchPlayerTeamsResponse&& from) noexcept
    : CMsgGCChangeMatchPlayerTeamsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCChangeMatchPlayerTeamsResponse& operator=(CMsgGCChangeMatchPlayerTeamsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCChangeMatchPlayerTeamsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCChangeMatchPlayerTeamsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCChangeMatchPlayerTeamsResponse*>(
               &_CMsgGCChangeMatchPlayerTeamsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    163;

  void Swap(CMsgGCChangeMatchPlayerTeamsResponse* other);
  friend void swap(CMsgGCChangeMatchPlayerTeamsResponse& a, CMsgGCChangeMatchPlayerTeamsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCChangeMatchPlayerTeamsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCChangeMatchPlayerTeamsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCChangeMatchPlayerTeamsResponse& from);
  void MergeFrom(const CMsgGCChangeMatchPlayerTeamsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCChangeMatchPlayerTeamsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool success = 1;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:CMsgGCChangeMatchPlayerTeamsResponse)
 private:
  void set_has_success();
  void clear_has_success();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool success_;
  friend struct ::protobuf_tf_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_tf_5fgcmessages_2eproto::InitDefaultsCMsgGCChangeMatchPlayerTeamsResponseImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CMsgTFGoldenWrenchBroadcast

// optional int32 wrench_number = 1;
inline bool CMsgTFGoldenWrenchBroadcast::has_wrench_number() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFGoldenWrenchBroadcast::set_has_wrench_number() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFGoldenWrenchBroadcast::clear_has_wrench_number() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFGoldenWrenchBroadcast::clear_wrench_number() {
  wrench_number_ = 0;
  clear_has_wrench_number();
}
inline ::google::protobuf::int32 CMsgTFGoldenWrenchBroadcast::wrench_number() const {
  // @@protoc_insertion_point(field_get:CMsgTFGoldenWrenchBroadcast.wrench_number)
  return wrench_number_;
}
inline void CMsgTFGoldenWrenchBroadcast::set_wrench_number(::google::protobuf::int32 value) {
  set_has_wrench_number();
  wrench_number_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFGoldenWrenchBroadcast.wrench_number)
}

// optional bool deleted = 2;
inline bool CMsgTFGoldenWrenchBroadcast::has_deleted() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTFGoldenWrenchBroadcast::set_has_deleted() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgTFGoldenWrenchBroadcast::clear_has_deleted() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgTFGoldenWrenchBroadcast::clear_deleted() {
  deleted_ = false;
  clear_has_deleted();
}
inline bool CMsgTFGoldenWrenchBroadcast::deleted() const {
  // @@protoc_insertion_point(field_get:CMsgTFGoldenWrenchBroadcast.deleted)
  return deleted_;
}
inline void CMsgTFGoldenWrenchBroadcast::set_deleted(bool value) {
  set_has_deleted();
  deleted_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFGoldenWrenchBroadcast.deleted)
}

// optional string user_name = 3;
inline bool CMsgTFGoldenWrenchBroadcast::has_user_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFGoldenWrenchBroadcast::set_has_user_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFGoldenWrenchBroadcast::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFGoldenWrenchBroadcast::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_name();
}
inline const ::std::string& CMsgTFGoldenWrenchBroadcast::user_name() const {
  // @@protoc_insertion_point(field_get:CMsgTFGoldenWrenchBroadcast.user_name)
  return user_name_.GetNoArena();
}
inline void CMsgTFGoldenWrenchBroadcast::set_user_name(const ::std::string& value) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgTFGoldenWrenchBroadcast.user_name)
}
#if LANG_CXX11
inline void CMsgTFGoldenWrenchBroadcast::set_user_name(::std::string&& value) {
  set_has_user_name();
  user_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgTFGoldenWrenchBroadcast.user_name)
}
#endif
inline void CMsgTFGoldenWrenchBroadcast::set_user_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgTFGoldenWrenchBroadcast.user_name)
}
inline void CMsgTFGoldenWrenchBroadcast::set_user_name(const char* value, size_t size) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgTFGoldenWrenchBroadcast.user_name)
}
inline ::std::string* CMsgTFGoldenWrenchBroadcast::mutable_user_name() {
  set_has_user_name();
  // @@protoc_insertion_point(field_mutable:CMsgTFGoldenWrenchBroadcast.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgTFGoldenWrenchBroadcast::release_user_name() {
  // @@protoc_insertion_point(field_release:CMsgTFGoldenWrenchBroadcast.user_name)
  clear_has_user_name();
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgTFGoldenWrenchBroadcast::set_allocated_user_name(::std::string* user_name) {
  if (user_name != NULL) {
    set_has_user_name();
  } else {
    clear_has_user_name();
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:CMsgTFGoldenWrenchBroadcast.user_name)
}

// -------------------------------------------------------------------

// CMsgTFSaxxyBroadcast

// optional int32 category_number = 1;
inline bool CMsgTFSaxxyBroadcast::has_category_number() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFSaxxyBroadcast::set_has_category_number() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFSaxxyBroadcast::clear_has_category_number() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFSaxxyBroadcast::clear_category_number() {
  category_number_ = 0;
  clear_has_category_number();
}
inline ::google::protobuf::int32 CMsgTFSaxxyBroadcast::category_number() const {
  // @@protoc_insertion_point(field_get:CMsgTFSaxxyBroadcast.category_number)
  return category_number_;
}
inline void CMsgTFSaxxyBroadcast::set_category_number(::google::protobuf::int32 value) {
  set_has_category_number();
  category_number_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFSaxxyBroadcast.category_number)
}

// optional string user_name = 2;
inline bool CMsgTFSaxxyBroadcast::has_user_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFSaxxyBroadcast::set_has_user_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFSaxxyBroadcast::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFSaxxyBroadcast::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_name();
}
inline const ::std::string& CMsgTFSaxxyBroadcast::user_name() const {
  // @@protoc_insertion_point(field_get:CMsgTFSaxxyBroadcast.user_name)
  return user_name_.GetNoArena();
}
inline void CMsgTFSaxxyBroadcast::set_user_name(const ::std::string& value) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgTFSaxxyBroadcast.user_name)
}
#if LANG_CXX11
inline void CMsgTFSaxxyBroadcast::set_user_name(::std::string&& value) {
  set_has_user_name();
  user_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgTFSaxxyBroadcast.user_name)
}
#endif
inline void CMsgTFSaxxyBroadcast::set_user_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgTFSaxxyBroadcast.user_name)
}
inline void CMsgTFSaxxyBroadcast::set_user_name(const char* value, size_t size) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgTFSaxxyBroadcast.user_name)
}
inline ::std::string* CMsgTFSaxxyBroadcast::mutable_user_name() {
  set_has_user_name();
  // @@protoc_insertion_point(field_mutable:CMsgTFSaxxyBroadcast.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgTFSaxxyBroadcast::release_user_name() {
  // @@protoc_insertion_point(field_release:CMsgTFSaxxyBroadcast.user_name)
  clear_has_user_name();
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgTFSaxxyBroadcast::set_allocated_user_name(::std::string* user_name) {
  if (user_name != NULL) {
    set_has_user_name();
  } else {
    clear_has_user_name();
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:CMsgTFSaxxyBroadcast.user_name)
}

// -------------------------------------------------------------------

// CMsgGCTFSpecificItemBroadcast

// optional uint32 item_def_index = 1;
inline bool CMsgGCTFSpecificItemBroadcast::has_item_def_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCTFSpecificItemBroadcast::set_has_item_def_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCTFSpecificItemBroadcast::clear_has_item_def_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCTFSpecificItemBroadcast::clear_item_def_index() {
  item_def_index_ = 0u;
  clear_has_item_def_index();
}
inline ::google::protobuf::uint32 CMsgGCTFSpecificItemBroadcast::item_def_index() const {
  // @@protoc_insertion_point(field_get:CMsgGCTFSpecificItemBroadcast.item_def_index)
  return item_def_index_;
}
inline void CMsgGCTFSpecificItemBroadcast::set_item_def_index(::google::protobuf::uint32 value) {
  set_has_item_def_index();
  item_def_index_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCTFSpecificItemBroadcast.item_def_index)
}

// optional bool was_destruction = 2;
inline bool CMsgGCTFSpecificItemBroadcast::has_was_destruction() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCTFSpecificItemBroadcast::set_has_was_destruction() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCTFSpecificItemBroadcast::clear_has_was_destruction() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCTFSpecificItemBroadcast::clear_was_destruction() {
  was_destruction_ = false;
  clear_has_was_destruction();
}
inline bool CMsgGCTFSpecificItemBroadcast::was_destruction() const {
  // @@protoc_insertion_point(field_get:CMsgGCTFSpecificItemBroadcast.was_destruction)
  return was_destruction_;
}
inline void CMsgGCTFSpecificItemBroadcast::set_was_destruction(bool value) {
  set_has_was_destruction();
  was_destruction_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCTFSpecificItemBroadcast.was_destruction)
}

// optional string user_name = 3;
inline bool CMsgGCTFSpecificItemBroadcast::has_user_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCTFSpecificItemBroadcast::set_has_user_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCTFSpecificItemBroadcast::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCTFSpecificItemBroadcast::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_name();
}
inline const ::std::string& CMsgGCTFSpecificItemBroadcast::user_name() const {
  // @@protoc_insertion_point(field_get:CMsgGCTFSpecificItemBroadcast.user_name)
  return user_name_.GetNoArena();
}
inline void CMsgGCTFSpecificItemBroadcast::set_user_name(const ::std::string& value) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgGCTFSpecificItemBroadcast.user_name)
}
#if LANG_CXX11
inline void CMsgGCTFSpecificItemBroadcast::set_user_name(::std::string&& value) {
  set_has_user_name();
  user_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgGCTFSpecificItemBroadcast.user_name)
}
#endif
inline void CMsgGCTFSpecificItemBroadcast::set_user_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgGCTFSpecificItemBroadcast.user_name)
}
inline void CMsgGCTFSpecificItemBroadcast::set_user_name(const char* value, size_t size) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgGCTFSpecificItemBroadcast.user_name)
}
inline ::std::string* CMsgGCTFSpecificItemBroadcast::mutable_user_name() {
  set_has_user_name();
  // @@protoc_insertion_point(field_mutable:CMsgGCTFSpecificItemBroadcast.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCTFSpecificItemBroadcast::release_user_name() {
  // @@protoc_insertion_point(field_release:CMsgGCTFSpecificItemBroadcast.user_name)
  clear_has_user_name();
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCTFSpecificItemBroadcast::set_allocated_user_name(::std::string* user_name) {
  if (user_name != NULL) {
    set_has_user_name();
  } else {
    clear_has_user_name();
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:CMsgGCTFSpecificItemBroadcast.user_name)
}

// -------------------------------------------------------------------

// CMsgTFWorldStatus

// optional bool beta_stress_test_event_active = 1 [default = false];
inline bool CMsgTFWorldStatus::has_beta_stress_test_event_active() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFWorldStatus::set_has_beta_stress_test_event_active() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFWorldStatus::clear_has_beta_stress_test_event_active() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFWorldStatus::clear_beta_stress_test_event_active() {
  beta_stress_test_event_active_ = false;
  clear_has_beta_stress_test_event_active();
}
inline bool CMsgTFWorldStatus::beta_stress_test_event_active() const {
  // @@protoc_insertion_point(field_get:CMsgTFWorldStatus.beta_stress_test_event_active)
  return beta_stress_test_event_active_;
}
inline void CMsgTFWorldStatus::set_beta_stress_test_event_active(bool value) {
  set_has_beta_stress_test_event_active();
  beta_stress_test_event_active_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFWorldStatus.beta_stress_test_event_active)
}

// -------------------------------------------------------------------

// CSOTFDuelSummary

// optional uint32 account_id = 1 [(.key_field) = true];
inline bool CSOTFDuelSummary::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOTFDuelSummary::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOTFDuelSummary::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOTFDuelSummary::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CSOTFDuelSummary::account_id() const {
  // @@protoc_insertion_point(field_get:CSOTFDuelSummary.account_id)
  return account_id_;
}
inline void CSOTFDuelSummary::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFDuelSummary.account_id)
}

// optional uint32 duel_wins = 2;
inline bool CSOTFDuelSummary::has_duel_wins() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOTFDuelSummary::set_has_duel_wins() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOTFDuelSummary::clear_has_duel_wins() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOTFDuelSummary::clear_duel_wins() {
  duel_wins_ = 0u;
  clear_has_duel_wins();
}
inline ::google::protobuf::uint32 CSOTFDuelSummary::duel_wins() const {
  // @@protoc_insertion_point(field_get:CSOTFDuelSummary.duel_wins)
  return duel_wins_;
}
inline void CSOTFDuelSummary::set_duel_wins(::google::protobuf::uint32 value) {
  set_has_duel_wins();
  duel_wins_ = value;
  // @@protoc_insertion_point(field_set:CSOTFDuelSummary.duel_wins)
}

// optional uint32 duel_losses = 3;
inline bool CSOTFDuelSummary::has_duel_losses() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSOTFDuelSummary::set_has_duel_losses() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSOTFDuelSummary::clear_has_duel_losses() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSOTFDuelSummary::clear_duel_losses() {
  duel_losses_ = 0u;
  clear_has_duel_losses();
}
inline ::google::protobuf::uint32 CSOTFDuelSummary::duel_losses() const {
  // @@protoc_insertion_point(field_get:CSOTFDuelSummary.duel_losses)
  return duel_losses_;
}
inline void CSOTFDuelSummary::set_duel_losses(::google::protobuf::uint32 value) {
  set_has_duel_losses();
  duel_losses_ = value;
  // @@protoc_insertion_point(field_set:CSOTFDuelSummary.duel_losses)
}

// optional uint32 last_duel_account_id = 4;
inline bool CSOTFDuelSummary::has_last_duel_account_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSOTFDuelSummary::set_has_last_duel_account_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSOTFDuelSummary::clear_has_last_duel_account_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSOTFDuelSummary::clear_last_duel_account_id() {
  last_duel_account_id_ = 0u;
  clear_has_last_duel_account_id();
}
inline ::google::protobuf::uint32 CSOTFDuelSummary::last_duel_account_id() const {
  // @@protoc_insertion_point(field_get:CSOTFDuelSummary.last_duel_account_id)
  return last_duel_account_id_;
}
inline void CSOTFDuelSummary::set_last_duel_account_id(::google::protobuf::uint32 value) {
  set_has_last_duel_account_id();
  last_duel_account_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFDuelSummary.last_duel_account_id)
}

// optional uint32 last_duel_timestamp = 5;
inline bool CSOTFDuelSummary::has_last_duel_timestamp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSOTFDuelSummary::set_has_last_duel_timestamp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSOTFDuelSummary::clear_has_last_duel_timestamp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSOTFDuelSummary::clear_last_duel_timestamp() {
  last_duel_timestamp_ = 0u;
  clear_has_last_duel_timestamp();
}
inline ::google::protobuf::uint32 CSOTFDuelSummary::last_duel_timestamp() const {
  // @@protoc_insertion_point(field_get:CSOTFDuelSummary.last_duel_timestamp)
  return last_duel_timestamp_;
}
inline void CSOTFDuelSummary::set_last_duel_timestamp(::google::protobuf::uint32 value) {
  set_has_last_duel_timestamp();
  last_duel_timestamp_ = value;
  // @@protoc_insertion_point(field_set:CSOTFDuelSummary.last_duel_timestamp)
}

// optional uint32 last_duel_status = 6;
inline bool CSOTFDuelSummary::has_last_duel_status() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSOTFDuelSummary::set_has_last_duel_status() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSOTFDuelSummary::clear_has_last_duel_status() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSOTFDuelSummary::clear_last_duel_status() {
  last_duel_status_ = 0u;
  clear_has_last_duel_status();
}
inline ::google::protobuf::uint32 CSOTFDuelSummary::last_duel_status() const {
  // @@protoc_insertion_point(field_get:CSOTFDuelSummary.last_duel_status)
  return last_duel_status_;
}
inline void CSOTFDuelSummary::set_last_duel_status(::google::protobuf::uint32 value) {
  set_has_last_duel_status();
  last_duel_status_ = value;
  // @@protoc_insertion_point(field_set:CSOTFDuelSummary.last_duel_status)
}

// -------------------------------------------------------------------

// CSOTFMapContribution

// optional uint32 account_id = 1 [(.key_field) = true];
inline bool CSOTFMapContribution::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOTFMapContribution::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOTFMapContribution::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOTFMapContribution::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CSOTFMapContribution::account_id() const {
  // @@protoc_insertion_point(field_get:CSOTFMapContribution.account_id)
  return account_id_;
}
inline void CSOTFMapContribution::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMapContribution.account_id)
}

// optional uint32 def_index = 2 [(.key_field) = true];
inline bool CSOTFMapContribution::has_def_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOTFMapContribution::set_has_def_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOTFMapContribution::clear_has_def_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOTFMapContribution::clear_def_index() {
  def_index_ = 0u;
  clear_has_def_index();
}
inline ::google::protobuf::uint32 CSOTFMapContribution::def_index() const {
  // @@protoc_insertion_point(field_get:CSOTFMapContribution.def_index)
  return def_index_;
}
inline void CSOTFMapContribution::set_def_index(::google::protobuf::uint32 value) {
  set_has_def_index();
  def_index_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMapContribution.def_index)
}

// optional uint32 contribution_level = 3;
inline bool CSOTFMapContribution::has_contribution_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSOTFMapContribution::set_has_contribution_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSOTFMapContribution::clear_has_contribution_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSOTFMapContribution::clear_contribution_level() {
  contribution_level_ = 0u;
  clear_has_contribution_level();
}
inline ::google::protobuf::uint32 CSOTFMapContribution::contribution_level() const {
  // @@protoc_insertion_point(field_get:CSOTFMapContribution.contribution_level)
  return contribution_level_;
}
inline void CSOTFMapContribution::set_contribution_level(::google::protobuf::uint32 value) {
  set_has_contribution_level();
  contribution_level_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMapContribution.contribution_level)
}

// -------------------------------------------------------------------

// CMsgTFVoteKickBanPlayer

// optional uint32 account_id_subject = 1;
inline bool CMsgTFVoteKickBanPlayer::has_account_id_subject() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFVoteKickBanPlayer::set_has_account_id_subject() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFVoteKickBanPlayer::clear_has_account_id_subject() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFVoteKickBanPlayer::clear_account_id_subject() {
  account_id_subject_ = 0u;
  clear_has_account_id_subject();
}
inline ::google::protobuf::uint32 CMsgTFVoteKickBanPlayer::account_id_subject() const {
  // @@protoc_insertion_point(field_get:CMsgTFVoteKickBanPlayer.account_id_subject)
  return account_id_subject_;
}
inline void CMsgTFVoteKickBanPlayer::set_account_id_subject(::google::protobuf::uint32 value) {
  set_has_account_id_subject();
  account_id_subject_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFVoteKickBanPlayer.account_id_subject)
}

// optional uint32 kick_reason = 2;
inline bool CMsgTFVoteKickBanPlayer::has_kick_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFVoteKickBanPlayer::set_has_kick_reason() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFVoteKickBanPlayer::clear_has_kick_reason() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFVoteKickBanPlayer::clear_kick_reason() {
  kick_reason_ = 0u;
  clear_has_kick_reason();
}
inline ::google::protobuf::uint32 CMsgTFVoteKickBanPlayer::kick_reason() const {
  // @@protoc_insertion_point(field_get:CMsgTFVoteKickBanPlayer.kick_reason)
  return kick_reason_;
}
inline void CMsgTFVoteKickBanPlayer::set_kick_reason(::google::protobuf::uint32 value) {
  set_has_kick_reason();
  kick_reason_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFVoteKickBanPlayer.kick_reason)
}

// -------------------------------------------------------------------

// CMsgTFVoteKickBanPlayerResult

// optional uint32 account_id_initiator = 1;
inline bool CMsgTFVoteKickBanPlayerResult::has_account_id_initiator() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFVoteKickBanPlayerResult::set_has_account_id_initiator() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFVoteKickBanPlayerResult::clear_has_account_id_initiator() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFVoteKickBanPlayerResult::clear_account_id_initiator() {
  account_id_initiator_ = 0u;
  clear_has_account_id_initiator();
}
inline ::google::protobuf::uint32 CMsgTFVoteKickBanPlayerResult::account_id_initiator() const {
  // @@protoc_insertion_point(field_get:CMsgTFVoteKickBanPlayerResult.account_id_initiator)
  return account_id_initiator_;
}
inline void CMsgTFVoteKickBanPlayerResult::set_account_id_initiator(::google::protobuf::uint32 value) {
  set_has_account_id_initiator();
  account_id_initiator_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFVoteKickBanPlayerResult.account_id_initiator)
}

// optional uint32 account_id_subject = 2;
inline bool CMsgTFVoteKickBanPlayerResult::has_account_id_subject() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFVoteKickBanPlayerResult::set_has_account_id_subject() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFVoteKickBanPlayerResult::clear_has_account_id_subject() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFVoteKickBanPlayerResult::clear_account_id_subject() {
  account_id_subject_ = 0u;
  clear_has_account_id_subject();
}
inline ::google::protobuf::uint32 CMsgTFVoteKickBanPlayerResult::account_id_subject() const {
  // @@protoc_insertion_point(field_get:CMsgTFVoteKickBanPlayerResult.account_id_subject)
  return account_id_subject_;
}
inline void CMsgTFVoteKickBanPlayerResult::set_account_id_subject(::google::protobuf::uint32 value) {
  set_has_account_id_subject();
  account_id_subject_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFVoteKickBanPlayerResult.account_id_subject)
}

// optional uint32 kick_reason = 3;
inline bool CMsgTFVoteKickBanPlayerResult::has_kick_reason() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTFVoteKickBanPlayerResult::set_has_kick_reason() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgTFVoteKickBanPlayerResult::clear_has_kick_reason() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgTFVoteKickBanPlayerResult::clear_kick_reason() {
  kick_reason_ = 0u;
  clear_has_kick_reason();
}
inline ::google::protobuf::uint32 CMsgTFVoteKickBanPlayerResult::kick_reason() const {
  // @@protoc_insertion_point(field_get:CMsgTFVoteKickBanPlayerResult.kick_reason)
  return kick_reason_;
}
inline void CMsgTFVoteKickBanPlayerResult::set_kick_reason(::google::protobuf::uint32 value) {
  set_has_kick_reason();
  kick_reason_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFVoteKickBanPlayerResult.kick_reason)
}

// optional bool kick_successful = 4;
inline bool CMsgTFVoteKickBanPlayerResult::has_kick_successful() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgTFVoteKickBanPlayerResult::set_has_kick_successful() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgTFVoteKickBanPlayerResult::clear_has_kick_successful() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgTFVoteKickBanPlayerResult::clear_kick_successful() {
  kick_successful_ = false;
  clear_has_kick_successful();
}
inline bool CMsgTFVoteKickBanPlayerResult::kick_successful() const {
  // @@protoc_insertion_point(field_get:CMsgTFVoteKickBanPlayerResult.kick_successful)
  return kick_successful_;
}
inline void CMsgTFVoteKickBanPlayerResult::set_kick_successful(bool value) {
  set_has_kick_successful();
  kick_successful_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFVoteKickBanPlayerResult.kick_successful)
}

// optional uint32 num_yes_votes = 5;
inline bool CMsgTFVoteKickBanPlayerResult::has_num_yes_votes() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgTFVoteKickBanPlayerResult::set_has_num_yes_votes() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgTFVoteKickBanPlayerResult::clear_has_num_yes_votes() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgTFVoteKickBanPlayerResult::clear_num_yes_votes() {
  num_yes_votes_ = 0u;
  clear_has_num_yes_votes();
}
inline ::google::protobuf::uint32 CMsgTFVoteKickBanPlayerResult::num_yes_votes() const {
  // @@protoc_insertion_point(field_get:CMsgTFVoteKickBanPlayerResult.num_yes_votes)
  return num_yes_votes_;
}
inline void CMsgTFVoteKickBanPlayerResult::set_num_yes_votes(::google::protobuf::uint32 value) {
  set_has_num_yes_votes();
  num_yes_votes_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFVoteKickBanPlayerResult.num_yes_votes)
}

// optional uint32 num_no_votes = 6;
inline bool CMsgTFVoteKickBanPlayerResult::has_num_no_votes() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgTFVoteKickBanPlayerResult::set_has_num_no_votes() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgTFVoteKickBanPlayerResult::clear_has_num_no_votes() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgTFVoteKickBanPlayerResult::clear_num_no_votes() {
  num_no_votes_ = 0u;
  clear_has_num_no_votes();
}
inline ::google::protobuf::uint32 CMsgTFVoteKickBanPlayerResult::num_no_votes() const {
  // @@protoc_insertion_point(field_get:CMsgTFVoteKickBanPlayerResult.num_no_votes)
  return num_no_votes_;
}
inline void CMsgTFVoteKickBanPlayerResult::set_num_no_votes(::google::protobuf::uint32 value) {
  set_has_num_no_votes();
  num_no_votes_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFVoteKickBanPlayerResult.num_no_votes)
}

// optional uint32 num_possible_votes = 7;
inline bool CMsgTFVoteKickBanPlayerResult::has_num_possible_votes() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgTFVoteKickBanPlayerResult::set_has_num_possible_votes() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgTFVoteKickBanPlayerResult::clear_has_num_possible_votes() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgTFVoteKickBanPlayerResult::clear_num_possible_votes() {
  num_possible_votes_ = 0u;
  clear_has_num_possible_votes();
}
inline ::google::protobuf::uint32 CMsgTFVoteKickBanPlayerResult::num_possible_votes() const {
  // @@protoc_insertion_point(field_get:CMsgTFVoteKickBanPlayerResult.num_possible_votes)
  return num_possible_votes_;
}
inline void CMsgTFVoteKickBanPlayerResult::set_num_possible_votes(::google::protobuf::uint32 value) {
  set_has_num_possible_votes();
  num_possible_votes_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFVoteKickBanPlayerResult.num_possible_votes)
}

// -------------------------------------------------------------------

// CMsgTFFreeTrialChooseMostHelpfulFriend

// optional uint32 account_id_friend = 1;
inline bool CMsgTFFreeTrialChooseMostHelpfulFriend::has_account_id_friend() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFFreeTrialChooseMostHelpfulFriend::set_has_account_id_friend() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFFreeTrialChooseMostHelpfulFriend::clear_has_account_id_friend() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFFreeTrialChooseMostHelpfulFriend::clear_account_id_friend() {
  account_id_friend_ = 0u;
  clear_has_account_id_friend();
}
inline ::google::protobuf::uint32 CMsgTFFreeTrialChooseMostHelpfulFriend::account_id_friend() const {
  // @@protoc_insertion_point(field_get:CMsgTFFreeTrialChooseMostHelpfulFriend.account_id_friend)
  return account_id_friend_;
}
inline void CMsgTFFreeTrialChooseMostHelpfulFriend::set_account_id_friend(::google::protobuf::uint32 value) {
  set_has_account_id_friend();
  account_id_friend_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFFreeTrialChooseMostHelpfulFriend.account_id_friend)
}

// -------------------------------------------------------------------

// CMsgTFRequestTF2Friends

// repeated uint32 account_ids = 1;
inline int CMsgTFRequestTF2Friends::account_ids_size() const {
  return account_ids_.size();
}
inline void CMsgTFRequestTF2Friends::clear_account_ids() {
  account_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgTFRequestTF2Friends::account_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgTFRequestTF2Friends.account_ids)
  return account_ids_.Get(index);
}
inline void CMsgTFRequestTF2Friends::set_account_ids(int index, ::google::protobuf::uint32 value) {
  account_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgTFRequestTF2Friends.account_ids)
}
inline void CMsgTFRequestTF2Friends::add_account_ids(::google::protobuf::uint32 value) {
  account_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgTFRequestTF2Friends.account_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgTFRequestTF2Friends::account_ids() const {
  // @@protoc_insertion_point(field_list:CMsgTFRequestTF2Friends.account_ids)
  return account_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgTFRequestTF2Friends::mutable_account_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgTFRequestTF2Friends.account_ids)
  return &account_ids_;
}

// -------------------------------------------------------------------

// CMsgTFRequestTF2FriendsResponse

// repeated uint32 account_ids = 1;
inline int CMsgTFRequestTF2FriendsResponse::account_ids_size() const {
  return account_ids_.size();
}
inline void CMsgTFRequestTF2FriendsResponse::clear_account_ids() {
  account_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgTFRequestTF2FriendsResponse::account_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgTFRequestTF2FriendsResponse.account_ids)
  return account_ids_.Get(index);
}
inline void CMsgTFRequestTF2FriendsResponse::set_account_ids(int index, ::google::protobuf::uint32 value) {
  account_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgTFRequestTF2FriendsResponse.account_ids)
}
inline void CMsgTFRequestTF2FriendsResponse::add_account_ids(::google::protobuf::uint32 value) {
  account_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgTFRequestTF2FriendsResponse.account_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgTFRequestTF2FriendsResponse::account_ids() const {
  // @@protoc_insertion_point(field_list:CMsgTFRequestTF2FriendsResponse.account_ids)
  return account_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgTFRequestTF2FriendsResponse::mutable_account_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgTFRequestTF2FriendsResponse.account_ids)
  return &account_ids_;
}

// -------------------------------------------------------------------

// CSOTFPlayerInfo

// optional uint32 num_new_users_helped = 1;
inline bool CSOTFPlayerInfo::has_num_new_users_helped() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOTFPlayerInfo::set_has_num_new_users_helped() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOTFPlayerInfo::clear_has_num_new_users_helped() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOTFPlayerInfo::clear_num_new_users_helped() {
  num_new_users_helped_ = 0u;
  clear_has_num_new_users_helped();
}
inline ::google::protobuf::uint32 CSOTFPlayerInfo::num_new_users_helped() const {
  // @@protoc_insertion_point(field_get:CSOTFPlayerInfo.num_new_users_helped)
  return num_new_users_helped_;
}
inline void CSOTFPlayerInfo::set_num_new_users_helped(::google::protobuf::uint32 value) {
  set_has_num_new_users_helped();
  num_new_users_helped_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPlayerInfo.num_new_users_helped)
}

// -------------------------------------------------------------------

// CMsgTFThankedBySomeone

// optional uint64 thanker_steam_id = 1;
inline bool CMsgTFThankedBySomeone::has_thanker_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFThankedBySomeone::set_has_thanker_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFThankedBySomeone::clear_has_thanker_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFThankedBySomeone::clear_thanker_steam_id() {
  thanker_steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_thanker_steam_id();
}
inline ::google::protobuf::uint64 CMsgTFThankedBySomeone::thanker_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgTFThankedBySomeone.thanker_steam_id)
  return thanker_steam_id_;
}
inline void CMsgTFThankedBySomeone::set_thanker_steam_id(::google::protobuf::uint64 value) {
  set_has_thanker_steam_id();
  thanker_steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFThankedBySomeone.thanker_steam_id)
}

// -------------------------------------------------------------------

// CMsgTFThankedSomeone

// -------------------------------------------------------------------

// CMsgTFFreeTrialConvertedToPremium

// -------------------------------------------------------------------

// CMsgSaxxyAwarded

// optional uint32 category = 1;
inline bool CMsgSaxxyAwarded::has_category() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSaxxyAwarded::set_has_category() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSaxxyAwarded::clear_has_category() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSaxxyAwarded::clear_category() {
  category_ = 0u;
  clear_has_category();
}
inline ::google::protobuf::uint32 CMsgSaxxyAwarded::category() const {
  // @@protoc_insertion_point(field_get:CMsgSaxxyAwarded.category)
  return category_;
}
inline void CMsgSaxxyAwarded::set_category(::google::protobuf::uint32 value) {
  set_has_category();
  category_ = value;
  // @@protoc_insertion_point(field_set:CMsgSaxxyAwarded.category)
}

// repeated string winner_names = 2;
inline int CMsgSaxxyAwarded::winner_names_size() const {
  return winner_names_.size();
}
inline void CMsgSaxxyAwarded::clear_winner_names() {
  winner_names_.Clear();
}
inline const ::std::string& CMsgSaxxyAwarded::winner_names(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSaxxyAwarded.winner_names)
  return winner_names_.Get(index);
}
inline ::std::string* CMsgSaxxyAwarded::mutable_winner_names(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSaxxyAwarded.winner_names)
  return winner_names_.Mutable(index);
}
inline void CMsgSaxxyAwarded::set_winner_names(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CMsgSaxxyAwarded.winner_names)
  winner_names_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CMsgSaxxyAwarded::set_winner_names(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:CMsgSaxxyAwarded.winner_names)
  winner_names_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CMsgSaxxyAwarded::set_winner_names(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  winner_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgSaxxyAwarded.winner_names)
}
inline void CMsgSaxxyAwarded::set_winner_names(int index, const char* value, size_t size) {
  winner_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgSaxxyAwarded.winner_names)
}
inline ::std::string* CMsgSaxxyAwarded::add_winner_names() {
  // @@protoc_insertion_point(field_add_mutable:CMsgSaxxyAwarded.winner_names)
  return winner_names_.Add();
}
inline void CMsgSaxxyAwarded::add_winner_names(const ::std::string& value) {
  winner_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CMsgSaxxyAwarded.winner_names)
}
#if LANG_CXX11
inline void CMsgSaxxyAwarded::add_winner_names(::std::string&& value) {
  winner_names_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CMsgSaxxyAwarded.winner_names)
}
#endif
inline void CMsgSaxxyAwarded::add_winner_names(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  winner_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CMsgSaxxyAwarded.winner_names)
}
inline void CMsgSaxxyAwarded::add_winner_names(const char* value, size_t size) {
  winner_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CMsgSaxxyAwarded.winner_names)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMsgSaxxyAwarded::winner_names() const {
  // @@protoc_insertion_point(field_list:CMsgSaxxyAwarded.winner_names)
  return winner_names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CMsgSaxxyAwarded::mutable_winner_names() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSaxxyAwarded.winner_names)
  return &winner_names_;
}

// -------------------------------------------------------------------

// CMsgReplaySubmitContestEntry

// optional string youtube_url = 1;
inline bool CMsgReplaySubmitContestEntry::has_youtube_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgReplaySubmitContestEntry::set_has_youtube_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgReplaySubmitContestEntry::clear_has_youtube_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgReplaySubmitContestEntry::clear_youtube_url() {
  youtube_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_youtube_url();
}
inline const ::std::string& CMsgReplaySubmitContestEntry::youtube_url() const {
  // @@protoc_insertion_point(field_get:CMsgReplaySubmitContestEntry.youtube_url)
  return youtube_url_.GetNoArena();
}
inline void CMsgReplaySubmitContestEntry::set_youtube_url(const ::std::string& value) {
  set_has_youtube_url();
  youtube_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgReplaySubmitContestEntry.youtube_url)
}
#if LANG_CXX11
inline void CMsgReplaySubmitContestEntry::set_youtube_url(::std::string&& value) {
  set_has_youtube_url();
  youtube_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgReplaySubmitContestEntry.youtube_url)
}
#endif
inline void CMsgReplaySubmitContestEntry::set_youtube_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_youtube_url();
  youtube_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgReplaySubmitContestEntry.youtube_url)
}
inline void CMsgReplaySubmitContestEntry::set_youtube_url(const char* value, size_t size) {
  set_has_youtube_url();
  youtube_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgReplaySubmitContestEntry.youtube_url)
}
inline ::std::string* CMsgReplaySubmitContestEntry::mutable_youtube_url() {
  set_has_youtube_url();
  // @@protoc_insertion_point(field_mutable:CMsgReplaySubmitContestEntry.youtube_url)
  return youtube_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgReplaySubmitContestEntry::release_youtube_url() {
  // @@protoc_insertion_point(field_release:CMsgReplaySubmitContestEntry.youtube_url)
  clear_has_youtube_url();
  return youtube_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgReplaySubmitContestEntry::set_allocated_youtube_url(::std::string* youtube_url) {
  if (youtube_url != NULL) {
    set_has_youtube_url();
  } else {
    clear_has_youtube_url();
  }
  youtube_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), youtube_url);
  // @@protoc_insertion_point(field_set_allocated:CMsgReplaySubmitContestEntry.youtube_url)
}

// optional uint32 category = 2;
inline bool CMsgReplaySubmitContestEntry::has_category() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgReplaySubmitContestEntry::set_has_category() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgReplaySubmitContestEntry::clear_has_category() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgReplaySubmitContestEntry::clear_category() {
  category_ = 0u;
  clear_has_category();
}
inline ::google::protobuf::uint32 CMsgReplaySubmitContestEntry::category() const {
  // @@protoc_insertion_point(field_get:CMsgReplaySubmitContestEntry.category)
  return category_;
}
inline void CMsgReplaySubmitContestEntry::set_category(::google::protobuf::uint32 value) {
  set_has_category();
  category_ = value;
  // @@protoc_insertion_point(field_set:CMsgReplaySubmitContestEntry.category)
}

// -------------------------------------------------------------------

// CMsgReplaySubmitContestEntryResponse

// optional bool success = 1;
inline bool CMsgReplaySubmitContestEntryResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgReplaySubmitContestEntryResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgReplaySubmitContestEntryResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgReplaySubmitContestEntryResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool CMsgReplaySubmitContestEntryResponse::success() const {
  // @@protoc_insertion_point(field_get:CMsgReplaySubmitContestEntryResponse.success)
  return success_;
}
inline void CMsgReplaySubmitContestEntryResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:CMsgReplaySubmitContestEntryResponse.success)
}

// -------------------------------------------------------------------

// CReplayCachedContestData

// optional fixed32 timestamp = 1;
inline bool CReplayCachedContestData::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CReplayCachedContestData::set_has_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CReplayCachedContestData::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CReplayCachedContestData::clear_timestamp() {
  timestamp_ = 0u;
  clear_has_timestamp();
}
inline ::google::protobuf::uint32 CReplayCachedContestData::timestamp() const {
  // @@protoc_insertion_point(field_get:CReplayCachedContestData.timestamp)
  return timestamp_;
}
inline void CReplayCachedContestData::set_timestamp(::google::protobuf::uint32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:CReplayCachedContestData.timestamp)
}

// optional uint32 num_votes_last_day = 2;
inline bool CReplayCachedContestData::has_num_votes_last_day() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CReplayCachedContestData::set_has_num_votes_last_day() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CReplayCachedContestData::clear_has_num_votes_last_day() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CReplayCachedContestData::clear_num_votes_last_day() {
  num_votes_last_day_ = 0u;
  clear_has_num_votes_last_day();
}
inline ::google::protobuf::uint32 CReplayCachedContestData::num_votes_last_day() const {
  // @@protoc_insertion_point(field_get:CReplayCachedContestData.num_votes_last_day)
  return num_votes_last_day_;
}
inline void CReplayCachedContestData::set_num_votes_last_day(::google::protobuf::uint32 value) {
  set_has_num_votes_last_day();
  num_votes_last_day_ = value;
  // @@protoc_insertion_point(field_set:CReplayCachedContestData.num_votes_last_day)
}

// repeated uint32 video_entry_ids = 3;
inline int CReplayCachedContestData::video_entry_ids_size() const {
  return video_entry_ids_.size();
}
inline void CReplayCachedContestData::clear_video_entry_ids() {
  video_entry_ids_.Clear();
}
inline ::google::protobuf::uint32 CReplayCachedContestData::video_entry_ids(int index) const {
  // @@protoc_insertion_point(field_get:CReplayCachedContestData.video_entry_ids)
  return video_entry_ids_.Get(index);
}
inline void CReplayCachedContestData::set_video_entry_ids(int index, ::google::protobuf::uint32 value) {
  video_entry_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CReplayCachedContestData.video_entry_ids)
}
inline void CReplayCachedContestData::add_video_entry_ids(::google::protobuf::uint32 value) {
  video_entry_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CReplayCachedContestData.video_entry_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CReplayCachedContestData::video_entry_ids() const {
  // @@protoc_insertion_point(field_list:CReplayCachedContestData.video_entry_ids)
  return video_entry_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CReplayCachedContestData::mutable_video_entry_ids() {
  // @@protoc_insertion_point(field_mutable_list:CReplayCachedContestData.video_entry_ids)
  return &video_entry_ids_;
}

// optional uint32 num_flags_last_day = 4;
inline bool CReplayCachedContestData::has_num_flags_last_day() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CReplayCachedContestData::set_has_num_flags_last_day() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CReplayCachedContestData::clear_has_num_flags_last_day() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CReplayCachedContestData::clear_num_flags_last_day() {
  num_flags_last_day_ = 0u;
  clear_has_num_flags_last_day();
}
inline ::google::protobuf::uint32 CReplayCachedContestData::num_flags_last_day() const {
  // @@protoc_insertion_point(field_get:CReplayCachedContestData.num_flags_last_day)
  return num_flags_last_day_;
}
inline void CReplayCachedContestData::set_num_flags_last_day(::google::protobuf::uint32 value) {
  set_has_num_flags_last_day();
  num_flags_last_day_ = value;
  // @@protoc_insertion_point(field_set:CReplayCachedContestData.num_flags_last_day)
}

// -------------------------------------------------------------------

// CMsgTFCoaching_AddToCoaches

// -------------------------------------------------------------------

// CMsgTFCoaching_RemoveFromCoaches

// -------------------------------------------------------------------

// CMsgTFCoaching_FindCoach

// optional uint32 account_id_friend_as_coach = 1;
inline bool CMsgTFCoaching_FindCoach::has_account_id_friend_as_coach() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFCoaching_FindCoach::set_has_account_id_friend_as_coach() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFCoaching_FindCoach::clear_has_account_id_friend_as_coach() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFCoaching_FindCoach::clear_account_id_friend_as_coach() {
  account_id_friend_as_coach_ = 0u;
  clear_has_account_id_friend_as_coach();
}
inline ::google::protobuf::uint32 CMsgTFCoaching_FindCoach::account_id_friend_as_coach() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_FindCoach.account_id_friend_as_coach)
  return account_id_friend_as_coach_;
}
inline void CMsgTFCoaching_FindCoach::set_account_id_friend_as_coach(::google::protobuf::uint32 value) {
  set_has_account_id_friend_as_coach();
  account_id_friend_as_coach_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_FindCoach.account_id_friend_as_coach)
}

// -------------------------------------------------------------------

// CMsgTFCoaching_FindCoachResponse

// optional bool found_coach = 1;
inline bool CMsgTFCoaching_FindCoachResponse::has_found_coach() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFCoaching_FindCoachResponse::set_has_found_coach() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFCoaching_FindCoachResponse::clear_has_found_coach() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFCoaching_FindCoachResponse::clear_found_coach() {
  found_coach_ = false;
  clear_has_found_coach();
}
inline bool CMsgTFCoaching_FindCoachResponse::found_coach() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_FindCoachResponse.found_coach)
  return found_coach_;
}
inline void CMsgTFCoaching_FindCoachResponse::set_found_coach(bool value) {
  set_has_found_coach();
  found_coach_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_FindCoachResponse.found_coach)
}

// optional uint32 num_likes = 2;
inline bool CMsgTFCoaching_FindCoachResponse::has_num_likes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTFCoaching_FindCoachResponse::set_has_num_likes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgTFCoaching_FindCoachResponse::clear_has_num_likes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgTFCoaching_FindCoachResponse::clear_num_likes() {
  num_likes_ = 0u;
  clear_has_num_likes();
}
inline ::google::protobuf::uint32 CMsgTFCoaching_FindCoachResponse::num_likes() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_FindCoachResponse.num_likes)
  return num_likes_;
}
inline void CMsgTFCoaching_FindCoachResponse::set_num_likes(::google::protobuf::uint32 value) {
  set_has_num_likes();
  num_likes_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_FindCoachResponse.num_likes)
}

// optional string coach_name = 3;
inline bool CMsgTFCoaching_FindCoachResponse::has_coach_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFCoaching_FindCoachResponse::set_has_coach_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFCoaching_FindCoachResponse::clear_has_coach_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFCoaching_FindCoachResponse::clear_coach_name() {
  coach_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_coach_name();
}
inline const ::std::string& CMsgTFCoaching_FindCoachResponse::coach_name() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_FindCoachResponse.coach_name)
  return coach_name_.GetNoArena();
}
inline void CMsgTFCoaching_FindCoachResponse::set_coach_name(const ::std::string& value) {
  set_has_coach_name();
  coach_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_FindCoachResponse.coach_name)
}
#if LANG_CXX11
inline void CMsgTFCoaching_FindCoachResponse::set_coach_name(::std::string&& value) {
  set_has_coach_name();
  coach_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgTFCoaching_FindCoachResponse.coach_name)
}
#endif
inline void CMsgTFCoaching_FindCoachResponse::set_coach_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_coach_name();
  coach_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgTFCoaching_FindCoachResponse.coach_name)
}
inline void CMsgTFCoaching_FindCoachResponse::set_coach_name(const char* value, size_t size) {
  set_has_coach_name();
  coach_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgTFCoaching_FindCoachResponse.coach_name)
}
inline ::std::string* CMsgTFCoaching_FindCoachResponse::mutable_coach_name() {
  set_has_coach_name();
  // @@protoc_insertion_point(field_mutable:CMsgTFCoaching_FindCoachResponse.coach_name)
  return coach_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgTFCoaching_FindCoachResponse::release_coach_name() {
  // @@protoc_insertion_point(field_release:CMsgTFCoaching_FindCoachResponse.coach_name)
  clear_has_coach_name();
  return coach_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgTFCoaching_FindCoachResponse::set_allocated_coach_name(::std::string* coach_name) {
  if (coach_name != NULL) {
    set_has_coach_name();
  } else {
    clear_has_coach_name();
  }
  coach_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), coach_name);
  // @@protoc_insertion_point(field_set_allocated:CMsgTFCoaching_FindCoachResponse.coach_name)
}

// -------------------------------------------------------------------

// CMsgTFCoaching_AskCoach

// optional uint32 account_id_student = 1;
inline bool CMsgTFCoaching_AskCoach::has_account_id_student() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFCoaching_AskCoach::set_has_account_id_student() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFCoaching_AskCoach::clear_has_account_id_student() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFCoaching_AskCoach::clear_account_id_student() {
  account_id_student_ = 0u;
  clear_has_account_id_student();
}
inline ::google::protobuf::uint32 CMsgTFCoaching_AskCoach::account_id_student() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_AskCoach.account_id_student)
  return account_id_student_;
}
inline void CMsgTFCoaching_AskCoach::set_account_id_student(::google::protobuf::uint32 value) {
  set_has_account_id_student();
  account_id_student_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_AskCoach.account_id_student)
}

// optional bool student_is_friend = 2;
inline bool CMsgTFCoaching_AskCoach::has_student_is_friend() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFCoaching_AskCoach::set_has_student_is_friend() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFCoaching_AskCoach::clear_has_student_is_friend() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFCoaching_AskCoach::clear_student_is_friend() {
  student_is_friend_ = false;
  clear_has_student_is_friend();
}
inline bool CMsgTFCoaching_AskCoach::student_is_friend() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_AskCoach.student_is_friend)
  return student_is_friend_;
}
inline void CMsgTFCoaching_AskCoach::set_student_is_friend(bool value) {
  set_has_student_is_friend();
  student_is_friend_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_AskCoach.student_is_friend)
}

// -------------------------------------------------------------------

// CMsgTFCoaching_AskCoachResponse

// optional bool accept_coaching_assignment = 1;
inline bool CMsgTFCoaching_AskCoachResponse::has_accept_coaching_assignment() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFCoaching_AskCoachResponse::set_has_accept_coaching_assignment() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFCoaching_AskCoachResponse::clear_has_accept_coaching_assignment() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFCoaching_AskCoachResponse::clear_accept_coaching_assignment() {
  accept_coaching_assignment_ = false;
  clear_has_accept_coaching_assignment();
}
inline bool CMsgTFCoaching_AskCoachResponse::accept_coaching_assignment() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_AskCoachResponse.accept_coaching_assignment)
  return accept_coaching_assignment_;
}
inline void CMsgTFCoaching_AskCoachResponse::set_accept_coaching_assignment(bool value) {
  set_has_accept_coaching_assignment();
  accept_coaching_assignment_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_AskCoachResponse.accept_coaching_assignment)
}

// -------------------------------------------------------------------

// CMsgTFCoaching_CoachJoinGame

// optional bool join_game = 1;
inline bool CMsgTFCoaching_CoachJoinGame::has_join_game() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFCoaching_CoachJoinGame::set_has_join_game() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFCoaching_CoachJoinGame::clear_has_join_game() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFCoaching_CoachJoinGame::clear_join_game() {
  join_game_ = false;
  clear_has_join_game();
}
inline bool CMsgTFCoaching_CoachJoinGame::join_game() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_CoachJoinGame.join_game)
  return join_game_;
}
inline void CMsgTFCoaching_CoachJoinGame::set_join_game(bool value) {
  set_has_join_game();
  join_game_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_CoachJoinGame.join_game)
}

// optional uint32 server_address = 2;
inline bool CMsgTFCoaching_CoachJoinGame::has_server_address() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFCoaching_CoachJoinGame::set_has_server_address() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFCoaching_CoachJoinGame::clear_has_server_address() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFCoaching_CoachJoinGame::clear_server_address() {
  server_address_ = 0u;
  clear_has_server_address();
}
inline ::google::protobuf::uint32 CMsgTFCoaching_CoachJoinGame::server_address() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_CoachJoinGame.server_address)
  return server_address_;
}
inline void CMsgTFCoaching_CoachJoinGame::set_server_address(::google::protobuf::uint32 value) {
  set_has_server_address();
  server_address_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_CoachJoinGame.server_address)
}

// optional uint32 server_port = 3;
inline bool CMsgTFCoaching_CoachJoinGame::has_server_port() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTFCoaching_CoachJoinGame::set_has_server_port() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgTFCoaching_CoachJoinGame::clear_has_server_port() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgTFCoaching_CoachJoinGame::clear_server_port() {
  server_port_ = 0u;
  clear_has_server_port();
}
inline ::google::protobuf::uint32 CMsgTFCoaching_CoachJoinGame::server_port() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_CoachJoinGame.server_port)
  return server_port_;
}
inline void CMsgTFCoaching_CoachJoinGame::set_server_port(::google::protobuf::uint32 value) {
  set_has_server_port();
  server_port_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_CoachJoinGame.server_port)
}

// optional uint32 account_id_student = 4;
inline bool CMsgTFCoaching_CoachJoinGame::has_account_id_student() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgTFCoaching_CoachJoinGame::set_has_account_id_student() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgTFCoaching_CoachJoinGame::clear_has_account_id_student() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgTFCoaching_CoachJoinGame::clear_account_id_student() {
  account_id_student_ = 0u;
  clear_has_account_id_student();
}
inline ::google::protobuf::uint32 CMsgTFCoaching_CoachJoinGame::account_id_student() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_CoachJoinGame.account_id_student)
  return account_id_student_;
}
inline void CMsgTFCoaching_CoachJoinGame::set_account_id_student(::google::protobuf::uint32 value) {
  set_has_account_id_student();
  account_id_student_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_CoachJoinGame.account_id_student)
}

// -------------------------------------------------------------------

// CMsgTFCoaching_CoachJoining

// optional uint32 account_id_coach = 1;
inline bool CMsgTFCoaching_CoachJoining::has_account_id_coach() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFCoaching_CoachJoining::set_has_account_id_coach() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFCoaching_CoachJoining::clear_has_account_id_coach() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFCoaching_CoachJoining::clear_account_id_coach() {
  account_id_coach_ = 0u;
  clear_has_account_id_coach();
}
inline ::google::protobuf::uint32 CMsgTFCoaching_CoachJoining::account_id_coach() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_CoachJoining.account_id_coach)
  return account_id_coach_;
}
inline void CMsgTFCoaching_CoachJoining::set_account_id_coach(::google::protobuf::uint32 value) {
  set_has_account_id_coach();
  account_id_coach_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_CoachJoining.account_id_coach)
}

// optional uint32 account_id_student = 2;
inline bool CMsgTFCoaching_CoachJoining::has_account_id_student() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFCoaching_CoachJoining::set_has_account_id_student() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFCoaching_CoachJoining::clear_has_account_id_student() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFCoaching_CoachJoining::clear_account_id_student() {
  account_id_student_ = 0u;
  clear_has_account_id_student();
}
inline ::google::protobuf::uint32 CMsgTFCoaching_CoachJoining::account_id_student() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_CoachJoining.account_id_student)
  return account_id_student_;
}
inline void CMsgTFCoaching_CoachJoining::set_account_id_student(::google::protobuf::uint32 value) {
  set_has_account_id_student();
  account_id_student_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_CoachJoining.account_id_student)
}

// -------------------------------------------------------------------

// CMsgTFCoaching_CoachJoined

// optional uint32 account_id_coach = 1;
inline bool CMsgTFCoaching_CoachJoined::has_account_id_coach() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFCoaching_CoachJoined::set_has_account_id_coach() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFCoaching_CoachJoined::clear_has_account_id_coach() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFCoaching_CoachJoined::clear_account_id_coach() {
  account_id_coach_ = 0u;
  clear_has_account_id_coach();
}
inline ::google::protobuf::uint32 CMsgTFCoaching_CoachJoined::account_id_coach() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_CoachJoined.account_id_coach)
  return account_id_coach_;
}
inline void CMsgTFCoaching_CoachJoined::set_account_id_coach(::google::protobuf::uint32 value) {
  set_has_account_id_coach();
  account_id_coach_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_CoachJoined.account_id_coach)
}

// -------------------------------------------------------------------

// CMsgTFCoaching_LikeCurrentCoach

// optional bool like_coach = 1;
inline bool CMsgTFCoaching_LikeCurrentCoach::has_like_coach() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFCoaching_LikeCurrentCoach::set_has_like_coach() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFCoaching_LikeCurrentCoach::clear_has_like_coach() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFCoaching_LikeCurrentCoach::clear_like_coach() {
  like_coach_ = false;
  clear_has_like_coach();
}
inline bool CMsgTFCoaching_LikeCurrentCoach::like_coach() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_LikeCurrentCoach.like_coach)
  return like_coach_;
}
inline void CMsgTFCoaching_LikeCurrentCoach::set_like_coach(bool value) {
  set_has_like_coach();
  like_coach_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_LikeCurrentCoach.like_coach)
}

// -------------------------------------------------------------------

// CMsgTFCoaching_RemoveCurrentCoach

// optional uint32 account_id_coach = 1;
inline bool CMsgTFCoaching_RemoveCurrentCoach::has_account_id_coach() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFCoaching_RemoveCurrentCoach::set_has_account_id_coach() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFCoaching_RemoveCurrentCoach::clear_has_account_id_coach() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFCoaching_RemoveCurrentCoach::clear_account_id_coach() {
  account_id_coach_ = 0u;
  clear_has_account_id_coach();
}
inline ::google::protobuf::uint32 CMsgTFCoaching_RemoveCurrentCoach::account_id_coach() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_RemoveCurrentCoach.account_id_coach)
  return account_id_coach_;
}
inline void CMsgTFCoaching_RemoveCurrentCoach::set_account_id_coach(::google::protobuf::uint32 value) {
  set_has_account_id_coach();
  account_id_coach_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_RemoveCurrentCoach.account_id_coach)
}

// -------------------------------------------------------------------

// CMsgTFQuickplay_ScoreServers_ServerInfo

// optional uint32 server_address = 1;
inline bool CMsgTFQuickplay_ScoreServers_ServerInfo::has_server_address() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_has_server_address() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_has_server_address() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_server_address() {
  server_address_ = 0u;
  clear_has_server_address();
}
inline ::google::protobuf::uint32 CMsgTFQuickplay_ScoreServers_ServerInfo::server_address() const {
  // @@protoc_insertion_point(field_get:CMsgTFQuickplay_ScoreServers.ServerInfo.server_address)
  return server_address_;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_server_address(::google::protobuf::uint32 value) {
  set_has_server_address();
  server_address_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFQuickplay_ScoreServers.ServerInfo.server_address)
}

// optional uint32 server_port = 2;
inline bool CMsgTFQuickplay_ScoreServers_ServerInfo::has_server_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_has_server_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_has_server_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_server_port() {
  server_port_ = 0u;
  clear_has_server_port();
}
inline ::google::protobuf::uint32 CMsgTFQuickplay_ScoreServers_ServerInfo::server_port() const {
  // @@protoc_insertion_point(field_get:CMsgTFQuickplay_ScoreServers.ServerInfo.server_port)
  return server_port_;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_server_port(::google::protobuf::uint32 value) {
  set_has_server_port();
  server_port_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFQuickplay_ScoreServers.ServerInfo.server_port)
}

// optional uint32 num_users = 3;
inline bool CMsgTFQuickplay_ScoreServers_ServerInfo::has_num_users() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_has_num_users() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_has_num_users() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_num_users() {
  num_users_ = 0u;
  clear_has_num_users();
}
inline ::google::protobuf::uint32 CMsgTFQuickplay_ScoreServers_ServerInfo::num_users() const {
  // @@protoc_insertion_point(field_get:CMsgTFQuickplay_ScoreServers.ServerInfo.num_users)
  return num_users_;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_num_users(::google::protobuf::uint32 value) {
  set_has_num_users();
  num_users_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFQuickplay_ScoreServers.ServerInfo.num_users)
}

// optional uint64 steam_id = 4;
inline bool CMsgTFQuickplay_ScoreServers_ServerInfo::has_steam_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_has_steam_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgTFQuickplay_ScoreServers_ServerInfo::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgTFQuickplay_ScoreServers.ServerInfo.steam_id)
  return steam_id_;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFQuickplay_ScoreServers.ServerInfo.steam_id)
}

// optional uint32 max_users = 5;
inline bool CMsgTFQuickplay_ScoreServers_ServerInfo::has_max_users() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_has_max_users() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_has_max_users() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_max_users() {
  max_users_ = 0u;
  clear_has_max_users();
}
inline ::google::protobuf::uint32 CMsgTFQuickplay_ScoreServers_ServerInfo::max_users() const {
  // @@protoc_insertion_point(field_get:CMsgTFQuickplay_ScoreServers.ServerInfo.max_users)
  return max_users_;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_max_users(::google::protobuf::uint32 value) {
  set_has_max_users();
  max_users_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFQuickplay_ScoreServers.ServerInfo.max_users)
}

// optional float user_score = 6;
inline bool CMsgTFQuickplay_ScoreServers_ServerInfo::has_user_score() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_has_user_score() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_has_user_score() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_user_score() {
  user_score_ = 0;
  clear_has_user_score();
}
inline float CMsgTFQuickplay_ScoreServers_ServerInfo::user_score() const {
  // @@protoc_insertion_point(field_get:CMsgTFQuickplay_ScoreServers.ServerInfo.user_score)
  return user_score_;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_user_score(float value) {
  set_has_user_score();
  user_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFQuickplay_ScoreServers.ServerInfo.user_score)
}

// -------------------------------------------------------------------

// CMsgTFQuickplay_ScoreServers

// repeated .CMsgTFQuickplay_ScoreServers.ServerInfo servers = 1;
inline int CMsgTFQuickplay_ScoreServers::servers_size() const {
  return servers_.size();
}
inline void CMsgTFQuickplay_ScoreServers::clear_servers() {
  servers_.Clear();
}
inline const ::CMsgTFQuickplay_ScoreServers_ServerInfo& CMsgTFQuickplay_ScoreServers::servers(int index) const {
  // @@protoc_insertion_point(field_get:CMsgTFQuickplay_ScoreServers.servers)
  return servers_.Get(index);
}
inline ::CMsgTFQuickplay_ScoreServers_ServerInfo* CMsgTFQuickplay_ScoreServers::mutable_servers(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgTFQuickplay_ScoreServers.servers)
  return servers_.Mutable(index);
}
inline ::CMsgTFQuickplay_ScoreServers_ServerInfo* CMsgTFQuickplay_ScoreServers::add_servers() {
  // @@protoc_insertion_point(field_add:CMsgTFQuickplay_ScoreServers.servers)
  return servers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServers_ServerInfo >*
CMsgTFQuickplay_ScoreServers::mutable_servers() {
  // @@protoc_insertion_point(field_mutable_list:CMsgTFQuickplay_ScoreServers.servers)
  return &servers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServers_ServerInfo >&
CMsgTFQuickplay_ScoreServers::servers() const {
  // @@protoc_insertion_point(field_list:CMsgTFQuickplay_ScoreServers.servers)
  return servers_;
}

// -------------------------------------------------------------------

// CMsgTFQuickplay_ScoreServersResponse_ServerInfo

// optional uint32 server_address = 1;
inline bool CMsgTFQuickplay_ScoreServersResponse_ServerInfo::has_server_address() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::set_has_server_address() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::clear_has_server_address() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::clear_server_address() {
  server_address_ = 0u;
  clear_has_server_address();
}
inline ::google::protobuf::uint32 CMsgTFQuickplay_ScoreServersResponse_ServerInfo::server_address() const {
  // @@protoc_insertion_point(field_get:CMsgTFQuickplay_ScoreServersResponse.ServerInfo.server_address)
  return server_address_;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::set_server_address(::google::protobuf::uint32 value) {
  set_has_server_address();
  server_address_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFQuickplay_ScoreServersResponse.ServerInfo.server_address)
}

// optional uint32 server_port = 2;
inline bool CMsgTFQuickplay_ScoreServersResponse_ServerInfo::has_server_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::set_has_server_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::clear_has_server_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::clear_server_port() {
  server_port_ = 0u;
  clear_has_server_port();
}
inline ::google::protobuf::uint32 CMsgTFQuickplay_ScoreServersResponse_ServerInfo::server_port() const {
  // @@protoc_insertion_point(field_get:CMsgTFQuickplay_ScoreServersResponse.ServerInfo.server_port)
  return server_port_;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::set_server_port(::google::protobuf::uint32 value) {
  set_has_server_port();
  server_port_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFQuickplay_ScoreServersResponse.ServerInfo.server_port)
}

// optional float total_score = 3;
inline bool CMsgTFQuickplay_ScoreServersResponse_ServerInfo::has_total_score() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::set_has_total_score() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::clear_has_total_score() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::clear_total_score() {
  total_score_ = 0;
  clear_has_total_score();
}
inline float CMsgTFQuickplay_ScoreServersResponse_ServerInfo::total_score() const {
  // @@protoc_insertion_point(field_get:CMsgTFQuickplay_ScoreServersResponse.ServerInfo.total_score)
  return total_score_;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::set_total_score(float value) {
  set_has_total_score();
  total_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFQuickplay_ScoreServersResponse.ServerInfo.total_score)
}

// optional uint64 steam_id = 4;
inline bool CMsgTFQuickplay_ScoreServersResponse_ServerInfo::has_steam_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::set_has_steam_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgTFQuickplay_ScoreServersResponse_ServerInfo::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgTFQuickplay_ScoreServersResponse.ServerInfo.steam_id)
  return steam_id_;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFQuickplay_ScoreServersResponse.ServerInfo.steam_id)
}

// optional uint32 options_score = 5;
inline bool CMsgTFQuickplay_ScoreServersResponse_ServerInfo::has_options_score() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::set_has_options_score() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::clear_has_options_score() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::clear_options_score() {
  options_score_ = 0u;
  clear_has_options_score();
}
inline ::google::protobuf::uint32 CMsgTFQuickplay_ScoreServersResponse_ServerInfo::options_score() const {
  // @@protoc_insertion_point(field_get:CMsgTFQuickplay_ScoreServersResponse.ServerInfo.options_score)
  return options_score_;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::set_options_score(::google::protobuf::uint32 value) {
  set_has_options_score();
  options_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFQuickplay_ScoreServersResponse.ServerInfo.options_score)
}

// -------------------------------------------------------------------

// CMsgTFQuickplay_ScoreServersResponse

// repeated .CMsgTFQuickplay_ScoreServersResponse.ServerInfo servers = 1;
inline int CMsgTFQuickplay_ScoreServersResponse::servers_size() const {
  return servers_.size();
}
inline void CMsgTFQuickplay_ScoreServersResponse::clear_servers() {
  servers_.Clear();
}
inline const ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo& CMsgTFQuickplay_ScoreServersResponse::servers(int index) const {
  // @@protoc_insertion_point(field_get:CMsgTFQuickplay_ScoreServersResponse.servers)
  return servers_.Get(index);
}
inline ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo* CMsgTFQuickplay_ScoreServersResponse::mutable_servers(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgTFQuickplay_ScoreServersResponse.servers)
  return servers_.Mutable(index);
}
inline ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo* CMsgTFQuickplay_ScoreServersResponse::add_servers() {
  // @@protoc_insertion_point(field_add:CMsgTFQuickplay_ScoreServersResponse.servers)
  return servers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo >*
CMsgTFQuickplay_ScoreServersResponse::mutable_servers() {
  // @@protoc_insertion_point(field_mutable_list:CMsgTFQuickplay_ScoreServersResponse.servers)
  return &servers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo >&
CMsgTFQuickplay_ScoreServersResponse::servers() const {
  // @@protoc_insertion_point(field_list:CMsgTFQuickplay_ScoreServersResponse.servers)
  return servers_;
}

// -------------------------------------------------------------------

// CMsgTFQuickplay_PlayerJoining

// optional uint32 account_id = 1;
inline bool CMsgTFQuickplay_PlayerJoining::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFQuickplay_PlayerJoining::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFQuickplay_PlayerJoining::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFQuickplay_PlayerJoining::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgTFQuickplay_PlayerJoining::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgTFQuickplay_PlayerJoining.account_id)
  return account_id_;
}
inline void CMsgTFQuickplay_PlayerJoining::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFQuickplay_PlayerJoining.account_id)
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_LevelInfo

// optional bool level_loaded = 1;
inline bool CMsgGC_GameServer_LevelInfo::has_level_loaded() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_GameServer_LevelInfo::set_has_level_loaded() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_GameServer_LevelInfo::clear_has_level_loaded() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_GameServer_LevelInfo::clear_level_loaded() {
  level_loaded_ = false;
  clear_has_level_loaded();
}
inline bool CMsgGC_GameServer_LevelInfo::level_loaded() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_LevelInfo.level_loaded)
  return level_loaded_;
}
inline void CMsgGC_GameServer_LevelInfo::set_level_loaded(bool value) {
  set_has_level_loaded();
  level_loaded_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_LevelInfo.level_loaded)
}

// optional string level_name = 2;
inline bool CMsgGC_GameServer_LevelInfo::has_level_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_LevelInfo::set_has_level_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_LevelInfo::clear_has_level_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_LevelInfo::clear_level_name() {
  level_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_level_name();
}
inline const ::std::string& CMsgGC_GameServer_LevelInfo::level_name() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_LevelInfo.level_name)
  return level_name_.GetNoArena();
}
inline void CMsgGC_GameServer_LevelInfo::set_level_name(const ::std::string& value) {
  set_has_level_name();
  level_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_LevelInfo.level_name)
}
#if LANG_CXX11
inline void CMsgGC_GameServer_LevelInfo::set_level_name(::std::string&& value) {
  set_has_level_name();
  level_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgGC_GameServer_LevelInfo.level_name)
}
#endif
inline void CMsgGC_GameServer_LevelInfo::set_level_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_level_name();
  level_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgGC_GameServer_LevelInfo.level_name)
}
inline void CMsgGC_GameServer_LevelInfo::set_level_name(const char* value, size_t size) {
  set_has_level_name();
  level_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgGC_GameServer_LevelInfo.level_name)
}
inline ::std::string* CMsgGC_GameServer_LevelInfo::mutable_level_name() {
  set_has_level_name();
  // @@protoc_insertion_point(field_mutable:CMsgGC_GameServer_LevelInfo.level_name)
  return level_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGC_GameServer_LevelInfo::release_level_name() {
  // @@protoc_insertion_point(field_release:CMsgGC_GameServer_LevelInfo.level_name)
  clear_has_level_name();
  return level_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGC_GameServer_LevelInfo::set_allocated_level_name(::std::string* level_name) {
  if (level_name != NULL) {
    set_has_level_name();
  } else {
    clear_has_level_name();
  }
  level_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), level_name);
  // @@protoc_insertion_point(field_set_allocated:CMsgGC_GameServer_LevelInfo.level_name)
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_AuthChallenge

// optional string challenge_string = 1;
inline bool CMsgGC_GameServer_AuthChallenge::has_challenge_string() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_AuthChallenge::set_has_challenge_string() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_AuthChallenge::clear_has_challenge_string() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_AuthChallenge::clear_challenge_string() {
  challenge_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_challenge_string();
}
inline const ::std::string& CMsgGC_GameServer_AuthChallenge::challenge_string() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_AuthChallenge.challenge_string)
  return challenge_string_.GetNoArena();
}
inline void CMsgGC_GameServer_AuthChallenge::set_challenge_string(const ::std::string& value) {
  set_has_challenge_string();
  challenge_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_AuthChallenge.challenge_string)
}
#if LANG_CXX11
inline void CMsgGC_GameServer_AuthChallenge::set_challenge_string(::std::string&& value) {
  set_has_challenge_string();
  challenge_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgGC_GameServer_AuthChallenge.challenge_string)
}
#endif
inline void CMsgGC_GameServer_AuthChallenge::set_challenge_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_challenge_string();
  challenge_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgGC_GameServer_AuthChallenge.challenge_string)
}
inline void CMsgGC_GameServer_AuthChallenge::set_challenge_string(const char* value, size_t size) {
  set_has_challenge_string();
  challenge_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgGC_GameServer_AuthChallenge.challenge_string)
}
inline ::std::string* CMsgGC_GameServer_AuthChallenge::mutable_challenge_string() {
  set_has_challenge_string();
  // @@protoc_insertion_point(field_mutable:CMsgGC_GameServer_AuthChallenge.challenge_string)
  return challenge_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGC_GameServer_AuthChallenge::release_challenge_string() {
  // @@protoc_insertion_point(field_release:CMsgGC_GameServer_AuthChallenge.challenge_string)
  clear_has_challenge_string();
  return challenge_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGC_GameServer_AuthChallenge::set_allocated_challenge_string(::std::string* challenge_string) {
  if (challenge_string != NULL) {
    set_has_challenge_string();
  } else {
    clear_has_challenge_string();
  }
  challenge_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), challenge_string);
  // @@protoc_insertion_point(field_set_allocated:CMsgGC_GameServer_AuthChallenge.challenge_string)
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_AuthResult

// optional bool authenticated = 1;
inline bool CMsgGC_GameServer_AuthResult::has_authenticated() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGC_GameServer_AuthResult::set_has_authenticated() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGC_GameServer_AuthResult::clear_has_authenticated() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGC_GameServer_AuthResult::clear_authenticated() {
  authenticated_ = false;
  clear_has_authenticated();
}
inline bool CMsgGC_GameServer_AuthResult::authenticated() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_AuthResult.authenticated)
  return authenticated_;
}
inline void CMsgGC_GameServer_AuthResult::set_authenticated(bool value) {
  set_has_authenticated();
  authenticated_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_AuthResult.authenticated)
}

// optional int32 game_server_standing = 2;
inline bool CMsgGC_GameServer_AuthResult::has_game_server_standing() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_GameServer_AuthResult::set_has_game_server_standing() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_GameServer_AuthResult::clear_has_game_server_standing() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_GameServer_AuthResult::clear_game_server_standing() {
  game_server_standing_ = 0;
  clear_has_game_server_standing();
}
inline ::google::protobuf::int32 CMsgGC_GameServer_AuthResult::game_server_standing() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_AuthResult.game_server_standing)
  return game_server_standing_;
}
inline void CMsgGC_GameServer_AuthResult::set_game_server_standing(::google::protobuf::int32 value) {
  set_has_game_server_standing();
  game_server_standing_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_AuthResult.game_server_standing)
}

// optional int32 game_server_standing_trend = 3;
inline bool CMsgGC_GameServer_AuthResult::has_game_server_standing_trend() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGC_GameServer_AuthResult::set_has_game_server_standing_trend() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGC_GameServer_AuthResult::clear_has_game_server_standing_trend() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGC_GameServer_AuthResult::clear_game_server_standing_trend() {
  game_server_standing_trend_ = 0;
  clear_has_game_server_standing_trend();
}
inline ::google::protobuf::int32 CMsgGC_GameServer_AuthResult::game_server_standing_trend() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_AuthResult.game_server_standing_trend)
  return game_server_standing_trend_;
}
inline void CMsgGC_GameServer_AuthResult::set_game_server_standing_trend(::google::protobuf::int32 value) {
  set_has_game_server_standing_trend();
  game_server_standing_trend_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_AuthResult.game_server_standing_trend)
}

// optional bool is_valve_server = 4;
inline bool CMsgGC_GameServer_AuthResult::has_is_valve_server() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGC_GameServer_AuthResult::set_has_is_valve_server() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGC_GameServer_AuthResult::clear_has_is_valve_server() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGC_GameServer_AuthResult::clear_is_valve_server() {
  is_valve_server_ = false;
  clear_has_is_valve_server();
}
inline bool CMsgGC_GameServer_AuthResult::is_valve_server() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_AuthResult.is_valve_server)
  return is_valve_server_;
}
inline void CMsgGC_GameServer_AuthResult::set_is_valve_server(bool value) {
  set_has_is_valve_server();
  is_valve_server_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_AuthResult.is_valve_server)
}

// optional string message = 5;
inline bool CMsgGC_GameServer_AuthResult::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_AuthResult::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_AuthResult::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_AuthResult::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
inline const ::std::string& CMsgGC_GameServer_AuthResult::message() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_AuthResult.message)
  return message_.GetNoArena();
}
inline void CMsgGC_GameServer_AuthResult::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_AuthResult.message)
}
#if LANG_CXX11
inline void CMsgGC_GameServer_AuthResult::set_message(::std::string&& value) {
  set_has_message();
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgGC_GameServer_AuthResult.message)
}
#endif
inline void CMsgGC_GameServer_AuthResult::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgGC_GameServer_AuthResult.message)
}
inline void CMsgGC_GameServer_AuthResult::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgGC_GameServer_AuthResult.message)
}
inline ::std::string* CMsgGC_GameServer_AuthResult::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:CMsgGC_GameServer_AuthResult.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGC_GameServer_AuthResult::release_message() {
  // @@protoc_insertion_point(field_release:CMsgGC_GameServer_AuthResult.message)
  clear_has_message();
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGC_GameServer_AuthResult::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:CMsgGC_GameServer_AuthResult.message)
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_AuthChallengeResponse

// optional uint32 game_server_account_id = 1;
inline bool CMsgGC_GameServer_AuthChallengeResponse::has_game_server_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_GameServer_AuthChallengeResponse::set_has_game_server_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_GameServer_AuthChallengeResponse::clear_has_game_server_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_GameServer_AuthChallengeResponse::clear_game_server_account_id() {
  game_server_account_id_ = 0u;
  clear_has_game_server_account_id();
}
inline ::google::protobuf::uint32 CMsgGC_GameServer_AuthChallengeResponse::game_server_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_AuthChallengeResponse.game_server_account_id)
  return game_server_account_id_;
}
inline void CMsgGC_GameServer_AuthChallengeResponse::set_game_server_account_id(::google::protobuf::uint32 value) {
  set_has_game_server_account_id();
  game_server_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_AuthChallengeResponse.game_server_account_id)
}

// optional bytes hashed_challenge_string = 2;
inline bool CMsgGC_GameServer_AuthChallengeResponse::has_hashed_challenge_string() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_AuthChallengeResponse::set_has_hashed_challenge_string() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_AuthChallengeResponse::clear_has_hashed_challenge_string() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_AuthChallengeResponse::clear_hashed_challenge_string() {
  hashed_challenge_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hashed_challenge_string();
}
inline const ::std::string& CMsgGC_GameServer_AuthChallengeResponse::hashed_challenge_string() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_AuthChallengeResponse.hashed_challenge_string)
  return hashed_challenge_string_.GetNoArena();
}
inline void CMsgGC_GameServer_AuthChallengeResponse::set_hashed_challenge_string(const ::std::string& value) {
  set_has_hashed_challenge_string();
  hashed_challenge_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_AuthChallengeResponse.hashed_challenge_string)
}
#if LANG_CXX11
inline void CMsgGC_GameServer_AuthChallengeResponse::set_hashed_challenge_string(::std::string&& value) {
  set_has_hashed_challenge_string();
  hashed_challenge_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgGC_GameServer_AuthChallengeResponse.hashed_challenge_string)
}
#endif
inline void CMsgGC_GameServer_AuthChallengeResponse::set_hashed_challenge_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hashed_challenge_string();
  hashed_challenge_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgGC_GameServer_AuthChallengeResponse.hashed_challenge_string)
}
inline void CMsgGC_GameServer_AuthChallengeResponse::set_hashed_challenge_string(const void* value, size_t size) {
  set_has_hashed_challenge_string();
  hashed_challenge_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgGC_GameServer_AuthChallengeResponse.hashed_challenge_string)
}
inline ::std::string* CMsgGC_GameServer_AuthChallengeResponse::mutable_hashed_challenge_string() {
  set_has_hashed_challenge_string();
  // @@protoc_insertion_point(field_mutable:CMsgGC_GameServer_AuthChallengeResponse.hashed_challenge_string)
  return hashed_challenge_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGC_GameServer_AuthChallengeResponse::release_hashed_challenge_string() {
  // @@protoc_insertion_point(field_release:CMsgGC_GameServer_AuthChallengeResponse.hashed_challenge_string)
  clear_has_hashed_challenge_string();
  return hashed_challenge_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGC_GameServer_AuthChallengeResponse::set_allocated_hashed_challenge_string(::std::string* hashed_challenge_string) {
  if (hashed_challenge_string != NULL) {
    set_has_hashed_challenge_string();
  } else {
    clear_has_hashed_challenge_string();
  }
  hashed_challenge_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hashed_challenge_string);
  // @@protoc_insertion_point(field_set_allocated:CMsgGC_GameServer_AuthChallengeResponse.hashed_challenge_string)
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_CreateIdentity

// optional uint32 account_id = 1;
inline bool CMsgGC_GameServer_CreateIdentity::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_CreateIdentity::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_CreateIdentity::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_CreateIdentity::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgGC_GameServer_CreateIdentity::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_CreateIdentity.account_id)
  return account_id_;
}
inline void CMsgGC_GameServer_CreateIdentity::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_CreateIdentity.account_id)
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_CreateIdentityResponse

// optional bool account_created = 1;
inline bool CMsgGC_GameServer_CreateIdentityResponse::has_account_created() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_has_account_created() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::clear_has_account_created() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::clear_account_created() {
  account_created_ = false;
  clear_has_account_created();
}
inline bool CMsgGC_GameServer_CreateIdentityResponse::account_created() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_CreateIdentityResponse.account_created)
  return account_created_;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_account_created(bool value) {
  set_has_account_created();
  account_created_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_CreateIdentityResponse.account_created)
}

// optional uint32 game_server_account_id = 2;
inline bool CMsgGC_GameServer_CreateIdentityResponse::has_game_server_account_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_has_game_server_account_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::clear_has_game_server_account_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::clear_game_server_account_id() {
  game_server_account_id_ = 0u;
  clear_has_game_server_account_id();
}
inline ::google::protobuf::uint32 CMsgGC_GameServer_CreateIdentityResponse::game_server_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_CreateIdentityResponse.game_server_account_id)
  return game_server_account_id_;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_game_server_account_id(::google::protobuf::uint32 value) {
  set_has_game_server_account_id();
  game_server_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_CreateIdentityResponse.game_server_account_id)
}

// optional string game_server_identity_token = 3;
inline bool CMsgGC_GameServer_CreateIdentityResponse::has_game_server_identity_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_has_game_server_identity_token() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::clear_has_game_server_identity_token() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::clear_game_server_identity_token() {
  game_server_identity_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_game_server_identity_token();
}
inline const ::std::string& CMsgGC_GameServer_CreateIdentityResponse::game_server_identity_token() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_CreateIdentityResponse.game_server_identity_token)
  return game_server_identity_token_.GetNoArena();
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_game_server_identity_token(const ::std::string& value) {
  set_has_game_server_identity_token();
  game_server_identity_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_CreateIdentityResponse.game_server_identity_token)
}
#if LANG_CXX11
inline void CMsgGC_GameServer_CreateIdentityResponse::set_game_server_identity_token(::std::string&& value) {
  set_has_game_server_identity_token();
  game_server_identity_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgGC_GameServer_CreateIdentityResponse.game_server_identity_token)
}
#endif
inline void CMsgGC_GameServer_CreateIdentityResponse::set_game_server_identity_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_game_server_identity_token();
  game_server_identity_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgGC_GameServer_CreateIdentityResponse.game_server_identity_token)
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_game_server_identity_token(const char* value, size_t size) {
  set_has_game_server_identity_token();
  game_server_identity_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgGC_GameServer_CreateIdentityResponse.game_server_identity_token)
}
inline ::std::string* CMsgGC_GameServer_CreateIdentityResponse::mutable_game_server_identity_token() {
  set_has_game_server_identity_token();
  // @@protoc_insertion_point(field_mutable:CMsgGC_GameServer_CreateIdentityResponse.game_server_identity_token)
  return game_server_identity_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGC_GameServer_CreateIdentityResponse::release_game_server_identity_token() {
  // @@protoc_insertion_point(field_release:CMsgGC_GameServer_CreateIdentityResponse.game_server_identity_token)
  clear_has_game_server_identity_token();
  return game_server_identity_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_allocated_game_server_identity_token(::std::string* game_server_identity_token) {
  if (game_server_identity_token != NULL) {
    set_has_game_server_identity_token();
  } else {
    clear_has_game_server_identity_token();
  }
  game_server_identity_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), game_server_identity_token);
  // @@protoc_insertion_point(field_set_allocated:CMsgGC_GameServer_CreateIdentityResponse.game_server_identity_token)
}

// optional .CMsgGC_GameServer_CreateIdentityResponse.EStatus status = 4 [default = kStatus_GenericFailure];
inline bool CMsgGC_GameServer_CreateIdentityResponse::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::CMsgGC_GameServer_CreateIdentityResponse_EStatus CMsgGC_GameServer_CreateIdentityResponse::status() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_CreateIdentityResponse.status)
  return static_cast< ::CMsgGC_GameServer_CreateIdentityResponse_EStatus >(status_);
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_status(::CMsgGC_GameServer_CreateIdentityResponse_EStatus value) {
  assert(::CMsgGC_GameServer_CreateIdentityResponse_EStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_CreateIdentityResponse.status)
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_List

// optional uint32 account_id = 1;
inline bool CMsgGC_GameServer_List::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_List::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_List::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_List::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgGC_GameServer_List::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_List.account_id)
  return account_id_;
}
inline void CMsgGC_GameServer_List::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_List.account_id)
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_ListResponse_GameServerIdentity

// optional uint32 game_server_account_id = 1;
inline bool CMsgGC_GameServer_ListResponse_GameServerIdentity::has_game_server_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_has_game_server_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::clear_has_game_server_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::clear_game_server_account_id() {
  game_server_account_id_ = 0u;
  clear_has_game_server_account_id();
}
inline ::google::protobuf::uint32 CMsgGC_GameServer_ListResponse_GameServerIdentity::game_server_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_ListResponse.GameServerIdentity.game_server_account_id)
  return game_server_account_id_;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_game_server_account_id(::google::protobuf::uint32 value) {
  set_has_game_server_account_id();
  game_server_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_ListResponse.GameServerIdentity.game_server_account_id)
}

// optional string game_server_identity_token = 2;
inline bool CMsgGC_GameServer_ListResponse_GameServerIdentity::has_game_server_identity_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_has_game_server_identity_token() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::clear_has_game_server_identity_token() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::clear_game_server_identity_token() {
  game_server_identity_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_game_server_identity_token();
}
inline const ::std::string& CMsgGC_GameServer_ListResponse_GameServerIdentity::game_server_identity_token() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_ListResponse.GameServerIdentity.game_server_identity_token)
  return game_server_identity_token_.GetNoArena();
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_game_server_identity_token(const ::std::string& value) {
  set_has_game_server_identity_token();
  game_server_identity_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_ListResponse.GameServerIdentity.game_server_identity_token)
}
#if LANG_CXX11
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_game_server_identity_token(::std::string&& value) {
  set_has_game_server_identity_token();
  game_server_identity_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgGC_GameServer_ListResponse.GameServerIdentity.game_server_identity_token)
}
#endif
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_game_server_identity_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_game_server_identity_token();
  game_server_identity_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgGC_GameServer_ListResponse.GameServerIdentity.game_server_identity_token)
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_game_server_identity_token(const char* value, size_t size) {
  set_has_game_server_identity_token();
  game_server_identity_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgGC_GameServer_ListResponse.GameServerIdentity.game_server_identity_token)
}
inline ::std::string* CMsgGC_GameServer_ListResponse_GameServerIdentity::mutable_game_server_identity_token() {
  set_has_game_server_identity_token();
  // @@protoc_insertion_point(field_mutable:CMsgGC_GameServer_ListResponse.GameServerIdentity.game_server_identity_token)
  return game_server_identity_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGC_GameServer_ListResponse_GameServerIdentity::release_game_server_identity_token() {
  // @@protoc_insertion_point(field_release:CMsgGC_GameServer_ListResponse.GameServerIdentity.game_server_identity_token)
  clear_has_game_server_identity_token();
  return game_server_identity_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_allocated_game_server_identity_token(::std::string* game_server_identity_token) {
  if (game_server_identity_token != NULL) {
    set_has_game_server_identity_token();
  } else {
    clear_has_game_server_identity_token();
  }
  game_server_identity_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), game_server_identity_token);
  // @@protoc_insertion_point(field_set_allocated:CMsgGC_GameServer_ListResponse.GameServerIdentity.game_server_identity_token)
}

// optional int32 game_server_standing = 3;
inline bool CMsgGC_GameServer_ListResponse_GameServerIdentity::has_game_server_standing() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_has_game_server_standing() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::clear_has_game_server_standing() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::clear_game_server_standing() {
  game_server_standing_ = 0;
  clear_has_game_server_standing();
}
inline ::google::protobuf::int32 CMsgGC_GameServer_ListResponse_GameServerIdentity::game_server_standing() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_ListResponse.GameServerIdentity.game_server_standing)
  return game_server_standing_;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_game_server_standing(::google::protobuf::int32 value) {
  set_has_game_server_standing();
  game_server_standing_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_ListResponse.GameServerIdentity.game_server_standing)
}

// optional int32 game_server_standing_trend = 4;
inline bool CMsgGC_GameServer_ListResponse_GameServerIdentity::has_game_server_standing_trend() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_has_game_server_standing_trend() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::clear_has_game_server_standing_trend() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::clear_game_server_standing_trend() {
  game_server_standing_trend_ = 0;
  clear_has_game_server_standing_trend();
}
inline ::google::protobuf::int32 CMsgGC_GameServer_ListResponse_GameServerIdentity::game_server_standing_trend() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_ListResponse.GameServerIdentity.game_server_standing_trend)
  return game_server_standing_trend_;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_game_server_standing_trend(::google::protobuf::int32 value) {
  set_has_game_server_standing_trend();
  game_server_standing_trend_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_ListResponse.GameServerIdentity.game_server_standing_trend)
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_ListResponse

// repeated .CMsgGC_GameServer_ListResponse.GameServerIdentity owned_game_servers = 1;
inline int CMsgGC_GameServer_ListResponse::owned_game_servers_size() const {
  return owned_game_servers_.size();
}
inline void CMsgGC_GameServer_ListResponse::clear_owned_game_servers() {
  owned_game_servers_.Clear();
}
inline const ::CMsgGC_GameServer_ListResponse_GameServerIdentity& CMsgGC_GameServer_ListResponse::owned_game_servers(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_ListResponse.owned_game_servers)
  return owned_game_servers_.Get(index);
}
inline ::CMsgGC_GameServer_ListResponse_GameServerIdentity* CMsgGC_GameServer_ListResponse::mutable_owned_game_servers(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGC_GameServer_ListResponse.owned_game_servers)
  return owned_game_servers_.Mutable(index);
}
inline ::CMsgGC_GameServer_ListResponse_GameServerIdentity* CMsgGC_GameServer_ListResponse::add_owned_game_servers() {
  // @@protoc_insertion_point(field_add:CMsgGC_GameServer_ListResponse.owned_game_servers)
  return owned_game_servers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGC_GameServer_ListResponse_GameServerIdentity >*
CMsgGC_GameServer_ListResponse::mutable_owned_game_servers() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGC_GameServer_ListResponse.owned_game_servers)
  return &owned_game_servers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGC_GameServer_ListResponse_GameServerIdentity >&
CMsgGC_GameServer_ListResponse::owned_game_servers() const {
  // @@protoc_insertion_point(field_list:CMsgGC_GameServer_ListResponse.owned_game_servers)
  return owned_game_servers_;
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_ResetIdentity

// optional uint32 game_server_account_id = 1;
inline bool CMsgGC_GameServer_ResetIdentity::has_game_server_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_ResetIdentity::set_has_game_server_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_ResetIdentity::clear_has_game_server_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_ResetIdentity::clear_game_server_account_id() {
  game_server_account_id_ = 0u;
  clear_has_game_server_account_id();
}
inline ::google::protobuf::uint32 CMsgGC_GameServer_ResetIdentity::game_server_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_ResetIdentity.game_server_account_id)
  return game_server_account_id_;
}
inline void CMsgGC_GameServer_ResetIdentity::set_game_server_account_id(::google::protobuf::uint32 value) {
  set_has_game_server_account_id();
  game_server_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_ResetIdentity.game_server_account_id)
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_ResetIdentityResponse

// optional bool game_server_identity_token_reset = 1;
inline bool CMsgGC_GameServer_ResetIdentityResponse::has_game_server_identity_token_reset() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::set_has_game_server_identity_token_reset() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::clear_has_game_server_identity_token_reset() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::clear_game_server_identity_token_reset() {
  game_server_identity_token_reset_ = false;
  clear_has_game_server_identity_token_reset();
}
inline bool CMsgGC_GameServer_ResetIdentityResponse::game_server_identity_token_reset() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_ResetIdentityResponse.game_server_identity_token_reset)
  return game_server_identity_token_reset_;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::set_game_server_identity_token_reset(bool value) {
  set_has_game_server_identity_token_reset();
  game_server_identity_token_reset_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_ResetIdentityResponse.game_server_identity_token_reset)
}

// optional uint32 game_server_account_id = 2;
inline bool CMsgGC_GameServer_ResetIdentityResponse::has_game_server_account_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::set_has_game_server_account_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::clear_has_game_server_account_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::clear_game_server_account_id() {
  game_server_account_id_ = 0u;
  clear_has_game_server_account_id();
}
inline ::google::protobuf::uint32 CMsgGC_GameServer_ResetIdentityResponse::game_server_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_ResetIdentityResponse.game_server_account_id)
  return game_server_account_id_;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::set_game_server_account_id(::google::protobuf::uint32 value) {
  set_has_game_server_account_id();
  game_server_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_ResetIdentityResponse.game_server_account_id)
}

// optional string game_server_identity_token = 3;
inline bool CMsgGC_GameServer_ResetIdentityResponse::has_game_server_identity_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::set_has_game_server_identity_token() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::clear_has_game_server_identity_token() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::clear_game_server_identity_token() {
  game_server_identity_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_game_server_identity_token();
}
inline const ::std::string& CMsgGC_GameServer_ResetIdentityResponse::game_server_identity_token() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_ResetIdentityResponse.game_server_identity_token)
  return game_server_identity_token_.GetNoArena();
}
inline void CMsgGC_GameServer_ResetIdentityResponse::set_game_server_identity_token(const ::std::string& value) {
  set_has_game_server_identity_token();
  game_server_identity_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_ResetIdentityResponse.game_server_identity_token)
}
#if LANG_CXX11
inline void CMsgGC_GameServer_ResetIdentityResponse::set_game_server_identity_token(::std::string&& value) {
  set_has_game_server_identity_token();
  game_server_identity_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgGC_GameServer_ResetIdentityResponse.game_server_identity_token)
}
#endif
inline void CMsgGC_GameServer_ResetIdentityResponse::set_game_server_identity_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_game_server_identity_token();
  game_server_identity_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgGC_GameServer_ResetIdentityResponse.game_server_identity_token)
}
inline void CMsgGC_GameServer_ResetIdentityResponse::set_game_server_identity_token(const char* value, size_t size) {
  set_has_game_server_identity_token();
  game_server_identity_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgGC_GameServer_ResetIdentityResponse.game_server_identity_token)
}
inline ::std::string* CMsgGC_GameServer_ResetIdentityResponse::mutable_game_server_identity_token() {
  set_has_game_server_identity_token();
  // @@protoc_insertion_point(field_mutable:CMsgGC_GameServer_ResetIdentityResponse.game_server_identity_token)
  return game_server_identity_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGC_GameServer_ResetIdentityResponse::release_game_server_identity_token() {
  // @@protoc_insertion_point(field_release:CMsgGC_GameServer_ResetIdentityResponse.game_server_identity_token)
  clear_has_game_server_identity_token();
  return game_server_identity_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGC_GameServer_ResetIdentityResponse::set_allocated_game_server_identity_token(::std::string* game_server_identity_token) {
  if (game_server_identity_token != NULL) {
    set_has_game_server_identity_token();
  } else {
    clear_has_game_server_identity_token();
  }
  game_server_identity_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), game_server_identity_token);
  // @@protoc_insertion_point(field_set_allocated:CMsgGC_GameServer_ResetIdentityResponse.game_server_identity_token)
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_AckPolicy

// -------------------------------------------------------------------

// CMsgGC_GameServer_AckPolicyResponse

// optional uint32 result = 1;
inline bool CMsgGC_GameServer_AckPolicyResponse::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_GameServer_AckPolicyResponse::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_GameServer_AckPolicyResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_GameServer_AckPolicyResponse::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CMsgGC_GameServer_AckPolicyResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_AckPolicyResponse.result)
  return result_;
}
inline void CMsgGC_GameServer_AckPolicyResponse::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_AckPolicyResponse.result)
}

// optional string message = 2;
inline bool CMsgGC_GameServer_AckPolicyResponse::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_AckPolicyResponse::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_AckPolicyResponse::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_AckPolicyResponse::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
inline const ::std::string& CMsgGC_GameServer_AckPolicyResponse::message() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_AckPolicyResponse.message)
  return message_.GetNoArena();
}
inline void CMsgGC_GameServer_AckPolicyResponse::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_AckPolicyResponse.message)
}
#if LANG_CXX11
inline void CMsgGC_GameServer_AckPolicyResponse::set_message(::std::string&& value) {
  set_has_message();
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgGC_GameServer_AckPolicyResponse.message)
}
#endif
inline void CMsgGC_GameServer_AckPolicyResponse::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgGC_GameServer_AckPolicyResponse.message)
}
inline void CMsgGC_GameServer_AckPolicyResponse::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgGC_GameServer_AckPolicyResponse.message)
}
inline ::std::string* CMsgGC_GameServer_AckPolicyResponse::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:CMsgGC_GameServer_AckPolicyResponse.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGC_GameServer_AckPolicyResponse::release_message() {
  // @@protoc_insertion_point(field_release:CMsgGC_GameServer_AckPolicyResponse.message)
  clear_has_message();
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGC_GameServer_AckPolicyResponse::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:CMsgGC_GameServer_AckPolicyResponse.message)
}

// -------------------------------------------------------------------

// CMsgGC_Client_UseServerModificationItem

// optional uint64 item_id = 1;
inline bool CMsgGC_Client_UseServerModificationItem::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_Client_UseServerModificationItem::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_Client_UseServerModificationItem::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_Client_UseServerModificationItem::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::uint64 CMsgGC_Client_UseServerModificationItem::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Client_UseServerModificationItem.item_id)
  return item_id_;
}
inline void CMsgGC_Client_UseServerModificationItem::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Client_UseServerModificationItem.item_id)
}

// -------------------------------------------------------------------

// CMsgGC_Client_UseServerModificationItem_Response

// optional .CMsgGC_Client_UseServerModificationItem_Response.EServerModificationItemResponse response_code = 1 [default = kServerModificationItemResponse_AlreadyInUse];
inline bool CMsgGC_Client_UseServerModificationItem_Response::has_response_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_Client_UseServerModificationItem_Response::set_has_response_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_Client_UseServerModificationItem_Response::clear_has_response_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_Client_UseServerModificationItem_Response::clear_response_code() {
  response_code_ = 1;
  clear_has_response_code();
}
inline ::CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse CMsgGC_Client_UseServerModificationItem_Response::response_code() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Client_UseServerModificationItem_Response.response_code)
  return static_cast< ::CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse >(response_code_);
}
inline void CMsgGC_Client_UseServerModificationItem_Response::set_response_code(::CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse value) {
  assert(::CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_IsValid(value));
  set_has_response_code();
  response_code_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Client_UseServerModificationItem_Response.response_code)
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_UseServerModificationItem

// optional .EServerModificationItemType modification_type = 1 [default = kGameServerModificationItem_Halloween];
inline bool CMsgGC_GameServer_UseServerModificationItem::has_modification_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_UseServerModificationItem::set_has_modification_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_UseServerModificationItem::clear_has_modification_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_UseServerModificationItem::clear_modification_type() {
  modification_type_ = 1;
  clear_has_modification_type();
}
inline ::EServerModificationItemType CMsgGC_GameServer_UseServerModificationItem::modification_type() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_UseServerModificationItem.modification_type)
  return static_cast< ::EServerModificationItemType >(modification_type_);
}
inline void CMsgGC_GameServer_UseServerModificationItem::set_modification_type(::EServerModificationItemType value) {
  assert(::EServerModificationItemType_IsValid(value));
  set_has_modification_type();
  modification_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_UseServerModificationItem.modification_type)
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_UseServerModificationItem_Response

// optional .EServerModificationItemType modification_type = 1 [default = kGameServerModificationItem_Halloween];
inline bool CMsgGC_GameServer_UseServerModificationItem_Response::has_modification_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_UseServerModificationItem_Response::set_has_modification_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_UseServerModificationItem_Response::clear_has_modification_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_UseServerModificationItem_Response::clear_modification_type() {
  modification_type_ = 1;
  clear_has_modification_type();
}
inline ::EServerModificationItemType CMsgGC_GameServer_UseServerModificationItem_Response::modification_type() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_UseServerModificationItem_Response.modification_type)
  return static_cast< ::EServerModificationItemType >(modification_type_);
}
inline void CMsgGC_GameServer_UseServerModificationItem_Response::set_modification_type(::EServerModificationItemType value) {
  assert(::EServerModificationItemType_IsValid(value));
  set_has_modification_type();
  modification_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_UseServerModificationItem_Response.modification_type)
}

// optional .CMsgGC_GameServer_UseServerModificationItem_Response.EServerModificationItemServerResponse server_response_code = 2 [default = kServerModificationItemServerResponse_Accepted];
inline bool CMsgGC_GameServer_UseServerModificationItem_Response::has_server_response_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_GameServer_UseServerModificationItem_Response::set_has_server_response_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_GameServer_UseServerModificationItem_Response::clear_has_server_response_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_GameServer_UseServerModificationItem_Response::clear_server_response_code() {
  server_response_code_ = 1;
  clear_has_server_response_code();
}
inline ::CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse CMsgGC_GameServer_UseServerModificationItem_Response::server_response_code() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_UseServerModificationItem_Response.server_response_code)
  return static_cast< ::CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse >(server_response_code_);
}
inline void CMsgGC_GameServer_UseServerModificationItem_Response::set_server_response_code(::CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse value) {
  assert(::CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_IsValid(value));
  set_has_server_response_code();
  server_response_code_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_UseServerModificationItem_Response.server_response_code)
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_ServerModificationItemExpired

// optional .EServerModificationItemType modification_type = 1 [default = kGameServerModificationItem_Halloween];
inline bool CMsgGC_GameServer_ServerModificationItemExpired::has_modification_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_ServerModificationItemExpired::set_has_modification_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_ServerModificationItemExpired::clear_has_modification_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_ServerModificationItemExpired::clear_modification_type() {
  modification_type_ = 1;
  clear_has_modification_type();
}
inline ::EServerModificationItemType CMsgGC_GameServer_ServerModificationItemExpired::modification_type() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_ServerModificationItemExpired.modification_type)
  return static_cast< ::EServerModificationItemType >(modification_type_);
}
inline void CMsgGC_GameServer_ServerModificationItemExpired::set_modification_type(::EServerModificationItemType value) {
  assert(::EServerModificationItemType_IsValid(value));
  set_has_modification_type();
  modification_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_ServerModificationItemExpired.modification_type)
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_ServerModificationItem

// optional .EServerModificationItemType modification_type = 1 [default = kGameServerModificationItem_Halloween];
inline bool CMsgGC_GameServer_ServerModificationItem::has_modification_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_GameServer_ServerModificationItem::set_has_modification_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_GameServer_ServerModificationItem::clear_has_modification_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_GameServer_ServerModificationItem::clear_modification_type() {
  modification_type_ = 1;
  clear_has_modification_type();
}
inline ::EServerModificationItemType CMsgGC_GameServer_ServerModificationItem::modification_type() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_ServerModificationItem.modification_type)
  return static_cast< ::EServerModificationItemType >(modification_type_);
}
inline void CMsgGC_GameServer_ServerModificationItem::set_modification_type(::EServerModificationItemType value) {
  assert(::EServerModificationItemType_IsValid(value));
  set_has_modification_type();
  modification_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_ServerModificationItem.modification_type)
}

// optional bool active = 2;
inline bool CMsgGC_GameServer_ServerModificationItem::has_active() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_ServerModificationItem::set_has_active() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_ServerModificationItem::clear_has_active() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_ServerModificationItem::clear_active() {
  active_ = false;
  clear_has_active();
}
inline bool CMsgGC_GameServer_ServerModificationItem::active() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_ServerModificationItem.active)
  return active_;
}
inline void CMsgGC_GameServer_ServerModificationItem::set_active(bool value) {
  set_has_active();
  active_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_ServerModificationItem.active)
}

// -------------------------------------------------------------------

// CMsgGC_Halloween_ReservedItem

// repeated float x = 1;
inline int CMsgGC_Halloween_ReservedItem::x_size() const {
  return x_.size();
}
inline void CMsgGC_Halloween_ReservedItem::clear_x() {
  x_.Clear();
}
inline float CMsgGC_Halloween_ReservedItem::x(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGC_Halloween_ReservedItem.x)
  return x_.Get(index);
}
inline void CMsgGC_Halloween_ReservedItem::set_x(int index, float value) {
  x_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGC_Halloween_ReservedItem.x)
}
inline void CMsgGC_Halloween_ReservedItem::add_x(float value) {
  x_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgGC_Halloween_ReservedItem.x)
}
inline const ::google::protobuf::RepeatedField< float >&
CMsgGC_Halloween_ReservedItem::x() const {
  // @@protoc_insertion_point(field_list:CMsgGC_Halloween_ReservedItem.x)
  return x_;
}
inline ::google::protobuf::RepeatedField< float >*
CMsgGC_Halloween_ReservedItem::mutable_x() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGC_Halloween_ReservedItem.x)
  return &x_;
}

// repeated float y = 2;
inline int CMsgGC_Halloween_ReservedItem::y_size() const {
  return y_.size();
}
inline void CMsgGC_Halloween_ReservedItem::clear_y() {
  y_.Clear();
}
inline float CMsgGC_Halloween_ReservedItem::y(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGC_Halloween_ReservedItem.y)
  return y_.Get(index);
}
inline void CMsgGC_Halloween_ReservedItem::set_y(int index, float value) {
  y_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGC_Halloween_ReservedItem.y)
}
inline void CMsgGC_Halloween_ReservedItem::add_y(float value) {
  y_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgGC_Halloween_ReservedItem.y)
}
inline const ::google::protobuf::RepeatedField< float >&
CMsgGC_Halloween_ReservedItem::y() const {
  // @@protoc_insertion_point(field_list:CMsgGC_Halloween_ReservedItem.y)
  return y_;
}
inline ::google::protobuf::RepeatedField< float >*
CMsgGC_Halloween_ReservedItem::mutable_y() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGC_Halloween_ReservedItem.y)
  return &y_;
}

// repeated float z = 3;
inline int CMsgGC_Halloween_ReservedItem::z_size() const {
  return z_.size();
}
inline void CMsgGC_Halloween_ReservedItem::clear_z() {
  z_.Clear();
}
inline float CMsgGC_Halloween_ReservedItem::z(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGC_Halloween_ReservedItem.z)
  return z_.Get(index);
}
inline void CMsgGC_Halloween_ReservedItem::set_z(int index, float value) {
  z_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGC_Halloween_ReservedItem.z)
}
inline void CMsgGC_Halloween_ReservedItem::add_z(float value) {
  z_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgGC_Halloween_ReservedItem.z)
}
inline const ::google::protobuf::RepeatedField< float >&
CMsgGC_Halloween_ReservedItem::z() const {
  // @@protoc_insertion_point(field_list:CMsgGC_Halloween_ReservedItem.z)
  return z_;
}
inline ::google::protobuf::RepeatedField< float >*
CMsgGC_Halloween_ReservedItem::mutable_z() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGC_Halloween_ReservedItem.z)
  return &z_;
}

// optional uint32 spawn_meta_info = 7;
inline bool CMsgGC_Halloween_ReservedItem::has_spawn_meta_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_Halloween_ReservedItem::set_has_spawn_meta_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_Halloween_ReservedItem::clear_has_spawn_meta_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_Halloween_ReservedItem::clear_spawn_meta_info() {
  spawn_meta_info_ = 0u;
  clear_has_spawn_meta_info();
}
inline ::google::protobuf::uint32 CMsgGC_Halloween_ReservedItem::spawn_meta_info() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Halloween_ReservedItem.spawn_meta_info)
  return spawn_meta_info_;
}
inline void CMsgGC_Halloween_ReservedItem::set_spawn_meta_info(::google::protobuf::uint32 value) {
  set_has_spawn_meta_info();
  spawn_meta_info_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Halloween_ReservedItem.spawn_meta_info)
}

// -------------------------------------------------------------------

// CMsgGC_Halloween_GrantItem

// optional uint32 recipient_account_id = 1;
inline bool CMsgGC_Halloween_GrantItem::has_recipient_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_Halloween_GrantItem::set_has_recipient_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_Halloween_GrantItem::clear_has_recipient_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_Halloween_GrantItem::clear_recipient_account_id() {
  recipient_account_id_ = 0u;
  clear_has_recipient_account_id();
}
inline ::google::protobuf::uint32 CMsgGC_Halloween_GrantItem::recipient_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Halloween_GrantItem.recipient_account_id)
  return recipient_account_id_;
}
inline void CMsgGC_Halloween_GrantItem::set_recipient_account_id(::google::protobuf::uint32 value) {
  set_has_recipient_account_id();
  recipient_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Halloween_GrantItem.recipient_account_id)
}

// optional uint32 level_id = 2;
inline bool CMsgGC_Halloween_GrantItem::has_level_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_Halloween_GrantItem::set_has_level_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_Halloween_GrantItem::clear_has_level_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_Halloween_GrantItem::clear_level_id() {
  level_id_ = 0u;
  clear_has_level_id();
}
inline ::google::protobuf::uint32 CMsgGC_Halloween_GrantItem::level_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Halloween_GrantItem.level_id)
  return level_id_;
}
inline void CMsgGC_Halloween_GrantItem::set_level_id(::google::protobuf::uint32 value) {
  set_has_level_id();
  level_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Halloween_GrantItem.level_id)
}

// optional bool flagged = 3;
inline bool CMsgGC_Halloween_GrantItem::has_flagged() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGC_Halloween_GrantItem::set_has_flagged() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGC_Halloween_GrantItem::clear_has_flagged() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGC_Halloween_GrantItem::clear_flagged() {
  flagged_ = false;
  clear_has_flagged();
}
inline bool CMsgGC_Halloween_GrantItem::flagged() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Halloween_GrantItem.flagged)
  return flagged_;
}
inline void CMsgGC_Halloween_GrantItem::set_flagged(bool value) {
  set_has_flagged();
  flagged_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Halloween_GrantItem.flagged)
}

// -------------------------------------------------------------------

// CMsgGC_Halloween_GrantItemResponse

// optional uint32 recipient_account_id = 1;
inline bool CMsgGC_Halloween_GrantItemResponse::has_recipient_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_Halloween_GrantItemResponse::set_has_recipient_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_Halloween_GrantItemResponse::clear_has_recipient_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_Halloween_GrantItemResponse::clear_recipient_account_id() {
  recipient_account_id_ = 0u;
  clear_has_recipient_account_id();
}
inline ::google::protobuf::uint32 CMsgGC_Halloween_GrantItemResponse::recipient_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Halloween_GrantItemResponse.recipient_account_id)
  return recipient_account_id_;
}
inline void CMsgGC_Halloween_GrantItemResponse::set_recipient_account_id(::google::protobuf::uint32 value) {
  set_has_recipient_account_id();
  recipient_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Halloween_GrantItemResponse.recipient_account_id)
}

// -------------------------------------------------------------------

// CMsgGC_Halloween_ItemClaimed

// -------------------------------------------------------------------

// CMsgGC_PickupItemEligibility_Query

// optional uint32 account_id = 1;
inline bool CMsgGC_PickupItemEligibility_Query::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_PickupItemEligibility_Query::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_PickupItemEligibility_Query::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_PickupItemEligibility_Query::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgGC_PickupItemEligibility_Query::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_PickupItemEligibility_Query.account_id)
  return account_id_;
}
inline void CMsgGC_PickupItemEligibility_Query::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_PickupItemEligibility_Query.account_id)
}

// optional uint32 seconds_ago = 2;
inline bool CMsgGC_PickupItemEligibility_Query::has_seconds_ago() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_PickupItemEligibility_Query::set_has_seconds_ago() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_PickupItemEligibility_Query::clear_has_seconds_ago() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_PickupItemEligibility_Query::clear_seconds_ago() {
  seconds_ago_ = 0u;
  clear_has_seconds_ago();
}
inline ::google::protobuf::uint32 CMsgGC_PickupItemEligibility_Query::seconds_ago() const {
  // @@protoc_insertion_point(field_get:CMsgGC_PickupItemEligibility_Query.seconds_ago)
  return seconds_ago_;
}
inline void CMsgGC_PickupItemEligibility_Query::set_seconds_ago(::google::protobuf::uint32 value) {
  set_has_seconds_ago();
  seconds_ago_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_PickupItemEligibility_Query.seconds_ago)
}

// -------------------------------------------------------------------

// CMsgGC_PickupItemEligibility_QueryResponse

// optional uint32 account_id = 1;
inline bool CMsgGC_PickupItemEligibility_QueryResponse::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_PickupItemEligibility_QueryResponse::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_PickupItemEligibility_QueryResponse::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_PickupItemEligibility_QueryResponse::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgGC_PickupItemEligibility_QueryResponse::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_PickupItemEligibility_QueryResponse.account_id)
  return account_id_;
}
inline void CMsgGC_PickupItemEligibility_QueryResponse::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_PickupItemEligibility_QueryResponse.account_id)
}

// optional bool was_eligible = 2;
inline bool CMsgGC_PickupItemEligibility_QueryResponse::has_was_eligible() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_PickupItemEligibility_QueryResponse::set_has_was_eligible() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_PickupItemEligibility_QueryResponse::clear_has_was_eligible() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_PickupItemEligibility_QueryResponse::clear_was_eligible() {
  was_eligible_ = false;
  clear_has_was_eligible();
}
inline bool CMsgGC_PickupItemEligibility_QueryResponse::was_eligible() const {
  // @@protoc_insertion_point(field_get:CMsgGC_PickupItemEligibility_QueryResponse.was_eligible)
  return was_eligible_;
}
inline void CMsgGC_PickupItemEligibility_QueryResponse::set_was_eligible(bool value) {
  set_has_was_eligible();
  was_eligible_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_PickupItemEligibility_QueryResponse.was_eligible)
}

// optional uint32 level_id = 3;
inline bool CMsgGC_PickupItemEligibility_QueryResponse::has_level_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGC_PickupItemEligibility_QueryResponse::set_has_level_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGC_PickupItemEligibility_QueryResponse::clear_has_level_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGC_PickupItemEligibility_QueryResponse::clear_level_id() {
  level_id_ = 0u;
  clear_has_level_id();
}
inline ::google::protobuf::uint32 CMsgGC_PickupItemEligibility_QueryResponse::level_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_PickupItemEligibility_QueryResponse.level_id)
  return level_id_;
}
inline void CMsgGC_PickupItemEligibility_QueryResponse::set_level_id(::google::protobuf::uint32 value) {
  set_has_level_id();
  level_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_PickupItemEligibility_QueryResponse.level_id)
}

// -------------------------------------------------------------------

// CSOTFPartyMember

// optional bool owns_ticket = 2;
inline bool CSOTFPartyMember::has_owns_ticket() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSOTFPartyMember::set_has_owns_ticket() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSOTFPartyMember::clear_has_owns_ticket() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSOTFPartyMember::clear_owns_ticket() {
  owns_ticket_ = false;
  clear_has_owns_ticket();
}
inline bool CSOTFPartyMember::owns_ticket() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyMember.owns_ticket)
  return owns_ticket_;
}
inline void CSOTFPartyMember::set_owns_ticket(bool value) {
  set_has_owns_ticket();
  owns_ticket_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPartyMember.owns_ticket)
}

// optional uint32 completed_missions = 3;
inline bool CSOTFPartyMember::has_completed_missions() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOTFPartyMember::set_has_completed_missions() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOTFPartyMember::clear_has_completed_missions() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOTFPartyMember::clear_completed_missions() {
  completed_missions_ = 0u;
  clear_has_completed_missions();
}
inline ::google::protobuf::uint32 CSOTFPartyMember::completed_missions() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyMember.completed_missions)
  return completed_missions_;
}
inline void CSOTFPartyMember::set_completed_missions(::google::protobuf::uint32 value) {
  set_has_completed_missions();
  completed_missions_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPartyMember.completed_missions)
}

// optional uint32 badge_level = 4;
inline bool CSOTFPartyMember::has_badge_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOTFPartyMember::set_has_badge_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOTFPartyMember::clear_has_badge_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOTFPartyMember::clear_badge_level() {
  badge_level_ = 0u;
  clear_has_badge_level();
}
inline ::google::protobuf::uint32 CSOTFPartyMember::badge_level() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyMember.badge_level)
  return badge_level_;
}
inline void CSOTFPartyMember::set_badge_level(::google::protobuf::uint32 value) {
  set_has_badge_level();
  badge_level_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPartyMember.badge_level)
}

// optional bool squad_surplus = 5;
inline bool CSOTFPartyMember::has_squad_surplus() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSOTFPartyMember::set_has_squad_surplus() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSOTFPartyMember::clear_has_squad_surplus() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSOTFPartyMember::clear_squad_surplus() {
  squad_surplus_ = false;
  clear_has_squad_surplus();
}
inline bool CSOTFPartyMember::squad_surplus() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyMember.squad_surplus)
  return squad_surplus_;
}
inline void CSOTFPartyMember::set_squad_surplus(bool value) {
  set_has_squad_surplus();
  squad_surplus_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPartyMember.squad_surplus)
}

// optional bool is_banned = 8 [default = false];
inline bool CSOTFPartyMember::has_is_banned() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSOTFPartyMember::set_has_is_banned() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSOTFPartyMember::clear_has_is_banned() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSOTFPartyMember::clear_is_banned() {
  is_banned_ = false;
  clear_has_is_banned();
}
inline bool CSOTFPartyMember::is_banned() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyMember.is_banned)
  return is_banned_;
}
inline void CSOTFPartyMember::set_is_banned(bool value) {
  set_has_is_banned();
  is_banned_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPartyMember.is_banned)
}

// optional bool competitive_access = 9;
inline bool CSOTFPartyMember::has_competitive_access() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSOTFPartyMember::set_has_competitive_access() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSOTFPartyMember::clear_has_competitive_access() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSOTFPartyMember::clear_competitive_access() {
  competitive_access_ = false;
  clear_has_competitive_access();
}
inline bool CSOTFPartyMember::competitive_access() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyMember.competitive_access)
  return competitive_access_;
}
inline void CSOTFPartyMember::set_competitive_access(bool value) {
  set_has_competitive_access();
  competitive_access_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPartyMember.competitive_access)
}

// optional uint32 ladder_rank = 12;
inline bool CSOTFPartyMember::has_ladder_rank() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSOTFPartyMember::set_has_ladder_rank() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSOTFPartyMember::clear_has_ladder_rank() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSOTFPartyMember::clear_ladder_rank() {
  ladder_rank_ = 0u;
  clear_has_ladder_rank();
}
inline ::google::protobuf::uint32 CSOTFPartyMember::ladder_rank() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyMember.ladder_rank)
  return ladder_rank_;
}
inline void CSOTFPartyMember::set_ladder_rank(::google::protobuf::uint32 value) {
  set_has_ladder_rank();
  ladder_rank_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPartyMember.ladder_rank)
}

// optional bool is_low_priority = 13 [default = false];
inline bool CSOTFPartyMember::has_is_low_priority() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSOTFPartyMember::set_has_is_low_priority() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSOTFPartyMember::clear_has_is_low_priority() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSOTFPartyMember::clear_is_low_priority() {
  is_low_priority_ = false;
  clear_has_is_low_priority();
}
inline bool CSOTFPartyMember::is_low_priority() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyMember.is_low_priority)
  return is_low_priority_;
}
inline void CSOTFPartyMember::set_is_low_priority(bool value) {
  set_has_is_low_priority();
  is_low_priority_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPartyMember.is_low_priority)
}

// optional uint32 experience = 14;
inline bool CSOTFPartyMember::has_experience() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSOTFPartyMember::set_has_experience() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSOTFPartyMember::clear_has_experience() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSOTFPartyMember::clear_experience() {
  experience_ = 0u;
  clear_has_experience();
}
inline ::google::protobuf::uint32 CSOTFPartyMember::experience() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyMember.experience)
  return experience_;
}
inline void CSOTFPartyMember::set_experience(::google::protobuf::uint32 value) {
  set_has_experience();
  experience_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPartyMember.experience)
}

// optional uint32 skillrating = 15 [default = 10000];
inline bool CSOTFPartyMember::has_skillrating() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSOTFPartyMember::set_has_skillrating() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CSOTFPartyMember::clear_has_skillrating() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CSOTFPartyMember::clear_skillrating() {
  skillrating_ = 10000u;
  clear_has_skillrating();
}
inline ::google::protobuf::uint32 CSOTFPartyMember::skillrating() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyMember.skillrating)
  return skillrating_;
}
inline void CSOTFPartyMember::set_skillrating(::google::protobuf::uint32 value) {
  set_has_skillrating();
  skillrating_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPartyMember.skillrating)
}

// -------------------------------------------------------------------

// CMsgMatchSearchCriteria

// optional .TF_MatchmakingMode matchmaking_mode = 7 [default = TF_Matchmaking_INVALID];
inline bool CMsgMatchSearchCriteria::has_matchmaking_mode() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgMatchSearchCriteria::set_has_matchmaking_mode() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgMatchSearchCriteria::clear_has_matchmaking_mode() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgMatchSearchCriteria::clear_matchmaking_mode() {
  matchmaking_mode_ = 0;
  clear_has_matchmaking_mode();
}
inline ::TF_MatchmakingMode CMsgMatchSearchCriteria::matchmaking_mode() const {
  // @@protoc_insertion_point(field_get:CMsgMatchSearchCriteria.matchmaking_mode)
  return static_cast< ::TF_MatchmakingMode >(matchmaking_mode_);
}
inline void CMsgMatchSearchCriteria::set_matchmaking_mode(::TF_MatchmakingMode value) {
  assert(::TF_MatchmakingMode_IsValid(value));
  set_has_matchmaking_mode();
  matchmaking_mode_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchSearchCriteria.matchmaking_mode)
}

// optional bool late_join_ok = 5;
inline bool CMsgMatchSearchCriteria::has_late_join_ok() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgMatchSearchCriteria::set_has_late_join_ok() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgMatchSearchCriteria::clear_has_late_join_ok() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgMatchSearchCriteria::clear_late_join_ok() {
  late_join_ok_ = false;
  clear_has_late_join_ok();
}
inline bool CMsgMatchSearchCriteria::late_join_ok() const {
  // @@protoc_insertion_point(field_get:CMsgMatchSearchCriteria.late_join_ok)
  return late_join_ok_;
}
inline void CMsgMatchSearchCriteria::set_late_join_ok(bool value) {
  set_has_late_join_ok();
  late_join_ok_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchSearchCriteria.late_join_ok)
}

// optional uint32 custom_ping_tolerance = 13 [default = 0];
inline bool CMsgMatchSearchCriteria::has_custom_ping_tolerance() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgMatchSearchCriteria::set_has_custom_ping_tolerance() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgMatchSearchCriteria::clear_has_custom_ping_tolerance() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgMatchSearchCriteria::clear_custom_ping_tolerance() {
  custom_ping_tolerance_ = 0u;
  clear_has_custom_ping_tolerance();
}
inline ::google::protobuf::uint32 CMsgMatchSearchCriteria::custom_ping_tolerance() const {
  // @@protoc_insertion_point(field_get:CMsgMatchSearchCriteria.custom_ping_tolerance)
  return custom_ping_tolerance_;
}
inline void CMsgMatchSearchCriteria::set_custom_ping_tolerance(::google::protobuf::uint32 value) {
  set_has_custom_ping_tolerance();
  custom_ping_tolerance_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchSearchCriteria.custom_ping_tolerance)
}

// optional string mvm_mannup_tour = 10;
inline bool CMsgMatchSearchCriteria::has_mvm_mannup_tour() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgMatchSearchCriteria::set_has_mvm_mannup_tour() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgMatchSearchCriteria::clear_has_mvm_mannup_tour() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgMatchSearchCriteria::clear_mvm_mannup_tour() {
  mvm_mannup_tour_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mvm_mannup_tour();
}
inline const ::std::string& CMsgMatchSearchCriteria::mvm_mannup_tour() const {
  // @@protoc_insertion_point(field_get:CMsgMatchSearchCriteria.mvm_mannup_tour)
  return mvm_mannup_tour_.GetNoArena();
}
inline void CMsgMatchSearchCriteria::set_mvm_mannup_tour(const ::std::string& value) {
  set_has_mvm_mannup_tour();
  mvm_mannup_tour_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgMatchSearchCriteria.mvm_mannup_tour)
}
#if LANG_CXX11
inline void CMsgMatchSearchCriteria::set_mvm_mannup_tour(::std::string&& value) {
  set_has_mvm_mannup_tour();
  mvm_mannup_tour_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgMatchSearchCriteria.mvm_mannup_tour)
}
#endif
inline void CMsgMatchSearchCriteria::set_mvm_mannup_tour(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mvm_mannup_tour();
  mvm_mannup_tour_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgMatchSearchCriteria.mvm_mannup_tour)
}
inline void CMsgMatchSearchCriteria::set_mvm_mannup_tour(const char* value, size_t size) {
  set_has_mvm_mannup_tour();
  mvm_mannup_tour_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgMatchSearchCriteria.mvm_mannup_tour)
}
inline ::std::string* CMsgMatchSearchCriteria::mutable_mvm_mannup_tour() {
  set_has_mvm_mannup_tour();
  // @@protoc_insertion_point(field_mutable:CMsgMatchSearchCriteria.mvm_mannup_tour)
  return mvm_mannup_tour_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgMatchSearchCriteria::release_mvm_mannup_tour() {
  // @@protoc_insertion_point(field_release:CMsgMatchSearchCriteria.mvm_mannup_tour)
  clear_has_mvm_mannup_tour();
  return mvm_mannup_tour_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgMatchSearchCriteria::set_allocated_mvm_mannup_tour(::std::string* mvm_mannup_tour) {
  if (mvm_mannup_tour != NULL) {
    set_has_mvm_mannup_tour();
  } else {
    clear_has_mvm_mannup_tour();
  }
  mvm_mannup_tour_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mvm_mannup_tour);
  // @@protoc_insertion_point(field_set_allocated:CMsgMatchSearchCriteria.mvm_mannup_tour)
}

// repeated string mvm_missions = 9;
inline int CMsgMatchSearchCriteria::mvm_missions_size() const {
  return mvm_missions_.size();
}
inline void CMsgMatchSearchCriteria::clear_mvm_missions() {
  mvm_missions_.Clear();
}
inline const ::std::string& CMsgMatchSearchCriteria::mvm_missions(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMatchSearchCriteria.mvm_missions)
  return mvm_missions_.Get(index);
}
inline ::std::string* CMsgMatchSearchCriteria::mutable_mvm_missions(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgMatchSearchCriteria.mvm_missions)
  return mvm_missions_.Mutable(index);
}
inline void CMsgMatchSearchCriteria::set_mvm_missions(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CMsgMatchSearchCriteria.mvm_missions)
  mvm_missions_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CMsgMatchSearchCriteria::set_mvm_missions(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:CMsgMatchSearchCriteria.mvm_missions)
  mvm_missions_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CMsgMatchSearchCriteria::set_mvm_missions(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  mvm_missions_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgMatchSearchCriteria.mvm_missions)
}
inline void CMsgMatchSearchCriteria::set_mvm_missions(int index, const char* value, size_t size) {
  mvm_missions_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgMatchSearchCriteria.mvm_missions)
}
inline ::std::string* CMsgMatchSearchCriteria::add_mvm_missions() {
  // @@protoc_insertion_point(field_add_mutable:CMsgMatchSearchCriteria.mvm_missions)
  return mvm_missions_.Add();
}
inline void CMsgMatchSearchCriteria::add_mvm_missions(const ::std::string& value) {
  mvm_missions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CMsgMatchSearchCriteria.mvm_missions)
}
#if LANG_CXX11
inline void CMsgMatchSearchCriteria::add_mvm_missions(::std::string&& value) {
  mvm_missions_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CMsgMatchSearchCriteria.mvm_missions)
}
#endif
inline void CMsgMatchSearchCriteria::add_mvm_missions(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  mvm_missions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CMsgMatchSearchCriteria.mvm_missions)
}
inline void CMsgMatchSearchCriteria::add_mvm_missions(const char* value, size_t size) {
  mvm_missions_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CMsgMatchSearchCriteria.mvm_missions)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMsgMatchSearchCriteria::mvm_missions() const {
  // @@protoc_insertion_point(field_list:CMsgMatchSearchCriteria.mvm_missions)
  return mvm_missions_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CMsgMatchSearchCriteria::mutable_mvm_missions() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMatchSearchCriteria.mvm_missions)
  return &mvm_missions_;
}

// optional bool play_for_bragging_rights = 6;
inline bool CMsgMatchSearchCriteria::has_play_for_bragging_rights() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgMatchSearchCriteria::set_has_play_for_bragging_rights() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgMatchSearchCriteria::clear_has_play_for_bragging_rights() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgMatchSearchCriteria::clear_play_for_bragging_rights() {
  play_for_bragging_rights_ = false;
  clear_has_play_for_bragging_rights();
}
inline bool CMsgMatchSearchCriteria::play_for_bragging_rights() const {
  // @@protoc_insertion_point(field_get:CMsgMatchSearchCriteria.play_for_bragging_rights)
  return play_for_bragging_rights_;
}
inline void CMsgMatchSearchCriteria::set_play_for_bragging_rights(bool value) {
  set_has_play_for_bragging_rights();
  play_for_bragging_rights_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchSearchCriteria.play_for_bragging_rights)
}

// optional uint32 quickplay_game_type = 8;
inline bool CMsgMatchSearchCriteria::has_quickplay_game_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgMatchSearchCriteria::set_has_quickplay_game_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgMatchSearchCriteria::clear_has_quickplay_game_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgMatchSearchCriteria::clear_quickplay_game_type() {
  quickplay_game_type_ = 0u;
  clear_has_quickplay_game_type();
}
inline ::google::protobuf::uint32 CMsgMatchSearchCriteria::quickplay_game_type() const {
  // @@protoc_insertion_point(field_get:CMsgMatchSearchCriteria.quickplay_game_type)
  return quickplay_game_type_;
}
inline void CMsgMatchSearchCriteria::set_quickplay_game_type(::google::protobuf::uint32 value) {
  set_has_quickplay_game_type();
  quickplay_game_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchSearchCriteria.quickplay_game_type)
}

// optional uint32 ladder_game_type = 11;
inline bool CMsgMatchSearchCriteria::has_ladder_game_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgMatchSearchCriteria::set_has_ladder_game_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgMatchSearchCriteria::clear_has_ladder_game_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgMatchSearchCriteria::clear_ladder_game_type() {
  ladder_game_type_ = 0u;
  clear_has_ladder_game_type();
}
inline ::google::protobuf::uint32 CMsgMatchSearchCriteria::ladder_game_type() const {
  // @@protoc_insertion_point(field_get:CMsgMatchSearchCriteria.ladder_game_type)
  return ladder_game_type_;
}
inline void CMsgMatchSearchCriteria::set_ladder_game_type(::google::protobuf::uint32 value) {
  set_has_ladder_game_type();
  ladder_game_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchSearchCriteria.ladder_game_type)
}

// optional .CMsgCasualMatchmakingSearchCriteria casual_criteria = 12;
inline bool CMsgMatchSearchCriteria::has_casual_criteria() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgMatchSearchCriteria::set_has_casual_criteria() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgMatchSearchCriteria::clear_has_casual_criteria() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgMatchSearchCriteria::clear_casual_criteria() {
  if (casual_criteria_ != NULL) casual_criteria_->Clear();
  clear_has_casual_criteria();
}
inline const ::CMsgCasualMatchmakingSearchCriteria& CMsgMatchSearchCriteria::casual_criteria() const {
  const ::CMsgCasualMatchmakingSearchCriteria* p = casual_criteria_;
  // @@protoc_insertion_point(field_get:CMsgMatchSearchCriteria.casual_criteria)
  return p != NULL ? *p : *reinterpret_cast<const ::CMsgCasualMatchmakingSearchCriteria*>(
      &::_CMsgCasualMatchmakingSearchCriteria_default_instance_);
}
inline ::CMsgCasualMatchmakingSearchCriteria* CMsgMatchSearchCriteria::release_casual_criteria() {
  // @@protoc_insertion_point(field_release:CMsgMatchSearchCriteria.casual_criteria)
  clear_has_casual_criteria();
  ::CMsgCasualMatchmakingSearchCriteria* temp = casual_criteria_;
  casual_criteria_ = NULL;
  return temp;
}
inline ::CMsgCasualMatchmakingSearchCriteria* CMsgMatchSearchCriteria::mutable_casual_criteria() {
  set_has_casual_criteria();
  if (casual_criteria_ == NULL) {
    casual_criteria_ = new ::CMsgCasualMatchmakingSearchCriteria;
  }
  // @@protoc_insertion_point(field_mutable:CMsgMatchSearchCriteria.casual_criteria)
  return casual_criteria_;
}
inline void CMsgMatchSearchCriteria::set_allocated_casual_criteria(::CMsgCasualMatchmakingSearchCriteria* casual_criteria) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete casual_criteria_;
  }
  if (casual_criteria) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      casual_criteria = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, casual_criteria, submessage_arena);
    }
    set_has_casual_criteria();
  } else {
    clear_has_casual_criteria();
  }
  casual_criteria_ = casual_criteria;
  // @@protoc_insertion_point(field_set_allocated:CMsgMatchSearchCriteria.casual_criteria)
}

// -------------------------------------------------------------------

// CMsgCasualMatchmakingSearchCriteria

// repeated fixed32 selected_maps_bits = 3;
inline int CMsgCasualMatchmakingSearchCriteria::selected_maps_bits_size() const {
  return selected_maps_bits_.size();
}
inline void CMsgCasualMatchmakingSearchCriteria::clear_selected_maps_bits() {
  selected_maps_bits_.Clear();
}
inline ::google::protobuf::uint32 CMsgCasualMatchmakingSearchCriteria::selected_maps_bits(int index) const {
  // @@protoc_insertion_point(field_get:CMsgCasualMatchmakingSearchCriteria.selected_maps_bits)
  return selected_maps_bits_.Get(index);
}
inline void CMsgCasualMatchmakingSearchCriteria::set_selected_maps_bits(int index, ::google::protobuf::uint32 value) {
  selected_maps_bits_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgCasualMatchmakingSearchCriteria.selected_maps_bits)
}
inline void CMsgCasualMatchmakingSearchCriteria::add_selected_maps_bits(::google::protobuf::uint32 value) {
  selected_maps_bits_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgCasualMatchmakingSearchCriteria.selected_maps_bits)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgCasualMatchmakingSearchCriteria::selected_maps_bits() const {
  // @@protoc_insertion_point(field_list:CMsgCasualMatchmakingSearchCriteria.selected_maps_bits)
  return selected_maps_bits_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgCasualMatchmakingSearchCriteria::mutable_selected_maps_bits() {
  // @@protoc_insertion_point(field_mutable_list:CMsgCasualMatchmakingSearchCriteria.selected_maps_bits)
  return &selected_maps_bits_;
}

// -------------------------------------------------------------------

// CMsgCreateOrUpdateParty

// optional .CMsgMatchSearchCriteria search_criteria = 1;
inline bool CMsgCreateOrUpdateParty::has_search_criteria() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgCreateOrUpdateParty::set_has_search_criteria() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgCreateOrUpdateParty::clear_has_search_criteria() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgCreateOrUpdateParty::clear_search_criteria() {
  if (search_criteria_ != NULL) search_criteria_->Clear();
  clear_has_search_criteria();
}
inline const ::CMsgMatchSearchCriteria& CMsgCreateOrUpdateParty::search_criteria() const {
  const ::CMsgMatchSearchCriteria* p = search_criteria_;
  // @@protoc_insertion_point(field_get:CMsgCreateOrUpdateParty.search_criteria)
  return p != NULL ? *p : *reinterpret_cast<const ::CMsgMatchSearchCriteria*>(
      &::_CMsgMatchSearchCriteria_default_instance_);
}
inline ::CMsgMatchSearchCriteria* CMsgCreateOrUpdateParty::release_search_criteria() {
  // @@protoc_insertion_point(field_release:CMsgCreateOrUpdateParty.search_criteria)
  clear_has_search_criteria();
  ::CMsgMatchSearchCriteria* temp = search_criteria_;
  search_criteria_ = NULL;
  return temp;
}
inline ::CMsgMatchSearchCriteria* CMsgCreateOrUpdateParty::mutable_search_criteria() {
  set_has_search_criteria();
  if (search_criteria_ == NULL) {
    search_criteria_ = new ::CMsgMatchSearchCriteria;
  }
  // @@protoc_insertion_point(field_mutable:CMsgCreateOrUpdateParty.search_criteria)
  return search_criteria_;
}
inline void CMsgCreateOrUpdateParty::set_allocated_search_criteria(::CMsgMatchSearchCriteria* search_criteria) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete search_criteria_;
  }
  if (search_criteria) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      search_criteria = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, search_criteria, submessage_arena);
    }
    set_has_search_criteria();
  } else {
    clear_has_search_criteria();
  }
  search_criteria_ = search_criteria;
  // @@protoc_insertion_point(field_set_allocated:CMsgCreateOrUpdateParty.search_criteria)
}

// optional fixed64 steam_lobby_id = 3;
inline bool CMsgCreateOrUpdateParty::has_steam_lobby_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgCreateOrUpdateParty::set_has_steam_lobby_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgCreateOrUpdateParty::clear_has_steam_lobby_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgCreateOrUpdateParty::clear_steam_lobby_id() {
  steam_lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_lobby_id();
}
inline ::google::protobuf::uint64 CMsgCreateOrUpdateParty::steam_lobby_id() const {
  // @@protoc_insertion_point(field_get:CMsgCreateOrUpdateParty.steam_lobby_id)
  return steam_lobby_id_;
}
inline void CMsgCreateOrUpdateParty::set_steam_lobby_id(::google::protobuf::uint64 value) {
  set_has_steam_lobby_id();
  steam_lobby_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgCreateOrUpdateParty.steam_lobby_id)
}

// optional bool squad_surplus = 4;
inline bool CMsgCreateOrUpdateParty::has_squad_surplus() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgCreateOrUpdateParty::set_has_squad_surplus() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgCreateOrUpdateParty::clear_has_squad_surplus() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgCreateOrUpdateParty::clear_squad_surplus() {
  squad_surplus_ = false;
  clear_has_squad_surplus();
}
inline bool CMsgCreateOrUpdateParty::squad_surplus() const {
  // @@protoc_insertion_point(field_get:CMsgCreateOrUpdateParty.squad_surplus)
  return squad_surplus_;
}
inline void CMsgCreateOrUpdateParty::set_squad_surplus(bool value) {
  set_has_squad_surplus();
  squad_surplus_ = value;
  // @@protoc_insertion_point(field_set:CMsgCreateOrUpdateParty.squad_surplus)
}

// optional .TF_Matchmaking_WizardStep wizard_step = 5 [default = TF_Matchmaking_WizardStep_INVALID];
inline bool CMsgCreateOrUpdateParty::has_wizard_step() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgCreateOrUpdateParty::set_has_wizard_step() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgCreateOrUpdateParty::clear_has_wizard_step() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgCreateOrUpdateParty::clear_wizard_step() {
  wizard_step_ = 0;
  clear_has_wizard_step();
}
inline ::TF_Matchmaking_WizardStep CMsgCreateOrUpdateParty::wizard_step() const {
  // @@protoc_insertion_point(field_get:CMsgCreateOrUpdateParty.wizard_step)
  return static_cast< ::TF_Matchmaking_WizardStep >(wizard_step_);
}
inline void CMsgCreateOrUpdateParty::set_wizard_step(::TF_Matchmaking_WizardStep value) {
  assert(::TF_Matchmaking_WizardStep_IsValid(value));
  set_has_wizard_step();
  wizard_step_ = value;
  // @@protoc_insertion_point(field_set:CMsgCreateOrUpdateParty.wizard_step)
}

// optional uint32 client_version = 6 [default = 1225];
inline bool CMsgCreateOrUpdateParty::has_client_version() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgCreateOrUpdateParty::set_has_client_version() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgCreateOrUpdateParty::clear_has_client_version() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgCreateOrUpdateParty::clear_client_version() {
  client_version_ = 1225u;
  clear_has_client_version();
}
inline ::google::protobuf::uint32 CMsgCreateOrUpdateParty::client_version() const {
  // @@protoc_insertion_point(field_get:CMsgCreateOrUpdateParty.client_version)
  return client_version_;
}
inline void CMsgCreateOrUpdateParty::set_client_version(::google::protobuf::uint32 value) {
  set_has_client_version();
  client_version_ = value;
  // @@protoc_insertion_point(field_set:CMsgCreateOrUpdateParty.client_version)
}

// -------------------------------------------------------------------

// CMsgCreateOrUpdatePartyReply

// optional uint32 result = 1;
inline bool CMsgCreateOrUpdatePartyReply::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgCreateOrUpdatePartyReply::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgCreateOrUpdatePartyReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgCreateOrUpdatePartyReply::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CMsgCreateOrUpdatePartyReply::result() const {
  // @@protoc_insertion_point(field_get:CMsgCreateOrUpdatePartyReply.result)
  return result_;
}
inline void CMsgCreateOrUpdatePartyReply::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgCreateOrUpdatePartyReply.result)
}

// optional string message = 2;
inline bool CMsgCreateOrUpdatePartyReply::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgCreateOrUpdatePartyReply::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgCreateOrUpdatePartyReply::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgCreateOrUpdatePartyReply::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
inline const ::std::string& CMsgCreateOrUpdatePartyReply::message() const {
  // @@protoc_insertion_point(field_get:CMsgCreateOrUpdatePartyReply.message)
  return message_.GetNoArena();
}
inline void CMsgCreateOrUpdatePartyReply::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgCreateOrUpdatePartyReply.message)
}
#if LANG_CXX11
inline void CMsgCreateOrUpdatePartyReply::set_message(::std::string&& value) {
  set_has_message();
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgCreateOrUpdatePartyReply.message)
}
#endif
inline void CMsgCreateOrUpdatePartyReply::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgCreateOrUpdatePartyReply.message)
}
inline void CMsgCreateOrUpdatePartyReply::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgCreateOrUpdatePartyReply.message)
}
inline ::std::string* CMsgCreateOrUpdatePartyReply::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:CMsgCreateOrUpdatePartyReply.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgCreateOrUpdatePartyReply::release_message() {
  // @@protoc_insertion_point(field_release:CMsgCreateOrUpdatePartyReply.message)
  clear_has_message();
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgCreateOrUpdatePartyReply::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:CMsgCreateOrUpdatePartyReply.message)
}

// optional .TF_Matchmaking_WizardStep wizard_step = 3 [default = TF_Matchmaking_WizardStep_INVALID];
inline bool CMsgCreateOrUpdatePartyReply::has_wizard_step() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgCreateOrUpdatePartyReply::set_has_wizard_step() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgCreateOrUpdatePartyReply::clear_has_wizard_step() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgCreateOrUpdatePartyReply::clear_wizard_step() {
  wizard_step_ = 0;
  clear_has_wizard_step();
}
inline ::TF_Matchmaking_WizardStep CMsgCreateOrUpdatePartyReply::wizard_step() const {
  // @@protoc_insertion_point(field_get:CMsgCreateOrUpdatePartyReply.wizard_step)
  return static_cast< ::TF_Matchmaking_WizardStep >(wizard_step_);
}
inline void CMsgCreateOrUpdatePartyReply::set_wizard_step(::TF_Matchmaking_WizardStep value) {
  assert(::TF_Matchmaking_WizardStep_IsValid(value));
  set_has_wizard_step();
  wizard_step_ = value;
  // @@protoc_insertion_point(field_set:CMsgCreateOrUpdatePartyReply.wizard_step)
}

// -------------------------------------------------------------------

// CSOTFParty

// optional uint64 party_id = 1 [(.key_field) = true];
inline bool CSOTFParty::has_party_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSOTFParty::set_has_party_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSOTFParty::clear_has_party_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSOTFParty::clear_party_id() {
  party_id_ = GOOGLE_ULONGLONG(0);
  clear_has_party_id();
}
inline ::google::protobuf::uint64 CSOTFParty::party_id() const {
  // @@protoc_insertion_point(field_get:CSOTFParty.party_id)
  return party_id_;
}
inline void CSOTFParty::set_party_id(::google::protobuf::uint64 value) {
  set_has_party_id();
  party_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFParty.party_id)
}

// optional fixed64 leader_id = 2;
inline bool CSOTFParty::has_leader_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSOTFParty::set_has_leader_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSOTFParty::clear_has_leader_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSOTFParty::clear_leader_id() {
  leader_id_ = GOOGLE_ULONGLONG(0);
  clear_has_leader_id();
}
inline ::google::protobuf::uint64 CSOTFParty::leader_id() const {
  // @@protoc_insertion_point(field_get:CSOTFParty.leader_id)
  return leader_id_;
}
inline void CSOTFParty::set_leader_id(::google::protobuf::uint64 value) {
  set_has_leader_id();
  leader_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFParty.leader_id)
}

// repeated fixed64 member_ids = 3;
inline int CSOTFParty::member_ids_size() const {
  return member_ids_.size();
}
inline void CSOTFParty::clear_member_ids() {
  member_ids_.Clear();
}
inline ::google::protobuf::uint64 CSOTFParty::member_ids(int index) const {
  // @@protoc_insertion_point(field_get:CSOTFParty.member_ids)
  return member_ids_.Get(index);
}
inline void CSOTFParty::set_member_ids(int index, ::google::protobuf::uint64 value) {
  member_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CSOTFParty.member_ids)
}
inline void CSOTFParty::add_member_ids(::google::protobuf::uint64 value) {
  member_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CSOTFParty.member_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CSOTFParty::member_ids() const {
  // @@protoc_insertion_point(field_list:CSOTFParty.member_ids)
  return member_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CSOTFParty::mutable_member_ids() {
  // @@protoc_insertion_point(field_mutable_list:CSOTFParty.member_ids)
  return &member_ids_;
}

// repeated .CSOTFPartyMember members = 13;
inline int CSOTFParty::members_size() const {
  return members_.size();
}
inline void CSOTFParty::clear_members() {
  members_.Clear();
}
inline const ::CSOTFPartyMember& CSOTFParty::members(int index) const {
  // @@protoc_insertion_point(field_get:CSOTFParty.members)
  return members_.Get(index);
}
inline ::CSOTFPartyMember* CSOTFParty::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:CSOTFParty.members)
  return members_.Mutable(index);
}
inline ::CSOTFPartyMember* CSOTFParty::add_members() {
  // @@protoc_insertion_point(field_add:CSOTFParty.members)
  return members_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CSOTFPartyMember >*
CSOTFParty::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:CSOTFParty.members)
  return &members_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CSOTFPartyMember >&
CSOTFParty::members() const {
  // @@protoc_insertion_point(field_list:CSOTFParty.members)
  return members_;
}

// repeated fixed64 pending_invites = 5;
inline int CSOTFParty::pending_invites_size() const {
  return pending_invites_.size();
}
inline void CSOTFParty::clear_pending_invites() {
  pending_invites_.Clear();
}
inline ::google::protobuf::uint64 CSOTFParty::pending_invites(int index) const {
  // @@protoc_insertion_point(field_get:CSOTFParty.pending_invites)
  return pending_invites_.Get(index);
}
inline void CSOTFParty::set_pending_invites(int index, ::google::protobuf::uint64 value) {
  pending_invites_.Set(index, value);
  // @@protoc_insertion_point(field_set:CSOTFParty.pending_invites)
}
inline void CSOTFParty::add_pending_invites(::google::protobuf::uint64 value) {
  pending_invites_.Add(value);
  // @@protoc_insertion_point(field_add:CSOTFParty.pending_invites)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CSOTFParty::pending_invites() const {
  // @@protoc_insertion_point(field_list:CSOTFParty.pending_invites)
  return pending_invites_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CSOTFParty::mutable_pending_invites() {
  // @@protoc_insertion_point(field_mutable_list:CSOTFParty.pending_invites)
  return &pending_invites_;
}

// optional uint64 associated_lobby_id = 35;
inline bool CSOTFParty::has_associated_lobby_id() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CSOTFParty::set_has_associated_lobby_id() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CSOTFParty::clear_has_associated_lobby_id() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CSOTFParty::clear_associated_lobby_id() {
  associated_lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_associated_lobby_id();
}
inline ::google::protobuf::uint64 CSOTFParty::associated_lobby_id() const {
  // @@protoc_insertion_point(field_get:CSOTFParty.associated_lobby_id)
  return associated_lobby_id_;
}
inline void CSOTFParty::set_associated_lobby_id(::google::protobuf::uint64 value) {
  set_has_associated_lobby_id();
  associated_lobby_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFParty.associated_lobby_id)
}

// optional .CSOTFParty.State state = 6 [default = UI];
inline bool CSOTFParty::has_state() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSOTFParty::set_has_state() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSOTFParty::clear_has_state() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSOTFParty::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::CSOTFParty_State CSOTFParty::state() const {
  // @@protoc_insertion_point(field_get:CSOTFParty.state)
  return static_cast< ::CSOTFParty_State >(state_);
}
inline void CSOTFParty::set_state(::CSOTFParty_State value) {
  assert(::CSOTFParty_State_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:CSOTFParty.state)
}

// optional .TF_Matchmaking_WizardStep wizard_step = 29 [default = TF_Matchmaking_WizardStep_INVALID];
inline bool CSOTFParty::has_wizard_step() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CSOTFParty::set_has_wizard_step() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CSOTFParty::clear_has_wizard_step() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CSOTFParty::clear_wizard_step() {
  wizard_step_ = 0;
  clear_has_wizard_step();
}
inline ::TF_Matchmaking_WizardStep CSOTFParty::wizard_step() const {
  // @@protoc_insertion_point(field_get:CSOTFParty.wizard_step)
  return static_cast< ::TF_Matchmaking_WizardStep >(wizard_step_);
}
inline void CSOTFParty::set_wizard_step(::TF_Matchmaking_WizardStep value) {
  assert(::TF_Matchmaking_WizardStep_IsValid(value));
  set_has_wizard_step();
  wizard_step_ = value;
  // @@protoc_insertion_point(field_set:CSOTFParty.wizard_step)
}

// optional uint32 started_matchmaking_time = 7;
inline bool CSOTFParty::has_started_matchmaking_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSOTFParty::set_has_started_matchmaking_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSOTFParty::clear_has_started_matchmaking_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSOTFParty::clear_started_matchmaking_time() {
  started_matchmaking_time_ = 0u;
  clear_has_started_matchmaking_time();
}
inline ::google::protobuf::uint32 CSOTFParty::started_matchmaking_time() const {
  // @@protoc_insertion_point(field_get:CSOTFParty.started_matchmaking_time)
  return started_matchmaking_time_;
}
inline void CSOTFParty::set_started_matchmaking_time(::google::protobuf::uint32 value) {
  set_has_started_matchmaking_time();
  started_matchmaking_time_ = value;
  // @@protoc_insertion_point(field_set:CSOTFParty.started_matchmaking_time)
}

// repeated uint32 searching_players_by_group = 10;
inline int CSOTFParty::searching_players_by_group_size() const {
  return searching_players_by_group_.size();
}
inline void CSOTFParty::clear_searching_players_by_group() {
  searching_players_by_group_.Clear();
}
inline ::google::protobuf::uint32 CSOTFParty::searching_players_by_group(int index) const {
  // @@protoc_insertion_point(field_get:CSOTFParty.searching_players_by_group)
  return searching_players_by_group_.Get(index);
}
inline void CSOTFParty::set_searching_players_by_group(int index, ::google::protobuf::uint32 value) {
  searching_players_by_group_.Set(index, value);
  // @@protoc_insertion_point(field_set:CSOTFParty.searching_players_by_group)
}
inline void CSOTFParty::add_searching_players_by_group(::google::protobuf::uint32 value) {
  searching_players_by_group_.Add(value);
  // @@protoc_insertion_point(field_add:CSOTFParty.searching_players_by_group)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSOTFParty::searching_players_by_group() const {
  // @@protoc_insertion_point(field_list:CSOTFParty.searching_players_by_group)
  return searching_players_by_group_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSOTFParty::mutable_searching_players_by_group() {
  // @@protoc_insertion_point(field_mutable_list:CSOTFParty.searching_players_by_group)
  return &searching_players_by_group_;
}

// optional fixed64 steam_lobby_id = 27;
inline bool CSOTFParty::has_steam_lobby_id() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CSOTFParty::set_has_steam_lobby_id() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CSOTFParty::clear_has_steam_lobby_id() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CSOTFParty::clear_steam_lobby_id() {
  steam_lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_lobby_id();
}
inline ::google::protobuf::uint64 CSOTFParty::steam_lobby_id() const {
  // @@protoc_insertion_point(field_get:CSOTFParty.steam_lobby_id)
  return steam_lobby_id_;
}
inline void CSOTFParty::set_steam_lobby_id(::google::protobuf::uint64 value) {
  set_has_steam_lobby_id();
  steam_lobby_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFParty.steam_lobby_id)
}

// optional .TF_MatchmakingMode matchmaking_mode = 30 [default = TF_Matchmaking_INVALID];
inline bool CSOTFParty::has_matchmaking_mode() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CSOTFParty::set_has_matchmaking_mode() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CSOTFParty::clear_has_matchmaking_mode() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CSOTFParty::clear_matchmaking_mode() {
  matchmaking_mode_ = 0;
  clear_has_matchmaking_mode();
}
inline ::TF_MatchmakingMode CSOTFParty::matchmaking_mode() const {
  // @@protoc_insertion_point(field_get:CSOTFParty.matchmaking_mode)
  return static_cast< ::TF_MatchmakingMode >(matchmaking_mode_);
}
inline void CSOTFParty::set_matchmaking_mode(::TF_MatchmakingMode value) {
  assert(::TF_MatchmakingMode_IsValid(value));
  set_has_matchmaking_mode();
  matchmaking_mode_ = value;
  // @@protoc_insertion_point(field_set:CSOTFParty.matchmaking_mode)
}

// optional bool search_late_join_ok = 23;
inline bool CSOTFParty::has_search_late_join_ok() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSOTFParty::set_has_search_late_join_ok() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CSOTFParty::clear_has_search_late_join_ok() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CSOTFParty::clear_search_late_join_ok() {
  search_late_join_ok_ = false;
  clear_has_search_late_join_ok();
}
inline bool CSOTFParty::search_late_join_ok() const {
  // @@protoc_insertion_point(field_get:CSOTFParty.search_late_join_ok)
  return search_late_join_ok_;
}
inline void CSOTFParty::set_search_late_join_ok(bool value) {
  set_has_search_late_join_ok();
  search_late_join_ok_ = value;
  // @@protoc_insertion_point(field_set:CSOTFParty.search_late_join_ok)
}

// optional string search_mvm_mannup_tour = 32;
inline bool CSOTFParty::has_search_mvm_mannup_tour() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOTFParty::set_has_search_mvm_mannup_tour() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOTFParty::clear_has_search_mvm_mannup_tour() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOTFParty::clear_search_mvm_mannup_tour() {
  search_mvm_mannup_tour_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_search_mvm_mannup_tour();
}
inline const ::std::string& CSOTFParty::search_mvm_mannup_tour() const {
  // @@protoc_insertion_point(field_get:CSOTFParty.search_mvm_mannup_tour)
  return search_mvm_mannup_tour_.GetNoArena();
}
inline void CSOTFParty::set_search_mvm_mannup_tour(const ::std::string& value) {
  set_has_search_mvm_mannup_tour();
  search_mvm_mannup_tour_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSOTFParty.search_mvm_mannup_tour)
}
#if LANG_CXX11
inline void CSOTFParty::set_search_mvm_mannup_tour(::std::string&& value) {
  set_has_search_mvm_mannup_tour();
  search_mvm_mannup_tour_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CSOTFParty.search_mvm_mannup_tour)
}
#endif
inline void CSOTFParty::set_search_mvm_mannup_tour(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_search_mvm_mannup_tour();
  search_mvm_mannup_tour_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSOTFParty.search_mvm_mannup_tour)
}
inline void CSOTFParty::set_search_mvm_mannup_tour(const char* value, size_t size) {
  set_has_search_mvm_mannup_tour();
  search_mvm_mannup_tour_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSOTFParty.search_mvm_mannup_tour)
}
inline ::std::string* CSOTFParty::mutable_search_mvm_mannup_tour() {
  set_has_search_mvm_mannup_tour();
  // @@protoc_insertion_point(field_mutable:CSOTFParty.search_mvm_mannup_tour)
  return search_mvm_mannup_tour_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSOTFParty::release_search_mvm_mannup_tour() {
  // @@protoc_insertion_point(field_release:CSOTFParty.search_mvm_mannup_tour)
  clear_has_search_mvm_mannup_tour();
  return search_mvm_mannup_tour_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSOTFParty::set_allocated_search_mvm_mannup_tour(::std::string* search_mvm_mannup_tour) {
  if (search_mvm_mannup_tour != NULL) {
    set_has_search_mvm_mannup_tour();
  } else {
    clear_has_search_mvm_mannup_tour();
  }
  search_mvm_mannup_tour_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), search_mvm_mannup_tour);
  // @@protoc_insertion_point(field_set_allocated:CSOTFParty.search_mvm_mannup_tour)
}

// repeated string search_mvm_missions = 31;
inline int CSOTFParty::search_mvm_missions_size() const {
  return search_mvm_missions_.size();
}
inline void CSOTFParty::clear_search_mvm_missions() {
  search_mvm_missions_.Clear();
}
inline const ::std::string& CSOTFParty::search_mvm_missions(int index) const {
  // @@protoc_insertion_point(field_get:CSOTFParty.search_mvm_missions)
  return search_mvm_missions_.Get(index);
}
inline ::std::string* CSOTFParty::mutable_search_mvm_missions(int index) {
  // @@protoc_insertion_point(field_mutable:CSOTFParty.search_mvm_missions)
  return search_mvm_missions_.Mutable(index);
}
inline void CSOTFParty::set_search_mvm_missions(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CSOTFParty.search_mvm_missions)
  search_mvm_missions_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CSOTFParty::set_search_mvm_missions(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:CSOTFParty.search_mvm_missions)
  search_mvm_missions_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CSOTFParty::set_search_mvm_missions(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  search_mvm_missions_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CSOTFParty.search_mvm_missions)
}
inline void CSOTFParty::set_search_mvm_missions(int index, const char* value, size_t size) {
  search_mvm_missions_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSOTFParty.search_mvm_missions)
}
inline ::std::string* CSOTFParty::add_search_mvm_missions() {
  // @@protoc_insertion_point(field_add_mutable:CSOTFParty.search_mvm_missions)
  return search_mvm_missions_.Add();
}
inline void CSOTFParty::add_search_mvm_missions(const ::std::string& value) {
  search_mvm_missions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CSOTFParty.search_mvm_missions)
}
#if LANG_CXX11
inline void CSOTFParty::add_search_mvm_missions(::std::string&& value) {
  search_mvm_missions_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CSOTFParty.search_mvm_missions)
}
#endif
inline void CSOTFParty::add_search_mvm_missions(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  search_mvm_missions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CSOTFParty.search_mvm_missions)
}
inline void CSOTFParty::add_search_mvm_missions(const char* value, size_t size) {
  search_mvm_missions_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CSOTFParty.search_mvm_missions)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CSOTFParty::search_mvm_missions() const {
  // @@protoc_insertion_point(field_list:CSOTFParty.search_mvm_missions)
  return search_mvm_missions_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CSOTFParty::mutable_search_mvm_missions() {
  // @@protoc_insertion_point(field_mutable_list:CSOTFParty.search_mvm_missions)
  return &search_mvm_missions_;
}

// optional bool search_play_for_bragging_rights = 26;
inline bool CSOTFParty::has_search_play_for_bragging_rights() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CSOTFParty::set_has_search_play_for_bragging_rights() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CSOTFParty::clear_has_search_play_for_bragging_rights() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CSOTFParty::clear_search_play_for_bragging_rights() {
  search_play_for_bragging_rights_ = false;
  clear_has_search_play_for_bragging_rights();
}
inline bool CSOTFParty::search_play_for_bragging_rights() const {
  // @@protoc_insertion_point(field_get:CSOTFParty.search_play_for_bragging_rights)
  return search_play_for_bragging_rights_;
}
inline void CSOTFParty::set_search_play_for_bragging_rights(bool value) {
  set_has_search_play_for_bragging_rights();
  search_play_for_bragging_rights_ = value;
  // @@protoc_insertion_point(field_set:CSOTFParty.search_play_for_bragging_rights)
}

// optional uint32 search_quickplay_game_type = 28;
inline bool CSOTFParty::has_search_quickplay_game_type() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CSOTFParty::set_has_search_quickplay_game_type() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CSOTFParty::clear_has_search_quickplay_game_type() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CSOTFParty::clear_search_quickplay_game_type() {
  search_quickplay_game_type_ = 0u;
  clear_has_search_quickplay_game_type();
}
inline ::google::protobuf::uint32 CSOTFParty::search_quickplay_game_type() const {
  // @@protoc_insertion_point(field_get:CSOTFParty.search_quickplay_game_type)
  return search_quickplay_game_type_;
}
inline void CSOTFParty::set_search_quickplay_game_type(::google::protobuf::uint32 value) {
  set_has_search_quickplay_game_type();
  search_quickplay_game_type_ = value;
  // @@protoc_insertion_point(field_set:CSOTFParty.search_quickplay_game_type)
}

// optional uint32 search_ladder_game_type = 33;
inline bool CSOTFParty::has_search_ladder_game_type() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CSOTFParty::set_has_search_ladder_game_type() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CSOTFParty::clear_has_search_ladder_game_type() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CSOTFParty::clear_search_ladder_game_type() {
  search_ladder_game_type_ = 0u;
  clear_has_search_ladder_game_type();
}
inline ::google::protobuf::uint32 CSOTFParty::search_ladder_game_type() const {
  // @@protoc_insertion_point(field_get:CSOTFParty.search_ladder_game_type)
  return search_ladder_game_type_;
}
inline void CSOTFParty::set_search_ladder_game_type(::google::protobuf::uint32 value) {
  set_has_search_ladder_game_type();
  search_ladder_game_type_ = value;
  // @@protoc_insertion_point(field_set:CSOTFParty.search_ladder_game_type)
}

// optional .CMsgCasualMatchmakingSearchCriteria search_casual = 34;
inline bool CSOTFParty::has_search_casual() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOTFParty::set_has_search_casual() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOTFParty::clear_has_search_casual() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOTFParty::clear_search_casual() {
  if (search_casual_ != NULL) search_casual_->Clear();
  clear_has_search_casual();
}
inline const ::CMsgCasualMatchmakingSearchCriteria& CSOTFParty::search_casual() const {
  const ::CMsgCasualMatchmakingSearchCriteria* p = search_casual_;
  // @@protoc_insertion_point(field_get:CSOTFParty.search_casual)
  return p != NULL ? *p : *reinterpret_cast<const ::CMsgCasualMatchmakingSearchCriteria*>(
      &::_CMsgCasualMatchmakingSearchCriteria_default_instance_);
}
inline ::CMsgCasualMatchmakingSearchCriteria* CSOTFParty::release_search_casual() {
  // @@protoc_insertion_point(field_release:CSOTFParty.search_casual)
  clear_has_search_casual();
  ::CMsgCasualMatchmakingSearchCriteria* temp = search_casual_;
  search_casual_ = NULL;
  return temp;
}
inline ::CMsgCasualMatchmakingSearchCriteria* CSOTFParty::mutable_search_casual() {
  set_has_search_casual();
  if (search_casual_ == NULL) {
    search_casual_ = new ::CMsgCasualMatchmakingSearchCriteria;
  }
  // @@protoc_insertion_point(field_mutable:CSOTFParty.search_casual)
  return search_casual_;
}
inline void CSOTFParty::set_allocated_search_casual(::CMsgCasualMatchmakingSearchCriteria* search_casual) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete search_casual_;
  }
  if (search_casual) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      search_casual = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, search_casual, submessage_arena);
    }
    set_has_search_casual();
  } else {
    clear_has_search_casual();
  }
  search_casual_ = search_casual;
  // @@protoc_insertion_point(field_set_allocated:CSOTFParty.search_casual)
}

// optional uint32 custom_ping_tolerance = 36;
inline bool CSOTFParty::has_custom_ping_tolerance() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CSOTFParty::set_has_custom_ping_tolerance() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CSOTFParty::clear_has_custom_ping_tolerance() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CSOTFParty::clear_custom_ping_tolerance() {
  custom_ping_tolerance_ = 0u;
  clear_has_custom_ping_tolerance();
}
inline ::google::protobuf::uint32 CSOTFParty::custom_ping_tolerance() const {
  // @@protoc_insertion_point(field_get:CSOTFParty.custom_ping_tolerance)
  return custom_ping_tolerance_;
}
inline void CSOTFParty::set_custom_ping_tolerance(::google::protobuf::uint32 value) {
  set_has_custom_ping_tolerance();
  custom_ping_tolerance_ = value;
  // @@protoc_insertion_point(field_set:CSOTFParty.custom_ping_tolerance)
}

// optional uint32 matchmaking_ban_time = 18;
inline bool CSOTFParty::has_matchmaking_ban_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSOTFParty::set_has_matchmaking_ban_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSOTFParty::clear_has_matchmaking_ban_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSOTFParty::clear_matchmaking_ban_time() {
  matchmaking_ban_time_ = 0u;
  clear_has_matchmaking_ban_time();
}
inline ::google::protobuf::uint32 CSOTFParty::matchmaking_ban_time() const {
  // @@protoc_insertion_point(field_get:CSOTFParty.matchmaking_ban_time)
  return matchmaking_ban_time_;
}
inline void CSOTFParty::set_matchmaking_ban_time(::google::protobuf::uint32 value) {
  set_has_matchmaking_ban_time();
  matchmaking_ban_time_ = value;
  // @@protoc_insertion_point(field_set:CSOTFParty.matchmaking_ban_time)
}

// optional uint32 matchmaking_ban_account_id = 19;
inline bool CSOTFParty::has_matchmaking_ban_account_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSOTFParty::set_has_matchmaking_ban_account_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSOTFParty::clear_has_matchmaking_ban_account_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSOTFParty::clear_matchmaking_ban_account_id() {
  matchmaking_ban_account_id_ = 0u;
  clear_has_matchmaking_ban_account_id();
}
inline ::google::protobuf::uint32 CSOTFParty::matchmaking_ban_account_id() const {
  // @@protoc_insertion_point(field_get:CSOTFParty.matchmaking_ban_account_id)
  return matchmaking_ban_account_id_;
}
inline void CSOTFParty::set_matchmaking_ban_account_id(::google::protobuf::uint32 value) {
  set_has_matchmaking_ban_account_id();
  matchmaking_ban_account_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFParty.matchmaking_ban_account_id)
}

// optional uint32 matchmaking_low_priority_time = 20;
inline bool CSOTFParty::has_matchmaking_low_priority_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSOTFParty::set_has_matchmaking_low_priority_time() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSOTFParty::clear_has_matchmaking_low_priority_time() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSOTFParty::clear_matchmaking_low_priority_time() {
  matchmaking_low_priority_time_ = 0u;
  clear_has_matchmaking_low_priority_time();
}
inline ::google::protobuf::uint32 CSOTFParty::matchmaking_low_priority_time() const {
  // @@protoc_insertion_point(field_get:CSOTFParty.matchmaking_low_priority_time)
  return matchmaking_low_priority_time_;
}
inline void CSOTFParty::set_matchmaking_low_priority_time(::google::protobuf::uint32 value) {
  set_has_matchmaking_low_priority_time();
  matchmaking_low_priority_time_ = value;
  // @@protoc_insertion_point(field_set:CSOTFParty.matchmaking_low_priority_time)
}

// -------------------------------------------------------------------

// CSOTFPartyInvite_PartyMember

// optional string name = 1;
inline bool CSOTFPartyInvite_PartyMember::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOTFPartyInvite_PartyMember::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOTFPartyInvite_PartyMember::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOTFPartyInvite_PartyMember::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CSOTFPartyInvite_PartyMember::name() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyInvite.PartyMember.name)
  return name_.GetNoArena();
}
inline void CSOTFPartyInvite_PartyMember::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSOTFPartyInvite.PartyMember.name)
}
#if LANG_CXX11
inline void CSOTFPartyInvite_PartyMember::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CSOTFPartyInvite.PartyMember.name)
}
#endif
inline void CSOTFPartyInvite_PartyMember::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSOTFPartyInvite.PartyMember.name)
}
inline void CSOTFPartyInvite_PartyMember::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSOTFPartyInvite.PartyMember.name)
}
inline ::std::string* CSOTFPartyInvite_PartyMember::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:CSOTFPartyInvite.PartyMember.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSOTFPartyInvite_PartyMember::release_name() {
  // @@protoc_insertion_point(field_release:CSOTFPartyInvite.PartyMember.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSOTFPartyInvite_PartyMember::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CSOTFPartyInvite.PartyMember.name)
}

// optional fixed64 steam_id = 2;
inline bool CSOTFPartyInvite_PartyMember::has_steam_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOTFPartyInvite_PartyMember::set_has_steam_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOTFPartyInvite_PartyMember::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOTFPartyInvite_PartyMember::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CSOTFPartyInvite_PartyMember::steam_id() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyInvite.PartyMember.steam_id)
  return steam_id_;
}
inline void CSOTFPartyInvite_PartyMember::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPartyInvite.PartyMember.steam_id)
}

// optional uint32 avatar = 3;
inline bool CSOTFPartyInvite_PartyMember::has_avatar() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSOTFPartyInvite_PartyMember::set_has_avatar() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSOTFPartyInvite_PartyMember::clear_has_avatar() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSOTFPartyInvite_PartyMember::clear_avatar() {
  avatar_ = 0u;
  clear_has_avatar();
}
inline ::google::protobuf::uint32 CSOTFPartyInvite_PartyMember::avatar() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyInvite.PartyMember.avatar)
  return avatar_;
}
inline void CSOTFPartyInvite_PartyMember::set_avatar(::google::protobuf::uint32 value) {
  set_has_avatar();
  avatar_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPartyInvite.PartyMember.avatar)
}

// -------------------------------------------------------------------

// CSOTFPartyInvite

// optional uint64 group_id = 1 [(.key_field) = true];
inline bool CSOTFPartyInvite::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOTFPartyInvite::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOTFPartyInvite::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOTFPartyInvite::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 CSOTFPartyInvite::group_id() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyInvite.group_id)
  return group_id_;
}
inline void CSOTFPartyInvite::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPartyInvite.group_id)
}

// optional fixed64 sender_id = 2;
inline bool CSOTFPartyInvite::has_sender_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSOTFPartyInvite::set_has_sender_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSOTFPartyInvite::clear_has_sender_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSOTFPartyInvite::clear_sender_id() {
  sender_id_ = GOOGLE_ULONGLONG(0);
  clear_has_sender_id();
}
inline ::google::protobuf::uint64 CSOTFPartyInvite::sender_id() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyInvite.sender_id)
  return sender_id_;
}
inline void CSOTFPartyInvite::set_sender_id(::google::protobuf::uint64 value) {
  set_has_sender_id();
  sender_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPartyInvite.sender_id)
}

// optional string sender_name = 3;
inline bool CSOTFPartyInvite::has_sender_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOTFPartyInvite::set_has_sender_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOTFPartyInvite::clear_has_sender_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOTFPartyInvite::clear_sender_name() {
  sender_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sender_name();
}
inline const ::std::string& CSOTFPartyInvite::sender_name() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyInvite.sender_name)
  return sender_name_.GetNoArena();
}
inline void CSOTFPartyInvite::set_sender_name(const ::std::string& value) {
  set_has_sender_name();
  sender_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSOTFPartyInvite.sender_name)
}
#if LANG_CXX11
inline void CSOTFPartyInvite::set_sender_name(::std::string&& value) {
  set_has_sender_name();
  sender_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CSOTFPartyInvite.sender_name)
}
#endif
inline void CSOTFPartyInvite::set_sender_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sender_name();
  sender_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSOTFPartyInvite.sender_name)
}
inline void CSOTFPartyInvite::set_sender_name(const char* value, size_t size) {
  set_has_sender_name();
  sender_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSOTFPartyInvite.sender_name)
}
inline ::std::string* CSOTFPartyInvite::mutable_sender_name() {
  set_has_sender_name();
  // @@protoc_insertion_point(field_mutable:CSOTFPartyInvite.sender_name)
  return sender_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSOTFPartyInvite::release_sender_name() {
  // @@protoc_insertion_point(field_release:CSOTFPartyInvite.sender_name)
  clear_has_sender_name();
  return sender_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSOTFPartyInvite::set_allocated_sender_name(::std::string* sender_name) {
  if (sender_name != NULL) {
    set_has_sender_name();
  } else {
    clear_has_sender_name();
  }
  sender_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sender_name);
  // @@protoc_insertion_point(field_set_allocated:CSOTFPartyInvite.sender_name)
}

// repeated .CSOTFPartyInvite.PartyMember members = 4;
inline int CSOTFPartyInvite::members_size() const {
  return members_.size();
}
inline void CSOTFPartyInvite::clear_members() {
  members_.Clear();
}
inline const ::CSOTFPartyInvite_PartyMember& CSOTFPartyInvite::members(int index) const {
  // @@protoc_insertion_point(field_get:CSOTFPartyInvite.members)
  return members_.Get(index);
}
inline ::CSOTFPartyInvite_PartyMember* CSOTFPartyInvite::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:CSOTFPartyInvite.members)
  return members_.Mutable(index);
}
inline ::CSOTFPartyInvite_PartyMember* CSOTFPartyInvite::add_members() {
  // @@protoc_insertion_point(field_add:CSOTFPartyInvite.members)
  return members_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CSOTFPartyInvite_PartyMember >*
CSOTFPartyInvite::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:CSOTFPartyInvite.members)
  return &members_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CSOTFPartyInvite_PartyMember >&
CSOTFPartyInvite::members() const {
  // @@protoc_insertion_point(field_list:CSOTFPartyInvite.members)
  return members_;
}

// -------------------------------------------------------------------

// CTFLobbyMember

// optional fixed64 id = 1 [(.key_field) = true];
inline bool CTFLobbyMember::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CTFLobbyMember::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CTFLobbyMember::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CTFLobbyMember::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 CTFLobbyMember::id() const {
  // @@protoc_insertion_point(field_get:CTFLobbyMember.id)
  return id_;
}
inline void CTFLobbyMember::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CTFLobbyMember.id)
}

// optional .TF_GC_TEAM team = 3 [default = TF_GC_TEAM_DEFENDERS];
inline bool CTFLobbyMember::has_team() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CTFLobbyMember::set_has_team() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CTFLobbyMember::clear_has_team() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CTFLobbyMember::clear_team() {
  team_ = 0;
  clear_has_team();
}
inline ::TF_GC_TEAM CTFLobbyMember::team() const {
  // @@protoc_insertion_point(field_get:CTFLobbyMember.team)
  return static_cast< ::TF_GC_TEAM >(team_);
}
inline void CTFLobbyMember::set_team(::TF_GC_TEAM value) {
  assert(::TF_GC_TEAM_IsValid(value));
  set_has_team();
  team_ = value;
  // @@protoc_insertion_point(field_set:CTFLobbyMember.team)
}

// optional .CTFLobbyMember.ConnectState connect_state = 13 [default = INVALID];
inline bool CTFLobbyMember::has_connect_state() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CTFLobbyMember::set_has_connect_state() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CTFLobbyMember::clear_has_connect_state() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CTFLobbyMember::clear_connect_state() {
  connect_state_ = 0;
  clear_has_connect_state();
}
inline ::CTFLobbyMember_ConnectState CTFLobbyMember::connect_state() const {
  // @@protoc_insertion_point(field_get:CTFLobbyMember.connect_state)
  return static_cast< ::CTFLobbyMember_ConnectState >(connect_state_);
}
inline void CTFLobbyMember::set_connect_state(::CTFLobbyMember_ConnectState value) {
  assert(::CTFLobbyMember_ConnectState_IsValid(value));
  set_has_connect_state();
  connect_state_ = value;
  // @@protoc_insertion_point(field_set:CTFLobbyMember.connect_state)
}

// optional string name = 6;
inline bool CTFLobbyMember::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CTFLobbyMember::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CTFLobbyMember::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CTFLobbyMember::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CTFLobbyMember::name() const {
  // @@protoc_insertion_point(field_get:CTFLobbyMember.name)
  return name_.GetNoArena();
}
inline void CTFLobbyMember::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CTFLobbyMember.name)
}
#if LANG_CXX11
inline void CTFLobbyMember::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CTFLobbyMember.name)
}
#endif
inline void CTFLobbyMember::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CTFLobbyMember.name)
}
inline void CTFLobbyMember::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CTFLobbyMember.name)
}
inline ::std::string* CTFLobbyMember::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:CTFLobbyMember.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CTFLobbyMember::release_name() {
  // @@protoc_insertion_point(field_release:CTFLobbyMember.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CTFLobbyMember::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CTFLobbyMember.name)
}

// optional .TFLobbyReadyState ready_state = 11 [default = TFLobbyReadyState_UNDECLARED];
inline bool CTFLobbyMember::has_ready_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CTFLobbyMember::set_has_ready_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CTFLobbyMember::clear_has_ready_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CTFLobbyMember::clear_ready_state() {
  ready_state_ = 0;
  clear_has_ready_state();
}
inline ::TFLobbyReadyState CTFLobbyMember::ready_state() const {
  // @@protoc_insertion_point(field_get:CTFLobbyMember.ready_state)
  return static_cast< ::TFLobbyReadyState >(ready_state_);
}
inline void CTFLobbyMember::set_ready_state(::TFLobbyReadyState value) {
  assert(::TFLobbyReadyState_IsValid(value));
  set_has_ready_state();
  ready_state_ = value;
  // @@protoc_insertion_point(field_set:CTFLobbyMember.ready_state)
}

// optional uint64 party_id = 12;
inline bool CTFLobbyMember::has_party_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CTFLobbyMember::set_has_party_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CTFLobbyMember::clear_has_party_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CTFLobbyMember::clear_party_id() {
  party_id_ = GOOGLE_ULONGLONG(0);
  clear_has_party_id();
}
inline ::google::protobuf::uint64 CTFLobbyMember::party_id() const {
  // @@protoc_insertion_point(field_get:CTFLobbyMember.party_id)
  return party_id_;
}
inline void CTFLobbyMember::set_party_id(::google::protobuf::uint64 value) {
  set_has_party_id();
  party_id_ = value;
  // @@protoc_insertion_point(field_set:CTFLobbyMember.party_id)
}

// optional bool squad_surplus = 14;
inline bool CTFLobbyMember::has_squad_surplus() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CTFLobbyMember::set_has_squad_surplus() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CTFLobbyMember::clear_has_squad_surplus() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CTFLobbyMember::clear_squad_surplus() {
  squad_surplus_ = false;
  clear_has_squad_surplus();
}
inline bool CTFLobbyMember::squad_surplus() const {
  // @@protoc_insertion_point(field_get:CTFLobbyMember.squad_surplus)
  return squad_surplus_;
}
inline void CTFLobbyMember::set_squad_surplus(bool value) {
  set_has_squad_surplus();
  squad_surplus_ = value;
  // @@protoc_insertion_point(field_set:CTFLobbyMember.squad_surplus)
}

// optional uint32 badge_level = 15;
inline bool CTFLobbyMember::has_badge_level() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CTFLobbyMember::set_has_badge_level() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CTFLobbyMember::clear_has_badge_level() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CTFLobbyMember::clear_badge_level() {
  badge_level_ = 0u;
  clear_has_badge_level();
}
inline ::google::protobuf::uint32 CTFLobbyMember::badge_level() const {
  // @@protoc_insertion_point(field_get:CTFLobbyMember.badge_level)
  return badge_level_;
}
inline void CTFLobbyMember::set_badge_level(::google::protobuf::uint32 value) {
  set_has_badge_level();
  badge_level_ = value;
  // @@protoc_insertion_point(field_set:CTFLobbyMember.badge_level)
}

// optional uint32 skillrating = 16 [default = 10000];
inline bool CTFLobbyMember::has_skillrating() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CTFLobbyMember::set_has_skillrating() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CTFLobbyMember::clear_has_skillrating() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CTFLobbyMember::clear_skillrating() {
  skillrating_ = 10000u;
  clear_has_skillrating();
}
inline ::google::protobuf::uint32 CTFLobbyMember::skillrating() const {
  // @@protoc_insertion_point(field_get:CTFLobbyMember.skillrating)
  return skillrating_;
}
inline void CTFLobbyMember::set_skillrating(::google::protobuf::uint32 value) {
  set_has_skillrating();
  skillrating_ = value;
  // @@protoc_insertion_point(field_set:CTFLobbyMember.skillrating)
}

// optional uint32 last_connect_time = 17;
inline bool CTFLobbyMember::has_last_connect_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CTFLobbyMember::set_has_last_connect_time() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CTFLobbyMember::clear_has_last_connect_time() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CTFLobbyMember::clear_last_connect_time() {
  last_connect_time_ = 0u;
  clear_has_last_connect_time();
}
inline ::google::protobuf::uint32 CTFLobbyMember::last_connect_time() const {
  // @@protoc_insertion_point(field_get:CTFLobbyMember.last_connect_time)
  return last_connect_time_;
}
inline void CTFLobbyMember::set_last_connect_time(::google::protobuf::uint32 value) {
  set_has_last_connect_time();
  last_connect_time_ = value;
  // @@protoc_insertion_point(field_set:CTFLobbyMember.last_connect_time)
}

// -------------------------------------------------------------------

// CLobbyPendingPlayerReport

// optional uint32 account_id = 1;
inline bool CLobbyPendingPlayerReport::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CLobbyPendingPlayerReport::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CLobbyPendingPlayerReport::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CLobbyPendingPlayerReport::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CLobbyPendingPlayerReport::account_id() const {
  // @@protoc_insertion_point(field_get:CLobbyPendingPlayerReport.account_id)
  return account_id_;
}
inline void CLobbyPendingPlayerReport::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CLobbyPendingPlayerReport.account_id)
}

// optional fixed32 date = 2;
inline bool CLobbyPendingPlayerReport::has_date() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CLobbyPendingPlayerReport::set_has_date() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CLobbyPendingPlayerReport::clear_has_date() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CLobbyPendingPlayerReport::clear_date() {
  date_ = 0u;
  clear_has_date();
}
inline ::google::protobuf::uint32 CLobbyPendingPlayerReport::date() const {
  // @@protoc_insertion_point(field_get:CLobbyPendingPlayerReport.date)
  return date_;
}
inline void CLobbyPendingPlayerReport::set_date(::google::protobuf::uint32 value) {
  set_has_date();
  date_ = value;
  // @@protoc_insertion_point(field_set:CLobbyPendingPlayerReport.date)
}

// -------------------------------------------------------------------

// CSOTFGameServerLobby

// optional uint64 lobby_id = 1 [(.key_field) = true];
inline bool CSOTFGameServerLobby::has_lobby_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSOTFGameServerLobby::set_has_lobby_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSOTFGameServerLobby::clear_has_lobby_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSOTFGameServerLobby::clear_lobby_id() {
  lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_lobby_id();
}
inline ::google::protobuf::uint64 CSOTFGameServerLobby::lobby_id() const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.lobby_id)
  return lobby_id_;
}
inline void CSOTFGameServerLobby::set_lobby_id(::google::protobuf::uint64 value) {
  set_has_lobby_id();
  lobby_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.lobby_id)
}

// repeated .CTFLobbyMember members = 2;
inline int CSOTFGameServerLobby::members_size() const {
  return members_.size();
}
inline void CSOTFGameServerLobby::clear_members() {
  members_.Clear();
}
inline const ::CTFLobbyMember& CSOTFGameServerLobby::members(int index) const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.members)
  return members_.Get(index);
}
inline ::CTFLobbyMember* CSOTFGameServerLobby::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:CSOTFGameServerLobby.members)
  return members_.Mutable(index);
}
inline ::CTFLobbyMember* CSOTFGameServerLobby::add_members() {
  // @@protoc_insertion_point(field_add:CSOTFGameServerLobby.members)
  return members_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CTFLobbyMember >*
CSOTFGameServerLobby::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:CSOTFGameServerLobby.members)
  return &members_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CTFLobbyMember >&
CSOTFGameServerLobby::members() const {
  // @@protoc_insertion_point(field_list:CSOTFGameServerLobby.members)
  return members_;
}

// optional fixed64 leader_id = 11;
inline bool CSOTFGameServerLobby::has_leader_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSOTFGameServerLobby::set_has_leader_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSOTFGameServerLobby::clear_has_leader_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSOTFGameServerLobby::clear_leader_id() {
  leader_id_ = GOOGLE_ULONGLONG(0);
  clear_has_leader_id();
}
inline ::google::protobuf::uint64 CSOTFGameServerLobby::leader_id() const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.leader_id)
  return leader_id_;
}
inline void CSOTFGameServerLobby::set_leader_id(::google::protobuf::uint64 value) {
  set_has_leader_id();
  leader_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.leader_id)
}

// optional fixed64 server_id = 6 [default = 0];
inline bool CSOTFGameServerLobby::has_server_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSOTFGameServerLobby::set_has_server_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSOTFGameServerLobby::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSOTFGameServerLobby::clear_server_id() {
  server_id_ = GOOGLE_ULONGLONG(0);
  clear_has_server_id();
}
inline ::google::protobuf::uint64 CSOTFGameServerLobby::server_id() const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.server_id)
  return server_id_;
}
inline void CSOTFGameServerLobby::set_server_id(::google::protobuf::uint64 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.server_id)
}

// repeated fixed64 pending_invites = 10;
inline int CSOTFGameServerLobby::pending_invites_size() const {
  return pending_invites_.size();
}
inline void CSOTFGameServerLobby::clear_pending_invites() {
  pending_invites_.Clear();
}
inline ::google::protobuf::uint64 CSOTFGameServerLobby::pending_invites(int index) const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.pending_invites)
  return pending_invites_.Get(index);
}
inline void CSOTFGameServerLobby::set_pending_invites(int index, ::google::protobuf::uint64 value) {
  pending_invites_.Set(index, value);
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.pending_invites)
}
inline void CSOTFGameServerLobby::add_pending_invites(::google::protobuf::uint64 value) {
  pending_invites_.Add(value);
  // @@protoc_insertion_point(field_add:CSOTFGameServerLobby.pending_invites)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CSOTFGameServerLobby::pending_invites() const {
  // @@protoc_insertion_point(field_list:CSOTFGameServerLobby.pending_invites)
  return pending_invites_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CSOTFGameServerLobby::mutable_pending_invites() {
  // @@protoc_insertion_point(field_mutable_list:CSOTFGameServerLobby.pending_invites)
  return &pending_invites_;
}

// optional .CSOTFGameServerLobby.State state = 4 [default = UNKNOWN];
inline bool CSOTFGameServerLobby::has_state() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSOTFGameServerLobby::set_has_state() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSOTFGameServerLobby::clear_has_state() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSOTFGameServerLobby::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::CSOTFGameServerLobby_State CSOTFGameServerLobby::state() const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.state)
  return static_cast< ::CSOTFGameServerLobby_State >(state_);
}
inline void CSOTFGameServerLobby::set_state(::CSOTFGameServerLobby_State value) {
  assert(::CSOTFGameServerLobby_State_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.state)
}

// optional string connect = 5;
inline bool CSOTFGameServerLobby::has_connect() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOTFGameServerLobby::set_has_connect() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOTFGameServerLobby::clear_has_connect() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOTFGameServerLobby::clear_connect() {
  connect_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_connect();
}
inline const ::std::string& CSOTFGameServerLobby::connect() const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.connect)
  return connect_.GetNoArena();
}
inline void CSOTFGameServerLobby::set_connect(const ::std::string& value) {
  set_has_connect();
  connect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.connect)
}
#if LANG_CXX11
inline void CSOTFGameServerLobby::set_connect(::std::string&& value) {
  set_has_connect();
  connect_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CSOTFGameServerLobby.connect)
}
#endif
inline void CSOTFGameServerLobby::set_connect(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_connect();
  connect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSOTFGameServerLobby.connect)
}
inline void CSOTFGameServerLobby::set_connect(const char* value, size_t size) {
  set_has_connect();
  connect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSOTFGameServerLobby.connect)
}
inline ::std::string* CSOTFGameServerLobby::mutable_connect() {
  set_has_connect();
  // @@protoc_insertion_point(field_mutable:CSOTFGameServerLobby.connect)
  return connect_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSOTFGameServerLobby::release_connect() {
  // @@protoc_insertion_point(field_release:CSOTFGameServerLobby.connect)
  clear_has_connect();
  return connect_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSOTFGameServerLobby::set_allocated_connect(::std::string* connect) {
  if (connect != NULL) {
    set_has_connect();
  } else {
    clear_has_connect();
  }
  connect_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), connect);
  // @@protoc_insertion_point(field_set_allocated:CSOTFGameServerLobby.connect)
}

// optional .CSOTFGameServerLobby.LobbyType lobby_type = 12 [default = INVALID];
inline bool CSOTFGameServerLobby::has_lobby_type() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void CSOTFGameServerLobby::set_has_lobby_type() {
  _has_bits_[0] |= 0x04000000u;
}
inline void CSOTFGameServerLobby::clear_has_lobby_type() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void CSOTFGameServerLobby::clear_lobby_type() {
  lobby_type_ = -1;
  clear_has_lobby_type();
}
inline ::CSOTFGameServerLobby_LobbyType CSOTFGameServerLobby::lobby_type() const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.lobby_type)
  return static_cast< ::CSOTFGameServerLobby_LobbyType >(lobby_type_);
}
inline void CSOTFGameServerLobby::set_lobby_type(::CSOTFGameServerLobby_LobbyType value) {
  assert(::CSOTFGameServerLobby_LobbyType_IsValid(value));
  set_has_lobby_type();
  lobby_type_ = value;
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.lobby_type)
}

// optional bool allow_cheats = 13;
inline bool CSOTFGameServerLobby::has_allow_cheats() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CSOTFGameServerLobby::set_has_allow_cheats() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CSOTFGameServerLobby::clear_has_allow_cheats() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CSOTFGameServerLobby::clear_allow_cheats() {
  allow_cheats_ = false;
  clear_has_allow_cheats();
}
inline bool CSOTFGameServerLobby::allow_cheats() const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.allow_cheats)
  return allow_cheats_;
}
inline void CSOTFGameServerLobby::set_allow_cheats(bool value) {
  set_has_allow_cheats();
  allow_cheats_ = value;
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.allow_cheats)
}

// optional string game_name = 16;
inline bool CSOTFGameServerLobby::has_game_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOTFGameServerLobby::set_has_game_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOTFGameServerLobby::clear_has_game_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOTFGameServerLobby::clear_game_name() {
  game_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_game_name();
}
inline const ::std::string& CSOTFGameServerLobby::game_name() const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.game_name)
  return game_name_.GetNoArena();
}
inline void CSOTFGameServerLobby::set_game_name(const ::std::string& value) {
  set_has_game_name();
  game_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.game_name)
}
#if LANG_CXX11
inline void CSOTFGameServerLobby::set_game_name(::std::string&& value) {
  set_has_game_name();
  game_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CSOTFGameServerLobby.game_name)
}
#endif
inline void CSOTFGameServerLobby::set_game_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_game_name();
  game_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSOTFGameServerLobby.game_name)
}
inline void CSOTFGameServerLobby::set_game_name(const char* value, size_t size) {
  set_has_game_name();
  game_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSOTFGameServerLobby.game_name)
}
inline ::std::string* CSOTFGameServerLobby::mutable_game_name() {
  set_has_game_name();
  // @@protoc_insertion_point(field_mutable:CSOTFGameServerLobby.game_name)
  return game_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSOTFGameServerLobby::release_game_name() {
  // @@protoc_insertion_point(field_release:CSOTFGameServerLobby.game_name)
  clear_has_game_name();
  return game_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSOTFGameServerLobby::set_allocated_game_name(::std::string* game_name) {
  if (game_name != NULL) {
    set_has_game_name();
  } else {
    clear_has_game_name();
  }
  game_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), game_name);
  // @@protoc_insertion_point(field_set_allocated:CSOTFGameServerLobby.game_name)
}

// optional uint32 server_region = 21 [default = 0];
inline bool CSOTFGameServerLobby::has_server_region() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSOTFGameServerLobby::set_has_server_region() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CSOTFGameServerLobby::clear_has_server_region() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CSOTFGameServerLobby::clear_server_region() {
  server_region_ = 0u;
  clear_has_server_region();
}
inline ::google::protobuf::uint32 CSOTFGameServerLobby::server_region() const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.server_region)
  return server_region_;
}
inline void CSOTFGameServerLobby::set_server_region(::google::protobuf::uint32 value) {
  set_has_server_region();
  server_region_ = value;
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.server_region)
}

// optional .TF_GC_GameState game_state = 22 [default = TF_GC_GAMESTATE_STATE_INIT];
inline bool CSOTFGameServerLobby::has_game_state() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CSOTFGameServerLobby::set_has_game_state() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CSOTFGameServerLobby::clear_has_game_state() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CSOTFGameServerLobby::clear_game_state() {
  game_state_ = 0;
  clear_has_game_state();
}
inline ::TF_GC_GameState CSOTFGameServerLobby::game_state() const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.game_state)
  return static_cast< ::TF_GC_GameState >(game_state_);
}
inline void CSOTFGameServerLobby::set_game_state(::TF_GC_GameState value) {
  assert(::TF_GC_GameState_IsValid(value));
  set_has_game_state();
  game_state_ = value;
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.game_state)
}

// optional uint32 num_spectators = 23;
inline bool CSOTFGameServerLobby::has_num_spectators() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CSOTFGameServerLobby::set_has_num_spectators() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CSOTFGameServerLobby::clear_has_num_spectators() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CSOTFGameServerLobby::clear_num_spectators() {
  num_spectators_ = 0u;
  clear_has_num_spectators();
}
inline ::google::protobuf::uint32 CSOTFGameServerLobby::num_spectators() const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.num_spectators)
  return num_spectators_;
}
inline void CSOTFGameServerLobby::set_num_spectators(::google::protobuf::uint32 value) {
  set_has_num_spectators();
  num_spectators_ = value;
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.num_spectators)
}

// optional float readyup_remaining_time = 26;
inline bool CSOTFGameServerLobby::has_readyup_remaining_time() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CSOTFGameServerLobby::set_has_readyup_remaining_time() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CSOTFGameServerLobby::clear_has_readyup_remaining_time() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CSOTFGameServerLobby::clear_readyup_remaining_time() {
  readyup_remaining_time_ = 0;
  clear_has_readyup_remaining_time();
}
inline float CSOTFGameServerLobby::readyup_remaining_time() const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.readyup_remaining_time)
  return readyup_remaining_time_;
}
inline void CSOTFGameServerLobby::set_readyup_remaining_time(float value) {
  set_has_readyup_remaining_time();
  readyup_remaining_time_ = value;
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.readyup_remaining_time)
}

// optional bool allow_spectating = 31 [default = true];
inline bool CSOTFGameServerLobby::has_allow_spectating() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void CSOTFGameServerLobby::set_has_allow_spectating() {
  _has_bits_[0] |= 0x08000000u;
}
inline void CSOTFGameServerLobby::clear_has_allow_spectating() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void CSOTFGameServerLobby::clear_allow_spectating() {
  allow_spectating_ = true;
  clear_has_allow_spectating();
}
inline bool CSOTFGameServerLobby::allow_spectating() const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.allow_spectating)
  return allow_spectating_;
}
inline void CSOTFGameServerLobby::set_allow_spectating(bool value) {
  set_has_allow_spectating();
  allow_spectating_ = value;
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.allow_spectating)
}

// optional uint32 average_rank = 32;
inline bool CSOTFGameServerLobby::has_average_rank() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CSOTFGameServerLobby::set_has_average_rank() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CSOTFGameServerLobby::clear_has_average_rank() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CSOTFGameServerLobby::clear_average_rank() {
  average_rank_ = 0u;
  clear_has_average_rank();
}
inline ::google::protobuf::uint32 CSOTFGameServerLobby::average_rank() const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.average_rank)
  return average_rank_;
}
inline void CSOTFGameServerLobby::set_average_rank(::google::protobuf::uint32 value) {
  set_has_average_rank();
  average_rank_ = value;
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.average_rank)
}

// optional fixed64 load_game_lobby_id = 33;
inline bool CSOTFGameServerLobby::has_load_game_lobby_id() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CSOTFGameServerLobby::set_has_load_game_lobby_id() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CSOTFGameServerLobby::clear_has_load_game_lobby_id() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CSOTFGameServerLobby::clear_load_game_lobby_id() {
  load_game_lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_load_game_lobby_id();
}
inline ::google::protobuf::uint64 CSOTFGameServerLobby::load_game_lobby_id() const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.load_game_lobby_id)
  return load_game_lobby_id_;
}
inline void CSOTFGameServerLobby::set_load_game_lobby_id(::google::protobuf::uint64 value) {
  set_has_load_game_lobby_id();
  load_game_lobby_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.load_game_lobby_id)
}

// optional uint32 load_game_save_number = 34;
inline bool CSOTFGameServerLobby::has_load_game_save_number() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CSOTFGameServerLobby::set_has_load_game_save_number() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CSOTFGameServerLobby::clear_has_load_game_save_number() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CSOTFGameServerLobby::clear_load_game_save_number() {
  load_game_save_number_ = 0u;
  clear_has_load_game_save_number();
}
inline ::google::protobuf::uint32 CSOTFGameServerLobby::load_game_save_number() const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.load_game_save_number)
  return load_game_save_number_;
}
inline void CSOTFGameServerLobby::set_load_game_save_number(::google::protobuf::uint32 value) {
  set_has_load_game_save_number();
  load_game_save_number_ = value;
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.load_game_save_number)
}

// optional string mannup_tour_name = 42;
inline bool CSOTFGameServerLobby::has_mannup_tour_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSOTFGameServerLobby::set_has_mannup_tour_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSOTFGameServerLobby::clear_has_mannup_tour_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSOTFGameServerLobby::clear_mannup_tour_name() {
  mannup_tour_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mannup_tour_name();
}
inline const ::std::string& CSOTFGameServerLobby::mannup_tour_name() const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.mannup_tour_name)
  return mannup_tour_name_.GetNoArena();
}
inline void CSOTFGameServerLobby::set_mannup_tour_name(const ::std::string& value) {
  set_has_mannup_tour_name();
  mannup_tour_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.mannup_tour_name)
}
#if LANG_CXX11
inline void CSOTFGameServerLobby::set_mannup_tour_name(::std::string&& value) {
  set_has_mannup_tour_name();
  mannup_tour_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CSOTFGameServerLobby.mannup_tour_name)
}
#endif
inline void CSOTFGameServerLobby::set_mannup_tour_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mannup_tour_name();
  mannup_tour_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSOTFGameServerLobby.mannup_tour_name)
}
inline void CSOTFGameServerLobby::set_mannup_tour_name(const char* value, size_t size) {
  set_has_mannup_tour_name();
  mannup_tour_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSOTFGameServerLobby.mannup_tour_name)
}
inline ::std::string* CSOTFGameServerLobby::mutable_mannup_tour_name() {
  set_has_mannup_tour_name();
  // @@protoc_insertion_point(field_mutable:CSOTFGameServerLobby.mannup_tour_name)
  return mannup_tour_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSOTFGameServerLobby::release_mannup_tour_name() {
  // @@protoc_insertion_point(field_release:CSOTFGameServerLobby.mannup_tour_name)
  clear_has_mannup_tour_name();
  return mannup_tour_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSOTFGameServerLobby::set_allocated_mannup_tour_name(::std::string* mannup_tour_name) {
  if (mannup_tour_name != NULL) {
    set_has_mannup_tour_name();
  } else {
    clear_has_mannup_tour_name();
  }
  mannup_tour_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mannup_tour_name);
  // @@protoc_insertion_point(field_set_allocated:CSOTFGameServerLobby.mannup_tour_name)
}

// optional string map_name = 38;
inline bool CSOTFGameServerLobby::has_map_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSOTFGameServerLobby::set_has_map_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSOTFGameServerLobby::clear_has_map_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSOTFGameServerLobby::clear_map_name() {
  map_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_map_name();
}
inline const ::std::string& CSOTFGameServerLobby::map_name() const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.map_name)
  return map_name_.GetNoArena();
}
inline void CSOTFGameServerLobby::set_map_name(const ::std::string& value) {
  set_has_map_name();
  map_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.map_name)
}
#if LANG_CXX11
inline void CSOTFGameServerLobby::set_map_name(::std::string&& value) {
  set_has_map_name();
  map_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CSOTFGameServerLobby.map_name)
}
#endif
inline void CSOTFGameServerLobby::set_map_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_map_name();
  map_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSOTFGameServerLobby.map_name)
}
inline void CSOTFGameServerLobby::set_map_name(const char* value, size_t size) {
  set_has_map_name();
  map_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSOTFGameServerLobby.map_name)
}
inline ::std::string* CSOTFGameServerLobby::mutable_map_name() {
  set_has_map_name();
  // @@protoc_insertion_point(field_mutable:CSOTFGameServerLobby.map_name)
  return map_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSOTFGameServerLobby::release_map_name() {
  // @@protoc_insertion_point(field_release:CSOTFGameServerLobby.map_name)
  clear_has_map_name();
  return map_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSOTFGameServerLobby::set_allocated_map_name(::std::string* map_name) {
  if (map_name != NULL) {
    set_has_map_name();
  } else {
    clear_has_map_name();
  }
  map_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), map_name);
  // @@protoc_insertion_point(field_set_allocated:CSOTFGameServerLobby.map_name)
}

// optional string mission_name = 39;
inline bool CSOTFGameServerLobby::has_mission_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSOTFGameServerLobby::set_has_mission_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSOTFGameServerLobby::clear_has_mission_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSOTFGameServerLobby::clear_mission_name() {
  mission_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mission_name();
}
inline const ::std::string& CSOTFGameServerLobby::mission_name() const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.mission_name)
  return mission_name_.GetNoArena();
}
inline void CSOTFGameServerLobby::set_mission_name(const ::std::string& value) {
  set_has_mission_name();
  mission_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.mission_name)
}
#if LANG_CXX11
inline void CSOTFGameServerLobby::set_mission_name(::std::string&& value) {
  set_has_mission_name();
  mission_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CSOTFGameServerLobby.mission_name)
}
#endif
inline void CSOTFGameServerLobby::set_mission_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mission_name();
  mission_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CSOTFGameServerLobby.mission_name)
}
inline void CSOTFGameServerLobby::set_mission_name(const char* value, size_t size) {
  set_has_mission_name();
  mission_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CSOTFGameServerLobby.mission_name)
}
inline ::std::string* CSOTFGameServerLobby::mutable_mission_name() {
  set_has_mission_name();
  // @@protoc_insertion_point(field_mutable:CSOTFGameServerLobby.mission_name)
  return mission_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSOTFGameServerLobby::release_mission_name() {
  // @@protoc_insertion_point(field_release:CSOTFGameServerLobby.mission_name)
  clear_has_mission_name();
  return mission_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSOTFGameServerLobby::set_allocated_mission_name(::std::string* mission_name) {
  if (mission_name != NULL) {
    set_has_mission_name();
  } else {
    clear_has_mission_name();
  }
  mission_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mission_name);
  // @@protoc_insertion_point(field_set_allocated:CSOTFGameServerLobby.mission_name)
}

// optional uint32 match_group = 41;
inline bool CSOTFGameServerLobby::has_match_group() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void CSOTFGameServerLobby::set_has_match_group() {
  _has_bits_[0] |= 0x00400000u;
}
inline void CSOTFGameServerLobby::clear_has_match_group() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void CSOTFGameServerLobby::clear_match_group() {
  match_group_ = 0u;
  clear_has_match_group();
}
inline ::google::protobuf::uint32 CSOTFGameServerLobby::match_group() const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.match_group)
  return match_group_;
}
inline void CSOTFGameServerLobby::set_match_group(::google::protobuf::uint32 value) {
  set_has_match_group();
  match_group_ = value;
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.match_group)
}

// optional uint64 match_id = 30 [default = 0];
inline bool CSOTFGameServerLobby::has_match_id() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CSOTFGameServerLobby::set_has_match_id() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CSOTFGameServerLobby::clear_has_match_id() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CSOTFGameServerLobby::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CSOTFGameServerLobby::match_id() const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.match_id)
  return match_id_;
}
inline void CSOTFGameServerLobby::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.match_id)
}

// optional fixed32 replay_salt = 35;
inline bool CSOTFGameServerLobby::has_replay_salt() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CSOTFGameServerLobby::set_has_replay_salt() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CSOTFGameServerLobby::clear_has_replay_salt() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CSOTFGameServerLobby::clear_replay_salt() {
  replay_salt_ = 0u;
  clear_has_replay_salt();
}
inline ::google::protobuf::uint32 CSOTFGameServerLobby::replay_salt() const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.replay_salt)
  return replay_salt_;
}
inline void CSOTFGameServerLobby::set_replay_salt(::google::protobuf::uint32 value) {
  set_has_replay_salt();
  replay_salt_ = value;
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.replay_salt)
}

// optional uint32 formed_time = 36;
inline bool CSOTFGameServerLobby::has_formed_time() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CSOTFGameServerLobby::set_has_formed_time() {
  _has_bits_[0] |= 0x00200000u;
}
inline void CSOTFGameServerLobby::clear_has_formed_time() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void CSOTFGameServerLobby::clear_formed_time() {
  formed_time_ = 0u;
  clear_has_formed_time();
}
inline ::google::protobuf::uint32 CSOTFGameServerLobby::formed_time() const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.formed_time)
  return formed_time_;
}
inline void CSOTFGameServerLobby::set_formed_time(::google::protobuf::uint32 value) {
  set_has_formed_time();
  formed_time_ = value;
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.formed_time)
}

// optional uint32 flags = 43;
inline bool CSOTFGameServerLobby::has_flags() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void CSOTFGameServerLobby::set_has_flags() {
  _has_bits_[0] |= 0x00800000u;
}
inline void CSOTFGameServerLobby::clear_has_flags() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void CSOTFGameServerLobby::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 CSOTFGameServerLobby::flags() const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.flags)
  return flags_;
}
inline void CSOTFGameServerLobby::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.flags)
}

// optional bool late_join_eligible = 44;
inline bool CSOTFGameServerLobby::has_late_join_eligible() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CSOTFGameServerLobby::set_has_late_join_eligible() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CSOTFGameServerLobby::clear_has_late_join_eligible() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CSOTFGameServerLobby::clear_late_join_eligible() {
  late_join_eligible_ = false;
  clear_has_late_join_eligible();
}
inline bool CSOTFGameServerLobby::late_join_eligible() const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.late_join_eligible)
  return late_join_eligible_;
}
inline void CSOTFGameServerLobby::set_late_join_eligible(bool value) {
  set_has_late_join_eligible();
  late_join_eligible_ = value;
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.late_join_eligible)
}

// optional uint32 fixed_match_size = 45;
inline bool CSOTFGameServerLobby::has_fixed_match_size() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void CSOTFGameServerLobby::set_has_fixed_match_size() {
  _has_bits_[0] |= 0x01000000u;
}
inline void CSOTFGameServerLobby::clear_has_fixed_match_size() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void CSOTFGameServerLobby::clear_fixed_match_size() {
  fixed_match_size_ = 0u;
  clear_has_fixed_match_size();
}
inline ::google::protobuf::uint32 CSOTFGameServerLobby::fixed_match_size() const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.fixed_match_size)
  return fixed_match_size_;
}
inline void CSOTFGameServerLobby::set_fixed_match_size(::google::protobuf::uint32 value) {
  set_has_fixed_match_size();
  fixed_match_size_ = value;
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.fixed_match_size)
}

// optional .CSOTFGameServerLobby.WarMatch is_war_match = 46 [default = NOPE];
inline bool CSOTFGameServerLobby::has_is_war_match() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void CSOTFGameServerLobby::set_has_is_war_match() {
  _has_bits_[0] |= 0x02000000u;
}
inline void CSOTFGameServerLobby::clear_has_is_war_match() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void CSOTFGameServerLobby::clear_is_war_match() {
  is_war_match_ = 0;
  clear_has_is_war_match();
}
inline ::CSOTFGameServerLobby_WarMatch CSOTFGameServerLobby::is_war_match() const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.is_war_match)
  return static_cast< ::CSOTFGameServerLobby_WarMatch >(is_war_match_);
}
inline void CSOTFGameServerLobby::set_is_war_match(::CSOTFGameServerLobby_WarMatch value) {
  assert(::CSOTFGameServerLobby_WarMatch_IsValid(value));
  set_has_is_war_match();
  is_war_match_ = value;
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.is_war_match)
}

// repeated uint32 next_maps_for_vote = 47;
inline int CSOTFGameServerLobby::next_maps_for_vote_size() const {
  return next_maps_for_vote_.size();
}
inline void CSOTFGameServerLobby::clear_next_maps_for_vote() {
  next_maps_for_vote_.Clear();
}
inline ::google::protobuf::uint32 CSOTFGameServerLobby::next_maps_for_vote(int index) const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.next_maps_for_vote)
  return next_maps_for_vote_.Get(index);
}
inline void CSOTFGameServerLobby::set_next_maps_for_vote(int index, ::google::protobuf::uint32 value) {
  next_maps_for_vote_.Set(index, value);
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.next_maps_for_vote)
}
inline void CSOTFGameServerLobby::add_next_maps_for_vote(::google::protobuf::uint32 value) {
  next_maps_for_vote_.Add(value);
  // @@protoc_insertion_point(field_add:CSOTFGameServerLobby.next_maps_for_vote)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSOTFGameServerLobby::next_maps_for_vote() const {
  // @@protoc_insertion_point(field_list:CSOTFGameServerLobby.next_maps_for_vote)
  return next_maps_for_vote_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSOTFGameServerLobby::mutable_next_maps_for_vote() {
  // @@protoc_insertion_point(field_mutable_list:CSOTFGameServerLobby.next_maps_for_vote)
  return &next_maps_for_vote_;
}

// optional uint32 lobby_mm_version = 48;
inline bool CSOTFGameServerLobby::has_lobby_mm_version() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CSOTFGameServerLobby::set_has_lobby_mm_version() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CSOTFGameServerLobby::clear_has_lobby_mm_version() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CSOTFGameServerLobby::clear_lobby_mm_version() {
  lobby_mm_version_ = 0u;
  clear_has_lobby_mm_version();
}
inline ::google::protobuf::uint32 CSOTFGameServerLobby::lobby_mm_version() const {
  // @@protoc_insertion_point(field_get:CSOTFGameServerLobby.lobby_mm_version)
  return lobby_mm_version_;
}
inline void CSOTFGameServerLobby::set_lobby_mm_version(::google::protobuf::uint32 value) {
  set_has_lobby_mm_version();
  lobby_mm_version_ = value;
  // @@protoc_insertion_point(field_set:CSOTFGameServerLobby.lobby_mm_version)
}

// -------------------------------------------------------------------

// CMsgExitMatchmaking

// optional bool explicit_abandon = 1;
inline bool CMsgExitMatchmaking::has_explicit_abandon() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgExitMatchmaking::set_has_explicit_abandon() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgExitMatchmaking::clear_has_explicit_abandon() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgExitMatchmaking::clear_explicit_abandon() {
  explicit_abandon_ = false;
  clear_has_explicit_abandon();
}
inline bool CMsgExitMatchmaking::explicit_abandon() const {
  // @@protoc_insertion_point(field_get:CMsgExitMatchmaking.explicit_abandon)
  return explicit_abandon_;
}
inline void CMsgExitMatchmaking::set_explicit_abandon(bool value) {
  set_has_explicit_abandon();
  explicit_abandon_ = value;
  // @@protoc_insertion_point(field_set:CMsgExitMatchmaking.explicit_abandon)
}

// optional uint64 party_id = 2;
inline bool CMsgExitMatchmaking::has_party_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgExitMatchmaking::set_has_party_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgExitMatchmaking::clear_has_party_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgExitMatchmaking::clear_party_id() {
  party_id_ = GOOGLE_ULONGLONG(0);
  clear_has_party_id();
}
inline ::google::protobuf::uint64 CMsgExitMatchmaking::party_id() const {
  // @@protoc_insertion_point(field_get:CMsgExitMatchmaking.party_id)
  return party_id_;
}
inline void CMsgExitMatchmaking::set_party_id(::google::protobuf::uint64 value) {
  set_has_party_id();
  party_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgExitMatchmaking.party_id)
}

// optional uint64 lobby_id = 3;
inline bool CMsgExitMatchmaking::has_lobby_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgExitMatchmaking::set_has_lobby_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgExitMatchmaking::clear_has_lobby_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgExitMatchmaking::clear_lobby_id() {
  lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_lobby_id();
}
inline ::google::protobuf::uint64 CMsgExitMatchmaking::lobby_id() const {
  // @@protoc_insertion_point(field_get:CMsgExitMatchmaking.lobby_id)
  return lobby_id_;
}
inline void CMsgExitMatchmaking::set_lobby_id(::google::protobuf::uint64 value) {
  set_has_lobby_id();
  lobby_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgExitMatchmaking.lobby_id)
}

// -------------------------------------------------------------------

// CMsgAcceptInvite

// optional uint64 party_id = 1;
inline bool CMsgAcceptInvite::has_party_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAcceptInvite::set_has_party_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgAcceptInvite::clear_has_party_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgAcceptInvite::clear_party_id() {
  party_id_ = GOOGLE_ULONGLONG(0);
  clear_has_party_id();
}
inline ::google::protobuf::uint64 CMsgAcceptInvite::party_id() const {
  // @@protoc_insertion_point(field_get:CMsgAcceptInvite.party_id)
  return party_id_;
}
inline void CMsgAcceptInvite::set_party_id(::google::protobuf::uint64 value) {
  set_has_party_id();
  party_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgAcceptInvite.party_id)
}

// optional fixed64 steamid_lobby = 2;
inline bool CMsgAcceptInvite::has_steamid_lobby() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgAcceptInvite::set_has_steamid_lobby() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgAcceptInvite::clear_has_steamid_lobby() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgAcceptInvite::clear_steamid_lobby() {
  steamid_lobby_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid_lobby();
}
inline ::google::protobuf::uint64 CMsgAcceptInvite::steamid_lobby() const {
  // @@protoc_insertion_point(field_get:CMsgAcceptInvite.steamid_lobby)
  return steamid_lobby_;
}
inline void CMsgAcceptInvite::set_steamid_lobby(::google::protobuf::uint64 value) {
  set_has_steamid_lobby();
  steamid_lobby_ = value;
  // @@protoc_insertion_point(field_set:CMsgAcceptInvite.steamid_lobby)
}

// optional uint32 client_version = 3 [default = 1225];
inline bool CMsgAcceptInvite::has_client_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgAcceptInvite::set_has_client_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgAcceptInvite::clear_has_client_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgAcceptInvite::clear_client_version() {
  client_version_ = 1225u;
  clear_has_client_version();
}
inline ::google::protobuf::uint32 CMsgAcceptInvite::client_version() const {
  // @@protoc_insertion_point(field_get:CMsgAcceptInvite.client_version)
  return client_version_;
}
inline void CMsgAcceptInvite::set_client_version(::google::protobuf::uint32 value) {
  set_has_client_version();
  client_version_ = value;
  // @@protoc_insertion_point(field_set:CMsgAcceptInvite.client_version)
}

// -------------------------------------------------------------------

// CMsgAcceptInviteResponse

// optional int32 result_code = 1;
inline bool CMsgAcceptInviteResponse::has_result_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAcceptInviteResponse::set_has_result_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgAcceptInviteResponse::clear_has_result_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgAcceptInviteResponse::clear_result_code() {
  result_code_ = 0;
  clear_has_result_code();
}
inline ::google::protobuf::int32 CMsgAcceptInviteResponse::result_code() const {
  // @@protoc_insertion_point(field_get:CMsgAcceptInviteResponse.result_code)
  return result_code_;
}
inline void CMsgAcceptInviteResponse::set_result_code(::google::protobuf::int32 value) {
  set_has_result_code();
  result_code_ = value;
  // @@protoc_insertion_point(field_set:CMsgAcceptInviteResponse.result_code)
}

// -------------------------------------------------------------------

// CMsgReadyUp

// optional .TFLobbyReadyState state = 1 [default = TFLobbyReadyState_UNDECLARED];
inline bool CMsgReadyUp::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgReadyUp::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgReadyUp::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgReadyUp::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::TFLobbyReadyState CMsgReadyUp::state() const {
  // @@protoc_insertion_point(field_get:CMsgReadyUp.state)
  return static_cast< ::TFLobbyReadyState >(state_);
}
inline void CMsgReadyUp::set_state(::TFLobbyReadyState value) {
  assert(::TFLobbyReadyState_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:CMsgReadyUp.state)
}

// -------------------------------------------------------------------

// CMsgMatchmakingSearchCountRequest

// -------------------------------------------------------------------

// CMsgMatchmakingSearchCountResponse

// repeated uint32 searching_players_by_group = 1;
inline int CMsgMatchmakingSearchCountResponse::searching_players_by_group_size() const {
  return searching_players_by_group_.size();
}
inline void CMsgMatchmakingSearchCountResponse::clear_searching_players_by_group() {
  searching_players_by_group_.Clear();
}
inline ::google::protobuf::uint32 CMsgMatchmakingSearchCountResponse::searching_players_by_group(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingSearchCountResponse.searching_players_by_group)
  return searching_players_by_group_.Get(index);
}
inline void CMsgMatchmakingSearchCountResponse::set_searching_players_by_group(int index, ::google::protobuf::uint32 value) {
  searching_players_by_group_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgMatchmakingSearchCountResponse.searching_players_by_group)
}
inline void CMsgMatchmakingSearchCountResponse::add_searching_players_by_group(::google::protobuf::uint32 value) {
  searching_players_by_group_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgMatchmakingSearchCountResponse.searching_players_by_group)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgMatchmakingSearchCountResponse::searching_players_by_group() const {
  // @@protoc_insertion_point(field_list:CMsgMatchmakingSearchCountResponse.searching_players_by_group)
  return searching_players_by_group_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgMatchmakingSearchCountResponse::mutable_searching_players_by_group() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMatchmakingSearchCountResponse.searching_players_by_group)
  return &searching_players_by_group_;
}

// -------------------------------------------------------------------

// CMsgKickedFromMatchmakingQueue

// -------------------------------------------------------------------

// CMsgTFJoinChatChannel

// optional string persona_name = 1;
inline bool CMsgTFJoinChatChannel::has_persona_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFJoinChatChannel::set_has_persona_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFJoinChatChannel::clear_has_persona_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFJoinChatChannel::clear_persona_name() {
  persona_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_persona_name();
}
inline const ::std::string& CMsgTFJoinChatChannel::persona_name() const {
  // @@protoc_insertion_point(field_get:CMsgTFJoinChatChannel.persona_name)
  return persona_name_.GetNoArena();
}
inline void CMsgTFJoinChatChannel::set_persona_name(const ::std::string& value) {
  set_has_persona_name();
  persona_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgTFJoinChatChannel.persona_name)
}
#if LANG_CXX11
inline void CMsgTFJoinChatChannel::set_persona_name(::std::string&& value) {
  set_has_persona_name();
  persona_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgTFJoinChatChannel.persona_name)
}
#endif
inline void CMsgTFJoinChatChannel::set_persona_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_persona_name();
  persona_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgTFJoinChatChannel.persona_name)
}
inline void CMsgTFJoinChatChannel::set_persona_name(const char* value, size_t size) {
  set_has_persona_name();
  persona_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgTFJoinChatChannel.persona_name)
}
inline ::std::string* CMsgTFJoinChatChannel::mutable_persona_name() {
  set_has_persona_name();
  // @@protoc_insertion_point(field_mutable:CMsgTFJoinChatChannel.persona_name)
  return persona_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgTFJoinChatChannel::release_persona_name() {
  // @@protoc_insertion_point(field_release:CMsgTFJoinChatChannel.persona_name)
  clear_has_persona_name();
  return persona_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgTFJoinChatChannel::set_allocated_persona_name(::std::string* persona_name) {
  if (persona_name != NULL) {
    set_has_persona_name();
  } else {
    clear_has_persona_name();
  }
  persona_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), persona_name);
  // @@protoc_insertion_point(field_set_allocated:CMsgTFJoinChatChannel.persona_name)
}

// optional string channel_name = 2;
inline bool CMsgTFJoinChatChannel::has_channel_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFJoinChatChannel::set_has_channel_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFJoinChatChannel::clear_has_channel_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFJoinChatChannel::clear_channel_name() {
  channel_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_channel_name();
}
inline const ::std::string& CMsgTFJoinChatChannel::channel_name() const {
  // @@protoc_insertion_point(field_get:CMsgTFJoinChatChannel.channel_name)
  return channel_name_.GetNoArena();
}
inline void CMsgTFJoinChatChannel::set_channel_name(const ::std::string& value) {
  set_has_channel_name();
  channel_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgTFJoinChatChannel.channel_name)
}
#if LANG_CXX11
inline void CMsgTFJoinChatChannel::set_channel_name(::std::string&& value) {
  set_has_channel_name();
  channel_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgTFJoinChatChannel.channel_name)
}
#endif
inline void CMsgTFJoinChatChannel::set_channel_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_channel_name();
  channel_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgTFJoinChatChannel.channel_name)
}
inline void CMsgTFJoinChatChannel::set_channel_name(const char* value, size_t size) {
  set_has_channel_name();
  channel_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgTFJoinChatChannel.channel_name)
}
inline ::std::string* CMsgTFJoinChatChannel::mutable_channel_name() {
  set_has_channel_name();
  // @@protoc_insertion_point(field_mutable:CMsgTFJoinChatChannel.channel_name)
  return channel_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgTFJoinChatChannel::release_channel_name() {
  // @@protoc_insertion_point(field_release:CMsgTFJoinChatChannel.channel_name)
  clear_has_channel_name();
  return channel_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgTFJoinChatChannel::set_allocated_channel_name(::std::string* channel_name) {
  if (channel_name != NULL) {
    set_has_channel_name();
  } else {
    clear_has_channel_name();
  }
  channel_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel_name);
  // @@protoc_insertion_point(field_set_allocated:CMsgTFJoinChatChannel.channel_name)
}

// optional string password = 3;
inline bool CMsgTFJoinChatChannel::has_password() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTFJoinChatChannel::set_has_password() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgTFJoinChatChannel::clear_has_password() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgTFJoinChatChannel::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& CMsgTFJoinChatChannel::password() const {
  // @@protoc_insertion_point(field_get:CMsgTFJoinChatChannel.password)
  return password_.GetNoArena();
}
inline void CMsgTFJoinChatChannel::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgTFJoinChatChannel.password)
}
#if LANG_CXX11
inline void CMsgTFJoinChatChannel::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgTFJoinChatChannel.password)
}
#endif
inline void CMsgTFJoinChatChannel::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgTFJoinChatChannel.password)
}
inline void CMsgTFJoinChatChannel::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgTFJoinChatChannel.password)
}
inline ::std::string* CMsgTFJoinChatChannel::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:CMsgTFJoinChatChannel.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgTFJoinChatChannel::release_password() {
  // @@protoc_insertion_point(field_release:CMsgTFJoinChatChannel.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgTFJoinChatChannel::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:CMsgTFJoinChatChannel.password)
}

// optional .ChatChannelType_t channel_type = 4 [default = ChatChannelType_Regional];
inline bool CMsgTFJoinChatChannel::has_channel_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgTFJoinChatChannel::set_has_channel_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgTFJoinChatChannel::clear_has_channel_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgTFJoinChatChannel::clear_channel_type() {
  channel_type_ = 0;
  clear_has_channel_type();
}
inline ::ChatChannelType_t CMsgTFJoinChatChannel::channel_type() const {
  // @@protoc_insertion_point(field_get:CMsgTFJoinChatChannel.channel_type)
  return static_cast< ::ChatChannelType_t >(channel_type_);
}
inline void CMsgTFJoinChatChannel::set_channel_type(::ChatChannelType_t value) {
  assert(::ChatChannelType_t_IsValid(value));
  set_has_channel_type();
  channel_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFJoinChatChannel.channel_type)
}

// -------------------------------------------------------------------

// CMsgTFLeaveChatChannel

// optional string channel_name = 1;
inline bool CMsgTFLeaveChatChannel::has_channel_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFLeaveChatChannel::set_has_channel_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFLeaveChatChannel::clear_has_channel_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFLeaveChatChannel::clear_channel_name() {
  channel_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_channel_name();
}
inline const ::std::string& CMsgTFLeaveChatChannel::channel_name() const {
  // @@protoc_insertion_point(field_get:CMsgTFLeaveChatChannel.channel_name)
  return channel_name_.GetNoArena();
}
inline void CMsgTFLeaveChatChannel::set_channel_name(const ::std::string& value) {
  set_has_channel_name();
  channel_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgTFLeaveChatChannel.channel_name)
}
#if LANG_CXX11
inline void CMsgTFLeaveChatChannel::set_channel_name(::std::string&& value) {
  set_has_channel_name();
  channel_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgTFLeaveChatChannel.channel_name)
}
#endif
inline void CMsgTFLeaveChatChannel::set_channel_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_channel_name();
  channel_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgTFLeaveChatChannel.channel_name)
}
inline void CMsgTFLeaveChatChannel::set_channel_name(const char* value, size_t size) {
  set_has_channel_name();
  channel_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgTFLeaveChatChannel.channel_name)
}
inline ::std::string* CMsgTFLeaveChatChannel::mutable_channel_name() {
  set_has_channel_name();
  // @@protoc_insertion_point(field_mutable:CMsgTFLeaveChatChannel.channel_name)
  return channel_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgTFLeaveChatChannel::release_channel_name() {
  // @@protoc_insertion_point(field_release:CMsgTFLeaveChatChannel.channel_name)
  clear_has_channel_name();
  return channel_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgTFLeaveChatChannel::set_allocated_channel_name(::std::string* channel_name) {
  if (channel_name != NULL) {
    set_has_channel_name();
  } else {
    clear_has_channel_name();
  }
  channel_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel_name);
  // @@protoc_insertion_point(field_set_allocated:CMsgTFLeaveChatChannel.channel_name)
}

// -------------------------------------------------------------------

// CMsgTFJoinChatChannelResponse_ChatMember

// optional fixed64 steam_id = 1;
inline bool CMsgTFJoinChatChannelResponse_ChatMember::has_steam_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFJoinChatChannelResponse_ChatMember::set_has_steam_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFJoinChatChannelResponse_ChatMember::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFJoinChatChannelResponse_ChatMember::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgTFJoinChatChannelResponse_ChatMember::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgTFJoinChatChannelResponse.ChatMember.steam_id)
  return steam_id_;
}
inline void CMsgTFJoinChatChannelResponse_ChatMember::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFJoinChatChannelResponse.ChatMember.steam_id)
}

// optional string persona_name = 2;
inline bool CMsgTFJoinChatChannelResponse_ChatMember::has_persona_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFJoinChatChannelResponse_ChatMember::set_has_persona_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFJoinChatChannelResponse_ChatMember::clear_has_persona_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFJoinChatChannelResponse_ChatMember::clear_persona_name() {
  persona_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_persona_name();
}
inline const ::std::string& CMsgTFJoinChatChannelResponse_ChatMember::persona_name() const {
  // @@protoc_insertion_point(field_get:CMsgTFJoinChatChannelResponse.ChatMember.persona_name)
  return persona_name_.GetNoArena();
}
inline void CMsgTFJoinChatChannelResponse_ChatMember::set_persona_name(const ::std::string& value) {
  set_has_persona_name();
  persona_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgTFJoinChatChannelResponse.ChatMember.persona_name)
}
#if LANG_CXX11
inline void CMsgTFJoinChatChannelResponse_ChatMember::set_persona_name(::std::string&& value) {
  set_has_persona_name();
  persona_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgTFJoinChatChannelResponse.ChatMember.persona_name)
}
#endif
inline void CMsgTFJoinChatChannelResponse_ChatMember::set_persona_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_persona_name();
  persona_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgTFJoinChatChannelResponse.ChatMember.persona_name)
}
inline void CMsgTFJoinChatChannelResponse_ChatMember::set_persona_name(const char* value, size_t size) {
  set_has_persona_name();
  persona_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgTFJoinChatChannelResponse.ChatMember.persona_name)
}
inline ::std::string* CMsgTFJoinChatChannelResponse_ChatMember::mutable_persona_name() {
  set_has_persona_name();
  // @@protoc_insertion_point(field_mutable:CMsgTFJoinChatChannelResponse.ChatMember.persona_name)
  return persona_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgTFJoinChatChannelResponse_ChatMember::release_persona_name() {
  // @@protoc_insertion_point(field_release:CMsgTFJoinChatChannelResponse.ChatMember.persona_name)
  clear_has_persona_name();
  return persona_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgTFJoinChatChannelResponse_ChatMember::set_allocated_persona_name(::std::string* persona_name) {
  if (persona_name != NULL) {
    set_has_persona_name();
  } else {
    clear_has_persona_name();
  }
  persona_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), persona_name);
  // @@protoc_insertion_point(field_set_allocated:CMsgTFJoinChatChannelResponse.ChatMember.persona_name)
}

// -------------------------------------------------------------------

// CMsgTFJoinChatChannelResponse

// optional uint32 response = 1;
inline bool CMsgTFJoinChatChannelResponse::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFJoinChatChannelResponse::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFJoinChatChannelResponse::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFJoinChatChannelResponse::clear_response() {
  response_ = 0u;
  clear_has_response();
}
inline ::google::protobuf::uint32 CMsgTFJoinChatChannelResponse::response() const {
  // @@protoc_insertion_point(field_get:CMsgTFJoinChatChannelResponse.response)
  return response_;
}
inline void CMsgTFJoinChatChannelResponse::set_response(::google::protobuf::uint32 value) {
  set_has_response();
  response_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFJoinChatChannelResponse.response)
}

// optional string channel_name = 2;
inline bool CMsgTFJoinChatChannelResponse::has_channel_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFJoinChatChannelResponse::set_has_channel_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFJoinChatChannelResponse::clear_has_channel_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFJoinChatChannelResponse::clear_channel_name() {
  channel_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_channel_name();
}
inline const ::std::string& CMsgTFJoinChatChannelResponse::channel_name() const {
  // @@protoc_insertion_point(field_get:CMsgTFJoinChatChannelResponse.channel_name)
  return channel_name_.GetNoArena();
}
inline void CMsgTFJoinChatChannelResponse::set_channel_name(const ::std::string& value) {
  set_has_channel_name();
  channel_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgTFJoinChatChannelResponse.channel_name)
}
#if LANG_CXX11
inline void CMsgTFJoinChatChannelResponse::set_channel_name(::std::string&& value) {
  set_has_channel_name();
  channel_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgTFJoinChatChannelResponse.channel_name)
}
#endif
inline void CMsgTFJoinChatChannelResponse::set_channel_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_channel_name();
  channel_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgTFJoinChatChannelResponse.channel_name)
}
inline void CMsgTFJoinChatChannelResponse::set_channel_name(const char* value, size_t size) {
  set_has_channel_name();
  channel_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgTFJoinChatChannelResponse.channel_name)
}
inline ::std::string* CMsgTFJoinChatChannelResponse::mutable_channel_name() {
  set_has_channel_name();
  // @@protoc_insertion_point(field_mutable:CMsgTFJoinChatChannelResponse.channel_name)
  return channel_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgTFJoinChatChannelResponse::release_channel_name() {
  // @@protoc_insertion_point(field_release:CMsgTFJoinChatChannelResponse.channel_name)
  clear_has_channel_name();
  return channel_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgTFJoinChatChannelResponse::set_allocated_channel_name(::std::string* channel_name) {
  if (channel_name != NULL) {
    set_has_channel_name();
  } else {
    clear_has_channel_name();
  }
  channel_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel_name);
  // @@protoc_insertion_point(field_set_allocated:CMsgTFJoinChatChannelResponse.channel_name)
}

// optional fixed64 channel_id = 3;
inline bool CMsgTFJoinChatChannelResponse::has_channel_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgTFJoinChatChannelResponse::set_has_channel_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgTFJoinChatChannelResponse::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgTFJoinChatChannelResponse::clear_channel_id() {
  channel_id_ = GOOGLE_ULONGLONG(0);
  clear_has_channel_id();
}
inline ::google::protobuf::uint64 CMsgTFJoinChatChannelResponse::channel_id() const {
  // @@protoc_insertion_point(field_get:CMsgTFJoinChatChannelResponse.channel_id)
  return channel_id_;
}
inline void CMsgTFJoinChatChannelResponse::set_channel_id(::google::protobuf::uint64 value) {
  set_has_channel_id();
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFJoinChatChannelResponse.channel_id)
}

// optional uint32 max_members = 4;
inline bool CMsgTFJoinChatChannelResponse::has_max_members() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTFJoinChatChannelResponse::set_has_max_members() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgTFJoinChatChannelResponse::clear_has_max_members() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgTFJoinChatChannelResponse::clear_max_members() {
  max_members_ = 0u;
  clear_has_max_members();
}
inline ::google::protobuf::uint32 CMsgTFJoinChatChannelResponse::max_members() const {
  // @@protoc_insertion_point(field_get:CMsgTFJoinChatChannelResponse.max_members)
  return max_members_;
}
inline void CMsgTFJoinChatChannelResponse::set_max_members(::google::protobuf::uint32 value) {
  set_has_max_members();
  max_members_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFJoinChatChannelResponse.max_members)
}

// repeated .CMsgTFJoinChatChannelResponse.ChatMember members = 5;
inline int CMsgTFJoinChatChannelResponse::members_size() const {
  return members_.size();
}
inline void CMsgTFJoinChatChannelResponse::clear_members() {
  members_.Clear();
}
inline const ::CMsgTFJoinChatChannelResponse_ChatMember& CMsgTFJoinChatChannelResponse::members(int index) const {
  // @@protoc_insertion_point(field_get:CMsgTFJoinChatChannelResponse.members)
  return members_.Get(index);
}
inline ::CMsgTFJoinChatChannelResponse_ChatMember* CMsgTFJoinChatChannelResponse::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgTFJoinChatChannelResponse.members)
  return members_.Mutable(index);
}
inline ::CMsgTFJoinChatChannelResponse_ChatMember* CMsgTFJoinChatChannelResponse::add_members() {
  // @@protoc_insertion_point(field_add:CMsgTFJoinChatChannelResponse.members)
  return members_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgTFJoinChatChannelResponse_ChatMember >*
CMsgTFJoinChatChannelResponse::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:CMsgTFJoinChatChannelResponse.members)
  return &members_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgTFJoinChatChannelResponse_ChatMember >&
CMsgTFJoinChatChannelResponse::members() const {
  // @@protoc_insertion_point(field_list:CMsgTFJoinChatChannelResponse.members)
  return members_;
}

// -------------------------------------------------------------------

// CMsgTFOtherJoinedChatChannel

// optional fixed64 channel_id = 1;
inline bool CMsgTFOtherJoinedChatChannel::has_channel_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFOtherJoinedChatChannel::set_has_channel_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFOtherJoinedChatChannel::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFOtherJoinedChatChannel::clear_channel_id() {
  channel_id_ = GOOGLE_ULONGLONG(0);
  clear_has_channel_id();
}
inline ::google::protobuf::uint64 CMsgTFOtherJoinedChatChannel::channel_id() const {
  // @@protoc_insertion_point(field_get:CMsgTFOtherJoinedChatChannel.channel_id)
  return channel_id_;
}
inline void CMsgTFOtherJoinedChatChannel::set_channel_id(::google::protobuf::uint64 value) {
  set_has_channel_id();
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFOtherJoinedChatChannel.channel_id)
}

// optional string persona_name = 2;
inline bool CMsgTFOtherJoinedChatChannel::has_persona_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFOtherJoinedChatChannel::set_has_persona_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFOtherJoinedChatChannel::clear_has_persona_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFOtherJoinedChatChannel::clear_persona_name() {
  persona_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_persona_name();
}
inline const ::std::string& CMsgTFOtherJoinedChatChannel::persona_name() const {
  // @@protoc_insertion_point(field_get:CMsgTFOtherJoinedChatChannel.persona_name)
  return persona_name_.GetNoArena();
}
inline void CMsgTFOtherJoinedChatChannel::set_persona_name(const ::std::string& value) {
  set_has_persona_name();
  persona_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgTFOtherJoinedChatChannel.persona_name)
}
#if LANG_CXX11
inline void CMsgTFOtherJoinedChatChannel::set_persona_name(::std::string&& value) {
  set_has_persona_name();
  persona_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgTFOtherJoinedChatChannel.persona_name)
}
#endif
inline void CMsgTFOtherJoinedChatChannel::set_persona_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_persona_name();
  persona_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgTFOtherJoinedChatChannel.persona_name)
}
inline void CMsgTFOtherJoinedChatChannel::set_persona_name(const char* value, size_t size) {
  set_has_persona_name();
  persona_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgTFOtherJoinedChatChannel.persona_name)
}
inline ::std::string* CMsgTFOtherJoinedChatChannel::mutable_persona_name() {
  set_has_persona_name();
  // @@protoc_insertion_point(field_mutable:CMsgTFOtherJoinedChatChannel.persona_name)
  return persona_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgTFOtherJoinedChatChannel::release_persona_name() {
  // @@protoc_insertion_point(field_release:CMsgTFOtherJoinedChatChannel.persona_name)
  clear_has_persona_name();
  return persona_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgTFOtherJoinedChatChannel::set_allocated_persona_name(::std::string* persona_name) {
  if (persona_name != NULL) {
    set_has_persona_name();
  } else {
    clear_has_persona_name();
  }
  persona_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), persona_name);
  // @@protoc_insertion_point(field_set_allocated:CMsgTFOtherJoinedChatChannel.persona_name)
}

// optional fixed64 steam_id = 3;
inline bool CMsgTFOtherJoinedChatChannel::has_steam_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTFOtherJoinedChatChannel::set_has_steam_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgTFOtherJoinedChatChannel::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgTFOtherJoinedChatChannel::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgTFOtherJoinedChatChannel::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgTFOtherJoinedChatChannel.steam_id)
  return steam_id_;
}
inline void CMsgTFOtherJoinedChatChannel::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFOtherJoinedChatChannel.steam_id)
}

// -------------------------------------------------------------------

// CMsgTFOtherLeftChatChannel

// optional fixed64 channel_id = 1;
inline bool CMsgTFOtherLeftChatChannel::has_channel_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFOtherLeftChatChannel::set_has_channel_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFOtherLeftChatChannel::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFOtherLeftChatChannel::clear_channel_id() {
  channel_id_ = GOOGLE_ULONGLONG(0);
  clear_has_channel_id();
}
inline ::google::protobuf::uint64 CMsgTFOtherLeftChatChannel::channel_id() const {
  // @@protoc_insertion_point(field_get:CMsgTFOtherLeftChatChannel.channel_id)
  return channel_id_;
}
inline void CMsgTFOtherLeftChatChannel::set_channel_id(::google::protobuf::uint64 value) {
  set_has_channel_id();
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFOtherLeftChatChannel.channel_id)
}

// optional fixed64 steam_id = 2;
inline bool CMsgTFOtherLeftChatChannel::has_steam_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFOtherLeftChatChannel::set_has_steam_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFOtherLeftChatChannel::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFOtherLeftChatChannel::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgTFOtherLeftChatChannel::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgTFOtherLeftChatChannel.steam_id)
  return steam_id_;
}
inline void CMsgTFOtherLeftChatChannel::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFOtherLeftChatChannel.steam_id)
}

// -------------------------------------------------------------------

// CMsgTFRequestDefaultChatChannel

// -------------------------------------------------------------------

// CMsgTFRequestDefaultChatChannelResponse

// optional string channel_name = 1;
inline bool CMsgTFRequestDefaultChatChannelResponse::has_channel_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFRequestDefaultChatChannelResponse::set_has_channel_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFRequestDefaultChatChannelResponse::clear_has_channel_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFRequestDefaultChatChannelResponse::clear_channel_name() {
  channel_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_channel_name();
}
inline const ::std::string& CMsgTFRequestDefaultChatChannelResponse::channel_name() const {
  // @@protoc_insertion_point(field_get:CMsgTFRequestDefaultChatChannelResponse.channel_name)
  return channel_name_.GetNoArena();
}
inline void CMsgTFRequestDefaultChatChannelResponse::set_channel_name(const ::std::string& value) {
  set_has_channel_name();
  channel_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgTFRequestDefaultChatChannelResponse.channel_name)
}
#if LANG_CXX11
inline void CMsgTFRequestDefaultChatChannelResponse::set_channel_name(::std::string&& value) {
  set_has_channel_name();
  channel_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgTFRequestDefaultChatChannelResponse.channel_name)
}
#endif
inline void CMsgTFRequestDefaultChatChannelResponse::set_channel_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_channel_name();
  channel_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgTFRequestDefaultChatChannelResponse.channel_name)
}
inline void CMsgTFRequestDefaultChatChannelResponse::set_channel_name(const char* value, size_t size) {
  set_has_channel_name();
  channel_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgTFRequestDefaultChatChannelResponse.channel_name)
}
inline ::std::string* CMsgTFRequestDefaultChatChannelResponse::mutable_channel_name() {
  set_has_channel_name();
  // @@protoc_insertion_point(field_mutable:CMsgTFRequestDefaultChatChannelResponse.channel_name)
  return channel_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgTFRequestDefaultChatChannelResponse::release_channel_name() {
  // @@protoc_insertion_point(field_release:CMsgTFRequestDefaultChatChannelResponse.channel_name)
  clear_has_channel_name();
  return channel_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgTFRequestDefaultChatChannelResponse::set_allocated_channel_name(::std::string* channel_name) {
  if (channel_name != NULL) {
    set_has_channel_name();
  } else {
    clear_has_channel_name();
  }
  channel_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel_name);
  // @@protoc_insertion_point(field_set_allocated:CMsgTFRequestDefaultChatChannelResponse.channel_name)
}

// optional fixed64 channel_id = 2;
inline bool CMsgTFRequestDefaultChatChannelResponse::has_channel_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFRequestDefaultChatChannelResponse::set_has_channel_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFRequestDefaultChatChannelResponse::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFRequestDefaultChatChannelResponse::clear_channel_id() {
  channel_id_ = GOOGLE_ULONGLONG(0);
  clear_has_channel_id();
}
inline ::google::protobuf::uint64 CMsgTFRequestDefaultChatChannelResponse::channel_id() const {
  // @@protoc_insertion_point(field_get:CMsgTFRequestDefaultChatChannelResponse.channel_id)
  return channel_id_;
}
inline void CMsgTFRequestDefaultChatChannelResponse::set_channel_id(::google::protobuf::uint64 value) {
  set_has_channel_id();
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFRequestDefaultChatChannelResponse.channel_id)
}

// -------------------------------------------------------------------

// CMsgTFRequestChatChannelList

// -------------------------------------------------------------------

// CMsgTFRequestChatChannelListResponse_ChatChannel

// optional string channel_name = 1;
inline bool CMsgTFRequestChatChannelListResponse_ChatChannel::has_channel_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFRequestChatChannelListResponse_ChatChannel::set_has_channel_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFRequestChatChannelListResponse_ChatChannel::clear_has_channel_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFRequestChatChannelListResponse_ChatChannel::clear_channel_name() {
  channel_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_channel_name();
}
inline const ::std::string& CMsgTFRequestChatChannelListResponse_ChatChannel::channel_name() const {
  // @@protoc_insertion_point(field_get:CMsgTFRequestChatChannelListResponse.ChatChannel.channel_name)
  return channel_name_.GetNoArena();
}
inline void CMsgTFRequestChatChannelListResponse_ChatChannel::set_channel_name(const ::std::string& value) {
  set_has_channel_name();
  channel_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgTFRequestChatChannelListResponse.ChatChannel.channel_name)
}
#if LANG_CXX11
inline void CMsgTFRequestChatChannelListResponse_ChatChannel::set_channel_name(::std::string&& value) {
  set_has_channel_name();
  channel_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgTFRequestChatChannelListResponse.ChatChannel.channel_name)
}
#endif
inline void CMsgTFRequestChatChannelListResponse_ChatChannel::set_channel_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_channel_name();
  channel_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgTFRequestChatChannelListResponse.ChatChannel.channel_name)
}
inline void CMsgTFRequestChatChannelListResponse_ChatChannel::set_channel_name(const char* value, size_t size) {
  set_has_channel_name();
  channel_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgTFRequestChatChannelListResponse.ChatChannel.channel_name)
}
inline ::std::string* CMsgTFRequestChatChannelListResponse_ChatChannel::mutable_channel_name() {
  set_has_channel_name();
  // @@protoc_insertion_point(field_mutable:CMsgTFRequestChatChannelListResponse.ChatChannel.channel_name)
  return channel_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgTFRequestChatChannelListResponse_ChatChannel::release_channel_name() {
  // @@protoc_insertion_point(field_release:CMsgTFRequestChatChannelListResponse.ChatChannel.channel_name)
  clear_has_channel_name();
  return channel_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgTFRequestChatChannelListResponse_ChatChannel::set_allocated_channel_name(::std::string* channel_name) {
  if (channel_name != NULL) {
    set_has_channel_name();
  } else {
    clear_has_channel_name();
  }
  channel_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel_name);
  // @@protoc_insertion_point(field_set_allocated:CMsgTFRequestChatChannelListResponse.ChatChannel.channel_name)
}

// optional uint32 num_members = 2;
inline bool CMsgTFRequestChatChannelListResponse_ChatChannel::has_num_members() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFRequestChatChannelListResponse_ChatChannel::set_has_num_members() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFRequestChatChannelListResponse_ChatChannel::clear_has_num_members() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFRequestChatChannelListResponse_ChatChannel::clear_num_members() {
  num_members_ = 0u;
  clear_has_num_members();
}
inline ::google::protobuf::uint32 CMsgTFRequestChatChannelListResponse_ChatChannel::num_members() const {
  // @@protoc_insertion_point(field_get:CMsgTFRequestChatChannelListResponse.ChatChannel.num_members)
  return num_members_;
}
inline void CMsgTFRequestChatChannelListResponse_ChatChannel::set_num_members(::google::protobuf::uint32 value) {
  set_has_num_members();
  num_members_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFRequestChatChannelListResponse.ChatChannel.num_members)
}

// optional .ChatChannelType_t channel_type = 3 [default = ChatChannelType_Regional];
inline bool CMsgTFRequestChatChannelListResponse_ChatChannel::has_channel_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTFRequestChatChannelListResponse_ChatChannel::set_has_channel_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgTFRequestChatChannelListResponse_ChatChannel::clear_has_channel_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgTFRequestChatChannelListResponse_ChatChannel::clear_channel_type() {
  channel_type_ = 0;
  clear_has_channel_type();
}
inline ::ChatChannelType_t CMsgTFRequestChatChannelListResponse_ChatChannel::channel_type() const {
  // @@protoc_insertion_point(field_get:CMsgTFRequestChatChannelListResponse.ChatChannel.channel_type)
  return static_cast< ::ChatChannelType_t >(channel_type_);
}
inline void CMsgTFRequestChatChannelListResponse_ChatChannel::set_channel_type(::ChatChannelType_t value) {
  assert(::ChatChannelType_t_IsValid(value));
  set_has_channel_type();
  channel_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFRequestChatChannelListResponse.ChatChannel.channel_type)
}

// -------------------------------------------------------------------

// CMsgTFRequestChatChannelListResponse

// repeated .CMsgTFRequestChatChannelListResponse.ChatChannel channels = 1;
inline int CMsgTFRequestChatChannelListResponse::channels_size() const {
  return channels_.size();
}
inline void CMsgTFRequestChatChannelListResponse::clear_channels() {
  channels_.Clear();
}
inline const ::CMsgTFRequestChatChannelListResponse_ChatChannel& CMsgTFRequestChatChannelListResponse::channels(int index) const {
  // @@protoc_insertion_point(field_get:CMsgTFRequestChatChannelListResponse.channels)
  return channels_.Get(index);
}
inline ::CMsgTFRequestChatChannelListResponse_ChatChannel* CMsgTFRequestChatChannelListResponse::mutable_channels(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgTFRequestChatChannelListResponse.channels)
  return channels_.Mutable(index);
}
inline ::CMsgTFRequestChatChannelListResponse_ChatChannel* CMsgTFRequestChatChannelListResponse::add_channels() {
  // @@protoc_insertion_point(field_add:CMsgTFRequestChatChannelListResponse.channels)
  return channels_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgTFRequestChatChannelListResponse_ChatChannel >*
CMsgTFRequestChatChannelListResponse::mutable_channels() {
  // @@protoc_insertion_point(field_mutable_list:CMsgTFRequestChatChannelListResponse.channels)
  return &channels_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgTFRequestChatChannelListResponse_ChatChannel >&
CMsgTFRequestChatChannelListResponse::channels() const {
  // @@protoc_insertion_point(field_list:CMsgTFRequestChatChannelListResponse.channels)
  return channels_;
}

// -------------------------------------------------------------------

// CMsgGameServerMatchmakingStatus_Player

// optional fixed64 steam_id = 1;
inline bool CMsgGameServerMatchmakingStatus_Player::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGameServerMatchmakingStatus_Player::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGameServerMatchmakingStatus_Player::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGameServerMatchmakingStatus_Player::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgGameServerMatchmakingStatus_Player::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.Player.steam_id)
  return steam_id_;
}
inline void CMsgGameServerMatchmakingStatus_Player::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.Player.steam_id)
}

// optional .CMsgGameServerMatchmakingStatus.PlayerConnectState connect_state = 2 [default = INVALID];
inline bool CMsgGameServerMatchmakingStatus_Player::has_connect_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGameServerMatchmakingStatus_Player::set_has_connect_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGameServerMatchmakingStatus_Player::clear_has_connect_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGameServerMatchmakingStatus_Player::clear_connect_state() {
  connect_state_ = 0;
  clear_has_connect_state();
}
inline ::CMsgGameServerMatchmakingStatus_PlayerConnectState CMsgGameServerMatchmakingStatus_Player::connect_state() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.Player.connect_state)
  return static_cast< ::CMsgGameServerMatchmakingStatus_PlayerConnectState >(connect_state_);
}
inline void CMsgGameServerMatchmakingStatus_Player::set_connect_state(::CMsgGameServerMatchmakingStatus_PlayerConnectState value) {
  assert(::CMsgGameServerMatchmakingStatus_PlayerConnectState_IsValid(value));
  set_has_connect_state();
  connect_state_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.Player.connect_state)
}

// -------------------------------------------------------------------

// CMsgGameServerMatchmakingStatus

// optional uint32 server_version = 16 [default = 1225];
inline bool CMsgGameServerMatchmakingStatus::has_server_version() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_server_version() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_server_version() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_server_version() {
  server_version_ = 1225u;
  clear_has_server_version();
}
inline ::google::protobuf::uint32 CMsgGameServerMatchmakingStatus::server_version() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.server_version)
  return server_version_;
}
inline void CMsgGameServerMatchmakingStatus::set_server_version(::google::protobuf::uint32 value) {
  set_has_server_version();
  server_version_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.server_version)
}

// optional .ServerMatchmakingState matchmaking_state = 1 [default = ServerMatchmakingState_INVALID];
inline bool CMsgGameServerMatchmakingStatus::has_matchmaking_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_matchmaking_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_matchmaking_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGameServerMatchmakingStatus::clear_matchmaking_state() {
  matchmaking_state_ = 0;
  clear_has_matchmaking_state();
}
inline ::ServerMatchmakingState CMsgGameServerMatchmakingStatus::matchmaking_state() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.matchmaking_state)
  return static_cast< ::ServerMatchmakingState >(matchmaking_state_);
}
inline void CMsgGameServerMatchmakingStatus::set_matchmaking_state(::ServerMatchmakingState value) {
  assert(::ServerMatchmakingState_IsValid(value));
  set_has_matchmaking_state();
  matchmaking_state_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.matchmaking_state)
}

// optional .TF_MatchmakingMode matchmaking_mode = 2 [default = TF_Matchmaking_INVALID];
inline bool CMsgGameServerMatchmakingStatus::has_matchmaking_mode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_matchmaking_mode() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_matchmaking_mode() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGameServerMatchmakingStatus::clear_matchmaking_mode() {
  matchmaking_mode_ = 0;
  clear_has_matchmaking_mode();
}
inline ::TF_MatchmakingMode CMsgGameServerMatchmakingStatus::matchmaking_mode() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.matchmaking_mode)
  return static_cast< ::TF_MatchmakingMode >(matchmaking_mode_);
}
inline void CMsgGameServerMatchmakingStatus::set_matchmaking_mode(::TF_MatchmakingMode value) {
  assert(::TF_MatchmakingMode_IsValid(value));
  set_has_matchmaking_mode();
  matchmaking_mode_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.matchmaking_mode)
}

// optional string map = 3;
inline bool CMsgGameServerMatchmakingStatus::has_map() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_map() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_map() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGameServerMatchmakingStatus::clear_map() {
  map_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_map();
}
inline const ::std::string& CMsgGameServerMatchmakingStatus::map() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.map)
  return map_.GetNoArena();
}
inline void CMsgGameServerMatchmakingStatus::set_map(const ::std::string& value) {
  set_has_map();
  map_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.map)
}
#if LANG_CXX11
inline void CMsgGameServerMatchmakingStatus::set_map(::std::string&& value) {
  set_has_map();
  map_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgGameServerMatchmakingStatus.map)
}
#endif
inline void CMsgGameServerMatchmakingStatus::set_map(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_map();
  map_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgGameServerMatchmakingStatus.map)
}
inline void CMsgGameServerMatchmakingStatus::set_map(const char* value, size_t size) {
  set_has_map();
  map_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgGameServerMatchmakingStatus.map)
}
inline ::std::string* CMsgGameServerMatchmakingStatus::mutable_map() {
  set_has_map();
  // @@protoc_insertion_point(field_mutable:CMsgGameServerMatchmakingStatus.map)
  return map_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGameServerMatchmakingStatus::release_map() {
  // @@protoc_insertion_point(field_release:CMsgGameServerMatchmakingStatus.map)
  clear_has_map();
  return map_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGameServerMatchmakingStatus::set_allocated_map(::std::string* map) {
  if (map != NULL) {
    set_has_map();
  } else {
    clear_has_map();
  }
  map_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), map);
  // @@protoc_insertion_point(field_set_allocated:CMsgGameServerMatchmakingStatus.map)
}

// optional string tags = 4;
inline bool CMsgGameServerMatchmakingStatus::has_tags() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_tags() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_tags() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGameServerMatchmakingStatus::clear_tags() {
  tags_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tags();
}
inline const ::std::string& CMsgGameServerMatchmakingStatus::tags() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.tags)
  return tags_.GetNoArena();
}
inline void CMsgGameServerMatchmakingStatus::set_tags(const ::std::string& value) {
  set_has_tags();
  tags_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.tags)
}
#if LANG_CXX11
inline void CMsgGameServerMatchmakingStatus::set_tags(::std::string&& value) {
  set_has_tags();
  tags_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgGameServerMatchmakingStatus.tags)
}
#endif
inline void CMsgGameServerMatchmakingStatus::set_tags(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tags();
  tags_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgGameServerMatchmakingStatus.tags)
}
inline void CMsgGameServerMatchmakingStatus::set_tags(const char* value, size_t size) {
  set_has_tags();
  tags_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgGameServerMatchmakingStatus.tags)
}
inline ::std::string* CMsgGameServerMatchmakingStatus::mutable_tags() {
  set_has_tags();
  // @@protoc_insertion_point(field_mutable:CMsgGameServerMatchmakingStatus.tags)
  return tags_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGameServerMatchmakingStatus::release_tags() {
  // @@protoc_insertion_point(field_release:CMsgGameServerMatchmakingStatus.tags)
  clear_has_tags();
  return tags_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGameServerMatchmakingStatus::set_allocated_tags(::std::string* tags) {
  if (tags != NULL) {
    set_has_tags();
  } else {
    clear_has_tags();
  }
  tags_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tags);
  // @@protoc_insertion_point(field_set_allocated:CMsgGameServerMatchmakingStatus.tags)
}

// optional uint32 bot_count = 5;
inline bool CMsgGameServerMatchmakingStatus::has_bot_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_bot_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_bot_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGameServerMatchmakingStatus::clear_bot_count() {
  bot_count_ = 0u;
  clear_has_bot_count();
}
inline ::google::protobuf::uint32 CMsgGameServerMatchmakingStatus::bot_count() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.bot_count)
  return bot_count_;
}
inline void CMsgGameServerMatchmakingStatus::set_bot_count(::google::protobuf::uint32 value) {
  set_has_bot_count();
  bot_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.bot_count)
}

// optional uint32 num_spectators = 6;
inline bool CMsgGameServerMatchmakingStatus::has_num_spectators() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_num_spectators() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_num_spectators() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgGameServerMatchmakingStatus::clear_num_spectators() {
  num_spectators_ = 0u;
  clear_has_num_spectators();
}
inline ::google::protobuf::uint32 CMsgGameServerMatchmakingStatus::num_spectators() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.num_spectators)
  return num_spectators_;
}
inline void CMsgGameServerMatchmakingStatus::set_num_spectators(::google::protobuf::uint32 value) {
  set_has_num_spectators();
  num_spectators_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.num_spectators)
}

// optional uint32 max_players = 7;
inline bool CMsgGameServerMatchmakingStatus::has_max_players() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_max_players() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_max_players() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgGameServerMatchmakingStatus::clear_max_players() {
  max_players_ = 0u;
  clear_has_max_players();
}
inline ::google::protobuf::uint32 CMsgGameServerMatchmakingStatus::max_players() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.max_players)
  return max_players_;
}
inline void CMsgGameServerMatchmakingStatus::set_max_players(::google::protobuf::uint32 value) {
  set_has_max_players();
  max_players_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.max_players)
}

// optional uint32 slots_free = 8;
inline bool CMsgGameServerMatchmakingStatus::has_slots_free() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_slots_free() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_slots_free() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgGameServerMatchmakingStatus::clear_slots_free() {
  slots_free_ = 0u;
  clear_has_slots_free();
}
inline ::google::protobuf::uint32 CMsgGameServerMatchmakingStatus::slots_free() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.slots_free)
  return slots_free_;
}
inline void CMsgGameServerMatchmakingStatus::set_slots_free(::google::protobuf::uint32 value) {
  set_has_slots_free();
  slots_free_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.slots_free)
}

// optional uint32 server_region = 9;
inline bool CMsgGameServerMatchmakingStatus::has_server_region() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_server_region() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_server_region() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgGameServerMatchmakingStatus::clear_server_region() {
  server_region_ = 0u;
  clear_has_server_region();
}
inline ::google::protobuf::uint32 CMsgGameServerMatchmakingStatus::server_region() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.server_region)
  return server_region_;
}
inline void CMsgGameServerMatchmakingStatus::set_server_region(::google::protobuf::uint32 value) {
  set_has_server_region();
  server_region_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.server_region)
}

// optional float server_loadavg = 10;
inline bool CMsgGameServerMatchmakingStatus::has_server_loadavg() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_server_loadavg() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_server_loadavg() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgGameServerMatchmakingStatus::clear_server_loadavg() {
  server_loadavg_ = 0;
  clear_has_server_loadavg();
}
inline float CMsgGameServerMatchmakingStatus::server_loadavg() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.server_loadavg)
  return server_loadavg_;
}
inline void CMsgGameServerMatchmakingStatus::set_server_loadavg(float value) {
  set_has_server_loadavg();
  server_loadavg_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.server_loadavg)
}

// optional bool server_trusted = 11;
inline bool CMsgGameServerMatchmakingStatus::has_server_trusted() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_server_trusted() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_server_trusted() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgGameServerMatchmakingStatus::clear_server_trusted() {
  server_trusted_ = false;
  clear_has_server_trusted();
}
inline bool CMsgGameServerMatchmakingStatus::server_trusted() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.server_trusted)
  return server_trusted_;
}
inline void CMsgGameServerMatchmakingStatus::set_server_trusted(bool value) {
  set_has_server_trusted();
  server_trusted_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.server_trusted)
}

// optional bool server_dedicated = 12;
inline bool CMsgGameServerMatchmakingStatus::has_server_dedicated() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_server_dedicated() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_server_dedicated() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgGameServerMatchmakingStatus::clear_server_dedicated() {
  server_dedicated_ = false;
  clear_has_server_dedicated();
}
inline bool CMsgGameServerMatchmakingStatus::server_dedicated() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.server_dedicated)
  return server_dedicated_;
}
inline void CMsgGameServerMatchmakingStatus::set_server_dedicated(bool value) {
  set_has_server_dedicated();
  server_dedicated_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.server_dedicated)
}

// optional uint32 strict = 17;
inline bool CMsgGameServerMatchmakingStatus::has_strict() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_strict() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_strict() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_strict() {
  strict_ = 0u;
  clear_has_strict();
}
inline ::google::protobuf::uint32 CMsgGameServerMatchmakingStatus::strict() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.strict)
  return strict_;
}
inline void CMsgGameServerMatchmakingStatus::set_strict(::google::protobuf::uint32 value) {
  set_has_strict();
  strict_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.strict)
}

// repeated .CMsgGameServerMatchmakingStatus.Player players = 13;
inline int CMsgGameServerMatchmakingStatus::players_size() const {
  return players_.size();
}
inline void CMsgGameServerMatchmakingStatus::clear_players() {
  players_.Clear();
}
inline const ::CMsgGameServerMatchmakingStatus_Player& CMsgGameServerMatchmakingStatus::players(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.players)
  return players_.Get(index);
}
inline ::CMsgGameServerMatchmakingStatus_Player* CMsgGameServerMatchmakingStatus::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGameServerMatchmakingStatus.players)
  return players_.Mutable(index);
}
inline ::CMsgGameServerMatchmakingStatus_Player* CMsgGameServerMatchmakingStatus::add_players() {
  // @@protoc_insertion_point(field_add:CMsgGameServerMatchmakingStatus.players)
  return players_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGameServerMatchmakingStatus_Player >*
CMsgGameServerMatchmakingStatus::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGameServerMatchmakingStatus.players)
  return &players_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGameServerMatchmakingStatus_Player >&
CMsgGameServerMatchmakingStatus::players() const {
  // @@protoc_insertion_point(field_list:CMsgGameServerMatchmakingStatus.players)
  return players_;
}

// optional .TF_GC_GameState game_state = 14 [default = TF_GC_GAMESTATE_STATE_INIT];
inline bool CMsgGameServerMatchmakingStatus::has_game_state() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_game_state() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_game_state() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_game_state() {
  game_state_ = 0;
  clear_has_game_state();
}
inline ::TF_GC_GameState CMsgGameServerMatchmakingStatus::game_state() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.game_state)
  return static_cast< ::TF_GC_GameState >(game_state_);
}
inline void CMsgGameServerMatchmakingStatus::set_game_state(::TF_GC_GameState value) {
  assert(::TF_GC_GameState_IsValid(value));
  set_has_game_state();
  game_state_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.game_state)
}

// optional .CMsgGameServerMatchmakingStatus.Event event = 15 [default = None];
inline bool CMsgGameServerMatchmakingStatus::has_event() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_event() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_event() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_event() {
  event_ = 0;
  clear_has_event();
}
inline ::CMsgGameServerMatchmakingStatus_Event CMsgGameServerMatchmakingStatus::event() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.event)
  return static_cast< ::CMsgGameServerMatchmakingStatus_Event >(event_);
}
inline void CMsgGameServerMatchmakingStatus::set_event(::CMsgGameServerMatchmakingStatus_Event value) {
  assert(::CMsgGameServerMatchmakingStatus_Event_IsValid(value));
  set_has_event();
  event_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.event)
}

// optional uint32 mvm_wave = 18;
inline bool CMsgGameServerMatchmakingStatus::has_mvm_wave() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_mvm_wave() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_mvm_wave() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_mvm_wave() {
  mvm_wave_ = 0u;
  clear_has_mvm_wave();
}
inline ::google::protobuf::uint32 CMsgGameServerMatchmakingStatus::mvm_wave() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.mvm_wave)
  return mvm_wave_;
}
inline void CMsgGameServerMatchmakingStatus::set_mvm_wave(::google::protobuf::uint32 value) {
  set_has_mvm_wave();
  mvm_wave_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.mvm_wave)
}

// optional uint32 mvm_credits_acquired = 19;
inline bool CMsgGameServerMatchmakingStatus::has_mvm_credits_acquired() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_mvm_credits_acquired() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_mvm_credits_acquired() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_mvm_credits_acquired() {
  mvm_credits_acquired_ = 0u;
  clear_has_mvm_credits_acquired();
}
inline ::google::protobuf::uint32 CMsgGameServerMatchmakingStatus::mvm_credits_acquired() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.mvm_credits_acquired)
  return mvm_credits_acquired_;
}
inline void CMsgGameServerMatchmakingStatus::set_mvm_credits_acquired(::google::protobuf::uint32 value) {
  set_has_mvm_credits_acquired();
  mvm_credits_acquired_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.mvm_credits_acquired)
}

// optional uint32 mvm_credits_dropped = 20;
inline bool CMsgGameServerMatchmakingStatus::has_mvm_credits_dropped() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_mvm_credits_dropped() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_mvm_credits_dropped() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_mvm_credits_dropped() {
  mvm_credits_dropped_ = 0u;
  clear_has_mvm_credits_dropped();
}
inline ::google::protobuf::uint32 CMsgGameServerMatchmakingStatus::mvm_credits_dropped() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.mvm_credits_dropped)
  return mvm_credits_dropped_;
}
inline void CMsgGameServerMatchmakingStatus::set_mvm_credits_dropped(::google::protobuf::uint32 value) {
  set_has_mvm_credits_dropped();
  mvm_credits_dropped_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.mvm_credits_dropped)
}

// optional sint32 match_group = 23 [default = -1];
inline bool CMsgGameServerMatchmakingStatus::has_match_group() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_match_group() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_match_group() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_match_group() {
  match_group_ = -1;
  clear_has_match_group();
}
inline ::google::protobuf::int32 CMsgGameServerMatchmakingStatus::match_group() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.match_group)
  return match_group_;
}
inline void CMsgGameServerMatchmakingStatus::set_match_group(::google::protobuf::int32 value) {
  set_has_match_group();
  match_group_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.match_group)
}

// optional uint32 lobby_mm_version = 24;
inline bool CMsgGameServerMatchmakingStatus::has_lobby_mm_version() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_lobby_mm_version() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_lobby_mm_version() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_lobby_mm_version() {
  lobby_mm_version_ = 0u;
  clear_has_lobby_mm_version();
}
inline ::google::protobuf::uint32 CMsgGameServerMatchmakingStatus::lobby_mm_version() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.lobby_mm_version)
  return lobby_mm_version_;
}
inline void CMsgGameServerMatchmakingStatus::set_lobby_mm_version(::google::protobuf::uint32 value) {
  set_has_lobby_mm_version();
  lobby_mm_version_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.lobby_mm_version)
}

// -------------------------------------------------------------------

// CMsgMatchmakingProgress

// optional uint32 avg_wait_time_new = 4;
inline bool CMsgMatchmakingProgress::has_avg_wait_time_new() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_avg_wait_time_new() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgMatchmakingProgress::clear_has_avg_wait_time_new() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgMatchmakingProgress::clear_avg_wait_time_new() {
  avg_wait_time_new_ = 0u;
  clear_has_avg_wait_time_new();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::avg_wait_time_new() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.avg_wait_time_new)
  return avg_wait_time_new_;
}
inline void CMsgMatchmakingProgress::set_avg_wait_time_new(::google::protobuf::uint32 value) {
  set_has_avg_wait_time_new();
  avg_wait_time_new_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.avg_wait_time_new)
}

// optional uint32 avg_wait_time_join_late = 5;
inline bool CMsgMatchmakingProgress::has_avg_wait_time_join_late() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_avg_wait_time_join_late() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgMatchmakingProgress::clear_has_avg_wait_time_join_late() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgMatchmakingProgress::clear_avg_wait_time_join_late() {
  avg_wait_time_join_late_ = 0u;
  clear_has_avg_wait_time_join_late();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::avg_wait_time_join_late() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.avg_wait_time_join_late)
  return avg_wait_time_join_late_;
}
inline void CMsgMatchmakingProgress::set_avg_wait_time_join_late(::google::protobuf::uint32 value) {
  set_has_avg_wait_time_join_late();
  avg_wait_time_join_late_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.avg_wait_time_join_late)
}

// optional uint32 your_wait_time = 6;
inline bool CMsgMatchmakingProgress::has_your_wait_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_your_wait_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgMatchmakingProgress::clear_has_your_wait_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgMatchmakingProgress::clear_your_wait_time() {
  your_wait_time_ = 0u;
  clear_has_your_wait_time();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::your_wait_time() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.your_wait_time)
  return your_wait_time_;
}
inline void CMsgMatchmakingProgress::set_your_wait_time(::google::protobuf::uint32 value) {
  set_has_your_wait_time();
  your_wait_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.your_wait_time)
}

// optional uint32 matching_worldwide_searching_players = 8;
inline bool CMsgMatchmakingProgress::has_matching_worldwide_searching_players() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_matching_worldwide_searching_players() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgMatchmakingProgress::clear_has_matching_worldwide_searching_players() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgMatchmakingProgress::clear_matching_worldwide_searching_players() {
  matching_worldwide_searching_players_ = 0u;
  clear_has_matching_worldwide_searching_players();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::matching_worldwide_searching_players() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.matching_worldwide_searching_players)
  return matching_worldwide_searching_players_;
}
inline void CMsgMatchmakingProgress::set_matching_worldwide_searching_players(::google::protobuf::uint32 value) {
  set_has_matching_worldwide_searching_players();
  matching_worldwide_searching_players_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.matching_worldwide_searching_players)
}

// optional uint32 matching_near_you_searching_players = 9;
inline bool CMsgMatchmakingProgress::has_matching_near_you_searching_players() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_matching_near_you_searching_players() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgMatchmakingProgress::clear_has_matching_near_you_searching_players() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgMatchmakingProgress::clear_matching_near_you_searching_players() {
  matching_near_you_searching_players_ = 0u;
  clear_has_matching_near_you_searching_players();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::matching_near_you_searching_players() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.matching_near_you_searching_players)
  return matching_near_you_searching_players_;
}
inline void CMsgMatchmakingProgress::set_matching_near_you_searching_players(::google::protobuf::uint32 value) {
  set_has_matching_near_you_searching_players();
  matching_near_you_searching_players_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.matching_near_you_searching_players)
}

// optional uint32 total_worldwide_searching_players = 13;
inline bool CMsgMatchmakingProgress::has_total_worldwide_searching_players() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_total_worldwide_searching_players() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgMatchmakingProgress::clear_has_total_worldwide_searching_players() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgMatchmakingProgress::clear_total_worldwide_searching_players() {
  total_worldwide_searching_players_ = 0u;
  clear_has_total_worldwide_searching_players();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::total_worldwide_searching_players() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.total_worldwide_searching_players)
  return total_worldwide_searching_players_;
}
inline void CMsgMatchmakingProgress::set_total_worldwide_searching_players(::google::protobuf::uint32 value) {
  set_has_total_worldwide_searching_players();
  total_worldwide_searching_players_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.total_worldwide_searching_players)
}

// optional uint32 total_near_you_searching_players = 14;
inline bool CMsgMatchmakingProgress::has_total_near_you_searching_players() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_total_near_you_searching_players() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgMatchmakingProgress::clear_has_total_near_you_searching_players() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgMatchmakingProgress::clear_total_near_you_searching_players() {
  total_near_you_searching_players_ = 0u;
  clear_has_total_near_you_searching_players();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::total_near_you_searching_players() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.total_near_you_searching_players)
  return total_near_you_searching_players_;
}
inline void CMsgMatchmakingProgress::set_total_near_you_searching_players(::google::protobuf::uint32 value) {
  set_has_total_near_you_searching_players();
  total_near_you_searching_players_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.total_near_you_searching_players)
}

// optional uint32 matching_worldwide_active_players = 15;
inline bool CMsgMatchmakingProgress::has_matching_worldwide_active_players() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_matching_worldwide_active_players() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgMatchmakingProgress::clear_has_matching_worldwide_active_players() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgMatchmakingProgress::clear_matching_worldwide_active_players() {
  matching_worldwide_active_players_ = 0u;
  clear_has_matching_worldwide_active_players();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::matching_worldwide_active_players() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.matching_worldwide_active_players)
  return matching_worldwide_active_players_;
}
inline void CMsgMatchmakingProgress::set_matching_worldwide_active_players(::google::protobuf::uint32 value) {
  set_has_matching_worldwide_active_players();
  matching_worldwide_active_players_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.matching_worldwide_active_players)
}

// optional uint32 matching_near_you_active_players = 16;
inline bool CMsgMatchmakingProgress::has_matching_near_you_active_players() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_matching_near_you_active_players() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgMatchmakingProgress::clear_has_matching_near_you_active_players() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgMatchmakingProgress::clear_matching_near_you_active_players() {
  matching_near_you_active_players_ = 0u;
  clear_has_matching_near_you_active_players();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::matching_near_you_active_players() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.matching_near_you_active_players)
  return matching_near_you_active_players_;
}
inline void CMsgMatchmakingProgress::set_matching_near_you_active_players(::google::protobuf::uint32 value) {
  set_has_matching_near_you_active_players();
  matching_near_you_active_players_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.matching_near_you_active_players)
}

// optional uint32 total_worldwide_active_players = 17;
inline bool CMsgMatchmakingProgress::has_total_worldwide_active_players() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_total_worldwide_active_players() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgMatchmakingProgress::clear_has_total_worldwide_active_players() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgMatchmakingProgress::clear_total_worldwide_active_players() {
  total_worldwide_active_players_ = 0u;
  clear_has_total_worldwide_active_players();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::total_worldwide_active_players() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.total_worldwide_active_players)
  return total_worldwide_active_players_;
}
inline void CMsgMatchmakingProgress::set_total_worldwide_active_players(::google::protobuf::uint32 value) {
  set_has_total_worldwide_active_players();
  total_worldwide_active_players_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.total_worldwide_active_players)
}

// optional uint32 total_near_you_active_players = 18;
inline bool CMsgMatchmakingProgress::has_total_near_you_active_players() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_total_near_you_active_players() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgMatchmakingProgress::clear_has_total_near_you_active_players() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgMatchmakingProgress::clear_total_near_you_active_players() {
  total_near_you_active_players_ = 0u;
  clear_has_total_near_you_active_players();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::total_near_you_active_players() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.total_near_you_active_players)
  return total_near_you_active_players_;
}
inline void CMsgMatchmakingProgress::set_total_near_you_active_players(::google::protobuf::uint32 value) {
  set_has_total_near_you_active_players();
  total_near_you_active_players_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.total_near_you_active_players)
}

// optional uint32 matching_worldwide_empty_gameservers = 19;
inline bool CMsgMatchmakingProgress::has_matching_worldwide_empty_gameservers() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_matching_worldwide_empty_gameservers() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgMatchmakingProgress::clear_has_matching_worldwide_empty_gameservers() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgMatchmakingProgress::clear_matching_worldwide_empty_gameservers() {
  matching_worldwide_empty_gameservers_ = 0u;
  clear_has_matching_worldwide_empty_gameservers();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::matching_worldwide_empty_gameservers() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.matching_worldwide_empty_gameservers)
  return matching_worldwide_empty_gameservers_;
}
inline void CMsgMatchmakingProgress::set_matching_worldwide_empty_gameservers(::google::protobuf::uint32 value) {
  set_has_matching_worldwide_empty_gameservers();
  matching_worldwide_empty_gameservers_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.matching_worldwide_empty_gameservers)
}

// optional uint32 matching_near_you_empty_gameservers = 20;
inline bool CMsgMatchmakingProgress::has_matching_near_you_empty_gameservers() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_matching_near_you_empty_gameservers() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgMatchmakingProgress::clear_has_matching_near_you_empty_gameservers() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgMatchmakingProgress::clear_matching_near_you_empty_gameservers() {
  matching_near_you_empty_gameservers_ = 0u;
  clear_has_matching_near_you_empty_gameservers();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::matching_near_you_empty_gameservers() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.matching_near_you_empty_gameservers)
  return matching_near_you_empty_gameservers_;
}
inline void CMsgMatchmakingProgress::set_matching_near_you_empty_gameservers(::google::protobuf::uint32 value) {
  set_has_matching_near_you_empty_gameservers();
  matching_near_you_empty_gameservers_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.matching_near_you_empty_gameservers)
}

// optional uint32 total_worldwide_empty_gameservers = 21;
inline bool CMsgMatchmakingProgress::has_total_worldwide_empty_gameservers() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_total_worldwide_empty_gameservers() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgMatchmakingProgress::clear_has_total_worldwide_empty_gameservers() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgMatchmakingProgress::clear_total_worldwide_empty_gameservers() {
  total_worldwide_empty_gameservers_ = 0u;
  clear_has_total_worldwide_empty_gameservers();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::total_worldwide_empty_gameservers() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.total_worldwide_empty_gameservers)
  return total_worldwide_empty_gameservers_;
}
inline void CMsgMatchmakingProgress::set_total_worldwide_empty_gameservers(::google::protobuf::uint32 value) {
  set_has_total_worldwide_empty_gameservers();
  total_worldwide_empty_gameservers_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.total_worldwide_empty_gameservers)
}

// optional uint32 total_near_you_empty_gameservers = 22;
inline bool CMsgMatchmakingProgress::has_total_near_you_empty_gameservers() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_total_near_you_empty_gameservers() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMsgMatchmakingProgress::clear_has_total_near_you_empty_gameservers() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMsgMatchmakingProgress::clear_total_near_you_empty_gameservers() {
  total_near_you_empty_gameservers_ = 0u;
  clear_has_total_near_you_empty_gameservers();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::total_near_you_empty_gameservers() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.total_near_you_empty_gameservers)
  return total_near_you_empty_gameservers_;
}
inline void CMsgMatchmakingProgress::set_total_near_you_empty_gameservers(::google::protobuf::uint32 value) {
  set_has_total_near_you_empty_gameservers();
  total_near_you_empty_gameservers_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.total_near_you_empty_gameservers)
}

// optional uint32 urgency_pct = 1;
inline bool CMsgMatchmakingProgress::has_urgency_pct() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_urgency_pct() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgMatchmakingProgress::clear_has_urgency_pct() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgMatchmakingProgress::clear_urgency_pct() {
  urgency_pct_ = 0u;
  clear_has_urgency_pct();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::urgency_pct() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.urgency_pct)
  return urgency_pct_;
}
inline void CMsgMatchmakingProgress::set_urgency_pct(::google::protobuf::uint32 value) {
  set_has_urgency_pct();
  urgency_pct_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.urgency_pct)
}

// -------------------------------------------------------------------

// CMsgMvMVictoryInfo_Item

// optional .CMsgMvMVictoryInfo.GrantReason grant_reason = 1 [default = INVALID];
inline bool CMsgMvMVictoryInfo_Item::has_grant_reason() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgMvMVictoryInfo_Item::set_has_grant_reason() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgMvMVictoryInfo_Item::clear_has_grant_reason() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgMvMVictoryInfo_Item::clear_grant_reason() {
  grant_reason_ = 0;
  clear_has_grant_reason();
}
inline ::CMsgMvMVictoryInfo_GrantReason CMsgMvMVictoryInfo_Item::grant_reason() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictoryInfo.Item.grant_reason)
  return static_cast< ::CMsgMvMVictoryInfo_GrantReason >(grant_reason_);
}
inline void CMsgMvMVictoryInfo_Item::set_grant_reason(::CMsgMvMVictoryInfo_GrantReason value) {
  assert(::CMsgMvMVictoryInfo_GrantReason_IsValid(value));
  set_has_grant_reason();
  grant_reason_ = value;
  // @@protoc_insertion_point(field_set:CMsgMvMVictoryInfo.Item.grant_reason)
}

// optional bytes item_data = 2;
inline bool CMsgMvMVictoryInfo_Item::has_item_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgMvMVictoryInfo_Item::set_has_item_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgMvMVictoryInfo_Item::clear_has_item_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgMvMVictoryInfo_Item::clear_item_data() {
  item_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_data();
}
inline const ::std::string& CMsgMvMVictoryInfo_Item::item_data() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictoryInfo.Item.item_data)
  return item_data_.GetNoArena();
}
inline void CMsgMvMVictoryInfo_Item::set_item_data(const ::std::string& value) {
  set_has_item_data();
  item_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgMvMVictoryInfo.Item.item_data)
}
#if LANG_CXX11
inline void CMsgMvMVictoryInfo_Item::set_item_data(::std::string&& value) {
  set_has_item_data();
  item_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgMvMVictoryInfo.Item.item_data)
}
#endif
inline void CMsgMvMVictoryInfo_Item::set_item_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_item_data();
  item_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgMvMVictoryInfo.Item.item_data)
}
inline void CMsgMvMVictoryInfo_Item::set_item_data(const void* value, size_t size) {
  set_has_item_data();
  item_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgMvMVictoryInfo.Item.item_data)
}
inline ::std::string* CMsgMvMVictoryInfo_Item::mutable_item_data() {
  set_has_item_data();
  // @@protoc_insertion_point(field_mutable:CMsgMvMVictoryInfo.Item.item_data)
  return item_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgMvMVictoryInfo_Item::release_item_data() {
  // @@protoc_insertion_point(field_release:CMsgMvMVictoryInfo.Item.item_data)
  clear_has_item_data();
  return item_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgMvMVictoryInfo_Item::set_allocated_item_data(::std::string* item_data) {
  if (item_data != NULL) {
    set_has_item_data();
  } else {
    clear_has_item_data();
  }
  item_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_data);
  // @@protoc_insertion_point(field_set_allocated:CMsgMvMVictoryInfo.Item.item_data)
}

// optional fixed64 squad_surplus_claimer_steam_id = 3;
inline bool CMsgMvMVictoryInfo_Item::has_squad_surplus_claimer_steam_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgMvMVictoryInfo_Item::set_has_squad_surplus_claimer_steam_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgMvMVictoryInfo_Item::clear_has_squad_surplus_claimer_steam_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgMvMVictoryInfo_Item::clear_squad_surplus_claimer_steam_id() {
  squad_surplus_claimer_steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_squad_surplus_claimer_steam_id();
}
inline ::google::protobuf::uint64 CMsgMvMVictoryInfo_Item::squad_surplus_claimer_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictoryInfo.Item.squad_surplus_claimer_steam_id)
  return squad_surplus_claimer_steam_id_;
}
inline void CMsgMvMVictoryInfo_Item::set_squad_surplus_claimer_steam_id(::google::protobuf::uint64 value) {
  set_has_squad_surplus_claimer_steam_id();
  squad_surplus_claimer_steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgMvMVictoryInfo.Item.squad_surplus_claimer_steam_id)
}

// -------------------------------------------------------------------

// CMsgMvMVictoryInfo_Player

// optional fixed64 steam_id = 1;
inline bool CMsgMvMVictoryInfo_Player::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgMvMVictoryInfo_Player::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgMvMVictoryInfo_Player::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgMvMVictoryInfo_Player::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgMvMVictoryInfo_Player::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictoryInfo.Player.steam_id)
  return steam_id_;
}
inline void CMsgMvMVictoryInfo_Player::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgMvMVictoryInfo.Player.steam_id)
}

// optional bool badge_granted = 3;
inline bool CMsgMvMVictoryInfo_Player::has_badge_granted() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgMvMVictoryInfo_Player::set_has_badge_granted() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgMvMVictoryInfo_Player::clear_has_badge_granted() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgMvMVictoryInfo_Player::clear_badge_granted() {
  badge_granted_ = false;
  clear_has_badge_granted();
}
inline bool CMsgMvMVictoryInfo_Player::badge_granted() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictoryInfo.Player.badge_granted)
  return badge_granted_;
}
inline void CMsgMvMVictoryInfo_Player::set_badge_granted(bool value) {
  set_has_badge_granted();
  badge_granted_ = value;
  // @@protoc_insertion_point(field_set:CMsgMvMVictoryInfo.Player.badge_granted)
}

// optional bool badge_progress_updated = 4;
inline bool CMsgMvMVictoryInfo_Player::has_badge_progress_updated() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgMvMVictoryInfo_Player::set_has_badge_progress_updated() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgMvMVictoryInfo_Player::clear_has_badge_progress_updated() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgMvMVictoryInfo_Player::clear_badge_progress_updated() {
  badge_progress_updated_ = false;
  clear_has_badge_progress_updated();
}
inline bool CMsgMvMVictoryInfo_Player::badge_progress_updated() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictoryInfo.Player.badge_progress_updated)
  return badge_progress_updated_;
}
inline void CMsgMvMVictoryInfo_Player::set_badge_progress_updated(bool value) {
  set_has_badge_progress_updated();
  badge_progress_updated_ = value;
  // @@protoc_insertion_point(field_set:CMsgMvMVictoryInfo.Player.badge_progress_updated)
}

// optional bool badge_leveled = 5;
inline bool CMsgMvMVictoryInfo_Player::has_badge_leveled() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgMvMVictoryInfo_Player::set_has_badge_leveled() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgMvMVictoryInfo_Player::clear_has_badge_leveled() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgMvMVictoryInfo_Player::clear_badge_leveled() {
  badge_leveled_ = false;
  clear_has_badge_leveled();
}
inline bool CMsgMvMVictoryInfo_Player::badge_leveled() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictoryInfo.Player.badge_leveled)
  return badge_leveled_;
}
inline void CMsgMvMVictoryInfo_Player::set_badge_leveled(bool value) {
  set_has_badge_leveled();
  badge_leveled_ = value;
  // @@protoc_insertion_point(field_set:CMsgMvMVictoryInfo.Player.badge_leveled)
}

// optional uint32 badge_level = 6;
inline bool CMsgMvMVictoryInfo_Player::has_badge_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgMvMVictoryInfo_Player::set_has_badge_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgMvMVictoryInfo_Player::clear_has_badge_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgMvMVictoryInfo_Player::clear_badge_level() {
  badge_level_ = 0u;
  clear_has_badge_level();
}
inline ::google::protobuf::uint32 CMsgMvMVictoryInfo_Player::badge_level() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictoryInfo.Player.badge_level)
  return badge_level_;
}
inline void CMsgMvMVictoryInfo_Player::set_badge_level(::google::protobuf::uint32 value) {
  set_has_badge_level();
  badge_level_ = value;
  // @@protoc_insertion_point(field_set:CMsgMvMVictoryInfo.Player.badge_level)
}

// optional uint32 badge_progress_bits = 7;
inline bool CMsgMvMVictoryInfo_Player::has_badge_progress_bits() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgMvMVictoryInfo_Player::set_has_badge_progress_bits() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgMvMVictoryInfo_Player::clear_has_badge_progress_bits() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgMvMVictoryInfo_Player::clear_badge_progress_bits() {
  badge_progress_bits_ = 0u;
  clear_has_badge_progress_bits();
}
inline ::google::protobuf::uint32 CMsgMvMVictoryInfo_Player::badge_progress_bits() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictoryInfo.Player.badge_progress_bits)
  return badge_progress_bits_;
}
inline void CMsgMvMVictoryInfo_Player::set_badge_progress_bits(::google::protobuf::uint32 value) {
  set_has_badge_progress_bits();
  badge_progress_bits_ = value;
  // @@protoc_insertion_point(field_set:CMsgMvMVictoryInfo.Player.badge_progress_bits)
}

// repeated .CMsgMvMVictoryInfo.Item items = 8;
inline int CMsgMvMVictoryInfo_Player::items_size() const {
  return items_.size();
}
inline void CMsgMvMVictoryInfo_Player::clear_items() {
  items_.Clear();
}
inline const ::CMsgMvMVictoryInfo_Item& CMsgMvMVictoryInfo_Player::items(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictoryInfo.Player.items)
  return items_.Get(index);
}
inline ::CMsgMvMVictoryInfo_Item* CMsgMvMVictoryInfo_Player::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgMvMVictoryInfo.Player.items)
  return items_.Mutable(index);
}
inline ::CMsgMvMVictoryInfo_Item* CMsgMvMVictoryInfo_Player::add_items() {
  // @@protoc_insertion_point(field_add:CMsgMvMVictoryInfo.Player.items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictoryInfo_Item >*
CMsgMvMVictoryInfo_Player::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMvMVictoryInfo.Player.items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictoryInfo_Item >&
CMsgMvMVictoryInfo_Player::items() const {
  // @@protoc_insertion_point(field_list:CMsgMvMVictoryInfo.Player.items)
  return items_;
}

// optional bool voucher_missing = 9;
inline bool CMsgMvMVictoryInfo_Player::has_voucher_missing() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgMvMVictoryInfo_Player::set_has_voucher_missing() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgMvMVictoryInfo_Player::clear_has_voucher_missing() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgMvMVictoryInfo_Player::clear_voucher_missing() {
  voucher_missing_ = false;
  clear_has_voucher_missing();
}
inline bool CMsgMvMVictoryInfo_Player::voucher_missing() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictoryInfo.Player.voucher_missing)
  return voucher_missing_;
}
inline void CMsgMvMVictoryInfo_Player::set_voucher_missing(bool value) {
  set_has_voucher_missing();
  voucher_missing_ = value;
  // @@protoc_insertion_point(field_set:CMsgMvMVictoryInfo.Player.voucher_missing)
}

// optional uint32 badge_points = 10;
inline bool CMsgMvMVictoryInfo_Player::has_badge_points() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgMvMVictoryInfo_Player::set_has_badge_points() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgMvMVictoryInfo_Player::clear_has_badge_points() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgMvMVictoryInfo_Player::clear_badge_points() {
  badge_points_ = 0u;
  clear_has_badge_points();
}
inline ::google::protobuf::uint32 CMsgMvMVictoryInfo_Player::badge_points() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictoryInfo.Player.badge_points)
  return badge_points_;
}
inline void CMsgMvMVictoryInfo_Player::set_badge_points(::google::protobuf::uint32 value) {
  set_has_badge_points();
  badge_points_ = value;
  // @@protoc_insertion_point(field_set:CMsgMvMVictoryInfo.Player.badge_points)
}

// -------------------------------------------------------------------

// CMsgMvMVictoryInfo

// repeated .CMsgMvMVictoryInfo.Player players = 1;
inline int CMsgMvMVictoryInfo::players_size() const {
  return players_.size();
}
inline void CMsgMvMVictoryInfo::clear_players() {
  players_.Clear();
}
inline const ::CMsgMvMVictoryInfo_Player& CMsgMvMVictoryInfo::players(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictoryInfo.players)
  return players_.Get(index);
}
inline ::CMsgMvMVictoryInfo_Player* CMsgMvMVictoryInfo::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgMvMVictoryInfo.players)
  return players_.Mutable(index);
}
inline ::CMsgMvMVictoryInfo_Player* CMsgMvMVictoryInfo::add_players() {
  // @@protoc_insertion_point(field_add:CMsgMvMVictoryInfo.players)
  return players_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictoryInfo_Player >*
CMsgMvMVictoryInfo::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMvMVictoryInfo.players)
  return &players_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictoryInfo_Player >&
CMsgMvMVictoryInfo::players() const {
  // @@protoc_insertion_point(field_list:CMsgMvMVictoryInfo.players)
  return players_;
}

// optional string tour_name = 2;
inline bool CMsgMvMVictoryInfo::has_tour_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgMvMVictoryInfo::set_has_tour_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgMvMVictoryInfo::clear_has_tour_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgMvMVictoryInfo::clear_tour_name() {
  tour_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tour_name();
}
inline const ::std::string& CMsgMvMVictoryInfo::tour_name() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictoryInfo.tour_name)
  return tour_name_.GetNoArena();
}
inline void CMsgMvMVictoryInfo::set_tour_name(const ::std::string& value) {
  set_has_tour_name();
  tour_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgMvMVictoryInfo.tour_name)
}
#if LANG_CXX11
inline void CMsgMvMVictoryInfo::set_tour_name(::std::string&& value) {
  set_has_tour_name();
  tour_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgMvMVictoryInfo.tour_name)
}
#endif
inline void CMsgMvMVictoryInfo::set_tour_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tour_name();
  tour_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgMvMVictoryInfo.tour_name)
}
inline void CMsgMvMVictoryInfo::set_tour_name(const char* value, size_t size) {
  set_has_tour_name();
  tour_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgMvMVictoryInfo.tour_name)
}
inline ::std::string* CMsgMvMVictoryInfo::mutable_tour_name() {
  set_has_tour_name();
  // @@protoc_insertion_point(field_mutable:CMsgMvMVictoryInfo.tour_name)
  return tour_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgMvMVictoryInfo::release_tour_name() {
  // @@protoc_insertion_point(field_release:CMsgMvMVictoryInfo.tour_name)
  clear_has_tour_name();
  return tour_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgMvMVictoryInfo::set_allocated_tour_name(::std::string* tour_name) {
  if (tour_name != NULL) {
    set_has_tour_name();
  } else {
    clear_has_tour_name();
  }
  tour_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tour_name);
  // @@protoc_insertion_point(field_set_allocated:CMsgMvMVictoryInfo.tour_name)
}

// optional string mission_name = 3;
inline bool CMsgMvMVictoryInfo::has_mission_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgMvMVictoryInfo::set_has_mission_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgMvMVictoryInfo::clear_has_mission_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgMvMVictoryInfo::clear_mission_name() {
  mission_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mission_name();
}
inline const ::std::string& CMsgMvMVictoryInfo::mission_name() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictoryInfo.mission_name)
  return mission_name_.GetNoArena();
}
inline void CMsgMvMVictoryInfo::set_mission_name(const ::std::string& value) {
  set_has_mission_name();
  mission_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgMvMVictoryInfo.mission_name)
}
#if LANG_CXX11
inline void CMsgMvMVictoryInfo::set_mission_name(::std::string&& value) {
  set_has_mission_name();
  mission_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgMvMVictoryInfo.mission_name)
}
#endif
inline void CMsgMvMVictoryInfo::set_mission_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mission_name();
  mission_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgMvMVictoryInfo.mission_name)
}
inline void CMsgMvMVictoryInfo::set_mission_name(const char* value, size_t size) {
  set_has_mission_name();
  mission_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgMvMVictoryInfo.mission_name)
}
inline ::std::string* CMsgMvMVictoryInfo::mutable_mission_name() {
  set_has_mission_name();
  // @@protoc_insertion_point(field_mutable:CMsgMvMVictoryInfo.mission_name)
  return mission_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgMvMVictoryInfo::release_mission_name() {
  // @@protoc_insertion_point(field_release:CMsgMvMVictoryInfo.mission_name)
  clear_has_mission_name();
  return mission_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgMvMVictoryInfo::set_allocated_mission_name(::std::string* mission_name) {
  if (mission_name != NULL) {
    set_has_mission_name();
  } else {
    clear_has_mission_name();
  }
  mission_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mission_name);
  // @@protoc_insertion_point(field_set_allocated:CMsgMvMVictoryInfo.mission_name)
}

// -------------------------------------------------------------------

// CGCMsgTFHelloResponse

// optional uint32 version_check = 1;
inline bool CGCMsgTFHelloResponse::has_version_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCMsgTFHelloResponse::set_has_version_check() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCMsgTFHelloResponse::clear_has_version_check() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCMsgTFHelloResponse::clear_version_check() {
  version_check_ = 0u;
  clear_has_version_check();
}
inline ::google::protobuf::uint32 CGCMsgTFHelloResponse::version_check() const {
  // @@protoc_insertion_point(field_get:CGCMsgTFHelloResponse.version_check)
  return version_check_;
}
inline void CGCMsgTFHelloResponse::set_version_check(::google::protobuf::uint32 value) {
  set_has_version_check();
  version_check_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgTFHelloResponse.version_check)
}

// repeated uint64 version_checksum = 2;
inline int CGCMsgTFHelloResponse::version_checksum_size() const {
  return version_checksum_.size();
}
inline void CGCMsgTFHelloResponse::clear_version_checksum() {
  version_checksum_.Clear();
}
inline ::google::protobuf::uint64 CGCMsgTFHelloResponse::version_checksum(int index) const {
  // @@protoc_insertion_point(field_get:CGCMsgTFHelloResponse.version_checksum)
  return version_checksum_.Get(index);
}
inline void CGCMsgTFHelloResponse::set_version_checksum(int index, ::google::protobuf::uint64 value) {
  version_checksum_.Set(index, value);
  // @@protoc_insertion_point(field_set:CGCMsgTFHelloResponse.version_checksum)
}
inline void CGCMsgTFHelloResponse::add_version_checksum(::google::protobuf::uint64 value) {
  version_checksum_.Add(value);
  // @@protoc_insertion_point(field_add:CGCMsgTFHelloResponse.version_checksum)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CGCMsgTFHelloResponse::version_checksum() const {
  // @@protoc_insertion_point(field_list:CGCMsgTFHelloResponse.version_checksum)
  return version_checksum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CGCMsgTFHelloResponse::mutable_version_checksum() {
  // @@protoc_insertion_point(field_mutable_list:CGCMsgTFHelloResponse.version_checksum)
  return &version_checksum_;
}

// optional uint32 version_verbose = 3;
inline bool CGCMsgTFHelloResponse::has_version_verbose() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCMsgTFHelloResponse::set_has_version_verbose() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGCMsgTFHelloResponse::clear_has_version_verbose() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGCMsgTFHelloResponse::clear_version_verbose() {
  version_verbose_ = 0u;
  clear_has_version_verbose();
}
inline ::google::protobuf::uint32 CGCMsgTFHelloResponse::version_verbose() const {
  // @@protoc_insertion_point(field_get:CGCMsgTFHelloResponse.version_verbose)
  return version_verbose_;
}
inline void CGCMsgTFHelloResponse::set_version_verbose(::google::protobuf::uint32 value) {
  set_has_version_verbose();
  version_verbose_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgTFHelloResponse.version_verbose)
}

// -------------------------------------------------------------------

// CGCMsgTFSync

// optional bytes version_checksum = 1;
inline bool CGCMsgTFSync::has_version_checksum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCMsgTFSync::set_has_version_checksum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCMsgTFSync::clear_has_version_checksum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCMsgTFSync::clear_version_checksum() {
  version_checksum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_version_checksum();
}
inline const ::std::string& CGCMsgTFSync::version_checksum() const {
  // @@protoc_insertion_point(field_get:CGCMsgTFSync.version_checksum)
  return version_checksum_.GetNoArena();
}
inline void CGCMsgTFSync::set_version_checksum(const ::std::string& value) {
  set_has_version_checksum();
  version_checksum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CGCMsgTFSync.version_checksum)
}
#if LANG_CXX11
inline void CGCMsgTFSync::set_version_checksum(::std::string&& value) {
  set_has_version_checksum();
  version_checksum_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CGCMsgTFSync.version_checksum)
}
#endif
inline void CGCMsgTFSync::set_version_checksum(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_version_checksum();
  version_checksum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CGCMsgTFSync.version_checksum)
}
inline void CGCMsgTFSync::set_version_checksum(const void* value, size_t size) {
  set_has_version_checksum();
  version_checksum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CGCMsgTFSync.version_checksum)
}
inline ::std::string* CGCMsgTFSync::mutable_version_checksum() {
  set_has_version_checksum();
  // @@protoc_insertion_point(field_mutable:CGCMsgTFSync.version_checksum)
  return version_checksum_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CGCMsgTFSync::release_version_checksum() {
  // @@protoc_insertion_point(field_release:CGCMsgTFSync.version_checksum)
  clear_has_version_checksum();
  return version_checksum_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CGCMsgTFSync::set_allocated_version_checksum(::std::string* version_checksum) {
  if (version_checksum != NULL) {
    set_has_version_checksum();
  } else {
    clear_has_version_checksum();
  }
  version_checksum_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version_checksum);
  // @@protoc_insertion_point(field_set_allocated:CGCMsgTFSync.version_checksum)
}

// optional uint32 version_check = 2;
inline bool CGCMsgTFSync::has_version_check() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGCMsgTFSync::set_has_version_check() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGCMsgTFSync::clear_has_version_check() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGCMsgTFSync::clear_version_check() {
  version_check_ = 0u;
  clear_has_version_check();
}
inline ::google::protobuf::uint32 CGCMsgTFSync::version_check() const {
  // @@protoc_insertion_point(field_get:CGCMsgTFSync.version_check)
  return version_check_;
}
inline void CGCMsgTFSync::set_version_check(::google::protobuf::uint32 value) {
  set_has_version_check();
  version_check_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgTFSync.version_check)
}

// optional uint32 version_check_ex = 3;
inline bool CGCMsgTFSync::has_version_check_ex() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CGCMsgTFSync::set_has_version_check_ex() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CGCMsgTFSync::clear_has_version_check_ex() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CGCMsgTFSync::clear_version_check_ex() {
  version_check_ex_ = 0u;
  clear_has_version_check_ex();
}
inline ::google::protobuf::uint32 CGCMsgTFSync::version_check_ex() const {
  // @@protoc_insertion_point(field_get:CGCMsgTFSync.version_check_ex)
  return version_check_ex_;
}
inline void CGCMsgTFSync::set_version_check_ex(::google::protobuf::uint32 value) {
  set_has_version_check_ex();
  version_check_ex_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgTFSync.version_check_ex)
}

// optional uint32 version_check_ex2 = 4;
inline bool CGCMsgTFSync::has_version_check_ex2() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CGCMsgTFSync::set_has_version_check_ex2() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CGCMsgTFSync::clear_has_version_check_ex2() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CGCMsgTFSync::clear_version_check_ex2() {
  version_check_ex2_ = 0u;
  clear_has_version_check_ex2();
}
inline ::google::protobuf::uint32 CGCMsgTFSync::version_check_ex2() const {
  // @@protoc_insertion_point(field_get:CGCMsgTFSync.version_check_ex2)
  return version_check_ex2_;
}
inline void CGCMsgTFSync::set_version_check_ex2(::google::protobuf::uint32 value) {
  set_has_version_check_ex2();
  version_check_ex2_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgTFSync.version_check_ex2)
}

// optional bytes version_checksum_ex = 5;
inline bool CGCMsgTFSync::has_version_checksum_ex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCMsgTFSync::set_has_version_checksum_ex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGCMsgTFSync::clear_has_version_checksum_ex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGCMsgTFSync::clear_version_checksum_ex() {
  version_checksum_ex_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_version_checksum_ex();
}
inline const ::std::string& CGCMsgTFSync::version_checksum_ex() const {
  // @@protoc_insertion_point(field_get:CGCMsgTFSync.version_checksum_ex)
  return version_checksum_ex_.GetNoArena();
}
inline void CGCMsgTFSync::set_version_checksum_ex(const ::std::string& value) {
  set_has_version_checksum_ex();
  version_checksum_ex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CGCMsgTFSync.version_checksum_ex)
}
#if LANG_CXX11
inline void CGCMsgTFSync::set_version_checksum_ex(::std::string&& value) {
  set_has_version_checksum_ex();
  version_checksum_ex_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CGCMsgTFSync.version_checksum_ex)
}
#endif
inline void CGCMsgTFSync::set_version_checksum_ex(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_version_checksum_ex();
  version_checksum_ex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CGCMsgTFSync.version_checksum_ex)
}
inline void CGCMsgTFSync::set_version_checksum_ex(const void* value, size_t size) {
  set_has_version_checksum_ex();
  version_checksum_ex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CGCMsgTFSync.version_checksum_ex)
}
inline ::std::string* CGCMsgTFSync::mutable_version_checksum_ex() {
  set_has_version_checksum_ex();
  // @@protoc_insertion_point(field_mutable:CGCMsgTFSync.version_checksum_ex)
  return version_checksum_ex_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CGCMsgTFSync::release_version_checksum_ex() {
  // @@protoc_insertion_point(field_release:CGCMsgTFSync.version_checksum_ex)
  clear_has_version_checksum_ex();
  return version_checksum_ex_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CGCMsgTFSync::set_allocated_version_checksum_ex(::std::string* version_checksum_ex) {
  if (version_checksum_ex != NULL) {
    set_has_version_checksum_ex();
  } else {
    clear_has_version_checksum_ex();
  }
  version_checksum_ex_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version_checksum_ex);
  // @@protoc_insertion_point(field_set_allocated:CGCMsgTFSync.version_checksum_ex)
}

// -------------------------------------------------------------------

// CGCMsgTFSyncEx

// optional string version_checksum = 1;
inline bool CGCMsgTFSyncEx::has_version_checksum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCMsgTFSyncEx::set_has_version_checksum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCMsgTFSyncEx::clear_has_version_checksum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCMsgTFSyncEx::clear_version_checksum() {
  version_checksum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_version_checksum();
}
inline const ::std::string& CGCMsgTFSyncEx::version_checksum() const {
  // @@protoc_insertion_point(field_get:CGCMsgTFSyncEx.version_checksum)
  return version_checksum_.GetNoArena();
}
inline void CGCMsgTFSyncEx::set_version_checksum(const ::std::string& value) {
  set_has_version_checksum();
  version_checksum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CGCMsgTFSyncEx.version_checksum)
}
#if LANG_CXX11
inline void CGCMsgTFSyncEx::set_version_checksum(::std::string&& value) {
  set_has_version_checksum();
  version_checksum_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CGCMsgTFSyncEx.version_checksum)
}
#endif
inline void CGCMsgTFSyncEx::set_version_checksum(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_version_checksum();
  version_checksum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CGCMsgTFSyncEx.version_checksum)
}
inline void CGCMsgTFSyncEx::set_version_checksum(const char* value, size_t size) {
  set_has_version_checksum();
  version_checksum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CGCMsgTFSyncEx.version_checksum)
}
inline ::std::string* CGCMsgTFSyncEx::mutable_version_checksum() {
  set_has_version_checksum();
  // @@protoc_insertion_point(field_mutable:CGCMsgTFSyncEx.version_checksum)
  return version_checksum_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CGCMsgTFSyncEx::release_version_checksum() {
  // @@protoc_insertion_point(field_release:CGCMsgTFSyncEx.version_checksum)
  clear_has_version_checksum();
  return version_checksum_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CGCMsgTFSyncEx::set_allocated_version_checksum(::std::string* version_checksum) {
  if (version_checksum != NULL) {
    set_has_version_checksum();
  } else {
    clear_has_version_checksum();
  }
  version_checksum_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version_checksum);
  // @@protoc_insertion_point(field_set_allocated:CGCMsgTFSyncEx.version_checksum)
}

// optional bytes version_checksum_ex = 2;
inline bool CGCMsgTFSyncEx::has_version_checksum_ex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCMsgTFSyncEx::set_has_version_checksum_ex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGCMsgTFSyncEx::clear_has_version_checksum_ex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGCMsgTFSyncEx::clear_version_checksum_ex() {
  version_checksum_ex_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_version_checksum_ex();
}
inline const ::std::string& CGCMsgTFSyncEx::version_checksum_ex() const {
  // @@protoc_insertion_point(field_get:CGCMsgTFSyncEx.version_checksum_ex)
  return version_checksum_ex_.GetNoArena();
}
inline void CGCMsgTFSyncEx::set_version_checksum_ex(const ::std::string& value) {
  set_has_version_checksum_ex();
  version_checksum_ex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CGCMsgTFSyncEx.version_checksum_ex)
}
#if LANG_CXX11
inline void CGCMsgTFSyncEx::set_version_checksum_ex(::std::string&& value) {
  set_has_version_checksum_ex();
  version_checksum_ex_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CGCMsgTFSyncEx.version_checksum_ex)
}
#endif
inline void CGCMsgTFSyncEx::set_version_checksum_ex(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_version_checksum_ex();
  version_checksum_ex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CGCMsgTFSyncEx.version_checksum_ex)
}
inline void CGCMsgTFSyncEx::set_version_checksum_ex(const void* value, size_t size) {
  set_has_version_checksum_ex();
  version_checksum_ex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CGCMsgTFSyncEx.version_checksum_ex)
}
inline ::std::string* CGCMsgTFSyncEx::mutable_version_checksum_ex() {
  set_has_version_checksum_ex();
  // @@protoc_insertion_point(field_mutable:CGCMsgTFSyncEx.version_checksum_ex)
  return version_checksum_ex_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CGCMsgTFSyncEx::release_version_checksum_ex() {
  // @@protoc_insertion_point(field_release:CGCMsgTFSyncEx.version_checksum_ex)
  clear_has_version_checksum_ex();
  return version_checksum_ex_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CGCMsgTFSyncEx::set_allocated_version_checksum_ex(::std::string* version_checksum_ex) {
  if (version_checksum_ex != NULL) {
    set_has_version_checksum_ex();
  } else {
    clear_has_version_checksum_ex();
  }
  version_checksum_ex_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version_checksum_ex);
  // @@protoc_insertion_point(field_set_allocated:CGCMsgTFSyncEx.version_checksum_ex)
}

// optional uint32 version_check = 3;
inline bool CGCMsgTFSyncEx::has_version_check() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGCMsgTFSyncEx::set_has_version_check() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGCMsgTFSyncEx::clear_has_version_check() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGCMsgTFSyncEx::clear_version_check() {
  version_check_ = 0u;
  clear_has_version_check();
}
inline ::google::protobuf::uint32 CGCMsgTFSyncEx::version_check() const {
  // @@protoc_insertion_point(field_get:CGCMsgTFSyncEx.version_check)
  return version_check_;
}
inline void CGCMsgTFSyncEx::set_version_check(::google::protobuf::uint32 value) {
  set_has_version_check();
  version_check_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgTFSyncEx.version_check)
}

// -------------------------------------------------------------------

// CMsgMvMVictory_Player

// optional fixed64 steam_id = 1;
inline bool CMsgMvMVictory_Player::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgMvMVictory_Player::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgMvMVictory_Player::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgMvMVictory_Player::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgMvMVictory_Player::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictory.Player.steam_id)
  return steam_id_;
}
inline void CMsgMvMVictory_Player::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgMvMVictory.Player.steam_id)
}

// optional bool squad_surplus = 2;
inline bool CMsgMvMVictory_Player::has_squad_surplus() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgMvMVictory_Player::set_has_squad_surplus() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgMvMVictory_Player::clear_has_squad_surplus() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgMvMVictory_Player::clear_squad_surplus() {
  squad_surplus_ = false;
  clear_has_squad_surplus();
}
inline bool CMsgMvMVictory_Player::squad_surplus() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictory.Player.squad_surplus)
  return squad_surplus_;
}
inline void CMsgMvMVictory_Player::set_squad_surplus(bool value) {
  set_has_squad_surplus();
  squad_surplus_ = value;
  // @@protoc_insertion_point(field_set:CMsgMvMVictory.Player.squad_surplus)
}

// -------------------------------------------------------------------

// CMsgMvMVictory

// optional uint32 legacy_mission_index = 1;
inline bool CMsgMvMVictory::has_legacy_mission_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgMvMVictory::set_has_legacy_mission_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgMvMVictory::clear_has_legacy_mission_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgMvMVictory::clear_legacy_mission_index() {
  legacy_mission_index_ = 0u;
  clear_has_legacy_mission_index();
}
inline ::google::protobuf::uint32 CMsgMvMVictory::legacy_mission_index() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictory.legacy_mission_index)
  return legacy_mission_index_;
}
inline void CMsgMvMVictory::set_legacy_mission_index(::google::protobuf::uint32 value) {
  set_has_legacy_mission_index();
  legacy_mission_index_ = value;
  // @@protoc_insertion_point(field_set:CMsgMvMVictory.legacy_mission_index)
}

// optional string tour_name_mannup = 5;
inline bool CMsgMvMVictory::has_tour_name_mannup() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgMvMVictory::set_has_tour_name_mannup() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgMvMVictory::clear_has_tour_name_mannup() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgMvMVictory::clear_tour_name_mannup() {
  tour_name_mannup_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tour_name_mannup();
}
inline const ::std::string& CMsgMvMVictory::tour_name_mannup() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictory.tour_name_mannup)
  return tour_name_mannup_.GetNoArena();
}
inline void CMsgMvMVictory::set_tour_name_mannup(const ::std::string& value) {
  set_has_tour_name_mannup();
  tour_name_mannup_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgMvMVictory.tour_name_mannup)
}
#if LANG_CXX11
inline void CMsgMvMVictory::set_tour_name_mannup(::std::string&& value) {
  set_has_tour_name_mannup();
  tour_name_mannup_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgMvMVictory.tour_name_mannup)
}
#endif
inline void CMsgMvMVictory::set_tour_name_mannup(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tour_name_mannup();
  tour_name_mannup_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgMvMVictory.tour_name_mannup)
}
inline void CMsgMvMVictory::set_tour_name_mannup(const char* value, size_t size) {
  set_has_tour_name_mannup();
  tour_name_mannup_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgMvMVictory.tour_name_mannup)
}
inline ::std::string* CMsgMvMVictory::mutable_tour_name_mannup() {
  set_has_tour_name_mannup();
  // @@protoc_insertion_point(field_mutable:CMsgMvMVictory.tour_name_mannup)
  return tour_name_mannup_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgMvMVictory::release_tour_name_mannup() {
  // @@protoc_insertion_point(field_release:CMsgMvMVictory.tour_name_mannup)
  clear_has_tour_name_mannup();
  return tour_name_mannup_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgMvMVictory::set_allocated_tour_name_mannup(::std::string* tour_name_mannup) {
  if (tour_name_mannup != NULL) {
    set_has_tour_name_mannup();
  } else {
    clear_has_tour_name_mannup();
  }
  tour_name_mannup_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tour_name_mannup);
  // @@protoc_insertion_point(field_set_allocated:CMsgMvMVictory.tour_name_mannup)
}

// optional string mission_name = 6;
inline bool CMsgMvMVictory::has_mission_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgMvMVictory::set_has_mission_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgMvMVictory::clear_has_mission_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgMvMVictory::clear_mission_name() {
  mission_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mission_name();
}
inline const ::std::string& CMsgMvMVictory::mission_name() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictory.mission_name)
  return mission_name_.GetNoArena();
}
inline void CMsgMvMVictory::set_mission_name(const ::std::string& value) {
  set_has_mission_name();
  mission_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgMvMVictory.mission_name)
}
#if LANG_CXX11
inline void CMsgMvMVictory::set_mission_name(::std::string&& value) {
  set_has_mission_name();
  mission_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgMvMVictory.mission_name)
}
#endif
inline void CMsgMvMVictory::set_mission_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mission_name();
  mission_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgMvMVictory.mission_name)
}
inline void CMsgMvMVictory::set_mission_name(const char* value, size_t size) {
  set_has_mission_name();
  mission_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgMvMVictory.mission_name)
}
inline ::std::string* CMsgMvMVictory::mutable_mission_name() {
  set_has_mission_name();
  // @@protoc_insertion_point(field_mutable:CMsgMvMVictory.mission_name)
  return mission_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgMvMVictory::release_mission_name() {
  // @@protoc_insertion_point(field_release:CMsgMvMVictory.mission_name)
  clear_has_mission_name();
  return mission_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgMvMVictory::set_allocated_mission_name(::std::string* mission_name) {
  if (mission_name != NULL) {
    set_has_mission_name();
  } else {
    clear_has_mission_name();
  }
  mission_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mission_name);
  // @@protoc_insertion_point(field_set_allocated:CMsgMvMVictory.mission_name)
}

// repeated .CMsgMvMVictory.Player players = 2;
inline int CMsgMvMVictory::players_size() const {
  return players_.size();
}
inline void CMsgMvMVictory::clear_players() {
  players_.Clear();
}
inline const ::CMsgMvMVictory_Player& CMsgMvMVictory::players(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictory.players)
  return players_.Get(index);
}
inline ::CMsgMvMVictory_Player* CMsgMvMVictory::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgMvMVictory.players)
  return players_.Mutable(index);
}
inline ::CMsgMvMVictory_Player* CMsgMvMVictory::add_players() {
  // @@protoc_insertion_point(field_add:CMsgMvMVictory.players)
  return players_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictory_Player >*
CMsgMvMVictory::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMvMVictory.players)
  return &players_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictory_Player >&
CMsgMvMVictory::players() const {
  // @@protoc_insertion_point(field_list:CMsgMvMVictory.players)
  return players_;
}

// optional uint64 lobby_id = 3;
inline bool CMsgMvMVictory::has_lobby_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgMvMVictory::set_has_lobby_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgMvMVictory::clear_has_lobby_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgMvMVictory::clear_lobby_id() {
  lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_lobby_id();
}
inline ::google::protobuf::uint64 CMsgMvMVictory::lobby_id() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictory.lobby_id)
  return lobby_id_;
}
inline void CMsgMvMVictory::set_lobby_id(::google::protobuf::uint64 value) {
  set_has_lobby_id();
  lobby_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgMvMVictory.lobby_id)
}

// optional fixed32 event_time = 4;
inline bool CMsgMvMVictory::has_event_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgMvMVictory::set_has_event_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgMvMVictory::clear_has_event_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgMvMVictory::clear_event_time() {
  event_time_ = 0u;
  clear_has_event_time();
}
inline ::google::protobuf::uint32 CMsgMvMVictory::event_time() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictory.event_time)
  return event_time_;
}
inline void CMsgMvMVictory::set_event_time(::google::protobuf::uint32 value) {
  set_has_event_time();
  event_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgMvMVictory.event_time)
}

// -------------------------------------------------------------------

// CMsgMvMMannUpVictoryReply

// -------------------------------------------------------------------

// CMsgGameServerKickingLobby

// repeated fixed64 connected_players = 1;
inline int CMsgGameServerKickingLobby::connected_players_size() const {
  return connected_players_.size();
}
inline void CMsgGameServerKickingLobby::clear_connected_players() {
  connected_players_.Clear();
}
inline ::google::protobuf::uint64 CMsgGameServerKickingLobby::connected_players(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGameServerKickingLobby.connected_players)
  return connected_players_.Get(index);
}
inline void CMsgGameServerKickingLobby::set_connected_players(int index, ::google::protobuf::uint64 value) {
  connected_players_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGameServerKickingLobby.connected_players)
}
inline void CMsgGameServerKickingLobby::add_connected_players(::google::protobuf::uint64 value) {
  connected_players_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgGameServerKickingLobby.connected_players)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgGameServerKickingLobby::connected_players() const {
  // @@protoc_insertion_point(field_list:CMsgGameServerKickingLobby.connected_players)
  return connected_players_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgGameServerKickingLobby::mutable_connected_players() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGameServerKickingLobby.connected_players)
  return &connected_players_;
}

// optional bool create_party = 2 [default = true];
inline bool CMsgGameServerKickingLobby::has_create_party() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGameServerKickingLobby::set_has_create_party() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGameServerKickingLobby::clear_has_create_party() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGameServerKickingLobby::clear_create_party() {
  create_party_ = true;
  clear_has_create_party();
}
inline bool CMsgGameServerKickingLobby::create_party() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerKickingLobby.create_party)
  return create_party_;
}
inline void CMsgGameServerKickingLobby::set_create_party(bool value) {
  set_has_create_party();
  create_party_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerKickingLobby.create_party)
}

// optional uint64 lobby_id = 3;
inline bool CMsgGameServerKickingLobby::has_lobby_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGameServerKickingLobby::set_has_lobby_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGameServerKickingLobby::clear_has_lobby_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGameServerKickingLobby::clear_lobby_id() {
  lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_lobby_id();
}
inline ::google::protobuf::uint64 CMsgGameServerKickingLobby::lobby_id() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerKickingLobby.lobby_id)
  return lobby_id_;
}
inline void CMsgGameServerKickingLobby::set_lobby_id(::google::protobuf::uint64 value) {
  set_has_lobby_id();
  lobby_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerKickingLobby.lobby_id)
}

// optional uint64 match_id = 4;
inline bool CMsgGameServerKickingLobby::has_match_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGameServerKickingLobby::set_has_match_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGameServerKickingLobby::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGameServerKickingLobby::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgGameServerKickingLobby::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerKickingLobby.match_id)
  return match_id_;
}
inline void CMsgGameServerKickingLobby::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerKickingLobby.match_id)
}

// -------------------------------------------------------------------

// CMsgGameServerKickingLobbyResponse

// -------------------------------------------------------------------

// CMsgLeaveGameAndPrepareToJoinParty

// optional fixed64 party_id = 1;
inline bool CMsgLeaveGameAndPrepareToJoinParty::has_party_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgLeaveGameAndPrepareToJoinParty::set_has_party_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgLeaveGameAndPrepareToJoinParty::clear_has_party_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgLeaveGameAndPrepareToJoinParty::clear_party_id() {
  party_id_ = GOOGLE_ULONGLONG(0);
  clear_has_party_id();
}
inline ::google::protobuf::uint64 CMsgLeaveGameAndPrepareToJoinParty::party_id() const {
  // @@protoc_insertion_point(field_get:CMsgLeaveGameAndPrepareToJoinParty.party_id)
  return party_id_;
}
inline void CMsgLeaveGameAndPrepareToJoinParty::set_party_id(::google::protobuf::uint64 value) {
  set_has_party_id();
  party_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgLeaveGameAndPrepareToJoinParty.party_id)
}

// -------------------------------------------------------------------

// CMsgPlayerLeftMatch

// optional fixed64 steam_id = 1;
inline bool CMsgPlayerLeftMatch::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPlayerLeftMatch::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPlayerLeftMatch::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPlayerLeftMatch::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgPlayerLeftMatch::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgPlayerLeftMatch.steam_id)
  return steam_id_;
}
inline void CMsgPlayerLeftMatch::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPlayerLeftMatch.steam_id)
}

// optional .TFMatchLeaveReason leave_reason = 2 [default = TFMatchLeaveReason_UNSPECIFIED];
inline bool CMsgPlayerLeftMatch::has_leave_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPlayerLeftMatch::set_has_leave_reason() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPlayerLeftMatch::clear_has_leave_reason() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPlayerLeftMatch::clear_leave_reason() {
  leave_reason_ = 0;
  clear_has_leave_reason();
}
inline ::TFMatchLeaveReason CMsgPlayerLeftMatch::leave_reason() const {
  // @@protoc_insertion_point(field_get:CMsgPlayerLeftMatch.leave_reason)
  return static_cast< ::TFMatchLeaveReason >(leave_reason_);
}
inline void CMsgPlayerLeftMatch::set_leave_reason(::TFMatchLeaveReason value) {
  assert(::TFMatchLeaveReason_IsValid(value));
  set_has_leave_reason();
  leave_reason_ = value;
  // @@protoc_insertion_point(field_set:CMsgPlayerLeftMatch.leave_reason)
}

// optional bool was_abandon = 3;
inline bool CMsgPlayerLeftMatch::has_was_abandon() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgPlayerLeftMatch::set_has_was_abandon() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgPlayerLeftMatch::clear_has_was_abandon() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgPlayerLeftMatch::clear_was_abandon() {
  was_abandon_ = false;
  clear_has_was_abandon();
}
inline bool CMsgPlayerLeftMatch::was_abandon() const {
  // @@protoc_insertion_point(field_get:CMsgPlayerLeftMatch.was_abandon)
  return was_abandon_;
}
inline void CMsgPlayerLeftMatch::set_was_abandon(bool value) {
  set_has_was_abandon();
  was_abandon_ = value;
  // @@protoc_insertion_point(field_set:CMsgPlayerLeftMatch.was_abandon)
}

// optional uint64 lobby_id = 4;
inline bool CMsgPlayerLeftMatch::has_lobby_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgPlayerLeftMatch::set_has_lobby_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgPlayerLeftMatch::clear_has_lobby_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgPlayerLeftMatch::clear_lobby_id() {
  lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_lobby_id();
}
inline ::google::protobuf::uint64 CMsgPlayerLeftMatch::lobby_id() const {
  // @@protoc_insertion_point(field_get:CMsgPlayerLeftMatch.lobby_id)
  return lobby_id_;
}
inline void CMsgPlayerLeftMatch::set_lobby_id(::google::protobuf::uint64 value) {
  set_has_lobby_id();
  lobby_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPlayerLeftMatch.lobby_id)
}

// optional uint64 match_id = 5;
inline bool CMsgPlayerLeftMatch::has_match_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgPlayerLeftMatch::set_has_match_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgPlayerLeftMatch::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgPlayerLeftMatch::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgPlayerLeftMatch::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgPlayerLeftMatch.match_id)
  return match_id_;
}
inline void CMsgPlayerLeftMatch::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPlayerLeftMatch.match_id)
}

// repeated .CMsgTFXPSource xp_breakdown = 6;
inline int CMsgPlayerLeftMatch::xp_breakdown_size() const {
  return xp_breakdown_.size();
}
inline void CMsgPlayerLeftMatch::clear_xp_breakdown() {
  xp_breakdown_.Clear();
}
inline const ::CMsgTFXPSource& CMsgPlayerLeftMatch::xp_breakdown(int index) const {
  // @@protoc_insertion_point(field_get:CMsgPlayerLeftMatch.xp_breakdown)
  return xp_breakdown_.Get(index);
}
inline ::CMsgTFXPSource* CMsgPlayerLeftMatch::mutable_xp_breakdown(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgPlayerLeftMatch.xp_breakdown)
  return xp_breakdown_.Mutable(index);
}
inline ::CMsgTFXPSource* CMsgPlayerLeftMatch::add_xp_breakdown() {
  // @@protoc_insertion_point(field_add:CMsgPlayerLeftMatch.xp_breakdown)
  return xp_breakdown_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgTFXPSource >*
CMsgPlayerLeftMatch::mutable_xp_breakdown() {
  // @@protoc_insertion_point(field_mutable_list:CMsgPlayerLeftMatch.xp_breakdown)
  return &xp_breakdown_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgTFXPSource >&
CMsgPlayerLeftMatch::xp_breakdown() const {
  // @@protoc_insertion_point(field_list:CMsgPlayerLeftMatch.xp_breakdown)
  return xp_breakdown_;
}

// -------------------------------------------------------------------

// CMsgPlayerLeftMatchResponse

// -------------------------------------------------------------------

// CMsgPlayerVoteKickedAfterLeavingMatch

// optional fixed64 steam_id = 1;
inline bool CMsgPlayerVoteKickedAfterLeavingMatch::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPlayerVoteKickedAfterLeavingMatch::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPlayerVoteKickedAfterLeavingMatch::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPlayerVoteKickedAfterLeavingMatch::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgPlayerVoteKickedAfterLeavingMatch::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgPlayerVoteKickedAfterLeavingMatch.steam_id)
  return steam_id_;
}
inline void CMsgPlayerVoteKickedAfterLeavingMatch::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPlayerVoteKickedAfterLeavingMatch.steam_id)
}

// optional fixed64 lobby_id = 2;
inline bool CMsgPlayerVoteKickedAfterLeavingMatch::has_lobby_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPlayerVoteKickedAfterLeavingMatch::set_has_lobby_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPlayerVoteKickedAfterLeavingMatch::clear_has_lobby_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPlayerVoteKickedAfterLeavingMatch::clear_lobby_id() {
  lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_lobby_id();
}
inline ::google::protobuf::uint64 CMsgPlayerVoteKickedAfterLeavingMatch::lobby_id() const {
  // @@protoc_insertion_point(field_get:CMsgPlayerVoteKickedAfterLeavingMatch.lobby_id)
  return lobby_id_;
}
inline void CMsgPlayerVoteKickedAfterLeavingMatch::set_lobby_id(::google::protobuf::uint64 value) {
  set_has_lobby_id();
  lobby_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPlayerVoteKickedAfterLeavingMatch.lobby_id)
}

// optional fixed64 match_id = 3;
inline bool CMsgPlayerVoteKickedAfterLeavingMatch::has_match_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgPlayerVoteKickedAfterLeavingMatch::set_has_match_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgPlayerVoteKickedAfterLeavingMatch::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgPlayerVoteKickedAfterLeavingMatch::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgPlayerVoteKickedAfterLeavingMatch::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgPlayerVoteKickedAfterLeavingMatch.match_id)
  return match_id_;
}
inline void CMsgPlayerVoteKickedAfterLeavingMatch::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgPlayerVoteKickedAfterLeavingMatch.match_id)
}

// -------------------------------------------------------------------

// CMsgPlayerVoteKickedAfterLeavingMatchResponse

// -------------------------------------------------------------------

// CMsgHalloween_ServerBossEvent

// optional uint32 event_counter = 1;
inline bool CMsgHalloween_ServerBossEvent::has_event_counter() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgHalloween_ServerBossEvent::set_has_event_counter() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgHalloween_ServerBossEvent::clear_has_event_counter() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgHalloween_ServerBossEvent::clear_event_counter() {
  event_counter_ = 0u;
  clear_has_event_counter();
}
inline ::google::protobuf::uint32 CMsgHalloween_ServerBossEvent::event_counter() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_ServerBossEvent.event_counter)
  return event_counter_;
}
inline void CMsgHalloween_ServerBossEvent::set_event_counter(::google::protobuf::uint32 value) {
  set_has_event_counter();
  event_counter_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_ServerBossEvent.event_counter)
}

// optional uint32 timestamp = 2;
inline bool CMsgHalloween_ServerBossEvent::has_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgHalloween_ServerBossEvent::set_has_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgHalloween_ServerBossEvent::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgHalloween_ServerBossEvent::clear_timestamp() {
  timestamp_ = 0u;
  clear_has_timestamp();
}
inline ::google::protobuf::uint32 CMsgHalloween_ServerBossEvent::timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_ServerBossEvent.timestamp)
  return timestamp_;
}
inline void CMsgHalloween_ServerBossEvent::set_timestamp(::google::protobuf::uint32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_ServerBossEvent.timestamp)
}

// optional uint32 boss_type = 3;
inline bool CMsgHalloween_ServerBossEvent::has_boss_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgHalloween_ServerBossEvent::set_has_boss_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgHalloween_ServerBossEvent::clear_has_boss_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgHalloween_ServerBossEvent::clear_boss_type() {
  boss_type_ = 0u;
  clear_has_boss_type();
}
inline ::google::protobuf::uint32 CMsgHalloween_ServerBossEvent::boss_type() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_ServerBossEvent.boss_type)
  return boss_type_;
}
inline void CMsgHalloween_ServerBossEvent::set_boss_type(::google::protobuf::uint32 value) {
  set_has_boss_type();
  boss_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_ServerBossEvent.boss_type)
}

// optional uint32 boss_level = 4;
inline bool CMsgHalloween_ServerBossEvent::has_boss_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgHalloween_ServerBossEvent::set_has_boss_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgHalloween_ServerBossEvent::clear_has_boss_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgHalloween_ServerBossEvent::clear_boss_level() {
  boss_level_ = 0u;
  clear_has_boss_level();
}
inline ::google::protobuf::uint32 CMsgHalloween_ServerBossEvent::boss_level() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_ServerBossEvent.boss_level)
  return boss_level_;
}
inline void CMsgHalloween_ServerBossEvent::set_boss_level(::google::protobuf::uint32 value) {
  set_has_boss_level();
  boss_level_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_ServerBossEvent.boss_level)
}

// optional uint32 event_type = 5;
inline bool CMsgHalloween_ServerBossEvent::has_event_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgHalloween_ServerBossEvent::set_has_event_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgHalloween_ServerBossEvent::clear_has_event_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgHalloween_ServerBossEvent::clear_event_type() {
  event_type_ = 0u;
  clear_has_event_type();
}
inline ::google::protobuf::uint32 CMsgHalloween_ServerBossEvent::event_type() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_ServerBossEvent.event_type)
  return event_type_;
}
inline void CMsgHalloween_ServerBossEvent::set_event_type(::google::protobuf::uint32 value) {
  set_has_event_type();
  event_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_ServerBossEvent.event_type)
}

// optional uint32 players_involved = 6;
inline bool CMsgHalloween_ServerBossEvent::has_players_involved() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgHalloween_ServerBossEvent::set_has_players_involved() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgHalloween_ServerBossEvent::clear_has_players_involved() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgHalloween_ServerBossEvent::clear_players_involved() {
  players_involved_ = 0u;
  clear_has_players_involved();
}
inline ::google::protobuf::uint32 CMsgHalloween_ServerBossEvent::players_involved() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_ServerBossEvent.players_involved)
  return players_involved_;
}
inline void CMsgHalloween_ServerBossEvent::set_players_involved(::google::protobuf::uint32 value) {
  set_has_players_involved();
  players_involved_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_ServerBossEvent.players_involved)
}

// optional float elapsed_time = 7;
inline bool CMsgHalloween_ServerBossEvent::has_elapsed_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgHalloween_ServerBossEvent::set_has_elapsed_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgHalloween_ServerBossEvent::clear_has_elapsed_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgHalloween_ServerBossEvent::clear_elapsed_time() {
  elapsed_time_ = 0;
  clear_has_elapsed_time();
}
inline float CMsgHalloween_ServerBossEvent::elapsed_time() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_ServerBossEvent.elapsed_time)
  return elapsed_time_;
}
inline void CMsgHalloween_ServerBossEvent::set_elapsed_time(float value) {
  set_has_elapsed_time();
  elapsed_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_ServerBossEvent.elapsed_time)
}

// -------------------------------------------------------------------

// CMsgHalloween_Merasmus2012

// optional uint32 event_counter = 1;
inline bool CMsgHalloween_Merasmus2012::has_event_counter() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_event_counter() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_event_counter() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgHalloween_Merasmus2012::clear_event_counter() {
  event_counter_ = 0u;
  clear_has_event_counter();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::event_counter() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.event_counter)
  return event_counter_;
}
inline void CMsgHalloween_Merasmus2012::set_event_counter(::google::protobuf::uint32 value) {
  set_has_event_counter();
  event_counter_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.event_counter)
}

// optional fixed32 time_submitted = 2;
inline bool CMsgHalloween_Merasmus2012::has_time_submitted() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_time_submitted() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_time_submitted() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgHalloween_Merasmus2012::clear_time_submitted() {
  time_submitted_ = 0u;
  clear_has_time_submitted();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::time_submitted() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.time_submitted)
  return time_submitted_;
}
inline void CMsgHalloween_Merasmus2012::set_time_submitted(::google::protobuf::uint32 value) {
  set_has_time_submitted();
  time_submitted_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.time_submitted)
}

// optional bool is_valve_server = 3;
inline bool CMsgHalloween_Merasmus2012::has_is_valve_server() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_is_valve_server() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_is_valve_server() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgHalloween_Merasmus2012::clear_is_valve_server() {
  is_valve_server_ = false;
  clear_has_is_valve_server();
}
inline bool CMsgHalloween_Merasmus2012::is_valve_server() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.is_valve_server)
  return is_valve_server_;
}
inline void CMsgHalloween_Merasmus2012::set_is_valve_server(bool value) {
  set_has_is_valve_server();
  is_valve_server_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.is_valve_server)
}

// optional uint32 boss_level = 4;
inline bool CMsgHalloween_Merasmus2012::has_boss_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_boss_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_boss_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgHalloween_Merasmus2012::clear_boss_level() {
  boss_level_ = 0u;
  clear_has_boss_level();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::boss_level() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.boss_level)
  return boss_level_;
}
inline void CMsgHalloween_Merasmus2012::set_boss_level(::google::protobuf::uint32 value) {
  set_has_boss_level();
  boss_level_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.boss_level)
}

// optional uint32 spawned_health = 5;
inline bool CMsgHalloween_Merasmus2012::has_spawned_health() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_spawned_health() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_spawned_health() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgHalloween_Merasmus2012::clear_spawned_health() {
  spawned_health_ = 0u;
  clear_has_spawned_health();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::spawned_health() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.spawned_health)
  return spawned_health_;
}
inline void CMsgHalloween_Merasmus2012::set_spawned_health(::google::protobuf::uint32 value) {
  set_has_spawned_health();
  spawned_health_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.spawned_health)
}

// optional uint32 remaining_health = 6;
inline bool CMsgHalloween_Merasmus2012::has_remaining_health() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_remaining_health() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_remaining_health() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgHalloween_Merasmus2012::clear_remaining_health() {
  remaining_health_ = 0u;
  clear_has_remaining_health();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::remaining_health() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.remaining_health)
  return remaining_health_;
}
inline void CMsgHalloween_Merasmus2012::set_remaining_health(::google::protobuf::uint32 value) {
  set_has_remaining_health();
  remaining_health_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.remaining_health)
}

// optional uint32 life_time = 7;
inline bool CMsgHalloween_Merasmus2012::has_life_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_life_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_life_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgHalloween_Merasmus2012::clear_life_time() {
  life_time_ = 0u;
  clear_has_life_time();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::life_time() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.life_time)
  return life_time_;
}
inline void CMsgHalloween_Merasmus2012::set_life_time(::google::protobuf::uint32 value) {
  set_has_life_time();
  life_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.life_time)
}

// optional uint32 bomb_kills = 8;
inline bool CMsgHalloween_Merasmus2012::has_bomb_kills() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_bomb_kills() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_bomb_kills() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgHalloween_Merasmus2012::clear_bomb_kills() {
  bomb_kills_ = 0u;
  clear_has_bomb_kills();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::bomb_kills() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.bomb_kills)
  return bomb_kills_;
}
inline void CMsgHalloween_Merasmus2012::set_bomb_kills(::google::protobuf::uint32 value) {
  set_has_bomb_kills();
  bomb_kills_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.bomb_kills)
}

// optional uint32 staff_kills = 9;
inline bool CMsgHalloween_Merasmus2012::has_staff_kills() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_staff_kills() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_staff_kills() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgHalloween_Merasmus2012::clear_staff_kills() {
  staff_kills_ = 0u;
  clear_has_staff_kills();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::staff_kills() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.staff_kills)
  return staff_kills_;
}
inline void CMsgHalloween_Merasmus2012::set_staff_kills(::google::protobuf::uint32 value) {
  set_has_staff_kills();
  staff_kills_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.staff_kills)
}

// optional uint32 pvp_kills = 10;
inline bool CMsgHalloween_Merasmus2012::has_pvp_kills() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_pvp_kills() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_pvp_kills() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgHalloween_Merasmus2012::clear_pvp_kills() {
  pvp_kills_ = 0u;
  clear_has_pvp_kills();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::pvp_kills() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.pvp_kills)
  return pvp_kills_;
}
inline void CMsgHalloween_Merasmus2012::set_pvp_kills(::google::protobuf::uint32 value) {
  set_has_pvp_kills();
  pvp_kills_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.pvp_kills)
}

// optional uint32 prophunt_time1 = 11;
inline bool CMsgHalloween_Merasmus2012::has_prophunt_time1() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_prophunt_time1() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_prophunt_time1() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgHalloween_Merasmus2012::clear_prophunt_time1() {
  prophunt_time1_ = 0u;
  clear_has_prophunt_time1();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::prophunt_time1() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.prophunt_time1)
  return prophunt_time1_;
}
inline void CMsgHalloween_Merasmus2012::set_prophunt_time1(::google::protobuf::uint32 value) {
  set_has_prophunt_time1();
  prophunt_time1_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.prophunt_time1)
}

// optional uint32 prophunt_time2 = 12;
inline bool CMsgHalloween_Merasmus2012::has_prophunt_time2() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_prophunt_time2() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_prophunt_time2() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgHalloween_Merasmus2012::clear_prophunt_time2() {
  prophunt_time2_ = 0u;
  clear_has_prophunt_time2();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::prophunt_time2() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.prophunt_time2)
  return prophunt_time2_;
}
inline void CMsgHalloween_Merasmus2012::set_prophunt_time2(::google::protobuf::uint32 value) {
  set_has_prophunt_time2();
  prophunt_time2_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.prophunt_time2)
}

// optional uint32 dmg_scout = 13;
inline bool CMsgHalloween_Merasmus2012::has_dmg_scout() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_dmg_scout() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_dmg_scout() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgHalloween_Merasmus2012::clear_dmg_scout() {
  dmg_scout_ = 0u;
  clear_has_dmg_scout();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::dmg_scout() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.dmg_scout)
  return dmg_scout_;
}
inline void CMsgHalloween_Merasmus2012::set_dmg_scout(::google::protobuf::uint32 value) {
  set_has_dmg_scout();
  dmg_scout_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.dmg_scout)
}

// optional uint32 dmg_sniper = 14;
inline bool CMsgHalloween_Merasmus2012::has_dmg_sniper() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_dmg_sniper() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_dmg_sniper() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgHalloween_Merasmus2012::clear_dmg_sniper() {
  dmg_sniper_ = 0u;
  clear_has_dmg_sniper();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::dmg_sniper() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.dmg_sniper)
  return dmg_sniper_;
}
inline void CMsgHalloween_Merasmus2012::set_dmg_sniper(::google::protobuf::uint32 value) {
  set_has_dmg_sniper();
  dmg_sniper_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.dmg_sniper)
}

// optional uint32 dmg_soldier = 15;
inline bool CMsgHalloween_Merasmus2012::has_dmg_soldier() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_dmg_soldier() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_dmg_soldier() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgHalloween_Merasmus2012::clear_dmg_soldier() {
  dmg_soldier_ = 0u;
  clear_has_dmg_soldier();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::dmg_soldier() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.dmg_soldier)
  return dmg_soldier_;
}
inline void CMsgHalloween_Merasmus2012::set_dmg_soldier(::google::protobuf::uint32 value) {
  set_has_dmg_soldier();
  dmg_soldier_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.dmg_soldier)
}

// optional uint32 dmg_demo = 16;
inline bool CMsgHalloween_Merasmus2012::has_dmg_demo() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_dmg_demo() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_dmg_demo() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMsgHalloween_Merasmus2012::clear_dmg_demo() {
  dmg_demo_ = 0u;
  clear_has_dmg_demo();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::dmg_demo() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.dmg_demo)
  return dmg_demo_;
}
inline void CMsgHalloween_Merasmus2012::set_dmg_demo(::google::protobuf::uint32 value) {
  set_has_dmg_demo();
  dmg_demo_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.dmg_demo)
}

// optional uint32 dmg_medic = 17;
inline bool CMsgHalloween_Merasmus2012::has_dmg_medic() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_dmg_medic() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_dmg_medic() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CMsgHalloween_Merasmus2012::clear_dmg_medic() {
  dmg_medic_ = 0u;
  clear_has_dmg_medic();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::dmg_medic() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.dmg_medic)
  return dmg_medic_;
}
inline void CMsgHalloween_Merasmus2012::set_dmg_medic(::google::protobuf::uint32 value) {
  set_has_dmg_medic();
  dmg_medic_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.dmg_medic)
}

// optional uint32 dmg_heavy = 18;
inline bool CMsgHalloween_Merasmus2012::has_dmg_heavy() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_dmg_heavy() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_dmg_heavy() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CMsgHalloween_Merasmus2012::clear_dmg_heavy() {
  dmg_heavy_ = 0u;
  clear_has_dmg_heavy();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::dmg_heavy() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.dmg_heavy)
  return dmg_heavy_;
}
inline void CMsgHalloween_Merasmus2012::set_dmg_heavy(::google::protobuf::uint32 value) {
  set_has_dmg_heavy();
  dmg_heavy_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.dmg_heavy)
}

// optional uint32 dmg_pyro = 19;
inline bool CMsgHalloween_Merasmus2012::has_dmg_pyro() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_dmg_pyro() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_dmg_pyro() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CMsgHalloween_Merasmus2012::clear_dmg_pyro() {
  dmg_pyro_ = 0u;
  clear_has_dmg_pyro();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::dmg_pyro() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.dmg_pyro)
  return dmg_pyro_;
}
inline void CMsgHalloween_Merasmus2012::set_dmg_pyro(::google::protobuf::uint32 value) {
  set_has_dmg_pyro();
  dmg_pyro_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.dmg_pyro)
}

// optional uint32 dmg_spy = 20;
inline bool CMsgHalloween_Merasmus2012::has_dmg_spy() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_dmg_spy() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_dmg_spy() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CMsgHalloween_Merasmus2012::clear_dmg_spy() {
  dmg_spy_ = 0u;
  clear_has_dmg_spy();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::dmg_spy() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.dmg_spy)
  return dmg_spy_;
}
inline void CMsgHalloween_Merasmus2012::set_dmg_spy(::google::protobuf::uint32 value) {
  set_has_dmg_spy();
  dmg_spy_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.dmg_spy)
}

// optional uint32 dmg_engineer = 21;
inline bool CMsgHalloween_Merasmus2012::has_dmg_engineer() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_dmg_engineer() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_dmg_engineer() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CMsgHalloween_Merasmus2012::clear_dmg_engineer() {
  dmg_engineer_ = 0u;
  clear_has_dmg_engineer();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::dmg_engineer() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.dmg_engineer)
  return dmg_engineer_;
}
inline void CMsgHalloween_Merasmus2012::set_dmg_engineer(::google::protobuf::uint32 value) {
  set_has_dmg_engineer();
  dmg_engineer_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.dmg_engineer)
}

// optional uint32 scout_count = 22;
inline bool CMsgHalloween_Merasmus2012::has_scout_count() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_scout_count() {
  _has_bits_[0] |= 0x00200000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_scout_count() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void CMsgHalloween_Merasmus2012::clear_scout_count() {
  scout_count_ = 0u;
  clear_has_scout_count();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::scout_count() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.scout_count)
  return scout_count_;
}
inline void CMsgHalloween_Merasmus2012::set_scout_count(::google::protobuf::uint32 value) {
  set_has_scout_count();
  scout_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.scout_count)
}

// optional uint32 sniper_count = 23;
inline bool CMsgHalloween_Merasmus2012::has_sniper_count() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_sniper_count() {
  _has_bits_[0] |= 0x00400000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_sniper_count() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void CMsgHalloween_Merasmus2012::clear_sniper_count() {
  sniper_count_ = 0u;
  clear_has_sniper_count();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::sniper_count() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.sniper_count)
  return sniper_count_;
}
inline void CMsgHalloween_Merasmus2012::set_sniper_count(::google::protobuf::uint32 value) {
  set_has_sniper_count();
  sniper_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.sniper_count)
}

// optional uint32 solider_count = 24;
inline bool CMsgHalloween_Merasmus2012::has_solider_count() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_solider_count() {
  _has_bits_[0] |= 0x00800000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_solider_count() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void CMsgHalloween_Merasmus2012::clear_solider_count() {
  solider_count_ = 0u;
  clear_has_solider_count();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::solider_count() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.solider_count)
  return solider_count_;
}
inline void CMsgHalloween_Merasmus2012::set_solider_count(::google::protobuf::uint32 value) {
  set_has_solider_count();
  solider_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.solider_count)
}

// optional uint32 demo_count = 25;
inline bool CMsgHalloween_Merasmus2012::has_demo_count() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_demo_count() {
  _has_bits_[0] |= 0x01000000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_demo_count() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void CMsgHalloween_Merasmus2012::clear_demo_count() {
  demo_count_ = 0u;
  clear_has_demo_count();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::demo_count() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.demo_count)
  return demo_count_;
}
inline void CMsgHalloween_Merasmus2012::set_demo_count(::google::protobuf::uint32 value) {
  set_has_demo_count();
  demo_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.demo_count)
}

// optional uint32 medic_count = 26;
inline bool CMsgHalloween_Merasmus2012::has_medic_count() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_medic_count() {
  _has_bits_[0] |= 0x02000000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_medic_count() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void CMsgHalloween_Merasmus2012::clear_medic_count() {
  medic_count_ = 0u;
  clear_has_medic_count();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::medic_count() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.medic_count)
  return medic_count_;
}
inline void CMsgHalloween_Merasmus2012::set_medic_count(::google::protobuf::uint32 value) {
  set_has_medic_count();
  medic_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.medic_count)
}

// optional uint32 heavy_count = 27;
inline bool CMsgHalloween_Merasmus2012::has_heavy_count() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_heavy_count() {
  _has_bits_[0] |= 0x04000000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_heavy_count() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void CMsgHalloween_Merasmus2012::clear_heavy_count() {
  heavy_count_ = 0u;
  clear_has_heavy_count();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::heavy_count() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.heavy_count)
  return heavy_count_;
}
inline void CMsgHalloween_Merasmus2012::set_heavy_count(::google::protobuf::uint32 value) {
  set_has_heavy_count();
  heavy_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.heavy_count)
}

// optional uint32 pyro_count = 28;
inline bool CMsgHalloween_Merasmus2012::has_pyro_count() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_pyro_count() {
  _has_bits_[0] |= 0x08000000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_pyro_count() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void CMsgHalloween_Merasmus2012::clear_pyro_count() {
  pyro_count_ = 0u;
  clear_has_pyro_count();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::pyro_count() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.pyro_count)
  return pyro_count_;
}
inline void CMsgHalloween_Merasmus2012::set_pyro_count(::google::protobuf::uint32 value) {
  set_has_pyro_count();
  pyro_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.pyro_count)
}

// optional uint32 spy_count = 29;
inline bool CMsgHalloween_Merasmus2012::has_spy_count() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_spy_count() {
  _has_bits_[0] |= 0x10000000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_spy_count() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void CMsgHalloween_Merasmus2012::clear_spy_count() {
  spy_count_ = 0u;
  clear_has_spy_count();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::spy_count() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.spy_count)
  return spy_count_;
}
inline void CMsgHalloween_Merasmus2012::set_spy_count(::google::protobuf::uint32 value) {
  set_has_spy_count();
  spy_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.spy_count)
}

// optional uint32 engineer_count = 30;
inline bool CMsgHalloween_Merasmus2012::has_engineer_count() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_engineer_count() {
  _has_bits_[0] |= 0x20000000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_engineer_count() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void CMsgHalloween_Merasmus2012::clear_engineer_count() {
  engineer_count_ = 0u;
  clear_has_engineer_count();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::engineer_count() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.engineer_count)
  return engineer_count_;
}
inline void CMsgHalloween_Merasmus2012::set_engineer_count(::google::protobuf::uint32 value) {
  set_has_engineer_count();
  engineer_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.engineer_count)
}

// -------------------------------------------------------------------

// CMsgUpdateHalloweenMerasmusLootLevel_Player

// optional fixed64 steam_id = 1;
inline bool CMsgUpdateHalloweenMerasmusLootLevel_Player::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgUpdateHalloweenMerasmusLootLevel_Player::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgUpdateHalloweenMerasmusLootLevel_Player::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgUpdateHalloweenMerasmusLootLevel_Player::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgUpdateHalloweenMerasmusLootLevel_Player::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgUpdateHalloweenMerasmusLootLevel.Player.steam_id)
  return steam_id_;
}
inline void CMsgUpdateHalloweenMerasmusLootLevel_Player::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgUpdateHalloweenMerasmusLootLevel.Player.steam_id)
}

// -------------------------------------------------------------------

// CMsgUpdateHalloweenMerasmusLootLevel

// repeated .CMsgUpdateHalloweenMerasmusLootLevel.Player players = 1;
inline int CMsgUpdateHalloweenMerasmusLootLevel::players_size() const {
  return players_.size();
}
inline void CMsgUpdateHalloweenMerasmusLootLevel::clear_players() {
  players_.Clear();
}
inline const ::CMsgUpdateHalloweenMerasmusLootLevel_Player& CMsgUpdateHalloweenMerasmusLootLevel::players(int index) const {
  // @@protoc_insertion_point(field_get:CMsgUpdateHalloweenMerasmusLootLevel.players)
  return players_.Get(index);
}
inline ::CMsgUpdateHalloweenMerasmusLootLevel_Player* CMsgUpdateHalloweenMerasmusLootLevel::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgUpdateHalloweenMerasmusLootLevel.players)
  return players_.Mutable(index);
}
inline ::CMsgUpdateHalloweenMerasmusLootLevel_Player* CMsgUpdateHalloweenMerasmusLootLevel::add_players() {
  // @@protoc_insertion_point(field_add:CMsgUpdateHalloweenMerasmusLootLevel.players)
  return players_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgUpdateHalloweenMerasmusLootLevel_Player >*
CMsgUpdateHalloweenMerasmusLootLevel::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:CMsgUpdateHalloweenMerasmusLootLevel.players)
  return &players_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgUpdateHalloweenMerasmusLootLevel_Player >&
CMsgUpdateHalloweenMerasmusLootLevel::players() const {
  // @@protoc_insertion_point(field_list:CMsgUpdateHalloweenMerasmusLootLevel.players)
  return players_;
}

// optional uint32 merasmus_level = 2;
inline bool CMsgUpdateHalloweenMerasmusLootLevel::has_merasmus_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgUpdateHalloweenMerasmusLootLevel::set_has_merasmus_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgUpdateHalloweenMerasmusLootLevel::clear_has_merasmus_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgUpdateHalloweenMerasmusLootLevel::clear_merasmus_level() {
  merasmus_level_ = 0u;
  clear_has_merasmus_level();
}
inline ::google::protobuf::uint32 CMsgUpdateHalloweenMerasmusLootLevel::merasmus_level() const {
  // @@protoc_insertion_point(field_get:CMsgUpdateHalloweenMerasmusLootLevel.merasmus_level)
  return merasmus_level_;
}
inline void CMsgUpdateHalloweenMerasmusLootLevel::set_merasmus_level(::google::protobuf::uint32 value) {
  set_has_merasmus_level();
  merasmus_level_ = value;
  // @@protoc_insertion_point(field_set:CMsgUpdateHalloweenMerasmusLootLevel.merasmus_level)
}

// -------------------------------------------------------------------

// CAttribute_String

// optional string value = 1;
inline bool CAttribute_String::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CAttribute_String::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CAttribute_String::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CAttribute_String::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& CAttribute_String::value() const {
  // @@protoc_insertion_point(field_get:CAttribute_String.value)
  return value_.GetNoArena();
}
inline void CAttribute_String::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CAttribute_String.value)
}
#if LANG_CXX11
inline void CAttribute_String::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CAttribute_String.value)
}
#endif
inline void CAttribute_String::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CAttribute_String.value)
}
inline void CAttribute_String::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CAttribute_String.value)
}
inline ::std::string* CAttribute_String::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:CAttribute_String.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CAttribute_String::release_value() {
  // @@protoc_insertion_point(field_release:CAttribute_String.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CAttribute_String::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:CAttribute_String.value)
}

// -------------------------------------------------------------------

// CAttribute_DynamicRecipeComponent

// optional uint32 def_index = 1;
inline bool CAttribute_DynamicRecipeComponent::has_def_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CAttribute_DynamicRecipeComponent::set_has_def_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CAttribute_DynamicRecipeComponent::clear_has_def_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CAttribute_DynamicRecipeComponent::clear_def_index() {
  def_index_ = 0u;
  clear_has_def_index();
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent::def_index() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent.def_index)
  return def_index_;
}
inline void CAttribute_DynamicRecipeComponent::set_def_index(::google::protobuf::uint32 value) {
  set_has_def_index();
  def_index_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent.def_index)
}

// optional uint32 item_quality = 2;
inline bool CAttribute_DynamicRecipeComponent::has_item_quality() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CAttribute_DynamicRecipeComponent::set_has_item_quality() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CAttribute_DynamicRecipeComponent::clear_has_item_quality() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CAttribute_DynamicRecipeComponent::clear_item_quality() {
  item_quality_ = 0u;
  clear_has_item_quality();
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent::item_quality() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent.item_quality)
  return item_quality_;
}
inline void CAttribute_DynamicRecipeComponent::set_item_quality(::google::protobuf::uint32 value) {
  set_has_item_quality();
  item_quality_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent.item_quality)
}

// optional uint32 component_flags = 3;
inline bool CAttribute_DynamicRecipeComponent::has_component_flags() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CAttribute_DynamicRecipeComponent::set_has_component_flags() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CAttribute_DynamicRecipeComponent::clear_has_component_flags() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CAttribute_DynamicRecipeComponent::clear_component_flags() {
  component_flags_ = 0u;
  clear_has_component_flags();
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent::component_flags() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent.component_flags)
  return component_flags_;
}
inline void CAttribute_DynamicRecipeComponent::set_component_flags(::google::protobuf::uint32 value) {
  set_has_component_flags();
  component_flags_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent.component_flags)
}

// optional string attributes_string = 4;
inline bool CAttribute_DynamicRecipeComponent::has_attributes_string() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CAttribute_DynamicRecipeComponent::set_has_attributes_string() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CAttribute_DynamicRecipeComponent::clear_has_attributes_string() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CAttribute_DynamicRecipeComponent::clear_attributes_string() {
  attributes_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_attributes_string();
}
inline const ::std::string& CAttribute_DynamicRecipeComponent::attributes_string() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent.attributes_string)
  return attributes_string_.GetNoArena();
}
inline void CAttribute_DynamicRecipeComponent::set_attributes_string(const ::std::string& value) {
  set_has_attributes_string();
  attributes_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent.attributes_string)
}
#if LANG_CXX11
inline void CAttribute_DynamicRecipeComponent::set_attributes_string(::std::string&& value) {
  set_has_attributes_string();
  attributes_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CAttribute_DynamicRecipeComponent.attributes_string)
}
#endif
inline void CAttribute_DynamicRecipeComponent::set_attributes_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_attributes_string();
  attributes_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CAttribute_DynamicRecipeComponent.attributes_string)
}
inline void CAttribute_DynamicRecipeComponent::set_attributes_string(const char* value, size_t size) {
  set_has_attributes_string();
  attributes_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CAttribute_DynamicRecipeComponent.attributes_string)
}
inline ::std::string* CAttribute_DynamicRecipeComponent::mutable_attributes_string() {
  set_has_attributes_string();
  // @@protoc_insertion_point(field_mutable:CAttribute_DynamicRecipeComponent.attributes_string)
  return attributes_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CAttribute_DynamicRecipeComponent::release_attributes_string() {
  // @@protoc_insertion_point(field_release:CAttribute_DynamicRecipeComponent.attributes_string)
  clear_has_attributes_string();
  return attributes_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CAttribute_DynamicRecipeComponent::set_allocated_attributes_string(::std::string* attributes_string) {
  if (attributes_string != NULL) {
    set_has_attributes_string();
  } else {
    clear_has_attributes_string();
  }
  attributes_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attributes_string);
  // @@protoc_insertion_point(field_set_allocated:CAttribute_DynamicRecipeComponent.attributes_string)
}

// optional uint32 num_required = 5;
inline bool CAttribute_DynamicRecipeComponent::has_num_required() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CAttribute_DynamicRecipeComponent::set_has_num_required() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CAttribute_DynamicRecipeComponent::clear_has_num_required() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CAttribute_DynamicRecipeComponent::clear_num_required() {
  num_required_ = 0u;
  clear_has_num_required();
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent::num_required() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent.num_required)
  return num_required_;
}
inline void CAttribute_DynamicRecipeComponent::set_num_required(::google::protobuf::uint32 value) {
  set_has_num_required();
  num_required_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent.num_required)
}

// optional uint32 num_fulfilled = 6;
inline bool CAttribute_DynamicRecipeComponent::has_num_fulfilled() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CAttribute_DynamicRecipeComponent::set_has_num_fulfilled() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CAttribute_DynamicRecipeComponent::clear_has_num_fulfilled() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CAttribute_DynamicRecipeComponent::clear_num_fulfilled() {
  num_fulfilled_ = 0u;
  clear_has_num_fulfilled();
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent::num_fulfilled() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent.num_fulfilled)
  return num_fulfilled_;
}
inline void CAttribute_DynamicRecipeComponent::set_num_fulfilled(::google::protobuf::uint32 value) {
  set_has_num_fulfilled();
  num_fulfilled_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent.num_fulfilled)
}

// -------------------------------------------------------------------

// CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT

// optional uint32 def_index = 1;
inline bool CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::has_def_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_has_def_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_has_def_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_def_index() {
  def_index_ = 0u;
  clear_has_def_index();
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::def_index() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.def_index)
  return def_index_;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_def_index(::google::protobuf::uint32 value) {
  set_has_def_index();
  def_index_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.def_index)
}

// optional uint32 item_def = 2;
inline bool CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::has_item_def() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_has_item_def() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_has_item_def() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_item_def() {
  item_def_ = 0u;
  clear_has_item_def();
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::item_def() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.item_def)
  return item_def_;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_item_def(::google::protobuf::uint32 value) {
  set_has_item_def();
  item_def_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.item_def)
}

// optional uint32 item_quality = 3;
inline bool CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::has_item_quality() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_has_item_quality() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_has_item_quality() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_item_quality() {
  item_quality_ = 0u;
  clear_has_item_quality();
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::item_quality() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.item_quality)
  return item_quality_;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_item_quality(::google::protobuf::uint32 value) {
  set_has_item_quality();
  item_quality_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.item_quality)
}

// optional uint32 component_flags = 4;
inline bool CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::has_component_flags() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_has_component_flags() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_has_component_flags() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_component_flags() {
  component_flags_ = 0u;
  clear_has_component_flags();
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::component_flags() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.component_flags)
  return component_flags_;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_component_flags(::google::protobuf::uint32 value) {
  set_has_component_flags();
  component_flags_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.component_flags)
}

// optional uint32 item_flags = 5;
inline bool CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::has_item_flags() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_has_item_flags() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_has_item_flags() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_item_flags() {
  item_flags_ = 0u;
  clear_has_item_flags();
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::item_flags() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.item_flags)
  return item_flags_;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_item_flags(::google::protobuf::uint32 value) {
  set_has_item_flags();
  item_flags_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.item_flags)
}

// optional string attributes_string = 6;
inline bool CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::has_attributes_string() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_has_attributes_string() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_has_attributes_string() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_attributes_string() {
  attributes_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_attributes_string();
}
inline const ::std::string& CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::attributes_string() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.attributes_string)
  return attributes_string_.GetNoArena();
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_attributes_string(const ::std::string& value) {
  set_has_attributes_string();
  attributes_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.attributes_string)
}
#if LANG_CXX11
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_attributes_string(::std::string&& value) {
  set_has_attributes_string();
  attributes_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.attributes_string)
}
#endif
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_attributes_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_attributes_string();
  attributes_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.attributes_string)
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_attributes_string(const char* value, size_t size) {
  set_has_attributes_string();
  attributes_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.attributes_string)
}
inline ::std::string* CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::mutable_attributes_string() {
  set_has_attributes_string();
  // @@protoc_insertion_point(field_mutable:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.attributes_string)
  return attributes_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::release_attributes_string() {
  // @@protoc_insertion_point(field_release:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.attributes_string)
  clear_has_attributes_string();
  return attributes_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_allocated_attributes_string(::std::string* attributes_string) {
  if (attributes_string != NULL) {
    set_has_attributes_string();
  } else {
    clear_has_attributes_string();
  }
  attributes_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attributes_string);
  // @@protoc_insertion_point(field_set_allocated:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.attributes_string)
}

// optional uint32 num_required = 7;
inline bool CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::has_num_required() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_has_num_required() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_has_num_required() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_num_required() {
  num_required_ = 0u;
  clear_has_num_required();
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::num_required() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.num_required)
  return num_required_;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_num_required(::google::protobuf::uint32 value) {
  set_has_num_required();
  num_required_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.num_required)
}

// optional uint32 item_count = 8;
inline bool CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::has_item_count() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_has_item_count() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_has_item_count() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_item_count() {
  item_count_ = 0u;
  clear_has_item_count();
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::item_count() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.item_count)
  return item_count_;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_item_count(::google::protobuf::uint32 value) {
  set_has_item_count();
  item_count_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.item_count)
}

// optional uint32 num_fulfilled = 9;
inline bool CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::has_num_fulfilled() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_has_num_fulfilled() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_has_num_fulfilled() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_num_fulfilled() {
  num_fulfilled_ = 0u;
  clear_has_num_fulfilled();
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::num_fulfilled() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.num_fulfilled)
  return num_fulfilled_;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_num_fulfilled(::google::protobuf::uint32 value) {
  set_has_num_fulfilled();
  num_fulfilled_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.num_fulfilled)
}

// optional uint32 items_fulfilled = 10;
inline bool CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::has_items_fulfilled() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_has_items_fulfilled() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_has_items_fulfilled() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_items_fulfilled() {
  items_fulfilled_ = 0u;
  clear_has_items_fulfilled();
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::items_fulfilled() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.items_fulfilled)
  return items_fulfilled_;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_items_fulfilled(::google::protobuf::uint32 value) {
  set_has_items_fulfilled();
  items_fulfilled_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.items_fulfilled)
}

// -------------------------------------------------------------------

// CAttribute_ItemSlotCriteria

// optional string tags = 1;
inline bool CAttribute_ItemSlotCriteria::has_tags() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CAttribute_ItemSlotCriteria::set_has_tags() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CAttribute_ItemSlotCriteria::clear_has_tags() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CAttribute_ItemSlotCriteria::clear_tags() {
  tags_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tags();
}
inline const ::std::string& CAttribute_ItemSlotCriteria::tags() const {
  // @@protoc_insertion_point(field_get:CAttribute_ItemSlotCriteria.tags)
  return tags_.GetNoArena();
}
inline void CAttribute_ItemSlotCriteria::set_tags(const ::std::string& value) {
  set_has_tags();
  tags_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CAttribute_ItemSlotCriteria.tags)
}
#if LANG_CXX11
inline void CAttribute_ItemSlotCriteria::set_tags(::std::string&& value) {
  set_has_tags();
  tags_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CAttribute_ItemSlotCriteria.tags)
}
#endif
inline void CAttribute_ItemSlotCriteria::set_tags(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tags();
  tags_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CAttribute_ItemSlotCriteria.tags)
}
inline void CAttribute_ItemSlotCriteria::set_tags(const char* value, size_t size) {
  set_has_tags();
  tags_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CAttribute_ItemSlotCriteria.tags)
}
inline ::std::string* CAttribute_ItemSlotCriteria::mutable_tags() {
  set_has_tags();
  // @@protoc_insertion_point(field_mutable:CAttribute_ItemSlotCriteria.tags)
  return tags_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CAttribute_ItemSlotCriteria::release_tags() {
  // @@protoc_insertion_point(field_release:CAttribute_ItemSlotCriteria.tags)
  clear_has_tags();
  return tags_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CAttribute_ItemSlotCriteria::set_allocated_tags(::std::string* tags) {
  if (tags != NULL) {
    set_has_tags();
  } else {
    clear_has_tags();
  }
  tags_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tags);
  // @@protoc_insertion_point(field_set_allocated:CAttribute_ItemSlotCriteria.tags)
}

// -------------------------------------------------------------------

// CMsgSetItemSlotAttribute

// optional uint64 item_id = 1;
inline bool CMsgSetItemSlotAttribute::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSetItemSlotAttribute::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSetItemSlotAttribute::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSetItemSlotAttribute::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::uint64 CMsgSetItemSlotAttribute::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgSetItemSlotAttribute.item_id)
  return item_id_;
}
inline void CMsgSetItemSlotAttribute::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSetItemSlotAttribute.item_id)
}

// optional uint64 slot_item_original_id = 2;
inline bool CMsgSetItemSlotAttribute::has_slot_item_original_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSetItemSlotAttribute::set_has_slot_item_original_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSetItemSlotAttribute::clear_has_slot_item_original_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSetItemSlotAttribute::clear_slot_item_original_id() {
  slot_item_original_id_ = GOOGLE_ULONGLONG(0);
  clear_has_slot_item_original_id();
}
inline ::google::protobuf::uint64 CMsgSetItemSlotAttribute::slot_item_original_id() const {
  // @@protoc_insertion_point(field_get:CMsgSetItemSlotAttribute.slot_item_original_id)
  return slot_item_original_id_;
}
inline void CMsgSetItemSlotAttribute::set_slot_item_original_id(::google::protobuf::uint64 value) {
  set_has_slot_item_original_id();
  slot_item_original_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSetItemSlotAttribute.slot_item_original_id)
}

// optional uint32 slot_index = 3;
inline bool CMsgSetItemSlotAttribute::has_slot_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSetItemSlotAttribute::set_has_slot_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSetItemSlotAttribute::clear_has_slot_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSetItemSlotAttribute::clear_slot_index() {
  slot_index_ = 0u;
  clear_has_slot_index();
}
inline ::google::protobuf::uint32 CMsgSetItemSlotAttribute::slot_index() const {
  // @@protoc_insertion_point(field_get:CMsgSetItemSlotAttribute.slot_index)
  return slot_index_;
}
inline void CMsgSetItemSlotAttribute::set_slot_index(::google::protobuf::uint32 value) {
  set_has_slot_index();
  slot_index_ = value;
  // @@protoc_insertion_point(field_set:CMsgSetItemSlotAttribute.slot_index)
}

// -------------------------------------------------------------------

// CSOWarData

// optional uint32 account_id = 1 [(.key_field) = true];
inline bool CSOWarData::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOWarData::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOWarData::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOWarData::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CSOWarData::account_id() const {
  // @@protoc_insertion_point(field_get:CSOWarData.account_id)
  return account_id_;
}
inline void CSOWarData::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CSOWarData.account_id)
}

// optional uint32 war_id = 2 [(.key_field) = true];
inline bool CSOWarData::has_war_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOWarData::set_has_war_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOWarData::clear_has_war_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOWarData::clear_war_id() {
  war_id_ = 0u;
  clear_has_war_id();
}
inline ::google::protobuf::uint32 CSOWarData::war_id() const {
  // @@protoc_insertion_point(field_get:CSOWarData.war_id)
  return war_id_;
}
inline void CSOWarData::set_war_id(::google::protobuf::uint32 value) {
  set_has_war_id();
  war_id_ = value;
  // @@protoc_insertion_point(field_set:CSOWarData.war_id)
}

// optional uint32 affiliation = 3;
inline bool CSOWarData::has_affiliation() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSOWarData::set_has_affiliation() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSOWarData::clear_has_affiliation() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSOWarData::clear_affiliation() {
  affiliation_ = 0u;
  clear_has_affiliation();
}
inline ::google::protobuf::uint32 CSOWarData::affiliation() const {
  // @@protoc_insertion_point(field_get:CSOWarData.affiliation)
  return affiliation_;
}
inline void CSOWarData::set_affiliation(::google::protobuf::uint32 value) {
  set_has_affiliation();
  affiliation_ = value;
  // @@protoc_insertion_point(field_set:CSOWarData.affiliation)
}

// optional uint32 points_scored = 4;
inline bool CSOWarData::has_points_scored() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSOWarData::set_has_points_scored() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSOWarData::clear_has_points_scored() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSOWarData::clear_points_scored() {
  points_scored_ = 0u;
  clear_has_points_scored();
}
inline ::google::protobuf::uint32 CSOWarData::points_scored() const {
  // @@protoc_insertion_point(field_get:CSOWarData.points_scored)
  return points_scored_;
}
inline void CSOWarData::set_points_scored(::google::protobuf::uint32 value) {
  set_has_points_scored();
  points_scored_ = value;
  // @@protoc_insertion_point(field_set:CSOWarData.points_scored)
}

// -------------------------------------------------------------------

// CGCMsgGC_War_IndividualUpdate

// optional fixed64 steam_id = 1;
inline bool CGCMsgGC_War_IndividualUpdate::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCMsgGC_War_IndividualUpdate::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCMsgGC_War_IndividualUpdate::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCMsgGC_War_IndividualUpdate::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CGCMsgGC_War_IndividualUpdate::steam_id() const {
  // @@protoc_insertion_point(field_get:CGCMsgGC_War_IndividualUpdate.steam_id)
  return steam_id_;
}
inline void CGCMsgGC_War_IndividualUpdate::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGC_War_IndividualUpdate.steam_id)
}

// optional uint32 war_id = 2;
inline bool CGCMsgGC_War_IndividualUpdate::has_war_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCMsgGC_War_IndividualUpdate::set_has_war_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGCMsgGC_War_IndividualUpdate::clear_has_war_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGCMsgGC_War_IndividualUpdate::clear_war_id() {
  war_id_ = 0u;
  clear_has_war_id();
}
inline ::google::protobuf::uint32 CGCMsgGC_War_IndividualUpdate::war_id() const {
  // @@protoc_insertion_point(field_get:CGCMsgGC_War_IndividualUpdate.war_id)
  return war_id_;
}
inline void CGCMsgGC_War_IndividualUpdate::set_war_id(::google::protobuf::uint32 value) {
  set_has_war_id();
  war_id_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGC_War_IndividualUpdate.war_id)
}

// optional uint32 score = 3;
inline bool CGCMsgGC_War_IndividualUpdate::has_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGCMsgGC_War_IndividualUpdate::set_has_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGCMsgGC_War_IndividualUpdate::clear_has_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGCMsgGC_War_IndividualUpdate::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 CGCMsgGC_War_IndividualUpdate::score() const {
  // @@protoc_insertion_point(field_get:CGCMsgGC_War_IndividualUpdate.score)
  return score_;
}
inline void CGCMsgGC_War_IndividualUpdate::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGC_War_IndividualUpdate.score)
}

// -------------------------------------------------------------------

// CGCMsgGC_War_JoinWar

// optional uint32 affiliation = 1;
inline bool CGCMsgGC_War_JoinWar::has_affiliation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCMsgGC_War_JoinWar::set_has_affiliation() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCMsgGC_War_JoinWar::clear_has_affiliation() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCMsgGC_War_JoinWar::clear_affiliation() {
  affiliation_ = 0u;
  clear_has_affiliation();
}
inline ::google::protobuf::uint32 CGCMsgGC_War_JoinWar::affiliation() const {
  // @@protoc_insertion_point(field_get:CGCMsgGC_War_JoinWar.affiliation)
  return affiliation_;
}
inline void CGCMsgGC_War_JoinWar::set_affiliation(::google::protobuf::uint32 value) {
  set_has_affiliation();
  affiliation_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGC_War_JoinWar.affiliation)
}

// optional uint32 war_id = 2;
inline bool CGCMsgGC_War_JoinWar::has_war_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCMsgGC_War_JoinWar::set_has_war_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGCMsgGC_War_JoinWar::clear_has_war_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGCMsgGC_War_JoinWar::clear_war_id() {
  war_id_ = 0u;
  clear_has_war_id();
}
inline ::google::protobuf::uint32 CGCMsgGC_War_JoinWar::war_id() const {
  // @@protoc_insertion_point(field_get:CGCMsgGC_War_JoinWar.war_id)
  return war_id_;
}
inline void CGCMsgGC_War_JoinWar::set_war_id(::google::protobuf::uint32 value) {
  set_has_war_id();
  war_id_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGC_War_JoinWar.war_id)
}

// -------------------------------------------------------------------

// CGCMsgGC_War_RequestGlobalStats

// optional uint32 war_id = 1;
inline bool CGCMsgGC_War_RequestGlobalStats::has_war_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCMsgGC_War_RequestGlobalStats::set_has_war_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCMsgGC_War_RequestGlobalStats::clear_has_war_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCMsgGC_War_RequestGlobalStats::clear_war_id() {
  war_id_ = 0u;
  clear_has_war_id();
}
inline ::google::protobuf::uint32 CGCMsgGC_War_RequestGlobalStats::war_id() const {
  // @@protoc_insertion_point(field_get:CGCMsgGC_War_RequestGlobalStats.war_id)
  return war_id_;
}
inline void CGCMsgGC_War_RequestGlobalStats::set_war_id(::google::protobuf::uint32 value) {
  set_has_war_id();
  war_id_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGC_War_RequestGlobalStats.war_id)
}

// -------------------------------------------------------------------

// CGCMsgGC_War_GlobalStatsResponse_SideScore

// optional uint32 side = 1;
inline bool CGCMsgGC_War_GlobalStatsResponse_SideScore::has_side() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCMsgGC_War_GlobalStatsResponse_SideScore::set_has_side() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGCMsgGC_War_GlobalStatsResponse_SideScore::clear_has_side() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGCMsgGC_War_GlobalStatsResponse_SideScore::clear_side() {
  side_ = 0u;
  clear_has_side();
}
inline ::google::protobuf::uint32 CGCMsgGC_War_GlobalStatsResponse_SideScore::side() const {
  // @@protoc_insertion_point(field_get:CGCMsgGC_War_GlobalStatsResponse.SideScore.side)
  return side_;
}
inline void CGCMsgGC_War_GlobalStatsResponse_SideScore::set_side(::google::protobuf::uint32 value) {
  set_has_side();
  side_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGC_War_GlobalStatsResponse.SideScore.side)
}

// optional uint64 score = 2;
inline bool CGCMsgGC_War_GlobalStatsResponse_SideScore::has_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCMsgGC_War_GlobalStatsResponse_SideScore::set_has_score() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCMsgGC_War_GlobalStatsResponse_SideScore::clear_has_score() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCMsgGC_War_GlobalStatsResponse_SideScore::clear_score() {
  score_ = GOOGLE_ULONGLONG(0);
  clear_has_score();
}
inline ::google::protobuf::uint64 CGCMsgGC_War_GlobalStatsResponse_SideScore::score() const {
  // @@protoc_insertion_point(field_get:CGCMsgGC_War_GlobalStatsResponse.SideScore.score)
  return score_;
}
inline void CGCMsgGC_War_GlobalStatsResponse_SideScore::set_score(::google::protobuf::uint64 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGC_War_GlobalStatsResponse.SideScore.score)
}

// -------------------------------------------------------------------

// CGCMsgGC_War_GlobalStatsResponse

// repeated .CGCMsgGC_War_GlobalStatsResponse.SideScore side_scores = 1;
inline int CGCMsgGC_War_GlobalStatsResponse::side_scores_size() const {
  return side_scores_.size();
}
inline void CGCMsgGC_War_GlobalStatsResponse::clear_side_scores() {
  side_scores_.Clear();
}
inline const ::CGCMsgGC_War_GlobalStatsResponse_SideScore& CGCMsgGC_War_GlobalStatsResponse::side_scores(int index) const {
  // @@protoc_insertion_point(field_get:CGCMsgGC_War_GlobalStatsResponse.side_scores)
  return side_scores_.Get(index);
}
inline ::CGCMsgGC_War_GlobalStatsResponse_SideScore* CGCMsgGC_War_GlobalStatsResponse::mutable_side_scores(int index) {
  // @@protoc_insertion_point(field_mutable:CGCMsgGC_War_GlobalStatsResponse.side_scores)
  return side_scores_.Mutable(index);
}
inline ::CGCMsgGC_War_GlobalStatsResponse_SideScore* CGCMsgGC_War_GlobalStatsResponse::add_side_scores() {
  // @@protoc_insertion_point(field_add:CGCMsgGC_War_GlobalStatsResponse.side_scores)
  return side_scores_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CGCMsgGC_War_GlobalStatsResponse_SideScore >*
CGCMsgGC_War_GlobalStatsResponse::mutable_side_scores() {
  // @@protoc_insertion_point(field_mutable_list:CGCMsgGC_War_GlobalStatsResponse.side_scores)
  return &side_scores_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CGCMsgGC_War_GlobalStatsResponse_SideScore >&
CGCMsgGC_War_GlobalStatsResponse::side_scores() const {
  // @@protoc_insertion_point(field_list:CGCMsgGC_War_GlobalStatsResponse.side_scores)
  return side_scores_;
}

// optional uint32 war_id = 2;
inline bool CGCMsgGC_War_GlobalStatsResponse::has_war_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCMsgGC_War_GlobalStatsResponse::set_has_war_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCMsgGC_War_GlobalStatsResponse::clear_has_war_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCMsgGC_War_GlobalStatsResponse::clear_war_id() {
  war_id_ = 0u;
  clear_has_war_id();
}
inline ::google::protobuf::uint32 CGCMsgGC_War_GlobalStatsResponse::war_id() const {
  // @@protoc_insertion_point(field_get:CGCMsgGC_War_GlobalStatsResponse.war_id)
  return war_id_;
}
inline void CGCMsgGC_War_GlobalStatsResponse::set_war_id(::google::protobuf::uint32 value) {
  set_has_war_id();
  war_id_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGC_War_GlobalStatsResponse.war_id)
}

// -------------------------------------------------------------------

// CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate

// optional uint32 score = 2;
inline bool CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::score() const {
  // @@protoc_insertion_point(field_get:CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate.score)
  return score_;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate.score)
}

// optional uint32 type = 3;
inline bool CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::type() const {
  // @@protoc_insertion_point(field_get:CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate.type)
  return type_;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate.type)
}

// optional bytes score_id = 4;
inline bool CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::has_score_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::set_has_score_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::clear_has_score_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::clear_score_id() {
  score_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_score_id();
}
inline const ::std::string& CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::score_id() const {
  // @@protoc_insertion_point(field_get:CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate.score_id)
  return score_id_.GetNoArena();
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::set_score_id(const ::std::string& value) {
  set_has_score_id();
  score_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate.score_id)
}
#if LANG_CXX11
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::set_score_id(::std::string&& value) {
  set_has_score_id();
  score_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate.score_id)
}
#endif
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::set_score_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_score_id();
  score_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate.score_id)
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::set_score_id(const void* value, size_t size) {
  set_has_score_id();
  score_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate.score_id)
}
inline ::std::string* CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::mutable_score_id() {
  set_has_score_id();
  // @@protoc_insertion_point(field_mutable:CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate.score_id)
  return score_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::release_score_id() {
  // @@protoc_insertion_point(field_release:CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate.score_id)
  clear_has_score_id();
  return score_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::set_allocated_score_id(::std::string* score_id) {
  if (score_id != NULL) {
    set_has_score_id();
  } else {
    clear_has_score_id();
  }
  score_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), score_id);
  // @@protoc_insertion_point(field_set_allocated:CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate.score_id)
}

// optional uint32 score_check = 5;
inline bool CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::has_score_check() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::set_has_score_check() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::clear_has_score_check() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::clear_score_check() {
  score_check_ = 0u;
  clear_has_score_check();
}
inline ::google::protobuf::uint32 CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::score_check() const {
  // @@protoc_insertion_point(field_get:CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate.score_check)
  return score_check_;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::set_score_check(::google::protobuf::uint32 value) {
  set_has_score_check();
  score_check_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate.score_check)
}

// -------------------------------------------------------------------

// CAttribute_WorldItemPlacement

// optional uint64 original_item_id = 1;
inline bool CAttribute_WorldItemPlacement::has_original_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CAttribute_WorldItemPlacement::set_has_original_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CAttribute_WorldItemPlacement::clear_has_original_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CAttribute_WorldItemPlacement::clear_original_item_id() {
  original_item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_original_item_id();
}
inline ::google::protobuf::uint64 CAttribute_WorldItemPlacement::original_item_id() const {
  // @@protoc_insertion_point(field_get:CAttribute_WorldItemPlacement.original_item_id)
  return original_item_id_;
}
inline void CAttribute_WorldItemPlacement::set_original_item_id(::google::protobuf::uint64 value) {
  set_has_original_item_id();
  original_item_id_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_WorldItemPlacement.original_item_id)
}

// optional float pos_x = 2;
inline bool CAttribute_WorldItemPlacement::has_pos_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CAttribute_WorldItemPlacement::set_has_pos_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CAttribute_WorldItemPlacement::clear_has_pos_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CAttribute_WorldItemPlacement::clear_pos_x() {
  pos_x_ = 0;
  clear_has_pos_x();
}
inline float CAttribute_WorldItemPlacement::pos_x() const {
  // @@protoc_insertion_point(field_get:CAttribute_WorldItemPlacement.pos_x)
  return pos_x_;
}
inline void CAttribute_WorldItemPlacement::set_pos_x(float value) {
  set_has_pos_x();
  pos_x_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_WorldItemPlacement.pos_x)
}

// optional float pos_y = 3;
inline bool CAttribute_WorldItemPlacement::has_pos_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CAttribute_WorldItemPlacement::set_has_pos_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CAttribute_WorldItemPlacement::clear_has_pos_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CAttribute_WorldItemPlacement::clear_pos_y() {
  pos_y_ = 0;
  clear_has_pos_y();
}
inline float CAttribute_WorldItemPlacement::pos_y() const {
  // @@protoc_insertion_point(field_get:CAttribute_WorldItemPlacement.pos_y)
  return pos_y_;
}
inline void CAttribute_WorldItemPlacement::set_pos_y(float value) {
  set_has_pos_y();
  pos_y_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_WorldItemPlacement.pos_y)
}

// optional float pos_z = 4;
inline bool CAttribute_WorldItemPlacement::has_pos_z() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CAttribute_WorldItemPlacement::set_has_pos_z() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CAttribute_WorldItemPlacement::clear_has_pos_z() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CAttribute_WorldItemPlacement::clear_pos_z() {
  pos_z_ = 0;
  clear_has_pos_z();
}
inline float CAttribute_WorldItemPlacement::pos_z() const {
  // @@protoc_insertion_point(field_get:CAttribute_WorldItemPlacement.pos_z)
  return pos_z_;
}
inline void CAttribute_WorldItemPlacement::set_pos_z(float value) {
  set_has_pos_z();
  pos_z_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_WorldItemPlacement.pos_z)
}

// optional float ang_x = 5;
inline bool CAttribute_WorldItemPlacement::has_ang_x() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CAttribute_WorldItemPlacement::set_has_ang_x() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CAttribute_WorldItemPlacement::clear_has_ang_x() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CAttribute_WorldItemPlacement::clear_ang_x() {
  ang_x_ = 0;
  clear_has_ang_x();
}
inline float CAttribute_WorldItemPlacement::ang_x() const {
  // @@protoc_insertion_point(field_get:CAttribute_WorldItemPlacement.ang_x)
  return ang_x_;
}
inline void CAttribute_WorldItemPlacement::set_ang_x(float value) {
  set_has_ang_x();
  ang_x_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_WorldItemPlacement.ang_x)
}

// optional float ang_y = 6;
inline bool CAttribute_WorldItemPlacement::has_ang_y() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CAttribute_WorldItemPlacement::set_has_ang_y() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CAttribute_WorldItemPlacement::clear_has_ang_y() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CAttribute_WorldItemPlacement::clear_ang_y() {
  ang_y_ = 0;
  clear_has_ang_y();
}
inline float CAttribute_WorldItemPlacement::ang_y() const {
  // @@protoc_insertion_point(field_get:CAttribute_WorldItemPlacement.ang_y)
  return ang_y_;
}
inline void CAttribute_WorldItemPlacement::set_ang_y(float value) {
  set_has_ang_y();
  ang_y_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_WorldItemPlacement.ang_y)
}

// optional float ang_z = 7;
inline bool CAttribute_WorldItemPlacement::has_ang_z() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CAttribute_WorldItemPlacement::set_has_ang_z() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CAttribute_WorldItemPlacement::clear_has_ang_z() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CAttribute_WorldItemPlacement::clear_ang_z() {
  ang_z_ = 0;
  clear_has_ang_z();
}
inline float CAttribute_WorldItemPlacement::ang_z() const {
  // @@protoc_insertion_point(field_get:CAttribute_WorldItemPlacement.ang_z)
  return ang_z_;
}
inline void CAttribute_WorldItemPlacement::set_ang_z(float value) {
  set_has_ang_z();
  ang_z_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_WorldItemPlacement.ang_z)
}

// -------------------------------------------------------------------

// CGCMsg_WorldItemPlacement_Update

// optional uint64 original_item_id = 1;
inline bool CGCMsg_WorldItemPlacement_Update::has_original_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCMsg_WorldItemPlacement_Update::set_has_original_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGCMsg_WorldItemPlacement_Update::clear_has_original_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGCMsg_WorldItemPlacement_Update::clear_original_item_id() {
  original_item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_original_item_id();
}
inline ::google::protobuf::uint64 CGCMsg_WorldItemPlacement_Update::original_item_id() const {
  // @@protoc_insertion_point(field_get:CGCMsg_WorldItemPlacement_Update.original_item_id)
  return original_item_id_;
}
inline void CGCMsg_WorldItemPlacement_Update::set_original_item_id(::google::protobuf::uint64 value) {
  set_has_original_item_id();
  original_item_id_ = value;
  // @@protoc_insertion_point(field_set:CGCMsg_WorldItemPlacement_Update.original_item_id)
}

// optional float pos_x = 2;
inline bool CGCMsg_WorldItemPlacement_Update::has_pos_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGCMsg_WorldItemPlacement_Update::set_has_pos_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGCMsg_WorldItemPlacement_Update::clear_has_pos_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGCMsg_WorldItemPlacement_Update::clear_pos_x() {
  pos_x_ = 0;
  clear_has_pos_x();
}
inline float CGCMsg_WorldItemPlacement_Update::pos_x() const {
  // @@protoc_insertion_point(field_get:CGCMsg_WorldItemPlacement_Update.pos_x)
  return pos_x_;
}
inline void CGCMsg_WorldItemPlacement_Update::set_pos_x(float value) {
  set_has_pos_x();
  pos_x_ = value;
  // @@protoc_insertion_point(field_set:CGCMsg_WorldItemPlacement_Update.pos_x)
}

// optional float pos_y = 3;
inline bool CGCMsg_WorldItemPlacement_Update::has_pos_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CGCMsg_WorldItemPlacement_Update::set_has_pos_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CGCMsg_WorldItemPlacement_Update::clear_has_pos_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CGCMsg_WorldItemPlacement_Update::clear_pos_y() {
  pos_y_ = 0;
  clear_has_pos_y();
}
inline float CGCMsg_WorldItemPlacement_Update::pos_y() const {
  // @@protoc_insertion_point(field_get:CGCMsg_WorldItemPlacement_Update.pos_y)
  return pos_y_;
}
inline void CGCMsg_WorldItemPlacement_Update::set_pos_y(float value) {
  set_has_pos_y();
  pos_y_ = value;
  // @@protoc_insertion_point(field_set:CGCMsg_WorldItemPlacement_Update.pos_y)
}

// optional float pos_z = 4;
inline bool CGCMsg_WorldItemPlacement_Update::has_pos_z() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CGCMsg_WorldItemPlacement_Update::set_has_pos_z() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CGCMsg_WorldItemPlacement_Update::clear_has_pos_z() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CGCMsg_WorldItemPlacement_Update::clear_pos_z() {
  pos_z_ = 0;
  clear_has_pos_z();
}
inline float CGCMsg_WorldItemPlacement_Update::pos_z() const {
  // @@protoc_insertion_point(field_get:CGCMsg_WorldItemPlacement_Update.pos_z)
  return pos_z_;
}
inline void CGCMsg_WorldItemPlacement_Update::set_pos_z(float value) {
  set_has_pos_z();
  pos_z_ = value;
  // @@protoc_insertion_point(field_set:CGCMsg_WorldItemPlacement_Update.pos_z)
}

// optional float ang_x = 5;
inline bool CGCMsg_WorldItemPlacement_Update::has_ang_x() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CGCMsg_WorldItemPlacement_Update::set_has_ang_x() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CGCMsg_WorldItemPlacement_Update::clear_has_ang_x() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CGCMsg_WorldItemPlacement_Update::clear_ang_x() {
  ang_x_ = 0;
  clear_has_ang_x();
}
inline float CGCMsg_WorldItemPlacement_Update::ang_x() const {
  // @@protoc_insertion_point(field_get:CGCMsg_WorldItemPlacement_Update.ang_x)
  return ang_x_;
}
inline void CGCMsg_WorldItemPlacement_Update::set_ang_x(float value) {
  set_has_ang_x();
  ang_x_ = value;
  // @@protoc_insertion_point(field_set:CGCMsg_WorldItemPlacement_Update.ang_x)
}

// optional float ang_y = 6;
inline bool CGCMsg_WorldItemPlacement_Update::has_ang_y() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CGCMsg_WorldItemPlacement_Update::set_has_ang_y() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CGCMsg_WorldItemPlacement_Update::clear_has_ang_y() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CGCMsg_WorldItemPlacement_Update::clear_ang_y() {
  ang_y_ = 0;
  clear_has_ang_y();
}
inline float CGCMsg_WorldItemPlacement_Update::ang_y() const {
  // @@protoc_insertion_point(field_get:CGCMsg_WorldItemPlacement_Update.ang_y)
  return ang_y_;
}
inline void CGCMsg_WorldItemPlacement_Update::set_ang_y(float value) {
  set_has_ang_y();
  ang_y_ = value;
  // @@protoc_insertion_point(field_set:CGCMsg_WorldItemPlacement_Update.ang_y)
}

// optional float ang_z = 7;
inline bool CGCMsg_WorldItemPlacement_Update::has_ang_z() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CGCMsg_WorldItemPlacement_Update::set_has_ang_z() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CGCMsg_WorldItemPlacement_Update::clear_has_ang_z() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CGCMsg_WorldItemPlacement_Update::clear_ang_z() {
  ang_z_ = 0;
  clear_has_ang_z();
}
inline float CGCMsg_WorldItemPlacement_Update::ang_z() const {
  // @@protoc_insertion_point(field_get:CGCMsg_WorldItemPlacement_Update.ang_z)
  return ang_z_;
}
inline void CGCMsg_WorldItemPlacement_Update::set_ang_z(float value) {
  set_has_ang_z();
  ang_z_ = value;
  // @@protoc_insertion_point(field_set:CGCMsg_WorldItemPlacement_Update.ang_z)
}

// optional bool force_remove_all = 8;
inline bool CGCMsg_WorldItemPlacement_Update::has_force_remove_all() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CGCMsg_WorldItemPlacement_Update::set_has_force_remove_all() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CGCMsg_WorldItemPlacement_Update::clear_has_force_remove_all() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CGCMsg_WorldItemPlacement_Update::clear_force_remove_all() {
  force_remove_all_ = false;
  clear_has_force_remove_all();
}
inline bool CGCMsg_WorldItemPlacement_Update::force_remove_all() const {
  // @@protoc_insertion_point(field_get:CGCMsg_WorldItemPlacement_Update.force_remove_all)
  return force_remove_all_;
}
inline void CGCMsg_WorldItemPlacement_Update::set_force_remove_all(bool value) {
  set_has_force_remove_all();
  force_remove_all_ = value;
  // @@protoc_insertion_point(field_set:CGCMsg_WorldItemPlacement_Update.force_remove_all)
}

// optional string attrib_name = 9;
inline bool CGCMsg_WorldItemPlacement_Update::has_attrib_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCMsg_WorldItemPlacement_Update::set_has_attrib_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCMsg_WorldItemPlacement_Update::clear_has_attrib_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCMsg_WorldItemPlacement_Update::clear_attrib_name() {
  attrib_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_attrib_name();
}
inline const ::std::string& CGCMsg_WorldItemPlacement_Update::attrib_name() const {
  // @@protoc_insertion_point(field_get:CGCMsg_WorldItemPlacement_Update.attrib_name)
  return attrib_name_.GetNoArena();
}
inline void CGCMsg_WorldItemPlacement_Update::set_attrib_name(const ::std::string& value) {
  set_has_attrib_name();
  attrib_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CGCMsg_WorldItemPlacement_Update.attrib_name)
}
#if LANG_CXX11
inline void CGCMsg_WorldItemPlacement_Update::set_attrib_name(::std::string&& value) {
  set_has_attrib_name();
  attrib_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CGCMsg_WorldItemPlacement_Update.attrib_name)
}
#endif
inline void CGCMsg_WorldItemPlacement_Update::set_attrib_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_attrib_name();
  attrib_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CGCMsg_WorldItemPlacement_Update.attrib_name)
}
inline void CGCMsg_WorldItemPlacement_Update::set_attrib_name(const char* value, size_t size) {
  set_has_attrib_name();
  attrib_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CGCMsg_WorldItemPlacement_Update.attrib_name)
}
inline ::std::string* CGCMsg_WorldItemPlacement_Update::mutable_attrib_name() {
  set_has_attrib_name();
  // @@protoc_insertion_point(field_mutable:CGCMsg_WorldItemPlacement_Update.attrib_name)
  return attrib_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CGCMsg_WorldItemPlacement_Update::release_attrib_name() {
  // @@protoc_insertion_point(field_release:CGCMsg_WorldItemPlacement_Update.attrib_name)
  clear_has_attrib_name();
  return attrib_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CGCMsg_WorldItemPlacement_Update::set_allocated_attrib_name(::std::string* attrib_name) {
  if (attrib_name != NULL) {
    set_has_attrib_name();
  } else {
    clear_has_attrib_name();
  }
  attrib_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attrib_name);
  // @@protoc_insertion_point(field_set_allocated:CGCMsg_WorldItemPlacement_Update.attrib_name)
}

// -------------------------------------------------------------------

// CMsgAcknowledgeXP

// optional int32 match_group = 1;
inline bool CMsgAcknowledgeXP::has_match_group() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAcknowledgeXP::set_has_match_group() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgAcknowledgeXP::clear_has_match_group() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgAcknowledgeXP::clear_match_group() {
  match_group_ = 0;
  clear_has_match_group();
}
inline ::google::protobuf::int32 CMsgAcknowledgeXP::match_group() const {
  // @@protoc_insertion_point(field_get:CMsgAcknowledgeXP.match_group)
  return match_group_;
}
inline void CMsgAcknowledgeXP::set_match_group(::google::protobuf::int32 value) {
  set_has_match_group();
  match_group_ = value;
  // @@protoc_insertion_point(field_set:CMsgAcknowledgeXP.match_group)
}

// optional uint32 predicted_experience = 2;
inline bool CMsgAcknowledgeXP::has_predicted_experience() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgAcknowledgeXP::set_has_predicted_experience() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgAcknowledgeXP::clear_has_predicted_experience() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgAcknowledgeXP::clear_predicted_experience() {
  predicted_experience_ = 0u;
  clear_has_predicted_experience();
}
inline ::google::protobuf::uint32 CMsgAcknowledgeXP::predicted_experience() const {
  // @@protoc_insertion_point(field_get:CMsgAcknowledgeXP.predicted_experience)
  return predicted_experience_;
}
inline void CMsgAcknowledgeXP::set_predicted_experience(::google::protobuf::uint32 value) {
  set_has_predicted_experience();
  predicted_experience_ = value;
  // @@protoc_insertion_point(field_set:CMsgAcknowledgeXP.predicted_experience)
}

// -------------------------------------------------------------------

// CMsgTFXPSource

// optional .CMsgTFXPSource.XPSourceType type = 1 [default = SOURCE_SCORE, (.key_field) = true];
inline bool CMsgTFXPSource::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFXPSource::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFXPSource::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFXPSource::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::CMsgTFXPSource_XPSourceType CMsgTFXPSource::type() const {
  // @@protoc_insertion_point(field_get:CMsgTFXPSource.type)
  return static_cast< ::CMsgTFXPSource_XPSourceType >(type_);
}
inline void CMsgTFXPSource::set_type(::CMsgTFXPSource_XPSourceType value) {
  assert(::CMsgTFXPSource_XPSourceType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFXPSource.type)
}

// optional int32 amount = 2;
inline bool CMsgTFXPSource::has_amount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFXPSource::set_has_amount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFXPSource::clear_has_amount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFXPSource::clear_amount() {
  amount_ = 0;
  clear_has_amount();
}
inline ::google::protobuf::int32 CMsgTFXPSource::amount() const {
  // @@protoc_insertion_point(field_get:CMsgTFXPSource.amount)
  return amount_;
}
inline void CMsgTFXPSource::set_amount(::google::protobuf::int32 value) {
  set_has_amount();
  amount_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFXPSource.amount)
}

// optional int32 match_group = 3;
inline bool CMsgTFXPSource::has_match_group() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTFXPSource::set_has_match_group() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgTFXPSource::clear_has_match_group() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgTFXPSource::clear_match_group() {
  match_group_ = 0;
  clear_has_match_group();
}
inline ::google::protobuf::int32 CMsgTFXPSource::match_group() const {
  // @@protoc_insertion_point(field_get:CMsgTFXPSource.match_group)
  return match_group_;
}
inline void CMsgTFXPSource::set_match_group(::google::protobuf::int32 value) {
  set_has_match_group();
  match_group_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFXPSource.match_group)
}

// optional uint32 account_id = 4 [(.key_field) = true];
inline bool CMsgTFXPSource::has_account_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgTFXPSource::set_has_account_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgTFXPSource::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgTFXPSource::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgTFXPSource::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgTFXPSource.account_id)
  return account_id_;
}
inline void CMsgTFXPSource::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFXPSource.account_id)
}

// optional uint64 match_id = 5 [(.key_field) = true];
inline bool CMsgTFXPSource::has_match_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgTFXPSource::set_has_match_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgTFXPSource::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgTFXPSource::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgTFXPSource::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgTFXPSource.match_id)
  return match_id_;
}
inline void CMsgTFXPSource::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFXPSource.match_id)
}

// -------------------------------------------------------------------

// CMsgTFXPSourceBreakdown

// repeated .CMsgTFXPSource sources = 1;
inline int CMsgTFXPSourceBreakdown::sources_size() const {
  return sources_.size();
}
inline void CMsgTFXPSourceBreakdown::clear_sources() {
  sources_.Clear();
}
inline const ::CMsgTFXPSource& CMsgTFXPSourceBreakdown::sources(int index) const {
  // @@protoc_insertion_point(field_get:CMsgTFXPSourceBreakdown.sources)
  return sources_.Get(index);
}
inline ::CMsgTFXPSource* CMsgTFXPSourceBreakdown::mutable_sources(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgTFXPSourceBreakdown.sources)
  return sources_.Mutable(index);
}
inline ::CMsgTFXPSource* CMsgTFXPSourceBreakdown::add_sources() {
  // @@protoc_insertion_point(field_add:CMsgTFXPSourceBreakdown.sources)
  return sources_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgTFXPSource >*
CMsgTFXPSourceBreakdown::mutable_sources() {
  // @@protoc_insertion_point(field_mutable_list:CMsgTFXPSourceBreakdown.sources)
  return &sources_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgTFXPSource >&
CMsgTFXPSourceBreakdown::sources() const {
  // @@protoc_insertion_point(field_list:CMsgTFXPSourceBreakdown.sources)
  return sources_;
}

// -------------------------------------------------------------------

// CMsgTFClientInit

// optional uint32 client_version = 1;
inline bool CMsgTFClientInit::has_client_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFClientInit::set_has_client_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFClientInit::clear_has_client_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFClientInit::clear_client_version() {
  client_version_ = 0u;
  clear_has_client_version();
}
inline ::google::protobuf::uint32 CMsgTFClientInit::client_version() const {
  // @@protoc_insertion_point(field_get:CMsgTFClientInit.client_version)
  return client_version_;
}
inline void CMsgTFClientInit::set_client_version(::google::protobuf::uint32 value) {
  set_has_client_version();
  client_version_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFClientInit.client_version)
}

// optional int32 language = 2;
inline bool CMsgTFClientInit::has_language() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFClientInit::set_has_language() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFClientInit::clear_has_language() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFClientInit::clear_language() {
  language_ = 0;
  clear_has_language();
}
inline ::google::protobuf::int32 CMsgTFClientInit::language() const {
  // @@protoc_insertion_point(field_get:CMsgTFClientInit.language)
  return language_;
}
inline void CMsgTFClientInit::set_language(::google::protobuf::int32 value) {
  set_has_language();
  language_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFClientInit.language)
}

// -------------------------------------------------------------------

// CMsgGCNotification

// optional uint64 notification_id = 1 [(.key_field) = true];
inline bool CMsgGCNotification::has_notification_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCNotification::set_has_notification_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCNotification::clear_has_notification_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCNotification::clear_notification_id() {
  notification_id_ = GOOGLE_ULONGLONG(0);
  clear_has_notification_id();
}
inline ::google::protobuf::uint64 CMsgGCNotification::notification_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCNotification.notification_id)
  return notification_id_;
}
inline void CMsgGCNotification::set_notification_id(::google::protobuf::uint64 value) {
  set_has_notification_id();
  notification_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCNotification.notification_id)
}

// optional uint32 account_id = 2;
inline bool CMsgGCNotification::has_account_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCNotification::set_has_account_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCNotification::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCNotification::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgGCNotification::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCNotification.account_id)
  return account_id_;
}
inline void CMsgGCNotification::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCNotification.account_id)
}

// optional fixed32 expiration_time = 3;
inline bool CMsgGCNotification::has_expiration_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCNotification::set_has_expiration_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCNotification::clear_has_expiration_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCNotification::clear_expiration_time() {
  expiration_time_ = 0u;
  clear_has_expiration_time();
}
inline ::google::protobuf::uint32 CMsgGCNotification::expiration_time() const {
  // @@protoc_insertion_point(field_get:CMsgGCNotification.expiration_time)
  return expiration_time_;
}
inline void CMsgGCNotification::set_expiration_time(::google::protobuf::uint32 value) {
  set_has_expiration_time();
  expiration_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCNotification.expiration_time)
}

// optional .CMsgGCNotification.NotificationType type = 4 [default = NOTIFICATION_CUSTOM_STRING];
inline bool CMsgGCNotification::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCNotification::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGCNotification::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGCNotification::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::CMsgGCNotification_NotificationType CMsgGCNotification::type() const {
  // @@protoc_insertion_point(field_get:CMsgGCNotification.type)
  return static_cast< ::CMsgGCNotification_NotificationType >(type_);
}
inline void CMsgGCNotification::set_type(::CMsgGCNotification_NotificationType value) {
  assert(::CMsgGCNotification_NotificationType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCNotification.type)
}

// optional string notification_string = 5;
inline bool CMsgGCNotification::has_notification_string() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCNotification::set_has_notification_string() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCNotification::clear_has_notification_string() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCNotification::clear_notification_string() {
  notification_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_notification_string();
}
inline const ::std::string& CMsgGCNotification::notification_string() const {
  // @@protoc_insertion_point(field_get:CMsgGCNotification.notification_string)
  return notification_string_.GetNoArena();
}
inline void CMsgGCNotification::set_notification_string(const ::std::string& value) {
  set_has_notification_string();
  notification_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgGCNotification.notification_string)
}
#if LANG_CXX11
inline void CMsgGCNotification::set_notification_string(::std::string&& value) {
  set_has_notification_string();
  notification_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgGCNotification.notification_string)
}
#endif
inline void CMsgGCNotification::set_notification_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_notification_string();
  notification_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgGCNotification.notification_string)
}
inline void CMsgGCNotification::set_notification_string(const char* value, size_t size) {
  set_has_notification_string();
  notification_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgGCNotification.notification_string)
}
inline ::std::string* CMsgGCNotification::mutable_notification_string() {
  set_has_notification_string();
  // @@protoc_insertion_point(field_mutable:CMsgGCNotification.notification_string)
  return notification_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCNotification::release_notification_string() {
  // @@protoc_insertion_point(field_release:CMsgGCNotification.notification_string)
  clear_has_notification_string();
  return notification_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCNotification::set_allocated_notification_string(::std::string* notification_string) {
  if (notification_string != NULL) {
    set_has_notification_string();
  } else {
    clear_has_notification_string();
  }
  notification_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), notification_string);
  // @@protoc_insertion_point(field_set_allocated:CMsgGCNotification.notification_string)
}

// -------------------------------------------------------------------

// CMsgGCNotificationQueue

// repeated .CMsgGCNotification notifications = 1;
inline int CMsgGCNotificationQueue::notifications_size() const {
  return notifications_.size();
}
inline void CMsgGCNotificationQueue::clear_notifications() {
  notifications_.Clear();
}
inline const ::CMsgGCNotification& CMsgGCNotificationQueue::notifications(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCNotificationQueue.notifications)
  return notifications_.Get(index);
}
inline ::CMsgGCNotification* CMsgGCNotificationQueue::mutable_notifications(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCNotificationQueue.notifications)
  return notifications_.Mutable(index);
}
inline ::CMsgGCNotification* CMsgGCNotificationQueue::add_notifications() {
  // @@protoc_insertion_point(field_add:CMsgGCNotificationQueue.notifications)
  return notifications_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGCNotification >*
CMsgGCNotificationQueue::mutable_notifications() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCNotificationQueue.notifications)
  return &notifications_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCNotification >&
CMsgGCNotificationQueue::notifications() const {
  // @@protoc_insertion_point(field_list:CMsgGCNotificationQueue.notifications)
  return notifications_;
}

// -------------------------------------------------------------------

// CMsgNotificationAcknowledge

// optional uint32 account_id = 1;
inline bool CMsgNotificationAcknowledge::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgNotificationAcknowledge::set_has_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgNotificationAcknowledge::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgNotificationAcknowledge::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgNotificationAcknowledge::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgNotificationAcknowledge.account_id)
  return account_id_;
}
inline void CMsgNotificationAcknowledge::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgNotificationAcknowledge.account_id)
}

// optional uint64 notification_id = 2;
inline bool CMsgNotificationAcknowledge::has_notification_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgNotificationAcknowledge::set_has_notification_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgNotificationAcknowledge::clear_has_notification_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgNotificationAcknowledge::clear_notification_id() {
  notification_id_ = GOOGLE_ULONGLONG(0);
  clear_has_notification_id();
}
inline ::google::protobuf::uint64 CMsgNotificationAcknowledge::notification_id() const {
  // @@protoc_insertion_point(field_get:CMsgNotificationAcknowledge.notification_id)
  return notification_id_;
}
inline void CMsgNotificationAcknowledge::set_notification_id(::google::protobuf::uint64 value) {
  set_has_notification_id();
  notification_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgNotificationAcknowledge.notification_id)
}

// -------------------------------------------------------------------

// CMsgNotificationAcknowledgeReply

// -------------------------------------------------------------------

// CMsgGC_Match_Result_Player

// optional fixed64 steam_id = 1;
inline bool CMsgGC_Match_Result_Player::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_Match_Result_Player::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_Match_Result_Player::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_Match_Result_Player::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgGC_Match_Result_Player::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.Player.steam_id)
  return steam_id_;
}
inline void CMsgGC_Match_Result_Player::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.Player.steam_id)
}

// optional uint64 party_id = 2;
inline bool CMsgGC_Match_Result_Player::has_party_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_Match_Result_Player::set_has_party_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_Match_Result_Player::clear_has_party_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_Match_Result_Player::clear_party_id() {
  party_id_ = GOOGLE_ULONGLONG(0);
  clear_has_party_id();
}
inline ::google::protobuf::uint64 CMsgGC_Match_Result_Player::party_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.Player.party_id)
  return party_id_;
}
inline void CMsgGC_Match_Result_Player::set_party_id(::google::protobuf::uint64 value) {
  set_has_party_id();
  party_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.Player.party_id)
}

// optional uint32 team = 3;
inline bool CMsgGC_Match_Result_Player::has_team() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGC_Match_Result_Player::set_has_team() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGC_Match_Result_Player::clear_has_team() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGC_Match_Result_Player::clear_team() {
  team_ = 0u;
  clear_has_team();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::team() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.Player.team)
  return team_;
}
inline void CMsgGC_Match_Result_Player::set_team(::google::protobuf::uint32 value) {
  set_has_team();
  team_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.Player.team)
}

// optional uint32 score = 4;
inline bool CMsgGC_Match_Result_Player::has_score() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGC_Match_Result_Player::set_has_score() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGC_Match_Result_Player::clear_has_score() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGC_Match_Result_Player::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::score() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.Player.score)
  return score_;
}
inline void CMsgGC_Match_Result_Player::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.Player.score)
}

// optional uint32 ping = 5;
inline bool CMsgGC_Match_Result_Player::has_ping() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGC_Match_Result_Player::set_has_ping() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGC_Match_Result_Player::clear_has_ping() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGC_Match_Result_Player::clear_ping() {
  ping_ = 0u;
  clear_has_ping();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::ping() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.Player.ping)
  return ping_;
}
inline void CMsgGC_Match_Result_Player::set_ping(::google::protobuf::uint32 value) {
  set_has_ping();
  ping_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.Player.ping)
}

// optional uint32 flags = 6;
inline bool CMsgGC_Match_Result_Player::has_flags() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGC_Match_Result_Player::set_has_flags() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgGC_Match_Result_Player::clear_has_flags() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgGC_Match_Result_Player::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::flags() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.Player.flags)
  return flags_;
}
inline void CMsgGC_Match_Result_Player::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.Player.flags)
}

// optional uint32 rank = 9;
inline bool CMsgGC_Match_Result_Player::has_rank() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGC_Match_Result_Player::set_has_rank() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgGC_Match_Result_Player::clear_has_rank() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgGC_Match_Result_Player::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::rank() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.Player.rank)
  return rank_;
}
inline void CMsgGC_Match_Result_Player::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.Player.rank)
}

// optional uint32 classes_played = 10;
inline bool CMsgGC_Match_Result_Player::has_classes_played() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgGC_Match_Result_Player::set_has_classes_played() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgGC_Match_Result_Player::clear_has_classes_played() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgGC_Match_Result_Player::clear_classes_played() {
  classes_played_ = 0u;
  clear_has_classes_played();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::classes_played() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.Player.classes_played)
  return classes_played_;
}
inline void CMsgGC_Match_Result_Player::set_classes_played(::google::protobuf::uint32 value) {
  set_has_classes_played();
  classes_played_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.Player.classes_played)
}

// optional uint32 kills = 11;
inline bool CMsgGC_Match_Result_Player::has_kills() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgGC_Match_Result_Player::set_has_kills() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgGC_Match_Result_Player::clear_has_kills() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgGC_Match_Result_Player::clear_kills() {
  kills_ = 0u;
  clear_has_kills();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::kills() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.Player.kills)
  return kills_;
}
inline void CMsgGC_Match_Result_Player::set_kills(::google::protobuf::uint32 value) {
  set_has_kills();
  kills_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.Player.kills)
}

// optional uint32 deaths = 12;
inline bool CMsgGC_Match_Result_Player::has_deaths() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgGC_Match_Result_Player::set_has_deaths() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgGC_Match_Result_Player::clear_has_deaths() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgGC_Match_Result_Player::clear_deaths() {
  deaths_ = 0u;
  clear_has_deaths();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::deaths() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.Player.deaths)
  return deaths_;
}
inline void CMsgGC_Match_Result_Player::set_deaths(::google::protobuf::uint32 value) {
  set_has_deaths();
  deaths_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.Player.deaths)
}

// optional uint32 damage = 13;
inline bool CMsgGC_Match_Result_Player::has_damage() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgGC_Match_Result_Player::set_has_damage() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgGC_Match_Result_Player::clear_has_damage() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgGC_Match_Result_Player::clear_damage() {
  damage_ = 0u;
  clear_has_damage();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::damage() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.Player.damage)
  return damage_;
}
inline void CMsgGC_Match_Result_Player::set_damage(::google::protobuf::uint32 value) {
  set_has_damage();
  damage_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.Player.damage)
}

// optional uint32 healing = 14;
inline bool CMsgGC_Match_Result_Player::has_healing() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgGC_Match_Result_Player::set_has_healing() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgGC_Match_Result_Player::clear_has_healing() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgGC_Match_Result_Player::clear_healing() {
  healing_ = 0u;
  clear_has_healing();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::healing() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.Player.healing)
  return healing_;
}
inline void CMsgGC_Match_Result_Player::set_healing(::google::protobuf::uint32 value) {
  set_has_healing();
  healing_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.Player.healing)
}

// optional uint32 support = 15;
inline bool CMsgGC_Match_Result_Player::has_support() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgGC_Match_Result_Player::set_has_support() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgGC_Match_Result_Player::clear_has_support() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgGC_Match_Result_Player::clear_support() {
  support_ = 0u;
  clear_has_support();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::support() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.Player.support)
  return support_;
}
inline void CMsgGC_Match_Result_Player::set_support(::google::protobuf::uint32 value) {
  set_has_support();
  support_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.Player.support)
}

// optional uint32 score_medal = 16;
inline bool CMsgGC_Match_Result_Player::has_score_medal() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgGC_Match_Result_Player::set_has_score_medal() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgGC_Match_Result_Player::clear_has_score_medal() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgGC_Match_Result_Player::clear_score_medal() {
  score_medal_ = 0u;
  clear_has_score_medal();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::score_medal() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.Player.score_medal)
  return score_medal_;
}
inline void CMsgGC_Match_Result_Player::set_score_medal(::google::protobuf::uint32 value) {
  set_has_score_medal();
  score_medal_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.Player.score_medal)
}

// optional uint32 kills_medal = 17;
inline bool CMsgGC_Match_Result_Player::has_kills_medal() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgGC_Match_Result_Player::set_has_kills_medal() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgGC_Match_Result_Player::clear_has_kills_medal() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgGC_Match_Result_Player::clear_kills_medal() {
  kills_medal_ = 0u;
  clear_has_kills_medal();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::kills_medal() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.Player.kills_medal)
  return kills_medal_;
}
inline void CMsgGC_Match_Result_Player::set_kills_medal(::google::protobuf::uint32 value) {
  set_has_kills_medal();
  kills_medal_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.Player.kills_medal)
}

// optional uint32 damage_medal = 18;
inline bool CMsgGC_Match_Result_Player::has_damage_medal() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgGC_Match_Result_Player::set_has_damage_medal() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMsgGC_Match_Result_Player::clear_has_damage_medal() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMsgGC_Match_Result_Player::clear_damage_medal() {
  damage_medal_ = 0u;
  clear_has_damage_medal();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::damage_medal() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.Player.damage_medal)
  return damage_medal_;
}
inline void CMsgGC_Match_Result_Player::set_damage_medal(::google::protobuf::uint32 value) {
  set_has_damage_medal();
  damage_medal_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.Player.damage_medal)
}

// optional uint32 healing_medal = 19;
inline bool CMsgGC_Match_Result_Player::has_healing_medal() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgGC_Match_Result_Player::set_has_healing_medal() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CMsgGC_Match_Result_Player::clear_has_healing_medal() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CMsgGC_Match_Result_Player::clear_healing_medal() {
  healing_medal_ = 0u;
  clear_has_healing_medal();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::healing_medal() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.Player.healing_medal)
  return healing_medal_;
}
inline void CMsgGC_Match_Result_Player::set_healing_medal(::google::protobuf::uint32 value) {
  set_has_healing_medal();
  healing_medal_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.Player.healing_medal)
}

// optional uint32 support_medal = 20;
inline bool CMsgGC_Match_Result_Player::has_support_medal() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgGC_Match_Result_Player::set_has_support_medal() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CMsgGC_Match_Result_Player::clear_has_support_medal() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CMsgGC_Match_Result_Player::clear_support_medal() {
  support_medal_ = 0u;
  clear_has_support_medal();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::support_medal() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.Player.support_medal)
  return support_medal_;
}
inline void CMsgGC_Match_Result_Player::set_support_medal(::google::protobuf::uint32 value) {
  set_has_support_medal();
  support_medal_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.Player.support_medal)
}

// repeated .CMsgTFXPSource xp_breakdown = 21;
inline int CMsgGC_Match_Result_Player::xp_breakdown_size() const {
  return xp_breakdown_.size();
}
inline void CMsgGC_Match_Result_Player::clear_xp_breakdown() {
  xp_breakdown_.Clear();
}
inline const ::CMsgTFXPSource& CMsgGC_Match_Result_Player::xp_breakdown(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.Player.xp_breakdown)
  return xp_breakdown_.Get(index);
}
inline ::CMsgTFXPSource* CMsgGC_Match_Result_Player::mutable_xp_breakdown(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGC_Match_Result.Player.xp_breakdown)
  return xp_breakdown_.Mutable(index);
}
inline ::CMsgTFXPSource* CMsgGC_Match_Result_Player::add_xp_breakdown() {
  // @@protoc_insertion_point(field_add:CMsgGC_Match_Result.Player.xp_breakdown)
  return xp_breakdown_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgTFXPSource >*
CMsgGC_Match_Result_Player::mutable_xp_breakdown() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGC_Match_Result.Player.xp_breakdown)
  return &xp_breakdown_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgTFXPSource >&
CMsgGC_Match_Result_Player::xp_breakdown() const {
  // @@protoc_insertion_point(field_list:CMsgGC_Match_Result.Player.xp_breakdown)
  return xp_breakdown_;
}

// optional uint32 leave_time = 22;
inline bool CMsgGC_Match_Result_Player::has_leave_time() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CMsgGC_Match_Result_Player::set_has_leave_time() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CMsgGC_Match_Result_Player::clear_has_leave_time() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CMsgGC_Match_Result_Player::clear_leave_time() {
  leave_time_ = 0u;
  clear_has_leave_time();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::leave_time() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.Player.leave_time)
  return leave_time_;
}
inline void CMsgGC_Match_Result_Player::set_leave_time(::google::protobuf::uint32 value) {
  set_has_leave_time();
  leave_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.Player.leave_time)
}

// optional .TFMatchLeaveReason leave_reason = 23 [default = TFMatchLeaveReason_UNSPECIFIED];
inline bool CMsgGC_Match_Result_Player::has_leave_reason() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CMsgGC_Match_Result_Player::set_has_leave_reason() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CMsgGC_Match_Result_Player::clear_has_leave_reason() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CMsgGC_Match_Result_Player::clear_leave_reason() {
  leave_reason_ = 0;
  clear_has_leave_reason();
}
inline ::TFMatchLeaveReason CMsgGC_Match_Result_Player::leave_reason() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.Player.leave_reason)
  return static_cast< ::TFMatchLeaveReason >(leave_reason_);
}
inline void CMsgGC_Match_Result_Player::set_leave_reason(::TFMatchLeaveReason value) {
  assert(::TFMatchLeaveReason_IsValid(value));
  set_has_leave_reason();
  leave_reason_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.Player.leave_reason)
}

// optional uint32 connect_time = 24;
inline bool CMsgGC_Match_Result_Player::has_connect_time() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CMsgGC_Match_Result_Player::set_has_connect_time() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CMsgGC_Match_Result_Player::clear_has_connect_time() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CMsgGC_Match_Result_Player::clear_connect_time() {
  connect_time_ = 0u;
  clear_has_connect_time();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result_Player::connect_time() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.Player.connect_time)
  return connect_time_;
}
inline void CMsgGC_Match_Result_Player::set_connect_time(::google::protobuf::uint32 value) {
  set_has_connect_time();
  connect_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.Player.connect_time)
}

// -------------------------------------------------------------------

// CMsgGC_Match_Result

// optional uint64 match_id = 1 [(.key_field) = true];
inline bool CMsgGC_Match_Result::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_Match_Result::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_Match_Result::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_Match_Result::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgGC_Match_Result::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.match_id)
  return match_id_;
}
inline void CMsgGC_Match_Result::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.match_id)
}

// optional int32 match_group = 2;
inline bool CMsgGC_Match_Result::has_match_group() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_Match_Result::set_has_match_group() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_Match_Result::clear_has_match_group() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_Match_Result::clear_match_group() {
  match_group_ = 0;
  clear_has_match_group();
}
inline ::google::protobuf::int32 CMsgGC_Match_Result::match_group() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.match_group)
  return match_group_;
}
inline void CMsgGC_Match_Result::set_match_group(::google::protobuf::int32 value) {
  set_has_match_group();
  match_group_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.match_group)
}

// optional .CMsgGC_Match_Result.Status status = 3 [default = MATCH_SUCCEEDED];
inline bool CMsgGC_Match_Result::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGC_Match_Result::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGC_Match_Result::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGC_Match_Result::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::CMsgGC_Match_Result_Status CMsgGC_Match_Result::status() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.status)
  return static_cast< ::CMsgGC_Match_Result_Status >(status_);
}
inline void CMsgGC_Match_Result::set_status(::CMsgGC_Match_Result_Status value) {
  assert(::CMsgGC_Match_Result_Status_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.status)
}

// optional uint32 duration = 4;
inline bool CMsgGC_Match_Result::has_duration() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGC_Match_Result::set_has_duration() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGC_Match_Result::clear_has_duration() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGC_Match_Result::clear_duration() {
  duration_ = 0u;
  clear_has_duration();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result::duration() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.duration)
  return duration_;
}
inline void CMsgGC_Match_Result::set_duration(::google::protobuf::uint32 value) {
  set_has_duration();
  duration_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.duration)
}

// optional uint32 red_score = 5;
inline bool CMsgGC_Match_Result::has_red_score() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGC_Match_Result::set_has_red_score() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGC_Match_Result::clear_has_red_score() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGC_Match_Result::clear_red_score() {
  red_score_ = 0u;
  clear_has_red_score();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result::red_score() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.red_score)
  return red_score_;
}
inline void CMsgGC_Match_Result::set_red_score(::google::protobuf::uint32 value) {
  set_has_red_score();
  red_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.red_score)
}

// optional uint32 blue_score = 6;
inline bool CMsgGC_Match_Result::has_blue_score() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGC_Match_Result::set_has_blue_score() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgGC_Match_Result::clear_has_blue_score() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgGC_Match_Result::clear_blue_score() {
  blue_score_ = 0u;
  clear_has_blue_score();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result::blue_score() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.blue_score)
  return blue_score_;
}
inline void CMsgGC_Match_Result::set_blue_score(::google::protobuf::uint32 value) {
  set_has_blue_score();
  blue_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.blue_score)
}

// optional uint32 winning_team = 7;
inline bool CMsgGC_Match_Result::has_winning_team() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGC_Match_Result::set_has_winning_team() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgGC_Match_Result::clear_has_winning_team() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgGC_Match_Result::clear_winning_team() {
  winning_team_ = 0u;
  clear_has_winning_team();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result::winning_team() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.winning_team)
  return winning_team_;
}
inline void CMsgGC_Match_Result::set_winning_team(::google::protobuf::uint32 value) {
  set_has_winning_team();
  winning_team_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.winning_team)
}

// optional uint32 map_index = 8;
inline bool CMsgGC_Match_Result::has_map_index() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgGC_Match_Result::set_has_map_index() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgGC_Match_Result::clear_has_map_index() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgGC_Match_Result::clear_map_index() {
  map_index_ = 0u;
  clear_has_map_index();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result::map_index() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.map_index)
  return map_index_;
}
inline void CMsgGC_Match_Result::set_map_index(::google::protobuf::uint32 value) {
  set_has_map_index();
  map_index_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.map_index)
}

// optional uint32 game_type = 9 [default = 0];
inline bool CMsgGC_Match_Result::has_game_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgGC_Match_Result::set_has_game_type() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgGC_Match_Result::clear_has_game_type() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgGC_Match_Result::clear_game_type() {
  game_type_ = 0u;
  clear_has_game_type();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result::game_type() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.game_type)
  return game_type_;
}
inline void CMsgGC_Match_Result::set_game_type(::google::protobuf::uint32 value) {
  set_has_game_type();
  game_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.game_type)
}

// repeated .CMsgGC_Match_Result.Player players = 10;
inline int CMsgGC_Match_Result::players_size() const {
  return players_.size();
}
inline void CMsgGC_Match_Result::clear_players() {
  players_.Clear();
}
inline const ::CMsgGC_Match_Result_Player& CMsgGC_Match_Result::players(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.players)
  return players_.Get(index);
}
inline ::CMsgGC_Match_Result_Player* CMsgGC_Match_Result::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGC_Match_Result.players)
  return players_.Mutable(index);
}
inline ::CMsgGC_Match_Result_Player* CMsgGC_Match_Result::add_players() {
  // @@protoc_insertion_point(field_add:CMsgGC_Match_Result.players)
  return players_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGC_Match_Result_Player >*
CMsgGC_Match_Result::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGC_Match_Result.players)
  return &players_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGC_Match_Result_Player >&
CMsgGC_Match_Result::players() const {
  // @@protoc_insertion_point(field_list:CMsgGC_Match_Result.players)
  return players_;
}

// optional uint32 win_reason = 13;
inline bool CMsgGC_Match_Result::has_win_reason() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgGC_Match_Result::set_has_win_reason() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgGC_Match_Result::clear_has_win_reason() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgGC_Match_Result::clear_win_reason() {
  win_reason_ = 0u;
  clear_has_win_reason();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result::win_reason() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.win_reason)
  return win_reason_;
}
inline void CMsgGC_Match_Result::set_win_reason(::google::protobuf::uint32 value) {
  set_has_win_reason();
  win_reason_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.win_reason)
}

// optional uint32 flags = 14;
inline bool CMsgGC_Match_Result::has_flags() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgGC_Match_Result::set_has_flags() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgGC_Match_Result::clear_has_flags() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgGC_Match_Result::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result::flags() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.flags)
  return flags_;
}
inline void CMsgGC_Match_Result::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.flags)
}

// optional uint32 bots = 16;
inline bool CMsgGC_Match_Result::has_bots() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgGC_Match_Result::set_has_bots() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgGC_Match_Result::clear_has_bots() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgGC_Match_Result::clear_bots() {
  bots_ = 0u;
  clear_has_bots();
}
inline ::google::protobuf::uint32 CMsgGC_Match_Result::bots() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Match_Result.bots)
  return bots_;
}
inline void CMsgGC_Match_Result::set_bots(::google::protobuf::uint32 value) {
  set_has_bots();
  bots_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Match_Result.bots)
}

// -------------------------------------------------------------------

// CMsgGC_Match_ResultResponse

// -------------------------------------------------------------------

// CEconItemPreviewDataBlock

// optional .CSOEconItem econitem = 1;
inline bool CEconItemPreviewDataBlock::has_econitem() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CEconItemPreviewDataBlock::set_has_econitem() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CEconItemPreviewDataBlock::clear_has_econitem() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CSOEconItem& CEconItemPreviewDataBlock::econitem() const {
  const ::CSOEconItem* p = econitem_;
  // @@protoc_insertion_point(field_get:CEconItemPreviewDataBlock.econitem)
  return p != NULL ? *p : *reinterpret_cast<const ::CSOEconItem*>(
      &::_CSOEconItem_default_instance_);
}
inline ::CSOEconItem* CEconItemPreviewDataBlock::release_econitem() {
  // @@protoc_insertion_point(field_release:CEconItemPreviewDataBlock.econitem)
  clear_has_econitem();
  ::CSOEconItem* temp = econitem_;
  econitem_ = NULL;
  return temp;
}
inline ::CSOEconItem* CEconItemPreviewDataBlock::mutable_econitem() {
  set_has_econitem();
  if (econitem_ == NULL) {
    econitem_ = new ::CSOEconItem;
  }
  // @@protoc_insertion_point(field_mutable:CEconItemPreviewDataBlock.econitem)
  return econitem_;
}
inline void CEconItemPreviewDataBlock::set_allocated_econitem(::CSOEconItem* econitem) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(econitem_);
  }
  if (econitem) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      econitem = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, econitem, submessage_arena);
    }
    set_has_econitem();
  } else {
    clear_has_econitem();
  }
  econitem_ = econitem;
  // @@protoc_insertion_point(field_set_allocated:CEconItemPreviewDataBlock.econitem)
}

// -------------------------------------------------------------------

// CMsgGC_Client2GCEconPreviewDataBlockRequest

// optional uint64 param_s = 1;
inline bool CMsgGC_Client2GCEconPreviewDataBlockRequest::has_param_s() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_Client2GCEconPreviewDataBlockRequest::set_has_param_s() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_Client2GCEconPreviewDataBlockRequest::clear_has_param_s() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_Client2GCEconPreviewDataBlockRequest::clear_param_s() {
  param_s_ = GOOGLE_ULONGLONG(0);
  clear_has_param_s();
}
inline ::google::protobuf::uint64 CMsgGC_Client2GCEconPreviewDataBlockRequest::param_s() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Client2GCEconPreviewDataBlockRequest.param_s)
  return param_s_;
}
inline void CMsgGC_Client2GCEconPreviewDataBlockRequest::set_param_s(::google::protobuf::uint64 value) {
  set_has_param_s();
  param_s_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Client2GCEconPreviewDataBlockRequest.param_s)
}

// optional uint64 param_a = 2;
inline bool CMsgGC_Client2GCEconPreviewDataBlockRequest::has_param_a() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_Client2GCEconPreviewDataBlockRequest::set_has_param_a() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_Client2GCEconPreviewDataBlockRequest::clear_has_param_a() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_Client2GCEconPreviewDataBlockRequest::clear_param_a() {
  param_a_ = GOOGLE_ULONGLONG(0);
  clear_has_param_a();
}
inline ::google::protobuf::uint64 CMsgGC_Client2GCEconPreviewDataBlockRequest::param_a() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Client2GCEconPreviewDataBlockRequest.param_a)
  return param_a_;
}
inline void CMsgGC_Client2GCEconPreviewDataBlockRequest::set_param_a(::google::protobuf::uint64 value) {
  set_has_param_a();
  param_a_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Client2GCEconPreviewDataBlockRequest.param_a)
}

// optional uint64 param_d = 3;
inline bool CMsgGC_Client2GCEconPreviewDataBlockRequest::has_param_d() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGC_Client2GCEconPreviewDataBlockRequest::set_has_param_d() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGC_Client2GCEconPreviewDataBlockRequest::clear_has_param_d() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGC_Client2GCEconPreviewDataBlockRequest::clear_param_d() {
  param_d_ = GOOGLE_ULONGLONG(0);
  clear_has_param_d();
}
inline ::google::protobuf::uint64 CMsgGC_Client2GCEconPreviewDataBlockRequest::param_d() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Client2GCEconPreviewDataBlockRequest.param_d)
  return param_d_;
}
inline void CMsgGC_Client2GCEconPreviewDataBlockRequest::set_param_d(::google::protobuf::uint64 value) {
  set_has_param_d();
  param_d_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Client2GCEconPreviewDataBlockRequest.param_d)
}

// optional uint64 param_m = 4;
inline bool CMsgGC_Client2GCEconPreviewDataBlockRequest::has_param_m() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGC_Client2GCEconPreviewDataBlockRequest::set_has_param_m() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGC_Client2GCEconPreviewDataBlockRequest::clear_has_param_m() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGC_Client2GCEconPreviewDataBlockRequest::clear_param_m() {
  param_m_ = GOOGLE_ULONGLONG(0);
  clear_has_param_m();
}
inline ::google::protobuf::uint64 CMsgGC_Client2GCEconPreviewDataBlockRequest::param_m() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Client2GCEconPreviewDataBlockRequest.param_m)
  return param_m_;
}
inline void CMsgGC_Client2GCEconPreviewDataBlockRequest::set_param_m(::google::protobuf::uint64 value) {
  set_has_param_m();
  param_m_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Client2GCEconPreviewDataBlockRequest.param_m)
}

// -------------------------------------------------------------------

// CMsgGC_Client2GCEconPreviewDataBlockResponse

// optional .CEconItemPreviewDataBlock iteminfo = 1;
inline bool CMsgGC_Client2GCEconPreviewDataBlockResponse::has_iteminfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_Client2GCEconPreviewDataBlockResponse::set_has_iteminfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_Client2GCEconPreviewDataBlockResponse::clear_has_iteminfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_Client2GCEconPreviewDataBlockResponse::clear_iteminfo() {
  if (iteminfo_ != NULL) iteminfo_->Clear();
  clear_has_iteminfo();
}
inline const ::CEconItemPreviewDataBlock& CMsgGC_Client2GCEconPreviewDataBlockResponse::iteminfo() const {
  const ::CEconItemPreviewDataBlock* p = iteminfo_;
  // @@protoc_insertion_point(field_get:CMsgGC_Client2GCEconPreviewDataBlockResponse.iteminfo)
  return p != NULL ? *p : *reinterpret_cast<const ::CEconItemPreviewDataBlock*>(
      &::_CEconItemPreviewDataBlock_default_instance_);
}
inline ::CEconItemPreviewDataBlock* CMsgGC_Client2GCEconPreviewDataBlockResponse::release_iteminfo() {
  // @@protoc_insertion_point(field_release:CMsgGC_Client2GCEconPreviewDataBlockResponse.iteminfo)
  clear_has_iteminfo();
  ::CEconItemPreviewDataBlock* temp = iteminfo_;
  iteminfo_ = NULL;
  return temp;
}
inline ::CEconItemPreviewDataBlock* CMsgGC_Client2GCEconPreviewDataBlockResponse::mutable_iteminfo() {
  set_has_iteminfo();
  if (iteminfo_ == NULL) {
    iteminfo_ = new ::CEconItemPreviewDataBlock;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGC_Client2GCEconPreviewDataBlockResponse.iteminfo)
  return iteminfo_;
}
inline void CMsgGC_Client2GCEconPreviewDataBlockResponse::set_allocated_iteminfo(::CEconItemPreviewDataBlock* iteminfo) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete iteminfo_;
  }
  if (iteminfo) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      iteminfo = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, iteminfo, submessage_arena);
    }
    set_has_iteminfo();
  } else {
    clear_has_iteminfo();
  }
  iteminfo_ = iteminfo;
  // @@protoc_insertion_point(field_set_allocated:CMsgGC_Client2GCEconPreviewDataBlockResponse.iteminfo)
}

// -------------------------------------------------------------------

// CSOTFLadderPlayerStats

// optional uint32 account_id = 1 [(.key_field) = true];
inline bool CSOTFLadderPlayerStats::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOTFLadderPlayerStats::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOTFLadderPlayerStats::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::account_id() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.account_id)
  return account_id_;
}
inline void CSOTFLadderPlayerStats::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.account_id)
}

// optional int32 match_group = 2 [(.key_field) = true];
inline bool CSOTFLadderPlayerStats::has_match_group() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_match_group() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOTFLadderPlayerStats::clear_has_match_group() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOTFLadderPlayerStats::clear_match_group() {
  match_group_ = 0;
  clear_has_match_group();
}
inline ::google::protobuf::int32 CSOTFLadderPlayerStats::match_group() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.match_group)
  return match_group_;
}
inline void CSOTFLadderPlayerStats::set_match_group(::google::protobuf::int32 value) {
  set_has_match_group();
  match_group_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.match_group)
}

// optional uint32 season_id = 3 [(.key_field) = true];
inline bool CSOTFLadderPlayerStats::has_season_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_season_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSOTFLadderPlayerStats::clear_has_season_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSOTFLadderPlayerStats::clear_season_id() {
  season_id_ = 0u;
  clear_has_season_id();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::season_id() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.season_id)
  return season_id_;
}
inline void CSOTFLadderPlayerStats::set_season_id(::google::protobuf::uint32 value) {
  set_has_season_id();
  season_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.season_id)
}

// optional uint32 rank = 6;
inline bool CSOTFLadderPlayerStats::has_rank() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_rank() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSOTFLadderPlayerStats::clear_has_rank() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSOTFLadderPlayerStats::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::rank() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.rank)
  return rank_;
}
inline void CSOTFLadderPlayerStats::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.rank)
}

// optional uint32 highest_rank = 7;
inline bool CSOTFLadderPlayerStats::has_highest_rank() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_highest_rank() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSOTFLadderPlayerStats::clear_has_highest_rank() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSOTFLadderPlayerStats::clear_highest_rank() {
  highest_rank_ = 0u;
  clear_has_highest_rank();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::highest_rank() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.highest_rank)
  return highest_rank_;
}
inline void CSOTFLadderPlayerStats::set_highest_rank(::google::protobuf::uint32 value) {
  set_has_highest_rank();
  highest_rank_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.highest_rank)
}

// optional uint32 experience = 8;
inline bool CSOTFLadderPlayerStats::has_experience() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_experience() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSOTFLadderPlayerStats::clear_has_experience() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSOTFLadderPlayerStats::clear_experience() {
  experience_ = 0u;
  clear_has_experience();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::experience() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.experience)
  return experience_;
}
inline void CSOTFLadderPlayerStats::set_experience(::google::protobuf::uint32 value) {
  set_has_experience();
  experience_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.experience)
}

// optional uint32 last_ackd_experience = 32;
inline bool CSOTFLadderPlayerStats::has_last_ackd_experience() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_last_ackd_experience() {
  _has_bits_[0] |= 0x10000000u;
}
inline void CSOTFLadderPlayerStats::clear_has_last_ackd_experience() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void CSOTFLadderPlayerStats::clear_last_ackd_experience() {
  last_ackd_experience_ = 0u;
  clear_has_last_ackd_experience();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::last_ackd_experience() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.last_ackd_experience)
  return last_ackd_experience_;
}
inline void CSOTFLadderPlayerStats::set_last_ackd_experience(::google::protobuf::uint32 value) {
  set_has_last_ackd_experience();
  last_ackd_experience_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.last_ackd_experience)
}

// optional uint32 games = 9;
inline bool CSOTFLadderPlayerStats::has_games() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_games() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSOTFLadderPlayerStats::clear_has_games() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSOTFLadderPlayerStats::clear_games() {
  games_ = 0u;
  clear_has_games();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::games() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.games)
  return games_;
}
inline void CSOTFLadderPlayerStats::set_games(::google::protobuf::uint32 value) {
  set_has_games();
  games_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.games)
}

// optional uint32 score = 10;
inline bool CSOTFLadderPlayerStats::has_score() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_score() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSOTFLadderPlayerStats::clear_has_score() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSOTFLadderPlayerStats::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::score() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.score)
  return score_;
}
inline void CSOTFLadderPlayerStats::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.score)
}

// optional uint32 kills = 11;
inline bool CSOTFLadderPlayerStats::has_kills() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_kills() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSOTFLadderPlayerStats::clear_has_kills() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSOTFLadderPlayerStats::clear_kills() {
  kills_ = 0u;
  clear_has_kills();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::kills() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.kills)
  return kills_;
}
inline void CSOTFLadderPlayerStats::set_kills(::google::protobuf::uint32 value) {
  set_has_kills();
  kills_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.kills)
}

// optional uint32 deaths = 12;
inline bool CSOTFLadderPlayerStats::has_deaths() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_deaths() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CSOTFLadderPlayerStats::clear_has_deaths() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CSOTFLadderPlayerStats::clear_deaths() {
  deaths_ = 0u;
  clear_has_deaths();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::deaths() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.deaths)
  return deaths_;
}
inline void CSOTFLadderPlayerStats::set_deaths(::google::protobuf::uint32 value) {
  set_has_deaths();
  deaths_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.deaths)
}

// optional uint32 damage = 13;
inline bool CSOTFLadderPlayerStats::has_damage() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_damage() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CSOTFLadderPlayerStats::clear_has_damage() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CSOTFLadderPlayerStats::clear_damage() {
  damage_ = 0u;
  clear_has_damage();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::damage() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.damage)
  return damage_;
}
inline void CSOTFLadderPlayerStats::set_damage(::google::protobuf::uint32 value) {
  set_has_damage();
  damage_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.damage)
}

// optional uint32 healing = 14;
inline bool CSOTFLadderPlayerStats::has_healing() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_healing() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CSOTFLadderPlayerStats::clear_has_healing() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CSOTFLadderPlayerStats::clear_healing() {
  healing_ = 0u;
  clear_has_healing();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::healing() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.healing)
  return healing_;
}
inline void CSOTFLadderPlayerStats::set_healing(::google::protobuf::uint32 value) {
  set_has_healing();
  healing_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.healing)
}

// optional uint32 support = 15;
inline bool CSOTFLadderPlayerStats::has_support() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_support() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CSOTFLadderPlayerStats::clear_has_support() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CSOTFLadderPlayerStats::clear_support() {
  support_ = 0u;
  clear_has_support();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::support() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.support)
  return support_;
}
inline void CSOTFLadderPlayerStats::set_support(::google::protobuf::uint32 value) {
  set_has_support();
  support_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.support)
}

// optional uint32 score_bronze = 16;
inline bool CSOTFLadderPlayerStats::has_score_bronze() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_score_bronze() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CSOTFLadderPlayerStats::clear_has_score_bronze() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CSOTFLadderPlayerStats::clear_score_bronze() {
  score_bronze_ = 0u;
  clear_has_score_bronze();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::score_bronze() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.score_bronze)
  return score_bronze_;
}
inline void CSOTFLadderPlayerStats::set_score_bronze(::google::protobuf::uint32 value) {
  set_has_score_bronze();
  score_bronze_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.score_bronze)
}

// optional uint32 score_silver = 17;
inline bool CSOTFLadderPlayerStats::has_score_silver() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_score_silver() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CSOTFLadderPlayerStats::clear_has_score_silver() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CSOTFLadderPlayerStats::clear_score_silver() {
  score_silver_ = 0u;
  clear_has_score_silver();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::score_silver() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.score_silver)
  return score_silver_;
}
inline void CSOTFLadderPlayerStats::set_score_silver(::google::protobuf::uint32 value) {
  set_has_score_silver();
  score_silver_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.score_silver)
}

// optional uint32 score_gold = 18;
inline bool CSOTFLadderPlayerStats::has_score_gold() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_score_gold() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CSOTFLadderPlayerStats::clear_has_score_gold() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CSOTFLadderPlayerStats::clear_score_gold() {
  score_gold_ = 0u;
  clear_has_score_gold();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::score_gold() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.score_gold)
  return score_gold_;
}
inline void CSOTFLadderPlayerStats::set_score_gold(::google::protobuf::uint32 value) {
  set_has_score_gold();
  score_gold_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.score_gold)
}

// optional uint32 kills_bronze = 19;
inline bool CSOTFLadderPlayerStats::has_kills_bronze() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_kills_bronze() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CSOTFLadderPlayerStats::clear_has_kills_bronze() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CSOTFLadderPlayerStats::clear_kills_bronze() {
  kills_bronze_ = 0u;
  clear_has_kills_bronze();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::kills_bronze() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.kills_bronze)
  return kills_bronze_;
}
inline void CSOTFLadderPlayerStats::set_kills_bronze(::google::protobuf::uint32 value) {
  set_has_kills_bronze();
  kills_bronze_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.kills_bronze)
}

// optional uint32 kills_silver = 20;
inline bool CSOTFLadderPlayerStats::has_kills_silver() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_kills_silver() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CSOTFLadderPlayerStats::clear_has_kills_silver() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CSOTFLadderPlayerStats::clear_kills_silver() {
  kills_silver_ = 0u;
  clear_has_kills_silver();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::kills_silver() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.kills_silver)
  return kills_silver_;
}
inline void CSOTFLadderPlayerStats::set_kills_silver(::google::protobuf::uint32 value) {
  set_has_kills_silver();
  kills_silver_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.kills_silver)
}

// optional uint32 kills_gold = 21;
inline bool CSOTFLadderPlayerStats::has_kills_gold() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_kills_gold() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CSOTFLadderPlayerStats::clear_has_kills_gold() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CSOTFLadderPlayerStats::clear_kills_gold() {
  kills_gold_ = 0u;
  clear_has_kills_gold();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::kills_gold() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.kills_gold)
  return kills_gold_;
}
inline void CSOTFLadderPlayerStats::set_kills_gold(::google::protobuf::uint32 value) {
  set_has_kills_gold();
  kills_gold_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.kills_gold)
}

// optional uint32 damage_bronze = 22;
inline bool CSOTFLadderPlayerStats::has_damage_bronze() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_damage_bronze() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CSOTFLadderPlayerStats::clear_has_damage_bronze() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CSOTFLadderPlayerStats::clear_damage_bronze() {
  damage_bronze_ = 0u;
  clear_has_damage_bronze();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::damage_bronze() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.damage_bronze)
  return damage_bronze_;
}
inline void CSOTFLadderPlayerStats::set_damage_bronze(::google::protobuf::uint32 value) {
  set_has_damage_bronze();
  damage_bronze_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.damage_bronze)
}

// optional uint32 damage_silver = 23;
inline bool CSOTFLadderPlayerStats::has_damage_silver() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_damage_silver() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CSOTFLadderPlayerStats::clear_has_damage_silver() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CSOTFLadderPlayerStats::clear_damage_silver() {
  damage_silver_ = 0u;
  clear_has_damage_silver();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::damage_silver() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.damage_silver)
  return damage_silver_;
}
inline void CSOTFLadderPlayerStats::set_damage_silver(::google::protobuf::uint32 value) {
  set_has_damage_silver();
  damage_silver_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.damage_silver)
}

// optional uint32 damage_gold = 24;
inline bool CSOTFLadderPlayerStats::has_damage_gold() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_damage_gold() {
  _has_bits_[0] |= 0x00200000u;
}
inline void CSOTFLadderPlayerStats::clear_has_damage_gold() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void CSOTFLadderPlayerStats::clear_damage_gold() {
  damage_gold_ = 0u;
  clear_has_damage_gold();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::damage_gold() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.damage_gold)
  return damage_gold_;
}
inline void CSOTFLadderPlayerStats::set_damage_gold(::google::protobuf::uint32 value) {
  set_has_damage_gold();
  damage_gold_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.damage_gold)
}

// optional uint32 healing_bronze = 25;
inline bool CSOTFLadderPlayerStats::has_healing_bronze() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_healing_bronze() {
  _has_bits_[0] |= 0x00400000u;
}
inline void CSOTFLadderPlayerStats::clear_has_healing_bronze() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void CSOTFLadderPlayerStats::clear_healing_bronze() {
  healing_bronze_ = 0u;
  clear_has_healing_bronze();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::healing_bronze() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.healing_bronze)
  return healing_bronze_;
}
inline void CSOTFLadderPlayerStats::set_healing_bronze(::google::protobuf::uint32 value) {
  set_has_healing_bronze();
  healing_bronze_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.healing_bronze)
}

// optional uint32 healing_silver = 26;
inline bool CSOTFLadderPlayerStats::has_healing_silver() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_healing_silver() {
  _has_bits_[0] |= 0x00800000u;
}
inline void CSOTFLadderPlayerStats::clear_has_healing_silver() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void CSOTFLadderPlayerStats::clear_healing_silver() {
  healing_silver_ = 0u;
  clear_has_healing_silver();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::healing_silver() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.healing_silver)
  return healing_silver_;
}
inline void CSOTFLadderPlayerStats::set_healing_silver(::google::protobuf::uint32 value) {
  set_has_healing_silver();
  healing_silver_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.healing_silver)
}

// optional uint32 healing_gold = 27;
inline bool CSOTFLadderPlayerStats::has_healing_gold() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_healing_gold() {
  _has_bits_[0] |= 0x01000000u;
}
inline void CSOTFLadderPlayerStats::clear_has_healing_gold() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void CSOTFLadderPlayerStats::clear_healing_gold() {
  healing_gold_ = 0u;
  clear_has_healing_gold();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::healing_gold() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.healing_gold)
  return healing_gold_;
}
inline void CSOTFLadderPlayerStats::set_healing_gold(::google::protobuf::uint32 value) {
  set_has_healing_gold();
  healing_gold_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.healing_gold)
}

// optional uint32 support_bronze = 28;
inline bool CSOTFLadderPlayerStats::has_support_bronze() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_support_bronze() {
  _has_bits_[0] |= 0x02000000u;
}
inline void CSOTFLadderPlayerStats::clear_has_support_bronze() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void CSOTFLadderPlayerStats::clear_support_bronze() {
  support_bronze_ = 0u;
  clear_has_support_bronze();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::support_bronze() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.support_bronze)
  return support_bronze_;
}
inline void CSOTFLadderPlayerStats::set_support_bronze(::google::protobuf::uint32 value) {
  set_has_support_bronze();
  support_bronze_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.support_bronze)
}

// optional uint32 support_silver = 29;
inline bool CSOTFLadderPlayerStats::has_support_silver() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_support_silver() {
  _has_bits_[0] |= 0x04000000u;
}
inline void CSOTFLadderPlayerStats::clear_has_support_silver() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void CSOTFLadderPlayerStats::clear_support_silver() {
  support_silver_ = 0u;
  clear_has_support_silver();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::support_silver() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.support_silver)
  return support_silver_;
}
inline void CSOTFLadderPlayerStats::set_support_silver(::google::protobuf::uint32 value) {
  set_has_support_silver();
  support_silver_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.support_silver)
}

// optional uint32 support_gold = 30;
inline bool CSOTFLadderPlayerStats::has_support_gold() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void CSOTFLadderPlayerStats::set_has_support_gold() {
  _has_bits_[0] |= 0x08000000u;
}
inline void CSOTFLadderPlayerStats::clear_has_support_gold() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void CSOTFLadderPlayerStats::clear_support_gold() {
  support_gold_ = 0u;
  clear_has_support_gold();
}
inline ::google::protobuf::uint32 CSOTFLadderPlayerStats::support_gold() const {
  // @@protoc_insertion_point(field_get:CSOTFLadderPlayerStats.support_gold)
  return support_gold_;
}
inline void CSOTFLadderPlayerStats::set_support_gold(::google::protobuf::uint32 value) {
  set_has_support_gold();
  support_gold_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLadderPlayerStats.support_gold)
}

// -------------------------------------------------------------------

// CSOTFRatingData

// optional uint32 account_id = 1 [(.key_field) = true];
inline bool CSOTFRatingData::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOTFRatingData::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOTFRatingData::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOTFRatingData::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CSOTFRatingData::account_id() const {
  // @@protoc_insertion_point(field_get:CSOTFRatingData.account_id)
  return account_id_;
}
inline void CSOTFRatingData::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFRatingData.account_id)
}

// optional int32 rating_type = 2 [(.key_field) = true];
inline bool CSOTFRatingData::has_rating_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOTFRatingData::set_has_rating_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOTFRatingData::clear_has_rating_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOTFRatingData::clear_rating_type() {
  rating_type_ = 0;
  clear_has_rating_type();
}
inline ::google::protobuf::int32 CSOTFRatingData::rating_type() const {
  // @@protoc_insertion_point(field_get:CSOTFRatingData.rating_type)
  return rating_type_;
}
inline void CSOTFRatingData::set_rating_type(::google::protobuf::int32 value) {
  set_has_rating_type();
  rating_type_ = value;
  // @@protoc_insertion_point(field_set:CSOTFRatingData.rating_type)
}

// optional uint32 rating_primary = 3;
inline bool CSOTFRatingData::has_rating_primary() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSOTFRatingData::set_has_rating_primary() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSOTFRatingData::clear_has_rating_primary() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSOTFRatingData::clear_rating_primary() {
  rating_primary_ = 0u;
  clear_has_rating_primary();
}
inline ::google::protobuf::uint32 CSOTFRatingData::rating_primary() const {
  // @@protoc_insertion_point(field_get:CSOTFRatingData.rating_primary)
  return rating_primary_;
}
inline void CSOTFRatingData::set_rating_primary(::google::protobuf::uint32 value) {
  set_has_rating_primary();
  rating_primary_ = value;
  // @@protoc_insertion_point(field_set:CSOTFRatingData.rating_primary)
}

// optional uint32 rating_secondary = 4;
inline bool CSOTFRatingData::has_rating_secondary() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSOTFRatingData::set_has_rating_secondary() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSOTFRatingData::clear_has_rating_secondary() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSOTFRatingData::clear_rating_secondary() {
  rating_secondary_ = 0u;
  clear_has_rating_secondary();
}
inline ::google::protobuf::uint32 CSOTFRatingData::rating_secondary() const {
  // @@protoc_insertion_point(field_get:CSOTFRatingData.rating_secondary)
  return rating_secondary_;
}
inline void CSOTFRatingData::set_rating_secondary(::google::protobuf::uint32 value) {
  set_has_rating_secondary();
  rating_secondary_ = value;
  // @@protoc_insertion_point(field_set:CSOTFRatingData.rating_secondary)
}

// optional uint32 rating_tertiary = 5;
inline bool CSOTFRatingData::has_rating_tertiary() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSOTFRatingData::set_has_rating_tertiary() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSOTFRatingData::clear_has_rating_tertiary() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSOTFRatingData::clear_rating_tertiary() {
  rating_tertiary_ = 0u;
  clear_has_rating_tertiary();
}
inline ::google::protobuf::uint32 CSOTFRatingData::rating_tertiary() const {
  // @@protoc_insertion_point(field_get:CSOTFRatingData.rating_tertiary)
  return rating_tertiary_;
}
inline void CSOTFRatingData::set_rating_tertiary(::google::protobuf::uint32 value) {
  set_has_rating_tertiary();
  rating_tertiary_ = value;
  // @@protoc_insertion_point(field_set:CSOTFRatingData.rating_tertiary)
}

// -------------------------------------------------------------------

// CMsgGC_TFVoteKickPlayerRequest

// optional uint32 account_id = 1;
inline bool CMsgGC_TFVoteKickPlayerRequest::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_TFVoteKickPlayerRequest::set_has_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_TFVoteKickPlayerRequest::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_TFVoteKickPlayerRequest::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgGC_TFVoteKickPlayerRequest::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_TFVoteKickPlayerRequest.account_id)
  return account_id_;
}
inline void CMsgGC_TFVoteKickPlayerRequest::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_TFVoteKickPlayerRequest.account_id)
}

// optional uint64 target_id = 2;
inline bool CMsgGC_TFVoteKickPlayerRequest::has_target_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_TFVoteKickPlayerRequest::set_has_target_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_TFVoteKickPlayerRequest::clear_has_target_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_TFVoteKickPlayerRequest::clear_target_id() {
  target_id_ = GOOGLE_ULONGLONG(0);
  clear_has_target_id();
}
inline ::google::protobuf::uint64 CMsgGC_TFVoteKickPlayerRequest::target_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_TFVoteKickPlayerRequest.target_id)
  return target_id_;
}
inline void CMsgGC_TFVoteKickPlayerRequest::set_target_id(::google::protobuf::uint64 value) {
  set_has_target_id();
  target_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_TFVoteKickPlayerRequest.target_id)
}

// -------------------------------------------------------------------

// CMsgGC_VoteKickPlayerRequestResponse

// optional bool allowed = 1;
inline bool CMsgGC_VoteKickPlayerRequestResponse::has_allowed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_VoteKickPlayerRequestResponse::set_has_allowed() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_VoteKickPlayerRequestResponse::clear_has_allowed() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_VoteKickPlayerRequestResponse::clear_allowed() {
  allowed_ = false;
  clear_has_allowed();
}
inline bool CMsgGC_VoteKickPlayerRequestResponse::allowed() const {
  // @@protoc_insertion_point(field_get:CMsgGC_VoteKickPlayerRequestResponse.allowed)
  return allowed_;
}
inline void CMsgGC_VoteKickPlayerRequestResponse::set_allowed(bool value) {
  set_has_allowed();
  allowed_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_VoteKickPlayerRequestResponse.allowed)
}

// -------------------------------------------------------------------

// CMsgGC_DailyCompetitiveStatsRollup

// -------------------------------------------------------------------

// CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry

// optional uint32 rank = 1;
inline bool CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::has_rank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_has_rank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_has_rank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::rank() const {
  // @@protoc_insertion_point(field_get:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.rank)
  return rank_;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.rank)
}

// optional uint32 records = 2;
inline bool CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::has_records() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_has_records() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_has_records() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_records() {
  records_ = 0u;
  clear_has_records();
}
inline ::google::protobuf::uint32 CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::records() const {
  // @@protoc_insertion_point(field_get:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.records)
  return records_;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_records(::google::protobuf::uint32 value) {
  set_has_records();
  records_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.records)
}

// optional uint32 avg_score = 3;
inline bool CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::has_avg_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_has_avg_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_has_avg_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_avg_score() {
  avg_score_ = 0u;
  clear_has_avg_score();
}
inline ::google::protobuf::uint32 CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::avg_score() const {
  // @@protoc_insertion_point(field_get:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.avg_score)
  return avg_score_;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_avg_score(::google::protobuf::uint32 value) {
  set_has_avg_score();
  avg_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.avg_score)
}

// optional uint32 stdev_score = 4;
inline bool CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::has_stdev_score() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_has_stdev_score() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_has_stdev_score() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_stdev_score() {
  stdev_score_ = 0u;
  clear_has_stdev_score();
}
inline ::google::protobuf::uint32 CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::stdev_score() const {
  // @@protoc_insertion_point(field_get:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.stdev_score)
  return stdev_score_;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_stdev_score(::google::protobuf::uint32 value) {
  set_has_stdev_score();
  stdev_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.stdev_score)
}

// optional uint32 avg_kills = 5;
inline bool CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::has_avg_kills() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_has_avg_kills() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_has_avg_kills() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_avg_kills() {
  avg_kills_ = 0u;
  clear_has_avg_kills();
}
inline ::google::protobuf::uint32 CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::avg_kills() const {
  // @@protoc_insertion_point(field_get:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.avg_kills)
  return avg_kills_;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_avg_kills(::google::protobuf::uint32 value) {
  set_has_avg_kills();
  avg_kills_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.avg_kills)
}

// optional uint32 stdev_kills = 6;
inline bool CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::has_stdev_kills() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_has_stdev_kills() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_has_stdev_kills() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_stdev_kills() {
  stdev_kills_ = 0u;
  clear_has_stdev_kills();
}
inline ::google::protobuf::uint32 CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::stdev_kills() const {
  // @@protoc_insertion_point(field_get:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.stdev_kills)
  return stdev_kills_;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_stdev_kills(::google::protobuf::uint32 value) {
  set_has_stdev_kills();
  stdev_kills_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.stdev_kills)
}

// optional uint32 avg_damage = 7;
inline bool CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::has_avg_damage() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_has_avg_damage() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_has_avg_damage() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_avg_damage() {
  avg_damage_ = 0u;
  clear_has_avg_damage();
}
inline ::google::protobuf::uint32 CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::avg_damage() const {
  // @@protoc_insertion_point(field_get:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.avg_damage)
  return avg_damage_;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_avg_damage(::google::protobuf::uint32 value) {
  set_has_avg_damage();
  avg_damage_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.avg_damage)
}

// optional uint32 stdev_damage = 8;
inline bool CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::has_stdev_damage() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_has_stdev_damage() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_has_stdev_damage() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_stdev_damage() {
  stdev_damage_ = 0u;
  clear_has_stdev_damage();
}
inline ::google::protobuf::uint32 CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::stdev_damage() const {
  // @@protoc_insertion_point(field_get:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.stdev_damage)
  return stdev_damage_;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_stdev_damage(::google::protobuf::uint32 value) {
  set_has_stdev_damage();
  stdev_damage_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.stdev_damage)
}

// optional uint32 avg_healing = 9;
inline bool CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::has_avg_healing() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_has_avg_healing() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_has_avg_healing() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_avg_healing() {
  avg_healing_ = 0u;
  clear_has_avg_healing();
}
inline ::google::protobuf::uint32 CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::avg_healing() const {
  // @@protoc_insertion_point(field_get:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.avg_healing)
  return avg_healing_;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_avg_healing(::google::protobuf::uint32 value) {
  set_has_avg_healing();
  avg_healing_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.avg_healing)
}

// optional uint32 stdev_healing = 10;
inline bool CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::has_stdev_healing() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_has_stdev_healing() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_has_stdev_healing() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_stdev_healing() {
  stdev_healing_ = 0u;
  clear_has_stdev_healing();
}
inline ::google::protobuf::uint32 CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::stdev_healing() const {
  // @@protoc_insertion_point(field_get:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.stdev_healing)
  return stdev_healing_;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_stdev_healing(::google::protobuf::uint32 value) {
  set_has_stdev_healing();
  stdev_healing_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.stdev_healing)
}

// optional uint32 avg_support = 11;
inline bool CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::has_avg_support() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_has_avg_support() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_has_avg_support() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_avg_support() {
  avg_support_ = 0u;
  clear_has_avg_support();
}
inline ::google::protobuf::uint32 CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::avg_support() const {
  // @@protoc_insertion_point(field_get:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.avg_support)
  return avg_support_;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_avg_support(::google::protobuf::uint32 value) {
  set_has_avg_support();
  avg_support_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.avg_support)
}

// optional uint32 stdev_support = 12;
inline bool CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::has_stdev_support() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_has_stdev_support() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_has_stdev_support() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::clear_stdev_support() {
  stdev_support_ = 0u;
  clear_has_stdev_support();
}
inline ::google::protobuf::uint32 CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::stdev_support() const {
  // @@protoc_insertion_point(field_get:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.stdev_support)
  return stdev_support_;
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry::set_stdev_support(::google::protobuf::uint32 value) {
  set_has_stdev_support();
  stdev_support_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry.stdev_support)
}

// -------------------------------------------------------------------

// CMsgGC_DailyCompetitiveStatsRollup_Response

// repeated .CMsgGC_DailyCompetitiveStatsRollup_Response.RankBucketEntry rankdata = 1;
inline int CMsgGC_DailyCompetitiveStatsRollup_Response::rankdata_size() const {
  return rankdata_.size();
}
inline void CMsgGC_DailyCompetitiveStatsRollup_Response::clear_rankdata() {
  rankdata_.Clear();
}
inline const ::CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry& CMsgGC_DailyCompetitiveStatsRollup_Response::rankdata(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGC_DailyCompetitiveStatsRollup_Response.rankdata)
  return rankdata_.Get(index);
}
inline ::CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry* CMsgGC_DailyCompetitiveStatsRollup_Response::mutable_rankdata(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGC_DailyCompetitiveStatsRollup_Response.rankdata)
  return rankdata_.Mutable(index);
}
inline ::CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry* CMsgGC_DailyCompetitiveStatsRollup_Response::add_rankdata() {
  // @@protoc_insertion_point(field_add:CMsgGC_DailyCompetitiveStatsRollup_Response.rankdata)
  return rankdata_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry >*
CMsgGC_DailyCompetitiveStatsRollup_Response::mutable_rankdata() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGC_DailyCompetitiveStatsRollup_Response.rankdata)
  return &rankdata_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGC_DailyCompetitiveStatsRollup_Response_RankBucketEntry >&
CMsgGC_DailyCompetitiveStatsRollup_Response::rankdata() const {
  // @@protoc_insertion_point(field_list:CMsgGC_DailyCompetitiveStatsRollup_Response.rankdata)
  return rankdata_;
}

// -------------------------------------------------------------------

// CMsgGC_ReportPlayer

// optional uint32 account_id_target = 1;
inline bool CMsgGC_ReportPlayer::has_account_id_target() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_ReportPlayer::set_has_account_id_target() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_ReportPlayer::clear_has_account_id_target() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_ReportPlayer::clear_account_id_target() {
  account_id_target_ = 0u;
  clear_has_account_id_target();
}
inline ::google::protobuf::uint32 CMsgGC_ReportPlayer::account_id_target() const {
  // @@protoc_insertion_point(field_get:CMsgGC_ReportPlayer.account_id_target)
  return account_id_target_;
}
inline void CMsgGC_ReportPlayer::set_account_id_target(::google::protobuf::uint32 value) {
  set_has_account_id_target();
  account_id_target_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_ReportPlayer.account_id_target)
}

// optional .CMsgGC_ReportPlayer.EReason reason = 2 [default = kReason_INVALID];
inline bool CMsgGC_ReportPlayer::has_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_ReportPlayer::set_has_reason() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_ReportPlayer::clear_has_reason() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_ReportPlayer::clear_reason() {
  reason_ = 0;
  clear_has_reason();
}
inline ::CMsgGC_ReportPlayer_EReason CMsgGC_ReportPlayer::reason() const {
  // @@protoc_insertion_point(field_get:CMsgGC_ReportPlayer.reason)
  return static_cast< ::CMsgGC_ReportPlayer_EReason >(reason_);
}
inline void CMsgGC_ReportPlayer::set_reason(::CMsgGC_ReportPlayer_EReason value) {
  assert(::CMsgGC_ReportPlayer_EReason_IsValid(value));
  set_has_reason();
  reason_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_ReportPlayer.reason)
}

// -------------------------------------------------------------------

// CSOTFMatchResultPlayerStats

// optional uint64 match_id = 1 [(.key_field) = true];
inline bool CSOTFMatchResultPlayerStats::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOTFMatchResultPlayerStats::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CSOTFMatchResultPlayerStats::match_id() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.match_id)
  return match_id_;
}
inline void CSOTFMatchResultPlayerStats::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.match_id)
}

// optional uint32 account_id = 2 [(.key_field) = true];
inline bool CSOTFMatchResultPlayerStats::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOTFMatchResultPlayerStats::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::account_id() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.account_id)
  return account_id_;
}
inline void CSOTFMatchResultPlayerStats::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.account_id)
}

// optional int32 match_group = 3 [(.key_field) = true];
inline bool CSOTFMatchResultPlayerStats::has_match_group() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_match_group() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_match_group() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSOTFMatchResultPlayerStats::clear_match_group() {
  match_group_ = 0;
  clear_has_match_group();
}
inline ::google::protobuf::int32 CSOTFMatchResultPlayerStats::match_group() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.match_group)
  return match_group_;
}
inline void CSOTFMatchResultPlayerStats::set_match_group(::google::protobuf::int32 value) {
  set_has_match_group();
  match_group_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.match_group)
}

// optional uint32 endtime = 4;
inline bool CSOTFMatchResultPlayerStats::has_endtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_endtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSOTFMatchResultPlayerStats::clear_endtime() {
  endtime_ = 0u;
  clear_has_endtime();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::endtime() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.endtime)
  return endtime_;
}
inline void CSOTFMatchResultPlayerStats::set_endtime(::google::protobuf::uint32 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.endtime)
}

// optional uint32 season_id = 5;
inline bool CSOTFMatchResultPlayerStats::has_season_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_season_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_season_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSOTFMatchResultPlayerStats::clear_season_id() {
  season_id_ = 0u;
  clear_has_season_id();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::season_id() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.season_id)
  return season_id_;
}
inline void CSOTFMatchResultPlayerStats::set_season_id(::google::protobuf::uint32 value) {
  set_has_season_id();
  season_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.season_id)
}

// optional uint32 status = 6;
inline bool CSOTFMatchResultPlayerStats::has_status() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_status() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_status() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSOTFMatchResultPlayerStats::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::status() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.status)
  return status_;
}
inline void CSOTFMatchResultPlayerStats::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.status)
}

// optional uint32 party_id = 7;
inline bool CSOTFMatchResultPlayerStats::has_party_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_party_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_party_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSOTFMatchResultPlayerStats::clear_party_id() {
  party_id_ = 0u;
  clear_has_party_id();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::party_id() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.party_id)
  return party_id_;
}
inline void CSOTFMatchResultPlayerStats::set_party_id(::google::protobuf::uint32 value) {
  set_has_party_id();
  party_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.party_id)
}

// optional uint32 team = 8;
inline bool CSOTFMatchResultPlayerStats::has_team() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_team() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_team() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSOTFMatchResultPlayerStats::clear_team() {
  team_ = 0u;
  clear_has_team();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::team() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.team)
  return team_;
}
inline void CSOTFMatchResultPlayerStats::set_team(::google::protobuf::uint32 value) {
  set_has_team();
  team_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.team)
}

// optional uint32 score = 9;
inline bool CSOTFMatchResultPlayerStats::has_score() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_score() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_score() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSOTFMatchResultPlayerStats::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::score() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.score)
  return score_;
}
inline void CSOTFMatchResultPlayerStats::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.score)
}

// optional uint32 ping = 10;
inline bool CSOTFMatchResultPlayerStats::has_ping() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_ping() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_ping() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CSOTFMatchResultPlayerStats::clear_ping() {
  ping_ = 0u;
  clear_has_ping();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::ping() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.ping)
  return ping_;
}
inline void CSOTFMatchResultPlayerStats::set_ping(::google::protobuf::uint32 value) {
  set_has_ping();
  ping_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.ping)
}

// optional uint32 flags = 11;
inline bool CSOTFMatchResultPlayerStats::has_flags() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_flags() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_flags() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CSOTFMatchResultPlayerStats::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::flags() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.flags)
  return flags_;
}
inline void CSOTFMatchResultPlayerStats::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.flags)
}

// optional uint32 display_rating = 12;
inline bool CSOTFMatchResultPlayerStats::has_display_rating() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_display_rating() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_display_rating() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CSOTFMatchResultPlayerStats::clear_display_rating() {
  display_rating_ = 0u;
  clear_has_display_rating();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::display_rating() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.display_rating)
  return display_rating_;
}
inline void CSOTFMatchResultPlayerStats::set_display_rating(::google::protobuf::uint32 value) {
  set_has_display_rating();
  display_rating_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.display_rating)
}

// optional int32 display_rating_change = 13;
inline bool CSOTFMatchResultPlayerStats::has_display_rating_change() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_display_rating_change() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_display_rating_change() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CSOTFMatchResultPlayerStats::clear_display_rating_change() {
  display_rating_change_ = 0;
  clear_has_display_rating_change();
}
inline ::google::protobuf::int32 CSOTFMatchResultPlayerStats::display_rating_change() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.display_rating_change)
  return display_rating_change_;
}
inline void CSOTFMatchResultPlayerStats::set_display_rating_change(::google::protobuf::int32 value) {
  set_has_display_rating_change();
  display_rating_change_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.display_rating_change)
}

// optional uint32 rank = 14;
inline bool CSOTFMatchResultPlayerStats::has_rank() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_rank() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_rank() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CSOTFMatchResultPlayerStats::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::rank() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.rank)
  return rank_;
}
inline void CSOTFMatchResultPlayerStats::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.rank)
}

// optional uint32 classes_played = 15;
inline bool CSOTFMatchResultPlayerStats::has_classes_played() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_classes_played() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_classes_played() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CSOTFMatchResultPlayerStats::clear_classes_played() {
  classes_played_ = 0u;
  clear_has_classes_played();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::classes_played() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.classes_played)
  return classes_played_;
}
inline void CSOTFMatchResultPlayerStats::set_classes_played(::google::protobuf::uint32 value) {
  set_has_classes_played();
  classes_played_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.classes_played)
}

// optional uint32 kills = 16;
inline bool CSOTFMatchResultPlayerStats::has_kills() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_kills() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_kills() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CSOTFMatchResultPlayerStats::clear_kills() {
  kills_ = 0u;
  clear_has_kills();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::kills() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.kills)
  return kills_;
}
inline void CSOTFMatchResultPlayerStats::set_kills(::google::protobuf::uint32 value) {
  set_has_kills();
  kills_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.kills)
}

// optional uint32 deaths = 17;
inline bool CSOTFMatchResultPlayerStats::has_deaths() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_deaths() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_deaths() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CSOTFMatchResultPlayerStats::clear_deaths() {
  deaths_ = 0u;
  clear_has_deaths();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::deaths() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.deaths)
  return deaths_;
}
inline void CSOTFMatchResultPlayerStats::set_deaths(::google::protobuf::uint32 value) {
  set_has_deaths();
  deaths_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.deaths)
}

// optional uint32 damage = 18;
inline bool CSOTFMatchResultPlayerStats::has_damage() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_damage() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_damage() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CSOTFMatchResultPlayerStats::clear_damage() {
  damage_ = 0u;
  clear_has_damage();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::damage() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.damage)
  return damage_;
}
inline void CSOTFMatchResultPlayerStats::set_damage(::google::protobuf::uint32 value) {
  set_has_damage();
  damage_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.damage)
}

// optional uint32 healing = 19;
inline bool CSOTFMatchResultPlayerStats::has_healing() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_healing() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_healing() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CSOTFMatchResultPlayerStats::clear_healing() {
  healing_ = 0u;
  clear_has_healing();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::healing() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.healing)
  return healing_;
}
inline void CSOTFMatchResultPlayerStats::set_healing(::google::protobuf::uint32 value) {
  set_has_healing();
  healing_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.healing)
}

// optional uint32 support = 20;
inline bool CSOTFMatchResultPlayerStats::has_support() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_support() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_support() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CSOTFMatchResultPlayerStats::clear_support() {
  support_ = 0u;
  clear_has_support();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::support() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.support)
  return support_;
}
inline void CSOTFMatchResultPlayerStats::set_support(::google::protobuf::uint32 value) {
  set_has_support();
  support_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.support)
}

// optional uint32 score_medal = 21;
inline bool CSOTFMatchResultPlayerStats::has_score_medal() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_score_medal() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_score_medal() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CSOTFMatchResultPlayerStats::clear_score_medal() {
  score_medal_ = 0u;
  clear_has_score_medal();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::score_medal() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.score_medal)
  return score_medal_;
}
inline void CSOTFMatchResultPlayerStats::set_score_medal(::google::protobuf::uint32 value) {
  set_has_score_medal();
  score_medal_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.score_medal)
}

// optional uint32 kills_medal = 22;
inline bool CSOTFMatchResultPlayerStats::has_kills_medal() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_kills_medal() {
  _has_bits_[0] |= 0x00200000u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_kills_medal() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void CSOTFMatchResultPlayerStats::clear_kills_medal() {
  kills_medal_ = 0u;
  clear_has_kills_medal();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::kills_medal() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.kills_medal)
  return kills_medal_;
}
inline void CSOTFMatchResultPlayerStats::set_kills_medal(::google::protobuf::uint32 value) {
  set_has_kills_medal();
  kills_medal_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.kills_medal)
}

// optional uint32 damage_medal = 23;
inline bool CSOTFMatchResultPlayerStats::has_damage_medal() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_damage_medal() {
  _has_bits_[0] |= 0x00400000u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_damage_medal() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void CSOTFMatchResultPlayerStats::clear_damage_medal() {
  damage_medal_ = 0u;
  clear_has_damage_medal();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::damage_medal() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.damage_medal)
  return damage_medal_;
}
inline void CSOTFMatchResultPlayerStats::set_damage_medal(::google::protobuf::uint32 value) {
  set_has_damage_medal();
  damage_medal_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.damage_medal)
}

// optional uint32 healing_medal = 24;
inline bool CSOTFMatchResultPlayerStats::has_healing_medal() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_healing_medal() {
  _has_bits_[0] |= 0x00800000u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_healing_medal() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void CSOTFMatchResultPlayerStats::clear_healing_medal() {
  healing_medal_ = 0u;
  clear_has_healing_medal();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::healing_medal() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.healing_medal)
  return healing_medal_;
}
inline void CSOTFMatchResultPlayerStats::set_healing_medal(::google::protobuf::uint32 value) {
  set_has_healing_medal();
  healing_medal_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.healing_medal)
}

// optional uint32 support_medal = 25;
inline bool CSOTFMatchResultPlayerStats::has_support_medal() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_support_medal() {
  _has_bits_[0] |= 0x01000000u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_support_medal() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void CSOTFMatchResultPlayerStats::clear_support_medal() {
  support_medal_ = 0u;
  clear_has_support_medal();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::support_medal() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.support_medal)
  return support_medal_;
}
inline void CSOTFMatchResultPlayerStats::set_support_medal(::google::protobuf::uint32 value) {
  set_has_support_medal();
  support_medal_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.support_medal)
}

// optional uint32 map_index = 26;
inline bool CSOTFMatchResultPlayerStats::has_map_index() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void CSOTFMatchResultPlayerStats::set_has_map_index() {
  _has_bits_[0] |= 0x02000000u;
}
inline void CSOTFMatchResultPlayerStats::clear_has_map_index() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void CSOTFMatchResultPlayerStats::clear_map_index() {
  map_index_ = 0u;
  clear_has_map_index();
}
inline ::google::protobuf::uint32 CSOTFMatchResultPlayerStats::map_index() const {
  // @@protoc_insertion_point(field_get:CSOTFMatchResultPlayerStats.map_index)
  return map_index_;
}
inline void CSOTFMatchResultPlayerStats::set_map_index(::google::protobuf::uint32 value) {
  set_has_map_index();
  map_index_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMatchResultPlayerStats.map_index)
}

// -------------------------------------------------------------------

// CMsgGCRequestMatchMakerStats

// -------------------------------------------------------------------

// CMsgGCDataCenterPopulation

// optional string name = 1;
inline bool CMsgGCDataCenterPopulation::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCDataCenterPopulation::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCDataCenterPopulation::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCDataCenterPopulation::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CMsgGCDataCenterPopulation::name() const {
  // @@protoc_insertion_point(field_get:CMsgGCDataCenterPopulation.name)
  return name_.GetNoArena();
}
inline void CMsgGCDataCenterPopulation::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgGCDataCenterPopulation.name)
}
#if LANG_CXX11
inline void CMsgGCDataCenterPopulation::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgGCDataCenterPopulation.name)
}
#endif
inline void CMsgGCDataCenterPopulation::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgGCDataCenterPopulation.name)
}
inline void CMsgGCDataCenterPopulation::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgGCDataCenterPopulation.name)
}
inline ::std::string* CMsgGCDataCenterPopulation::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:CMsgGCDataCenterPopulation.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCDataCenterPopulation::release_name() {
  // @@protoc_insertion_point(field_release:CMsgGCDataCenterPopulation.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCDataCenterPopulation::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CMsgGCDataCenterPopulation.name)
}

// optional float health_ratio = 2;
inline bool CMsgGCDataCenterPopulation::has_health_ratio() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCDataCenterPopulation::set_has_health_ratio() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCDataCenterPopulation::clear_has_health_ratio() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCDataCenterPopulation::clear_health_ratio() {
  health_ratio_ = 0;
  clear_has_health_ratio();
}
inline float CMsgGCDataCenterPopulation::health_ratio() const {
  // @@protoc_insertion_point(field_get:CMsgGCDataCenterPopulation.health_ratio)
  return health_ratio_;
}
inline void CMsgGCDataCenterPopulation::set_health_ratio(float value) {
  set_has_health_ratio();
  health_ratio_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCDataCenterPopulation.health_ratio)
}

// -------------------------------------------------------------------

// CMsgGCMatchGroupDataCenterPopulation

// repeated .CMsgGCDataCenterPopulation data_center_population = 1;
inline int CMsgGCMatchGroupDataCenterPopulation::data_center_population_size() const {
  return data_center_population_.size();
}
inline void CMsgGCMatchGroupDataCenterPopulation::clear_data_center_population() {
  data_center_population_.Clear();
}
inline const ::CMsgGCDataCenterPopulation& CMsgGCMatchGroupDataCenterPopulation::data_center_population(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCMatchGroupDataCenterPopulation.data_center_population)
  return data_center_population_.Get(index);
}
inline ::CMsgGCDataCenterPopulation* CMsgGCMatchGroupDataCenterPopulation::mutable_data_center_population(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCMatchGroupDataCenterPopulation.data_center_population)
  return data_center_population_.Mutable(index);
}
inline ::CMsgGCDataCenterPopulation* CMsgGCMatchGroupDataCenterPopulation::add_data_center_population() {
  // @@protoc_insertion_point(field_add:CMsgGCMatchGroupDataCenterPopulation.data_center_population)
  return data_center_population_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGCDataCenterPopulation >*
CMsgGCMatchGroupDataCenterPopulation::mutable_data_center_population() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCMatchGroupDataCenterPopulation.data_center_population)
  return &data_center_population_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCDataCenterPopulation >&
CMsgGCMatchGroupDataCenterPopulation::data_center_population() const {
  // @@protoc_insertion_point(field_list:CMsgGCMatchGroupDataCenterPopulation.data_center_population)
  return data_center_population_;
}

// -------------------------------------------------------------------

// CMsgGCMatchMakerStatsResponse

// repeated uint32 map_count = 1;
inline int CMsgGCMatchMakerStatsResponse::map_count_size() const {
  return map_count_.size();
}
inline void CMsgGCMatchMakerStatsResponse::clear_map_count() {
  map_count_.Clear();
}
inline ::google::protobuf::uint32 CMsgGCMatchMakerStatsResponse::map_count(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCMatchMakerStatsResponse.map_count)
  return map_count_.Get(index);
}
inline void CMsgGCMatchMakerStatsResponse::set_map_count(int index, ::google::protobuf::uint32 value) {
  map_count_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCMatchMakerStatsResponse.map_count)
}
inline void CMsgGCMatchMakerStatsResponse::add_map_count(::google::protobuf::uint32 value) {
  map_count_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgGCMatchMakerStatsResponse.map_count)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGCMatchMakerStatsResponse::map_count() const {
  // @@protoc_insertion_point(field_list:CMsgGCMatchMakerStatsResponse.map_count)
  return map_count_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGCMatchMakerStatsResponse::mutable_map_count() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCMatchMakerStatsResponse.map_count)
  return &map_count_;
}

// repeated .CMsgGCMatchGroupDataCenterPopulation matchgroup_data_center_population = 2;
inline int CMsgGCMatchMakerStatsResponse::matchgroup_data_center_population_size() const {
  return matchgroup_data_center_population_.size();
}
inline void CMsgGCMatchMakerStatsResponse::clear_matchgroup_data_center_population() {
  matchgroup_data_center_population_.Clear();
}
inline const ::CMsgGCMatchGroupDataCenterPopulation& CMsgGCMatchMakerStatsResponse::matchgroup_data_center_population(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCMatchMakerStatsResponse.matchgroup_data_center_population)
  return matchgroup_data_center_population_.Get(index);
}
inline ::CMsgGCMatchGroupDataCenterPopulation* CMsgGCMatchMakerStatsResponse::mutable_matchgroup_data_center_population(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCMatchMakerStatsResponse.matchgroup_data_center_population)
  return matchgroup_data_center_population_.Mutable(index);
}
inline ::CMsgGCMatchGroupDataCenterPopulation* CMsgGCMatchMakerStatsResponse::add_matchgroup_data_center_population() {
  // @@protoc_insertion_point(field_add:CMsgGCMatchMakerStatsResponse.matchgroup_data_center_population)
  return matchgroup_data_center_population_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGCMatchGroupDataCenterPopulation >*
CMsgGCMatchMakerStatsResponse::mutable_matchgroup_data_center_population() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCMatchMakerStatsResponse.matchgroup_data_center_population)
  return &matchgroup_data_center_population_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCMatchGroupDataCenterPopulation >&
CMsgGCMatchMakerStatsResponse::matchgroup_data_center_population() const {
  // @@protoc_insertion_point(field_list:CMsgGCMatchMakerStatsResponse.matchgroup_data_center_population)
  return matchgroup_data_center_population_;
}

// -------------------------------------------------------------------

// CMsgGCMatchHistoryLoad

// -------------------------------------------------------------------

// CMsgGCDataCenterPing_Update_PingEntry

// optional string name = 1;
inline bool CMsgGCDataCenterPing_Update_PingEntry::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCDataCenterPing_Update_PingEntry::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCDataCenterPing_Update_PingEntry::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCDataCenterPing_Update_PingEntry::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CMsgGCDataCenterPing_Update_PingEntry::name() const {
  // @@protoc_insertion_point(field_get:CMsgGCDataCenterPing_Update.PingEntry.name)
  return name_.GetNoArena();
}
inline void CMsgGCDataCenterPing_Update_PingEntry::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgGCDataCenterPing_Update.PingEntry.name)
}
#if LANG_CXX11
inline void CMsgGCDataCenterPing_Update_PingEntry::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgGCDataCenterPing_Update.PingEntry.name)
}
#endif
inline void CMsgGCDataCenterPing_Update_PingEntry::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgGCDataCenterPing_Update.PingEntry.name)
}
inline void CMsgGCDataCenterPing_Update_PingEntry::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgGCDataCenterPing_Update.PingEntry.name)
}
inline ::std::string* CMsgGCDataCenterPing_Update_PingEntry::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:CMsgGCDataCenterPing_Update.PingEntry.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCDataCenterPing_Update_PingEntry::release_name() {
  // @@protoc_insertion_point(field_release:CMsgGCDataCenterPing_Update.PingEntry.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCDataCenterPing_Update_PingEntry::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CMsgGCDataCenterPing_Update.PingEntry.name)
}

// optional uint32 ping = 2;
inline bool CMsgGCDataCenterPing_Update_PingEntry::has_ping() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCDataCenterPing_Update_PingEntry::set_has_ping() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCDataCenterPing_Update_PingEntry::clear_has_ping() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCDataCenterPing_Update_PingEntry::clear_ping() {
  ping_ = 0u;
  clear_has_ping();
}
inline ::google::protobuf::uint32 CMsgGCDataCenterPing_Update_PingEntry::ping() const {
  // @@protoc_insertion_point(field_get:CMsgGCDataCenterPing_Update.PingEntry.ping)
  return ping_;
}
inline void CMsgGCDataCenterPing_Update_PingEntry::set_ping(::google::protobuf::uint32 value) {
  set_has_ping();
  ping_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCDataCenterPing_Update.PingEntry.ping)
}

// optional .CMsgGCDataCenterPing_Update.Status ping_status = 3 [default = Normal];
inline bool CMsgGCDataCenterPing_Update_PingEntry::has_ping_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCDataCenterPing_Update_PingEntry::set_has_ping_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCDataCenterPing_Update_PingEntry::clear_has_ping_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCDataCenterPing_Update_PingEntry::clear_ping_status() {
  ping_status_ = 1;
  clear_has_ping_status();
}
inline ::CMsgGCDataCenterPing_Update_Status CMsgGCDataCenterPing_Update_PingEntry::ping_status() const {
  // @@protoc_insertion_point(field_get:CMsgGCDataCenterPing_Update.PingEntry.ping_status)
  return static_cast< ::CMsgGCDataCenterPing_Update_Status >(ping_status_);
}
inline void CMsgGCDataCenterPing_Update_PingEntry::set_ping_status(::CMsgGCDataCenterPing_Update_Status value) {
  assert(::CMsgGCDataCenterPing_Update_Status_IsValid(value));
  set_has_ping_status();
  ping_status_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCDataCenterPing_Update.PingEntry.ping_status)
}

// -------------------------------------------------------------------

// CMsgGCDataCenterPing_Update

// repeated .CMsgGCDataCenterPing_Update.PingEntry pingdata = 1;
inline int CMsgGCDataCenterPing_Update::pingdata_size() const {
  return pingdata_.size();
}
inline void CMsgGCDataCenterPing_Update::clear_pingdata() {
  pingdata_.Clear();
}
inline const ::CMsgGCDataCenterPing_Update_PingEntry& CMsgGCDataCenterPing_Update::pingdata(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCDataCenterPing_Update.pingdata)
  return pingdata_.Get(index);
}
inline ::CMsgGCDataCenterPing_Update_PingEntry* CMsgGCDataCenterPing_Update::mutable_pingdata(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCDataCenterPing_Update.pingdata)
  return pingdata_.Mutable(index);
}
inline ::CMsgGCDataCenterPing_Update_PingEntry* CMsgGCDataCenterPing_Update::add_pingdata() {
  // @@protoc_insertion_point(field_add:CMsgGCDataCenterPing_Update.pingdata)
  return pingdata_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGCDataCenterPing_Update_PingEntry >*
CMsgGCDataCenterPing_Update::mutable_pingdata() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCDataCenterPing_Update.pingdata)
  return &pingdata_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCDataCenterPing_Update_PingEntry >&
CMsgGCDataCenterPing_Update::pingdata() const {
  // @@protoc_insertion_point(field_list:CMsgGCDataCenterPing_Update.pingdata)
  return pingdata_;
}

// -------------------------------------------------------------------

// CMsgGC_KickPlayerFromLobby

// optional uint64 targetID = 1;
inline bool CMsgGC_KickPlayerFromLobby::has_targetid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_KickPlayerFromLobby::set_has_targetid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_KickPlayerFromLobby::clear_has_targetid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_KickPlayerFromLobby::clear_targetid() {
  targetid_ = GOOGLE_ULONGLONG(0);
  clear_has_targetid();
}
inline ::google::protobuf::uint64 CMsgGC_KickPlayerFromLobby::targetid() const {
  // @@protoc_insertion_point(field_get:CMsgGC_KickPlayerFromLobby.targetID)
  return targetid_;
}
inline void CMsgGC_KickPlayerFromLobby::set_targetid(::google::protobuf::uint64 value) {
  set_has_targetid();
  targetid_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_KickPlayerFromLobby.targetID)
}

// -------------------------------------------------------------------

// CMsgGCSurveyRequest

// optional .SurveyQuestionType question_type = 1 [default = QUESTION_MATCH_QUALITY];
inline bool CMsgGCSurveyRequest::has_question_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCSurveyRequest::set_has_question_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCSurveyRequest::clear_has_question_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCSurveyRequest::clear_question_type() {
  question_type_ = 0;
  clear_has_question_type();
}
inline ::SurveyQuestionType CMsgGCSurveyRequest::question_type() const {
  // @@protoc_insertion_point(field_get:CMsgGCSurveyRequest.question_type)
  return static_cast< ::SurveyQuestionType >(question_type_);
}
inline void CMsgGCSurveyRequest::set_question_type(::SurveyQuestionType value) {
  assert(::SurveyQuestionType_IsValid(value));
  set_has_question_type();
  question_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCSurveyRequest.question_type)
}

// optional uint64 match_id = 2;
inline bool CMsgGCSurveyRequest::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCSurveyRequest::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCSurveyRequest::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCSurveyRequest::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgGCSurveyRequest::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCSurveyRequest.match_id)
  return match_id_;
}
inline void CMsgGCSurveyRequest::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCSurveyRequest.match_id)
}

// -------------------------------------------------------------------

// CMsgGCSurveyResponse

// optional .SurveyQuestionType question_type = 1 [default = QUESTION_MATCH_QUALITY];
inline bool CMsgGCSurveyResponse::has_question_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCSurveyResponse::set_has_question_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCSurveyResponse::clear_has_question_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCSurveyResponse::clear_question_type() {
  question_type_ = 0;
  clear_has_question_type();
}
inline ::SurveyQuestionType CMsgGCSurveyResponse::question_type() const {
  // @@protoc_insertion_point(field_get:CMsgGCSurveyResponse.question_type)
  return static_cast< ::SurveyQuestionType >(question_type_);
}
inline void CMsgGCSurveyResponse::set_question_type(::SurveyQuestionType value) {
  assert(::SurveyQuestionType_IsValid(value));
  set_has_question_type();
  question_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCSurveyResponse.question_type)
}

// optional uint64 match_id = 2;
inline bool CMsgGCSurveyResponse::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCSurveyResponse::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCSurveyResponse::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCSurveyResponse::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgGCSurveyResponse::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCSurveyResponse.match_id)
  return match_id_;
}
inline void CMsgGCSurveyResponse::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCSurveyResponse.match_id)
}

// optional int32 response = 3;
inline bool CMsgGCSurveyResponse::has_response() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCSurveyResponse::set_has_response() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCSurveyResponse::clear_has_response() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCSurveyResponse::clear_response() {
  response_ = 0;
  clear_has_response();
}
inline ::google::protobuf::int32 CMsgGCSurveyResponse::response() const {
  // @@protoc_insertion_point(field_get:CMsgGCSurveyResponse.response)
  return response_;
}
inline void CMsgGCSurveyResponse::set_response(::google::protobuf::int32 value) {
  set_has_response();
  response_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCSurveyResponse.response)
}

// -------------------------------------------------------------------

// CMsgGCNewMatchForLobbyRequest

// optional uint64 current_match_id = 1;
inline bool CMsgGCNewMatchForLobbyRequest::has_current_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCNewMatchForLobbyRequest::set_has_current_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCNewMatchForLobbyRequest::clear_has_current_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCNewMatchForLobbyRequest::clear_current_match_id() {
  current_match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_current_match_id();
}
inline ::google::protobuf::uint64 CMsgGCNewMatchForLobbyRequest::current_match_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCNewMatchForLobbyRequest.current_match_id)
  return current_match_id_;
}
inline void CMsgGCNewMatchForLobbyRequest::set_current_match_id(::google::protobuf::uint64 value) {
  set_has_current_match_id();
  current_match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCNewMatchForLobbyRequest.current_match_id)
}

// optional uint32 next_map_id = 2;
inline bool CMsgGCNewMatchForLobbyRequest::has_next_map_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCNewMatchForLobbyRequest::set_has_next_map_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCNewMatchForLobbyRequest::clear_has_next_map_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCNewMatchForLobbyRequest::clear_next_map_id() {
  next_map_id_ = 0u;
  clear_has_next_map_id();
}
inline ::google::protobuf::uint32 CMsgGCNewMatchForLobbyRequest::next_map_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCNewMatchForLobbyRequest.next_map_id)
  return next_map_id_;
}
inline void CMsgGCNewMatchForLobbyRequest::set_next_map_id(::google::protobuf::uint32 value) {
  set_has_next_map_id();
  next_map_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCNewMatchForLobbyRequest.next_map_id)
}

// optional uint64 lobby_id = 3;
inline bool CMsgGCNewMatchForLobbyRequest::has_lobby_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCNewMatchForLobbyRequest::set_has_lobby_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCNewMatchForLobbyRequest::clear_has_lobby_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCNewMatchForLobbyRequest::clear_lobby_id() {
  lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_lobby_id();
}
inline ::google::protobuf::uint64 CMsgGCNewMatchForLobbyRequest::lobby_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCNewMatchForLobbyRequest.lobby_id)
  return lobby_id_;
}
inline void CMsgGCNewMatchForLobbyRequest::set_lobby_id(::google::protobuf::uint64 value) {
  set_has_lobby_id();
  lobby_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCNewMatchForLobbyRequest.lobby_id)
}

// -------------------------------------------------------------------

// CMsgGCNewMatchForLobbyResponse

// optional bool success = 1;
inline bool CMsgGCNewMatchForLobbyResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCNewMatchForLobbyResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCNewMatchForLobbyResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCNewMatchForLobbyResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool CMsgGCNewMatchForLobbyResponse::success() const {
  // @@protoc_insertion_point(field_get:CMsgGCNewMatchForLobbyResponse.success)
  return success_;
}
inline void CMsgGCNewMatchForLobbyResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCNewMatchForLobbyResponse.success)
}

// -------------------------------------------------------------------

// CMsgGCChangeMatchPlayerTeamsRequest_Member

// optional uint64 member_id = 1;
inline bool CMsgGCChangeMatchPlayerTeamsRequest_Member::has_member_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCChangeMatchPlayerTeamsRequest_Member::set_has_member_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCChangeMatchPlayerTeamsRequest_Member::clear_has_member_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCChangeMatchPlayerTeamsRequest_Member::clear_member_id() {
  member_id_ = GOOGLE_ULONGLONG(0);
  clear_has_member_id();
}
inline ::google::protobuf::uint64 CMsgGCChangeMatchPlayerTeamsRequest_Member::member_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCChangeMatchPlayerTeamsRequest.Member.member_id)
  return member_id_;
}
inline void CMsgGCChangeMatchPlayerTeamsRequest_Member::set_member_id(::google::protobuf::uint64 value) {
  set_has_member_id();
  member_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCChangeMatchPlayerTeamsRequest.Member.member_id)
}

// optional .TF_GC_TEAM new_team = 2 [default = TF_GC_TEAM_NOTEAM];
inline bool CMsgGCChangeMatchPlayerTeamsRequest_Member::has_new_team() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCChangeMatchPlayerTeamsRequest_Member::set_has_new_team() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCChangeMatchPlayerTeamsRequest_Member::clear_has_new_team() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCChangeMatchPlayerTeamsRequest_Member::clear_new_team() {
  new_team_ = 5;
  clear_has_new_team();
}
inline ::TF_GC_TEAM CMsgGCChangeMatchPlayerTeamsRequest_Member::new_team() const {
  // @@protoc_insertion_point(field_get:CMsgGCChangeMatchPlayerTeamsRequest.Member.new_team)
  return static_cast< ::TF_GC_TEAM >(new_team_);
}
inline void CMsgGCChangeMatchPlayerTeamsRequest_Member::set_new_team(::TF_GC_TEAM value) {
  assert(::TF_GC_TEAM_IsValid(value));
  set_has_new_team();
  new_team_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCChangeMatchPlayerTeamsRequest.Member.new_team)
}

// -------------------------------------------------------------------

// CMsgGCChangeMatchPlayerTeamsRequest

// optional uint64 match_id = 1;
inline bool CMsgGCChangeMatchPlayerTeamsRequest::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCChangeMatchPlayerTeamsRequest::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCChangeMatchPlayerTeamsRequest::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCChangeMatchPlayerTeamsRequest::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgGCChangeMatchPlayerTeamsRequest::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCChangeMatchPlayerTeamsRequest.match_id)
  return match_id_;
}
inline void CMsgGCChangeMatchPlayerTeamsRequest::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCChangeMatchPlayerTeamsRequest.match_id)
}

// optional uint64 lobby_id = 2;
inline bool CMsgGCChangeMatchPlayerTeamsRequest::has_lobby_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCChangeMatchPlayerTeamsRequest::set_has_lobby_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCChangeMatchPlayerTeamsRequest::clear_has_lobby_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCChangeMatchPlayerTeamsRequest::clear_lobby_id() {
  lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_lobby_id();
}
inline ::google::protobuf::uint64 CMsgGCChangeMatchPlayerTeamsRequest::lobby_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCChangeMatchPlayerTeamsRequest.lobby_id)
  return lobby_id_;
}
inline void CMsgGCChangeMatchPlayerTeamsRequest::set_lobby_id(::google::protobuf::uint64 value) {
  set_has_lobby_id();
  lobby_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCChangeMatchPlayerTeamsRequest.lobby_id)
}

// repeated .CMsgGCChangeMatchPlayerTeamsRequest.Member member = 3;
inline int CMsgGCChangeMatchPlayerTeamsRequest::member_size() const {
  return member_.size();
}
inline void CMsgGCChangeMatchPlayerTeamsRequest::clear_member() {
  member_.Clear();
}
inline const ::CMsgGCChangeMatchPlayerTeamsRequest_Member& CMsgGCChangeMatchPlayerTeamsRequest::member(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCChangeMatchPlayerTeamsRequest.member)
  return member_.Get(index);
}
inline ::CMsgGCChangeMatchPlayerTeamsRequest_Member* CMsgGCChangeMatchPlayerTeamsRequest::mutable_member(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCChangeMatchPlayerTeamsRequest.member)
  return member_.Mutable(index);
}
inline ::CMsgGCChangeMatchPlayerTeamsRequest_Member* CMsgGCChangeMatchPlayerTeamsRequest::add_member() {
  // @@protoc_insertion_point(field_add:CMsgGCChangeMatchPlayerTeamsRequest.member)
  return member_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGCChangeMatchPlayerTeamsRequest_Member >*
CMsgGCChangeMatchPlayerTeamsRequest::mutable_member() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCChangeMatchPlayerTeamsRequest.member)
  return &member_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCChangeMatchPlayerTeamsRequest_Member >&
CMsgGCChangeMatchPlayerTeamsRequest::member() const {
  // @@protoc_insertion_point(field_list:CMsgGCChangeMatchPlayerTeamsRequest.member)
  return member_;
}

// -------------------------------------------------------------------

// CMsgGCChangeMatchPlayerTeamsResponse

// optional bool success = 1;
inline bool CMsgGCChangeMatchPlayerTeamsResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCChangeMatchPlayerTeamsResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCChangeMatchPlayerTeamsResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCChangeMatchPlayerTeamsResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool CMsgGCChangeMatchPlayerTeamsResponse::success() const {
  // @@protoc_insertion_point(field_get:CMsgGCChangeMatchPlayerTeamsResponse.success)
  return success_;
}
inline void CMsgGCChangeMatchPlayerTeamsResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCChangeMatchPlayerTeamsResponse.success)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::CMsgGC_GameServer_CreateIdentityResponse_EStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGC_GameServer_CreateIdentityResponse_EStatus>() {
  return ::CMsgGC_GameServer_CreateIdentityResponse_EStatus_descriptor();
}
template <> struct is_proto_enum< ::CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse>() {
  return ::CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse>() {
  return ::CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_descriptor();
}
template <> struct is_proto_enum< ::CSOTFParty_State> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CSOTFParty_State>() {
  return ::CSOTFParty_State_descriptor();
}
template <> struct is_proto_enum< ::CTFLobbyMember_ConnectState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CTFLobbyMember_ConnectState>() {
  return ::CTFLobbyMember_ConnectState_descriptor();
}
template <> struct is_proto_enum< ::CSOTFGameServerLobby_State> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CSOTFGameServerLobby_State>() {
  return ::CSOTFGameServerLobby_State_descriptor();
}
template <> struct is_proto_enum< ::CSOTFGameServerLobby_LobbyType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CSOTFGameServerLobby_LobbyType>() {
  return ::CSOTFGameServerLobby_LobbyType_descriptor();
}
template <> struct is_proto_enum< ::CSOTFGameServerLobby_WarMatch> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CSOTFGameServerLobby_WarMatch>() {
  return ::CSOTFGameServerLobby_WarMatch_descriptor();
}
template <> struct is_proto_enum< ::CMsgGameServerMatchmakingStatus_PlayerConnectState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGameServerMatchmakingStatus_PlayerConnectState>() {
  return ::CMsgGameServerMatchmakingStatus_PlayerConnectState_descriptor();
}
template <> struct is_proto_enum< ::CMsgGameServerMatchmakingStatus_Event> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGameServerMatchmakingStatus_Event>() {
  return ::CMsgGameServerMatchmakingStatus_Event_descriptor();
}
template <> struct is_proto_enum< ::CMsgMvMVictoryInfo_GrantReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgMvMVictoryInfo_GrantReason>() {
  return ::CMsgMvMVictoryInfo_GrantReason_descriptor();
}
template <> struct is_proto_enum< ::CMsgTFXPSource_XPSourceType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgTFXPSource_XPSourceType>() {
  return ::CMsgTFXPSource_XPSourceType_descriptor();
}
template <> struct is_proto_enum< ::CMsgGCNotification_NotificationType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGCNotification_NotificationType>() {
  return ::CMsgGCNotification_NotificationType_descriptor();
}
template <> struct is_proto_enum< ::CMsgGC_Match_Result_Status> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGC_Match_Result_Status>() {
  return ::CMsgGC_Match_Result_Status_descriptor();
}
template <> struct is_proto_enum< ::CMsgGC_ReportPlayer_EReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGC_ReportPlayer_EReason>() {
  return ::CMsgGC_ReportPlayer_EReason_descriptor();
}
template <> struct is_proto_enum< ::CMsgGCDataCenterPing_Update_Status> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGCDataCenterPing_Update_Status>() {
  return ::CMsgGCDataCenterPing_Update_Status_descriptor();
}
template <> struct is_proto_enum< ::ETFGCMsg> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ETFGCMsg>() {
  return ::ETFGCMsg_descriptor();
}
template <> struct is_proto_enum< ::EServerModificationItemType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EServerModificationItemType>() {
  return ::EServerModificationItemType_descriptor();
}
template <> struct is_proto_enum< ::TF_MatchmakingMode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TF_MatchmakingMode>() {
  return ::TF_MatchmakingMode_descriptor();
}
template <> struct is_proto_enum< ::TF_Matchmaking_WizardStep> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TF_Matchmaking_WizardStep>() {
  return ::TF_Matchmaking_WizardStep_descriptor();
}
template <> struct is_proto_enum< ::TF_GC_GameState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TF_GC_GameState>() {
  return ::TF_GC_GameState_descriptor();
}
template <> struct is_proto_enum< ::TF_GC_TEAM> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TF_GC_TEAM>() {
  return ::TF_GC_TEAM_descriptor();
}
template <> struct is_proto_enum< ::TFMatchLeaveReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TFMatchLeaveReason>() {
  return ::TFMatchLeaveReason_descriptor();
}
template <> struct is_proto_enum< ::TFLobbyReadyState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TFLobbyReadyState>() {
  return ::TFLobbyReadyState_descriptor();
}
template <> struct is_proto_enum< ::ChatChannelType_t> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ChatChannelType_t>() {
  return ::ChatChannelType_t_descriptor();
}
template <> struct is_proto_enum< ::ServerMatchmakingState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ServerMatchmakingState>() {
  return ::ServerMatchmakingState_descriptor();
}
template <> struct is_proto_enum< ::SurveyQuestionType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SurveyQuestionType>() {
  return ::SurveyQuestionType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_tf_5fgcmessages_2eproto__INCLUDED
