// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tf_gcmessages.proto

#ifndef PROTOBUF_tf_5fgcmessages_2eproto__INCLUDED
#define PROTOBUF_tf_5fgcmessages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "steammessages.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

class CMsgTFGoldenWrenchBroadcast;
class CMsgTFSaxxyBroadcast;
class CMsgGCTFSpecificItemBroadcast;
class CSOTFDuelSummary;
class CSOTFMapContribution;
class CMsgTFVoteKickBanPlayer;
class CMsgTFVoteKickBanPlayerResult;
class CMsgTFFreeTrialChooseMostHelpfulFriend;
class CMsgTFRequestTF2Friends;
class CMsgTFRequestTF2FriendsResponse;
class CSOTFPlayerInfo;
class CMsgTFThankedBySomeone;
class CMsgTFThankedSomeone;
class CMsgTFFreeTrialConvertedToPremium;
class CMsgSaxxyAwarded;
class CMsgReplaySubmitContestEntry;
class CMsgReplaySubmitContestEntryResponse;
class CReplayCachedContestData;
class CMsgTFCoaching_AddToCoaches;
class CMsgTFCoaching_RemoveFromCoaches;
class CMsgTFCoaching_FindCoach;
class CMsgTFCoaching_FindCoachResponse;
class CMsgTFCoaching_AskCoach;
class CMsgTFCoaching_AskCoachResponse;
class CMsgTFCoaching_CoachJoinGame;
class CMsgTFCoaching_CoachJoining;
class CMsgTFCoaching_CoachJoined;
class CMsgTFCoaching_LikeCurrentCoach;
class CMsgTFCoaching_RemoveCurrentCoach;
class CMsgTFQuickplay_ScoreServers;
class CMsgTFQuickplay_ScoreServers_ServerInfo;
class CMsgTFQuickplay_ScoreServersResponse;
class CMsgTFQuickplay_ScoreServersResponse_ServerInfo;
class CMsgTFQuickplay_PlayerJoining;
class CMsgGC_GameServer_LevelInfo;
class CMsgGC_GameServer_AuthChallenge;
class CMsgGC_GameServer_AuthResult;
class CMsgGC_GameServer_AuthChallengeResponse;
class CMsgGC_GameServer_CreateIdentity;
class CMsgGC_GameServer_CreateIdentityResponse;
class CMsgGC_GameServer_List;
class CMsgGC_GameServer_ListResponse;
class CMsgGC_GameServer_ListResponse_GameServerIdentity;
class CMsgGC_GameServer_ResetIdentity;
class CMsgGC_GameServer_ResetIdentityResponse;
class CMsgGC_GameServer_AckPolicy;
class CMsgGC_GameServer_AckPolicyResponse;
class CMsgGC_Client_UseServerModificationItem;
class CMsgGC_Client_UseServerModificationItem_Response;
class CMsgGC_GameServer_UseServerModificationItem;
class CMsgGC_GameServer_UseServerModificationItem_Response;
class CMsgGC_GameServer_ServerModificationItemExpired;
class CMsgGC_GameServer_ServerModificationItem;
class CMsgGC_Halloween_ReservedItem;
class CMsgGC_Halloween_GrantItem;
class CMsgGC_Halloween_GrantItemResponse;
class CMsgGC_Halloween_ItemClaimed;
class CMsgGC_PickupItemEligibility_Query;
class CMsgGC_PickupItemEligibility_QueryResponse;
class CSOTFPartyMember;
class CMsgMatchSearchCriteria;
class CMsgCreateOrUpdateParty;
class CMsgCreateOrUpdatePartyReply;
class CSOTFParty;
class CSOTFPartyInvite;
class CSOTFPartyInvite_PartyMember;
class CTFLobbyMember;
class CLobbyPendingPlayerReport;
class CMsgGameMatchSignOut;
class CSOTFLobby;
class CMsgExitMatchmaking;
class CMsgAcceptInvite;
class CMsgAcceptInviteResponse;
class CMsgReadyUp;
class CMsgMatchmakingSearchCountRequest;
class CMsgMatchmakingSearchCountResponse;
class CMsgKickedFromMatchmakingQueue;
class CMsgTFPlayerFailedToConnect;
class CMsgTFJoinChatChannel;
class CMsgTFLeaveChatChannel;
class CMsgTFJoinChatChannelResponse;
class CMsgTFJoinChatChannelResponse_ChatMember;
class CMsgTFOtherJoinedChatChannel;
class CMsgTFOtherLeftChatChannel;
class CMsgTFRequestDefaultChatChannel;
class CMsgTFRequestDefaultChatChannelResponse;
class CMsgTFRequestChatChannelList;
class CMsgTFRequestChatChannelListResponse;
class CMsgTFRequestChatChannelListResponse_ChatChannel;
class CMsgGameServerMatchmakingStatus;
class CMsgGameServerMatchmakingStatus_Player;
class CMsgMatchmakingProgress;
class CMsgMvMVictoryInfo;
class CMsgMvMVictoryInfo_Item;
class CMsgMvMVictoryInfo_Player;
class CGCMsgTFHelloResponse;
class CGCMsgTFSync;
class CGCMsgTFSyncEx;
class CMsgMvMVictory;
class CMsgMvMVictory_Player;
class CMsgMvMMannUpVictoryReply;
class CMsgGameServerKickingLobby;
class CMsgLeaveGameAndPrepareToJoinParty;
class CMsgRemovePlayerFromLobby;
class CMsgSetLobbySafeToLeave;
class CMsgHalloween_ServerBossEvent;
class CMsgHalloween_Merasmus2012;
class CMsgUpdateHalloweenMerasmusLootLevel;
class CMsgUpdateHalloweenMerasmusLootLevel_Player;
class CAttribute_String;
class CAttribute_DynamicRecipeComponent;
class CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT;
class CAttribute_ItemSlotCriteria;
class CMsgSetItemSlotAttribute;
class CGCMsgTFPlayerSkillRatingAdjustment;
class CGCMsgTFPlayerSkillRatingAdjustment_Player;
class CSOTFSpyVsEngyWarData;
class CGCMsgGC_SpyVsEngyWar_IndividualUpdate;
class CGCMsgGC_SpyVsEngyWar_JoinWar;
class CGCMsgGC_SpyVsEngyWar_SetKillCamMessage;
class CGCMsgGC_SpyVsEngyWar_RequestGlobalStats;
class CGCMsgGC_SpyVsEngyWar_GlobalStatsResponse;
class CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate;

enum CMsgGC_GameServer_CreateIdentityResponse_EStatus {
  CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_GenericFailure = 0,
  CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_TooMany = -1,
  CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_NoPrivs = -2,
  CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_Created = 1
};
bool CMsgGC_GameServer_CreateIdentityResponse_EStatus_IsValid(int value);
const CMsgGC_GameServer_CreateIdentityResponse_EStatus CMsgGC_GameServer_CreateIdentityResponse_EStatus_EStatus_MIN = CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_NoPrivs;
const CMsgGC_GameServer_CreateIdentityResponse_EStatus CMsgGC_GameServer_CreateIdentityResponse_EStatus_EStatus_MAX = CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_Created;
const int CMsgGC_GameServer_CreateIdentityResponse_EStatus_EStatus_ARRAYSIZE = CMsgGC_GameServer_CreateIdentityResponse_EStatus_EStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGC_GameServer_CreateIdentityResponse_EStatus_descriptor();
inline const ::std::string& CMsgGC_GameServer_CreateIdentityResponse_EStatus_Name(CMsgGC_GameServer_CreateIdentityResponse_EStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGC_GameServer_CreateIdentityResponse_EStatus_descriptor(), value);
}
inline bool CMsgGC_GameServer_CreateIdentityResponse_EStatus_Parse(
    const ::std::string& name, CMsgGC_GameServer_CreateIdentityResponse_EStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGC_GameServer_CreateIdentityResponse_EStatus>(
    CMsgGC_GameServer_CreateIdentityResponse_EStatus_descriptor(), name, value);
}
enum CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse {
  CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_AlreadyInUse = 1,
  CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_NotOnAuthenticatedServer = 2,
  CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_ServerReject = 3,
  CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_InternalError = 4,
  CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_EventAlreadyActive = 5
};
bool CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_IsValid(int value);
const CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_EServerModificationItemResponse_MIN = CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_AlreadyInUse;
const CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_EServerModificationItemResponse_MAX = CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_EventAlreadyActive;
const int CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_EServerModificationItemResponse_ARRAYSIZE = CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_EServerModificationItemResponse_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_descriptor();
inline const ::std::string& CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_Name(CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_descriptor(), value);
}
inline bool CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_Parse(
    const ::std::string& name, CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse>(
    CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_descriptor(), name, value);
}
enum CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse {
  CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_kServerModificationItemServerResponse_Accepted = 1,
  CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_kServerModificationItemServerResponse_NoVoteCalled = 2,
  CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_kServerModificationItemServerResponse_VoteFailed = 3
};
bool CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_IsValid(int value);
const CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_EServerModificationItemServerResponse_MIN = CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_kServerModificationItemServerResponse_Accepted;
const CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_EServerModificationItemServerResponse_MAX = CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_kServerModificationItemServerResponse_VoteFailed;
const int CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_EServerModificationItemServerResponse_ARRAYSIZE = CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_EServerModificationItemServerResponse_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_descriptor();
inline const ::std::string& CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_Name(CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_descriptor(), value);
}
inline bool CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_Parse(
    const ::std::string& name, CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse>(
    CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_descriptor(), name, value);
}
enum CSOTFParty_State {
  CSOTFParty_State_UI = 0,
  CSOTFParty_State_FINDING_MATCH = 1,
  CSOTFParty_State_IN_MATCH = 2,
  CSOTFParty_State_AWAITING_RESERVATION_CONFIRMATION = 3
};
bool CSOTFParty_State_IsValid(int value);
const CSOTFParty_State CSOTFParty_State_State_MIN = CSOTFParty_State_UI;
const CSOTFParty_State CSOTFParty_State_State_MAX = CSOTFParty_State_AWAITING_RESERVATION_CONFIRMATION;
const int CSOTFParty_State_State_ARRAYSIZE = CSOTFParty_State_State_MAX + 1;

const ::google::protobuf::EnumDescriptor* CSOTFParty_State_descriptor();
inline const ::std::string& CSOTFParty_State_Name(CSOTFParty_State value) {
  return ::google::protobuf::internal::NameOfEnum(
    CSOTFParty_State_descriptor(), value);
}
inline bool CSOTFParty_State_Parse(
    const ::std::string& name, CSOTFParty_State* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CSOTFParty_State>(
    CSOTFParty_State_descriptor(), name, value);
}
enum CTFLobbyMember_ConnectState {
  CTFLobbyMember_ConnectState_INVALID = 0,
  CTFLobbyMember_ConnectState_RESERVATION_PENDING = 1,
  CTFLobbyMember_ConnectState_RESERVED = 2,
  CTFLobbyMember_ConnectState_CONNECTED = 3,
  CTFLobbyMember_ConnectState_DISCONNECTED = 5
};
bool CTFLobbyMember_ConnectState_IsValid(int value);
const CTFLobbyMember_ConnectState CTFLobbyMember_ConnectState_ConnectState_MIN = CTFLobbyMember_ConnectState_INVALID;
const CTFLobbyMember_ConnectState CTFLobbyMember_ConnectState_ConnectState_MAX = CTFLobbyMember_ConnectState_DISCONNECTED;
const int CTFLobbyMember_ConnectState_ConnectState_ARRAYSIZE = CTFLobbyMember_ConnectState_ConnectState_MAX + 1;

const ::google::protobuf::EnumDescriptor* CTFLobbyMember_ConnectState_descriptor();
inline const ::std::string& CTFLobbyMember_ConnectState_Name(CTFLobbyMember_ConnectState value) {
  return ::google::protobuf::internal::NameOfEnum(
    CTFLobbyMember_ConnectState_descriptor(), value);
}
inline bool CTFLobbyMember_ConnectState_Parse(
    const ::std::string& name, CTFLobbyMember_ConnectState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CTFLobbyMember_ConnectState>(
    CTFLobbyMember_ConnectState_descriptor(), name, value);
}
enum CSOTFLobby_State {
  CSOTFLobby_State_SERVERSETUP = 1,
  CSOTFLobby_State_RUN = 2,
  CSOTFLobby_State_POSTGAME = 3,
  CSOTFLobby_State_NOTREADY = 5,
  CSOTFLobby_State_SERVERASSIGN = 6
};
bool CSOTFLobby_State_IsValid(int value);
const CSOTFLobby_State CSOTFLobby_State_State_MIN = CSOTFLobby_State_SERVERSETUP;
const CSOTFLobby_State CSOTFLobby_State_State_MAX = CSOTFLobby_State_SERVERASSIGN;
const int CSOTFLobby_State_State_ARRAYSIZE = CSOTFLobby_State_State_MAX + 1;

const ::google::protobuf::EnumDescriptor* CSOTFLobby_State_descriptor();
inline const ::std::string& CSOTFLobby_State_Name(CSOTFLobby_State value) {
  return ::google::protobuf::internal::NameOfEnum(
    CSOTFLobby_State_descriptor(), value);
}
inline bool CSOTFLobby_State_Parse(
    const ::std::string& name, CSOTFLobby_State* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CSOTFLobby_State>(
    CSOTFLobby_State_descriptor(), name, value);
}
enum CSOTFLobby_LobbyType {
  CSOTFLobby_LobbyType_INVALID = -1,
  CSOTFLobby_LobbyType_MATCH = 0,
  CSOTFLobby_LobbyType_PRACTICE = 1,
  CSOTFLobby_LobbyType_TOURNAMENT = 2,
  CSOTFLobby_LobbyType_TUTORIAL = 3
};
bool CSOTFLobby_LobbyType_IsValid(int value);
const CSOTFLobby_LobbyType CSOTFLobby_LobbyType_LobbyType_MIN = CSOTFLobby_LobbyType_INVALID;
const CSOTFLobby_LobbyType CSOTFLobby_LobbyType_LobbyType_MAX = CSOTFLobby_LobbyType_TUTORIAL;
const int CSOTFLobby_LobbyType_LobbyType_ARRAYSIZE = CSOTFLobby_LobbyType_LobbyType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CSOTFLobby_LobbyType_descriptor();
inline const ::std::string& CSOTFLobby_LobbyType_Name(CSOTFLobby_LobbyType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CSOTFLobby_LobbyType_descriptor(), value);
}
inline bool CSOTFLobby_LobbyType_Parse(
    const ::std::string& name, CSOTFLobby_LobbyType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CSOTFLobby_LobbyType>(
    CSOTFLobby_LobbyType_descriptor(), name, value);
}
enum CMsgGameServerMatchmakingStatus_PlayerConnectState {
  CMsgGameServerMatchmakingStatus_PlayerConnectState_INVALID = 0,
  CMsgGameServerMatchmakingStatus_PlayerConnectState_CONNECTED = 1,
  CMsgGameServerMatchmakingStatus_PlayerConnectState_RESERVED = 2
};
bool CMsgGameServerMatchmakingStatus_PlayerConnectState_IsValid(int value);
const CMsgGameServerMatchmakingStatus_PlayerConnectState CMsgGameServerMatchmakingStatus_PlayerConnectState_PlayerConnectState_MIN = CMsgGameServerMatchmakingStatus_PlayerConnectState_INVALID;
const CMsgGameServerMatchmakingStatus_PlayerConnectState CMsgGameServerMatchmakingStatus_PlayerConnectState_PlayerConnectState_MAX = CMsgGameServerMatchmakingStatus_PlayerConnectState_RESERVED;
const int CMsgGameServerMatchmakingStatus_PlayerConnectState_PlayerConnectState_ARRAYSIZE = CMsgGameServerMatchmakingStatus_PlayerConnectState_PlayerConnectState_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGameServerMatchmakingStatus_PlayerConnectState_descriptor();
inline const ::std::string& CMsgGameServerMatchmakingStatus_PlayerConnectState_Name(CMsgGameServerMatchmakingStatus_PlayerConnectState value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGameServerMatchmakingStatus_PlayerConnectState_descriptor(), value);
}
inline bool CMsgGameServerMatchmakingStatus_PlayerConnectState_Parse(
    const ::std::string& name, CMsgGameServerMatchmakingStatus_PlayerConnectState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGameServerMatchmakingStatus_PlayerConnectState>(
    CMsgGameServerMatchmakingStatus_PlayerConnectState_descriptor(), name, value);
}
enum CMsgGameServerMatchmakingStatus_Event {
  CMsgGameServerMatchmakingStatus_Event_None = 0,
  CMsgGameServerMatchmakingStatus_Event_MvMVictory = 1,
  CMsgGameServerMatchmakingStatus_Event_MvMDefeat = 2,
  CMsgGameServerMatchmakingStatus_Event_AcknowledgePlayers = 3
};
bool CMsgGameServerMatchmakingStatus_Event_IsValid(int value);
const CMsgGameServerMatchmakingStatus_Event CMsgGameServerMatchmakingStatus_Event_Event_MIN = CMsgGameServerMatchmakingStatus_Event_None;
const CMsgGameServerMatchmakingStatus_Event CMsgGameServerMatchmakingStatus_Event_Event_MAX = CMsgGameServerMatchmakingStatus_Event_AcknowledgePlayers;
const int CMsgGameServerMatchmakingStatus_Event_Event_ARRAYSIZE = CMsgGameServerMatchmakingStatus_Event_Event_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGameServerMatchmakingStatus_Event_descriptor();
inline const ::std::string& CMsgGameServerMatchmakingStatus_Event_Name(CMsgGameServerMatchmakingStatus_Event value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGameServerMatchmakingStatus_Event_descriptor(), value);
}
inline bool CMsgGameServerMatchmakingStatus_Event_Parse(
    const ::std::string& name, CMsgGameServerMatchmakingStatus_Event* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGameServerMatchmakingStatus_Event>(
    CMsgGameServerMatchmakingStatus_Event_descriptor(), name, value);
}
enum CMsgMvMVictoryInfo_GrantReason {
  CMsgMvMVictoryInfo_GrantReason_INVALID = 0,
  CMsgMvMVictoryInfo_GrantReason_BADGE_LEVELED = 1,
  CMsgMvMVictoryInfo_GrantReason_SQUAD_SURPLUS = 2,
  CMsgMvMVictoryInfo_GrantReason_MANN_UP = 3,
  CMsgMvMVictoryInfo_GrantReason_HELP_A_NOOB = 4
};
bool CMsgMvMVictoryInfo_GrantReason_IsValid(int value);
const CMsgMvMVictoryInfo_GrantReason CMsgMvMVictoryInfo_GrantReason_GrantReason_MIN = CMsgMvMVictoryInfo_GrantReason_INVALID;
const CMsgMvMVictoryInfo_GrantReason CMsgMvMVictoryInfo_GrantReason_GrantReason_MAX = CMsgMvMVictoryInfo_GrantReason_HELP_A_NOOB;
const int CMsgMvMVictoryInfo_GrantReason_GrantReason_ARRAYSIZE = CMsgMvMVictoryInfo_GrantReason_GrantReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgMvMVictoryInfo_GrantReason_descriptor();
inline const ::std::string& CMsgMvMVictoryInfo_GrantReason_Name(CMsgMvMVictoryInfo_GrantReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgMvMVictoryInfo_GrantReason_descriptor(), value);
}
inline bool CMsgMvMVictoryInfo_GrantReason_Parse(
    const ::std::string& name, CMsgMvMVictoryInfo_GrantReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgMvMVictoryInfo_GrantReason>(
    CMsgMvMVictoryInfo_GrantReason_descriptor(), name, value);
}
enum CMsgRemovePlayerFromLobby_RemoveReason {
  CMsgRemovePlayerFromLobby_RemoveReason_VOTE_KICK = 0,
  CMsgRemovePlayerFromLobby_RemoveReason_IDLE_KICK = 1,
  CMsgRemovePlayerFromLobby_RemoveReason_ADMIN_KICK = 2,
  CMsgRemovePlayerFromLobby_RemoveReason_GAME_OVER = 3
};
bool CMsgRemovePlayerFromLobby_RemoveReason_IsValid(int value);
const CMsgRemovePlayerFromLobby_RemoveReason CMsgRemovePlayerFromLobby_RemoveReason_RemoveReason_MIN = CMsgRemovePlayerFromLobby_RemoveReason_VOTE_KICK;
const CMsgRemovePlayerFromLobby_RemoveReason CMsgRemovePlayerFromLobby_RemoveReason_RemoveReason_MAX = CMsgRemovePlayerFromLobby_RemoveReason_GAME_OVER;
const int CMsgRemovePlayerFromLobby_RemoveReason_RemoveReason_ARRAYSIZE = CMsgRemovePlayerFromLobby_RemoveReason_RemoveReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgRemovePlayerFromLobby_RemoveReason_descriptor();
inline const ::std::string& CMsgRemovePlayerFromLobby_RemoveReason_Name(CMsgRemovePlayerFromLobby_RemoveReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgRemovePlayerFromLobby_RemoveReason_descriptor(), value);
}
inline bool CMsgRemovePlayerFromLobby_RemoveReason_Parse(
    const ::std::string& name, CMsgRemovePlayerFromLobby_RemoveReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgRemovePlayerFromLobby_RemoveReason>(
    CMsgRemovePlayerFromLobby_RemoveReason_descriptor(), name, value);
}
enum CGCMsgTFPlayerSkillRatingAdjustment_MatchType {
  CGCMsgTFPlayerSkillRatingAdjustment_MatchType_PUBLIC = 0,
  CGCMsgTFPlayerSkillRatingAdjustment_MatchType_BETA = 1
};
bool CGCMsgTFPlayerSkillRatingAdjustment_MatchType_IsValid(int value);
const CGCMsgTFPlayerSkillRatingAdjustment_MatchType CGCMsgTFPlayerSkillRatingAdjustment_MatchType_MatchType_MIN = CGCMsgTFPlayerSkillRatingAdjustment_MatchType_PUBLIC;
const CGCMsgTFPlayerSkillRatingAdjustment_MatchType CGCMsgTFPlayerSkillRatingAdjustment_MatchType_MatchType_MAX = CGCMsgTFPlayerSkillRatingAdjustment_MatchType_BETA;
const int CGCMsgTFPlayerSkillRatingAdjustment_MatchType_MatchType_ARRAYSIZE = CGCMsgTFPlayerSkillRatingAdjustment_MatchType_MatchType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CGCMsgTFPlayerSkillRatingAdjustment_MatchType_descriptor();
inline const ::std::string& CGCMsgTFPlayerSkillRatingAdjustment_MatchType_Name(CGCMsgTFPlayerSkillRatingAdjustment_MatchType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CGCMsgTFPlayerSkillRatingAdjustment_MatchType_descriptor(), value);
}
inline bool CGCMsgTFPlayerSkillRatingAdjustment_MatchType_Parse(
    const ::std::string& name, CGCMsgTFPlayerSkillRatingAdjustment_MatchType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CGCMsgTFPlayerSkillRatingAdjustment_MatchType>(
    CGCMsgTFPlayerSkillRatingAdjustment_MatchType_descriptor(), name, value);
}
enum ETFGCMsg {
  k_EMsgGCReportWarKill = 5001,
  k_EMsgGCVoteKickBanPlayer = 5018,
  k_EMsgGCVoteKickBanPlayerResult = 5019,
  k_EMsgGCKickPlayer_DEPRECATED = 5020,
  k_EMsgGCStartedTraining_DEPRECATED = 5021,
  k_EMsgGCFreeTrial_ChooseMostHelpfulFriend = 5022,
  k_EMsgGCRequestTF2Friends = 5023,
  k_EMsgGCRequestTF2FriendsResponse = 5024,
  k_EMsgGCReplay_SubmitContestEntry = 5026,
  k_EMsgGCReplay_SubmitContestEntryResponse = 5027,
  k_EMsgGCSaxxy_Awarded = 5029,
  k_EMsgGCFreeTrial_ThankedBySomeone = 5028,
  k_EMsgGCFreeTrial_ThankedSomeone = 5030,
  k_EMsgGCFreeTrial_ConvertedToPremium = 5031,
  k_EMsgGCMeetThePyroSilliness_BananaCraft_DEPRECATED = 5032,
  k_EMsgGCMVMARG_HighFiveSuccessResponse_DEPRECATED = 5033,
  k_EMsgGCMVMARG_HighFiveOnClient_DEPRECATED = 5034,
  k_EMsgGCCoaching_AddToCoaches = 5200,
  k_EMsgGCCoaching_AddToCoachesResponse = 5201,
  k_EMsgGCCoaching_RemoveFromCoaches = 5202,
  k_EMsgGCCoaching_RemoveFromCoachesResponse = 5203,
  k_EMsgGCCoaching_FindCoach = 5204,
  k_EMsgGCCoaching_FindCoachResponse = 5205,
  k_EMsgGCCoaching_AskCoach = 5206,
  k_EMsgGCCoaching_AskCoachResponse = 5207,
  k_EMsgGCCoaching_CoachJoinGame = 5208,
  k_EMsgGCCoaching_CoachJoining = 5209,
  k_EMsgGCCoaching_CoachJoined = 5210,
  k_EMsgGCCoaching_LikeCurrentCoach = 5211,
  k_EMsgGCCoaching_RemoveCurrentCoach = 5212,
  k_EMsgGCCoaching_AlreadyRatedCoach = 5213,
  k_EMsgGC_Duel_Request = 5500,
  k_EMsgGC_Duel_Response = 5501,
  k_EMsgGC_Duel_Results = 5502,
  k_EMsgGC_Duel_Status = 5503,
  k_EMsgGC_Halloween_ReservedItem_DEPRECATED = 5600,
  k_EMsgGC_Halloween_GrantItem_DEPRECATED = 5601,
  k_EMsgGC_Halloween_GrantItemResponse_DEPRECATED = 5604,
  k_EMsgGC_Halloween_Cheat_QueryResponse_DEPRECATED = 5605,
  k_EMsgGC_Halloween_ItemClaimed_DEPRECATED = 5606,
  k_EMsgGC_Halloween_ReservedItem = 5607,
  k_EMsgGC_Halloween_GrantItem = 5608,
  k_EMsgGC_Halloween_GrantItemResponse = 5609,
  k_EMsgGC_Halloween_Cheat_QueryResponse_DEPRECATED_2 = 5610,
  k_EMsgGC_Halloween_ItemClaimed_DEPRECATED_2 = 5611,
  k_EMsgGC_Halloween_ServerBossEvent = 5612,
  k_EMsgGC_Halloween_Merasmus2012 = 5613,
  k_EMsgGC_Halloween_UpdateMerasmusLootLevel = 5614,
  k_EMsgGC_GameServer_LevelInfo = 5700,
  k_EMsgGC_GameServer_AuthChallenge = 5701,
  k_EMsgGC_GameServer_AuthChallengeResponse = 5702,
  k_EMsgGC_GameServer_CreateIdentity = 5703,
  k_EMsgGC_GameServer_CreateIdentityResponse = 5704,
  k_EMsgGC_GameServer_List = 5705,
  k_EMsgGC_GameServer_ListResponse = 5706,
  k_EMsgGC_GameServer_AuthResult = 5707,
  k_EMsgGC_GameServer_ResetIdentity = 5708,
  k_EMsgGC_GameServer_ResetIdentityResponse = 5709,
  k_EMsgGC_Client_UseServerModificationItem = 5710,
  k_EMsgGC_Client_UseServerModificationItem_Response = 5711,
  k_EMsgGC_GameServer_UseServerModificationItem = 5712,
  k_EMsgGC_GameServer_UseServerModificationItem_Response = 5713,
  k_EMsgGC_GameServer_ServerModificationItemExpired = 5714,
  k_EMsgGC_GameServer_ModificationItemState = 5715,
  k_EMsgGC_GameServer_AckPolicy = 5716,
  k_EMsgGC_GameServer_AckPolicyResponse = 5717,
  k_EMsgGC_QP_ScoreServers = 5800,
  k_EMsgGC_QP_ScoreServersResponse = 5801,
  k_EMsgGC_QP_PlayerJoining = 5802,
  k_EMsgGC_PickupItemEligibility_Query_DEPRECATED = 6000,
  k_EMsgGC_PickupItemEligibility_Query_DEPRECATED_2 = 6001,
  k_EMsgGC_IncrementKillCountAttribute_DEPRECATED = 6100,
  k_EMsgGC_IncrementKillCountResponse_DEPRECATED = 6101,
  k_EMsgGCGameMatchSignOut = 6204,
  k_EMsgGCCreateOrUpdateParty = 6233,
  k_EMsgGCAbandonCurrentGame = 6235,
  k_EMsgForceSOCacheResend = 6237,
  k_EMsgGCRequestChatChannelList = 6260,
  k_EMsgGCRequestChatChannelListResponse = 6261,
  k_EMsgGCReadyUp = 6270,
  k_EMsgGCKickedFromMatchmakingQueue = 6271,
  k_EMsgGCLeaverDetected = 6272,
  k_EMsgGCLeaverDetectedResponse = 6287,
  k_EMsgGCPlayerFailedToConnect = 6288,
  k_EMsgGCExitMatchmaking = 6289,
  k_EMsgGCAcceptInvite = 6291,
  k_EMsgGCAcceptInviteResponse = 6292,
  k_EMsgGCMatchmakingProgress = 6293,
  k_EMsgGCMvMVictoryInfo = 6294,
  k_EMsgGCGameServerMatchmakingStatus = 6295,
  k_EMsgGCCreateOrUpdatePartyReply = 6296,
  k_EMsgGCMvMVictory = 6297,
  k_EMsgGCMvMVictoryReply = 6298,
  k_EMsgGCGameServerKickingLobby = 6299,
  k_EMsgGCLeaveGameAndPrepareToJoinParty = 6300,
  k_EMsgGCRemovePlayerFromLobby = 6301,
  k_EMsgGCSetLobbySafeToLeave = 6302,
  k_EMsgGC_UpdatePeriodicEvent = 6400,
  k_EMsgGC_DuckLeaderboard_IndividualUpdate = 6401,
  k_EMsgGC_ClientVerificationChallenge = 6500,
  k_EMsgGC_ClientVerificationChallengeResponse = 6501,
  k_EMsgGC_ClientVerificationVerboseResponse = 6502,
  k_EMsgGC_ClientSetItemSlotAttribute = 6503,
  k_EMsgGC_PlayerSkillRating_Adjustment = 6504,
  k_EMsgGC_SpyVsEngyWar_IndividualUpdate = 6505,
  k_EMsgGC_SpyVsEngyWar_JoinWar = 6506,
  k_EMsgGC_SpyVsEngyWar_RequestGlobalStats = 6507,
  k_EMsgGC_SpyVsEngyWar_GlobalStatsResponse = 6508,
  k_EMsgGC_SpyVsEngyWar_SetKillCamMessage = 6509,
  k_EMsgGCDev_GrantWarKill = 10001
};
bool ETFGCMsg_IsValid(int value);
const ETFGCMsg ETFGCMsg_MIN = k_EMsgGCReportWarKill;
const ETFGCMsg ETFGCMsg_MAX = k_EMsgGCDev_GrantWarKill;
const int ETFGCMsg_ARRAYSIZE = ETFGCMsg_MAX + 1;

const ::google::protobuf::EnumDescriptor* ETFGCMsg_descriptor();
inline const ::std::string& ETFGCMsg_Name(ETFGCMsg value) {
  return ::google::protobuf::internal::NameOfEnum(
    ETFGCMsg_descriptor(), value);
}
inline bool ETFGCMsg_Parse(
    const ::std::string& name, ETFGCMsg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ETFGCMsg>(
    ETFGCMsg_descriptor(), name, value);
}
enum EServerModificationItemType {
  kGameServerModificationItem_Halloween = 1
};
bool EServerModificationItemType_IsValid(int value);
const EServerModificationItemType EServerModificationItemType_MIN = kGameServerModificationItem_Halloween;
const EServerModificationItemType EServerModificationItemType_MAX = kGameServerModificationItem_Halloween;
const int EServerModificationItemType_ARRAYSIZE = EServerModificationItemType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EServerModificationItemType_descriptor();
inline const ::std::string& EServerModificationItemType_Name(EServerModificationItemType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EServerModificationItemType_descriptor(), value);
}
inline bool EServerModificationItemType_Parse(
    const ::std::string& name, EServerModificationItemType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EServerModificationItemType>(
    EServerModificationItemType_descriptor(), name, value);
}
enum TF_MatchmakingMode {
  TF_Matchmaking_INVALID = 0,
  TF_Matchmaking_QUICKPLAY = 1,
  TF_Matchmaking_TOBOR = 2,
  TF_Matchmaking_LADDER = 3
};
bool TF_MatchmakingMode_IsValid(int value);
const TF_MatchmakingMode TF_MatchmakingMode_MIN = TF_Matchmaking_INVALID;
const TF_MatchmakingMode TF_MatchmakingMode_MAX = TF_Matchmaking_LADDER;
const int TF_MatchmakingMode_ARRAYSIZE = TF_MatchmakingMode_MAX + 1;

const ::google::protobuf::EnumDescriptor* TF_MatchmakingMode_descriptor();
inline const ::std::string& TF_MatchmakingMode_Name(TF_MatchmakingMode value) {
  return ::google::protobuf::internal::NameOfEnum(
    TF_MatchmakingMode_descriptor(), value);
}
inline bool TF_MatchmakingMode_Parse(
    const ::std::string& name, TF_MatchmakingMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TF_MatchmakingMode>(
    TF_MatchmakingMode_descriptor(), name, value);
}
enum TF_Matchmaking_WizardStep {
  TF_Matchmaking_WizardStep_INVALID = 0,
  TF_Matchmaking_WizardStep_TOBOR_PLAY_FOR_BRAGGING_RIGHTS = 1,
  TF_Matchmaking_WizardStep_TOBOR_TOUR_OF_DUTY = 2,
  TF_Matchmaking_WizardStep_TOBOR_CHALLENGE = 3,
  TF_Matchmaking_WizardStep_QUICKPLAY = 4,
  TF_Matchmaking_WizardStep_SEARCHING = 5,
  TF_Matchmaking_WizardStep_LADDER = 6
};
bool TF_Matchmaking_WizardStep_IsValid(int value);
const TF_Matchmaking_WizardStep TF_Matchmaking_WizardStep_MIN = TF_Matchmaking_WizardStep_INVALID;
const TF_Matchmaking_WizardStep TF_Matchmaking_WizardStep_MAX = TF_Matchmaking_WizardStep_LADDER;
const int TF_Matchmaking_WizardStep_ARRAYSIZE = TF_Matchmaking_WizardStep_MAX + 1;

const ::google::protobuf::EnumDescriptor* TF_Matchmaking_WizardStep_descriptor();
inline const ::std::string& TF_Matchmaking_WizardStep_Name(TF_Matchmaking_WizardStep value) {
  return ::google::protobuf::internal::NameOfEnum(
    TF_Matchmaking_WizardStep_descriptor(), value);
}
inline bool TF_Matchmaking_WizardStep_Parse(
    const ::std::string& name, TF_Matchmaking_WizardStep* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TF_Matchmaking_WizardStep>(
    TF_Matchmaking_WizardStep_descriptor(), name, value);
}
enum TF_GC_GameState {
  TF_GC_GAMESTATE_STATE_INIT = 0,
  TF_GC_GAMESTATE_WAIT_FOR_PLAYERS_TO_LOAD = 1,
  TF_GC_GAMESTATE_STRATEGY_TIME = 3,
  TF_GC_GAMESTATE_GAME_IN_PROGRESS = 5,
  TF_GC_GAMESTATE_POST_GAME = 6,
  TF_GC_GAMESTATE_DISCONNECT = 7,
  TF_GC_GAMESTATE_LAST = 8
};
bool TF_GC_GameState_IsValid(int value);
const TF_GC_GameState TF_GC_GameState_MIN = TF_GC_GAMESTATE_STATE_INIT;
const TF_GC_GameState TF_GC_GameState_MAX = TF_GC_GAMESTATE_LAST;
const int TF_GC_GameState_ARRAYSIZE = TF_GC_GameState_MAX + 1;

const ::google::protobuf::EnumDescriptor* TF_GC_GameState_descriptor();
inline const ::std::string& TF_GC_GameState_Name(TF_GC_GameState value) {
  return ::google::protobuf::internal::NameOfEnum(
    TF_GC_GameState_descriptor(), value);
}
inline bool TF_GC_GameState_Parse(
    const ::std::string& name, TF_GC_GameState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TF_GC_GameState>(
    TF_GC_GameState_descriptor(), name, value);
}
enum TF_GC_TEAM {
  TF_GC_TEAM_DEFENDERS = 0,
  TF_GC_TEAM_INVADERS = 1,
  TF_GC_TEAM_BROADCASTER = 2,
  TF_GC_TEAM_SPECTATOR = 3,
  TF_GC_TEAM_PLAYER_POOL = 4,
  TF_GC_TEAM_NOTEAM = 5
};
bool TF_GC_TEAM_IsValid(int value);
const TF_GC_TEAM TF_GC_TEAM_MIN = TF_GC_TEAM_DEFENDERS;
const TF_GC_TEAM TF_GC_TEAM_MAX = TF_GC_TEAM_NOTEAM;
const int TF_GC_TEAM_ARRAYSIZE = TF_GC_TEAM_MAX + 1;

const ::google::protobuf::EnumDescriptor* TF_GC_TEAM_descriptor();
inline const ::std::string& TF_GC_TEAM_Name(TF_GC_TEAM value) {
  return ::google::protobuf::internal::NameOfEnum(
    TF_GC_TEAM_descriptor(), value);
}
inline bool TF_GC_TEAM_Parse(
    const ::std::string& name, TF_GC_TEAM* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TF_GC_TEAM>(
    TF_GC_TEAM_descriptor(), name, value);
}
enum TFLobbyReadyState {
  TFLobbyReadyState_UNDECLARED = 0,
  TFLobbyReadyState_ACCEPTED = 1,
  TFLobbyReadyState_DECLINED = 2
};
bool TFLobbyReadyState_IsValid(int value);
const TFLobbyReadyState TFLobbyReadyState_MIN = TFLobbyReadyState_UNDECLARED;
const TFLobbyReadyState TFLobbyReadyState_MAX = TFLobbyReadyState_DECLINED;
const int TFLobbyReadyState_ARRAYSIZE = TFLobbyReadyState_MAX + 1;

const ::google::protobuf::EnumDescriptor* TFLobbyReadyState_descriptor();
inline const ::std::string& TFLobbyReadyState_Name(TFLobbyReadyState value) {
  return ::google::protobuf::internal::NameOfEnum(
    TFLobbyReadyState_descriptor(), value);
}
inline bool TFLobbyReadyState_Parse(
    const ::std::string& name, TFLobbyReadyState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TFLobbyReadyState>(
    TFLobbyReadyState_descriptor(), name, value);
}
enum ChatChannelType_t {
  ChatChannelType_Regional = 0,
  ChatChannelType_Custom = 1,
  ChatChannelType_Party = 2,
  ChatChannelType_Lobby = 3
};
bool ChatChannelType_t_IsValid(int value);
const ChatChannelType_t ChatChannelType_t_MIN = ChatChannelType_Regional;
const ChatChannelType_t ChatChannelType_t_MAX = ChatChannelType_Lobby;
const int ChatChannelType_t_ARRAYSIZE = ChatChannelType_t_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChatChannelType_t_descriptor();
inline const ::std::string& ChatChannelType_t_Name(ChatChannelType_t value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChatChannelType_t_descriptor(), value);
}
inline bool ChatChannelType_t_Parse(
    const ::std::string& name, ChatChannelType_t* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChatChannelType_t>(
    ChatChannelType_t_descriptor(), name, value);
}
enum ServerMatchmakingState {
  ServerMatchmakingState_INVALID = 0,
  ServerMatchmakingState_NOT_PARTICIPATING = 1,
  ServerMatchmakingState_EMPTY = 2,
  ServerMatchmakingState_ACTIVE_SLOTS_AVAILABLE = 3,
  ServerMatchmakingState_ACTIVE_FULL = 4
};
bool ServerMatchmakingState_IsValid(int value);
const ServerMatchmakingState ServerMatchmakingState_MIN = ServerMatchmakingState_INVALID;
const ServerMatchmakingState ServerMatchmakingState_MAX = ServerMatchmakingState_ACTIVE_FULL;
const int ServerMatchmakingState_ARRAYSIZE = ServerMatchmakingState_MAX + 1;

const ::google::protobuf::EnumDescriptor* ServerMatchmakingState_descriptor();
inline const ::std::string& ServerMatchmakingState_Name(ServerMatchmakingState value) {
  return ::google::protobuf::internal::NameOfEnum(
    ServerMatchmakingState_descriptor(), value);
}
inline bool ServerMatchmakingState_Parse(
    const ::std::string& name, ServerMatchmakingState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ServerMatchmakingState>(
    ServerMatchmakingState_descriptor(), name, value);
}
// ===================================================================

class CMsgTFGoldenWrenchBroadcast : public ::google::protobuf::Message {
 public:
  CMsgTFGoldenWrenchBroadcast();
  virtual ~CMsgTFGoldenWrenchBroadcast();

  CMsgTFGoldenWrenchBroadcast(const CMsgTFGoldenWrenchBroadcast& from);

  inline CMsgTFGoldenWrenchBroadcast& operator=(const CMsgTFGoldenWrenchBroadcast& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFGoldenWrenchBroadcast& default_instance();

  void Swap(CMsgTFGoldenWrenchBroadcast* other);

  // implements Message ----------------------------------------------

  CMsgTFGoldenWrenchBroadcast* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFGoldenWrenchBroadcast& from);
  void MergeFrom(const CMsgTFGoldenWrenchBroadcast& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 wrench_number = 1;
  inline bool has_wrench_number() const;
  inline void clear_wrench_number();
  static const int kWrenchNumberFieldNumber = 1;
  inline ::google::protobuf::int32 wrench_number() const;
  inline void set_wrench_number(::google::protobuf::int32 value);

  // optional bool deleted = 2;
  inline bool has_deleted() const;
  inline void clear_deleted();
  static const int kDeletedFieldNumber = 2;
  inline bool deleted() const;
  inline void set_deleted(bool value);

  // optional string user_name = 3;
  inline bool has_user_name() const;
  inline void clear_user_name();
  static const int kUserNameFieldNumber = 3;
  inline const ::std::string& user_name() const;
  inline void set_user_name(const ::std::string& value);
  inline void set_user_name(const char* value);
  inline void set_user_name(const char* value, size_t size);
  inline ::std::string* mutable_user_name();
  inline ::std::string* release_user_name();
  inline void set_allocated_user_name(::std::string* user_name);

  // @@protoc_insertion_point(class_scope:CMsgTFGoldenWrenchBroadcast)
 private:
  inline void set_has_wrench_number();
  inline void clear_has_wrench_number();
  inline void set_has_deleted();
  inline void clear_has_deleted();
  inline void set_has_user_name();
  inline void clear_has_user_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 wrench_number_;
  bool deleted_;
  ::std::string* user_name_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFGoldenWrenchBroadcast* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFSaxxyBroadcast : public ::google::protobuf::Message {
 public:
  CMsgTFSaxxyBroadcast();
  virtual ~CMsgTFSaxxyBroadcast();

  CMsgTFSaxxyBroadcast(const CMsgTFSaxxyBroadcast& from);

  inline CMsgTFSaxxyBroadcast& operator=(const CMsgTFSaxxyBroadcast& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFSaxxyBroadcast& default_instance();

  void Swap(CMsgTFSaxxyBroadcast* other);

  // implements Message ----------------------------------------------

  CMsgTFSaxxyBroadcast* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFSaxxyBroadcast& from);
  void MergeFrom(const CMsgTFSaxxyBroadcast& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 category_number = 1;
  inline bool has_category_number() const;
  inline void clear_category_number();
  static const int kCategoryNumberFieldNumber = 1;
  inline ::google::protobuf::int32 category_number() const;
  inline void set_category_number(::google::protobuf::int32 value);

  // optional string user_name = 2;
  inline bool has_user_name() const;
  inline void clear_user_name();
  static const int kUserNameFieldNumber = 2;
  inline const ::std::string& user_name() const;
  inline void set_user_name(const ::std::string& value);
  inline void set_user_name(const char* value);
  inline void set_user_name(const char* value, size_t size);
  inline ::std::string* mutable_user_name();
  inline ::std::string* release_user_name();
  inline void set_allocated_user_name(::std::string* user_name);

  // @@protoc_insertion_point(class_scope:CMsgTFSaxxyBroadcast)
 private:
  inline void set_has_category_number();
  inline void clear_has_category_number();
  inline void set_has_user_name();
  inline void clear_has_user_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* user_name_;
  ::google::protobuf::int32 category_number_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFSaxxyBroadcast* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCTFSpecificItemBroadcast : public ::google::protobuf::Message {
 public:
  CMsgGCTFSpecificItemBroadcast();
  virtual ~CMsgGCTFSpecificItemBroadcast();

  CMsgGCTFSpecificItemBroadcast(const CMsgGCTFSpecificItemBroadcast& from);

  inline CMsgGCTFSpecificItemBroadcast& operator=(const CMsgGCTFSpecificItemBroadcast& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCTFSpecificItemBroadcast& default_instance();

  void Swap(CMsgGCTFSpecificItemBroadcast* other);

  // implements Message ----------------------------------------------

  CMsgGCTFSpecificItemBroadcast* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCTFSpecificItemBroadcast& from);
  void MergeFrom(const CMsgGCTFSpecificItemBroadcast& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 item_def_index = 1;
  inline bool has_item_def_index() const;
  inline void clear_item_def_index();
  static const int kItemDefIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 item_def_index() const;
  inline void set_item_def_index(::google::protobuf::uint32 value);

  // optional bool was_destruction = 2;
  inline bool has_was_destruction() const;
  inline void clear_was_destruction();
  static const int kWasDestructionFieldNumber = 2;
  inline bool was_destruction() const;
  inline void set_was_destruction(bool value);

  // optional string user_name = 3;
  inline bool has_user_name() const;
  inline void clear_user_name();
  static const int kUserNameFieldNumber = 3;
  inline const ::std::string& user_name() const;
  inline void set_user_name(const ::std::string& value);
  inline void set_user_name(const char* value);
  inline void set_user_name(const char* value, size_t size);
  inline ::std::string* mutable_user_name();
  inline ::std::string* release_user_name();
  inline void set_allocated_user_name(::std::string* user_name);

  // @@protoc_insertion_point(class_scope:CMsgGCTFSpecificItemBroadcast)
 private:
  inline void set_has_item_def_index();
  inline void clear_has_item_def_index();
  inline void set_has_was_destruction();
  inline void clear_has_was_destruction();
  inline void set_has_user_name();
  inline void clear_has_user_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 item_def_index_;
  bool was_destruction_;
  ::std::string* user_name_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCTFSpecificItemBroadcast* default_instance_;
};
// -------------------------------------------------------------------

class CSOTFDuelSummary : public ::google::protobuf::Message {
 public:
  CSOTFDuelSummary();
  virtual ~CSOTFDuelSummary();

  CSOTFDuelSummary(const CSOTFDuelSummary& from);

  inline CSOTFDuelSummary& operator=(const CSOTFDuelSummary& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFDuelSummary& default_instance();

  void Swap(CSOTFDuelSummary* other);

  // implements Message ----------------------------------------------

  CSOTFDuelSummary* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOTFDuelSummary& from);
  void MergeFrom(const CSOTFDuelSummary& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 duel_wins = 2;
  inline bool has_duel_wins() const;
  inline void clear_duel_wins();
  static const int kDuelWinsFieldNumber = 2;
  inline ::google::protobuf::uint32 duel_wins() const;
  inline void set_duel_wins(::google::protobuf::uint32 value);

  // optional uint32 duel_losses = 3;
  inline bool has_duel_losses() const;
  inline void clear_duel_losses();
  static const int kDuelLossesFieldNumber = 3;
  inline ::google::protobuf::uint32 duel_losses() const;
  inline void set_duel_losses(::google::protobuf::uint32 value);

  // optional uint32 last_duel_account_id = 4;
  inline bool has_last_duel_account_id() const;
  inline void clear_last_duel_account_id();
  static const int kLastDuelAccountIdFieldNumber = 4;
  inline ::google::protobuf::uint32 last_duel_account_id() const;
  inline void set_last_duel_account_id(::google::protobuf::uint32 value);

  // optional uint32 last_duel_timestamp = 5;
  inline bool has_last_duel_timestamp() const;
  inline void clear_last_duel_timestamp();
  static const int kLastDuelTimestampFieldNumber = 5;
  inline ::google::protobuf::uint32 last_duel_timestamp() const;
  inline void set_last_duel_timestamp(::google::protobuf::uint32 value);

  // optional uint32 last_duel_status = 6;
  inline bool has_last_duel_status() const;
  inline void clear_last_duel_status();
  static const int kLastDuelStatusFieldNumber = 6;
  inline ::google::protobuf::uint32 last_duel_status() const;
  inline void set_last_duel_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSOTFDuelSummary)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_duel_wins();
  inline void clear_has_duel_wins();
  inline void set_has_duel_losses();
  inline void clear_has_duel_losses();
  inline void set_has_last_duel_account_id();
  inline void clear_has_last_duel_account_id();
  inline void set_has_last_duel_timestamp();
  inline void clear_has_last_duel_timestamp();
  inline void set_has_last_duel_status();
  inline void clear_has_last_duel_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 duel_wins_;
  ::google::protobuf::uint32 duel_losses_;
  ::google::protobuf::uint32 last_duel_account_id_;
  ::google::protobuf::uint32 last_duel_timestamp_;
  ::google::protobuf::uint32 last_duel_status_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CSOTFDuelSummary* default_instance_;
};
// -------------------------------------------------------------------

class CSOTFMapContribution : public ::google::protobuf::Message {
 public:
  CSOTFMapContribution();
  virtual ~CSOTFMapContribution();

  CSOTFMapContribution(const CSOTFMapContribution& from);

  inline CSOTFMapContribution& operator=(const CSOTFMapContribution& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFMapContribution& default_instance();

  void Swap(CSOTFMapContribution* other);

  // implements Message ----------------------------------------------

  CSOTFMapContribution* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOTFMapContribution& from);
  void MergeFrom(const CSOTFMapContribution& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 def_index = 2;
  inline bool has_def_index() const;
  inline void clear_def_index();
  static const int kDefIndexFieldNumber = 2;
  inline ::google::protobuf::uint32 def_index() const;
  inline void set_def_index(::google::protobuf::uint32 value);

  // optional uint32 contribution_level = 3;
  inline bool has_contribution_level() const;
  inline void clear_contribution_level();
  static const int kContributionLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 contribution_level() const;
  inline void set_contribution_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSOTFMapContribution)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_def_index();
  inline void clear_has_def_index();
  inline void set_has_contribution_level();
  inline void clear_has_contribution_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 def_index_;
  ::google::protobuf::uint32 contribution_level_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CSOTFMapContribution* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFVoteKickBanPlayer : public ::google::protobuf::Message {
 public:
  CMsgTFVoteKickBanPlayer();
  virtual ~CMsgTFVoteKickBanPlayer();

  CMsgTFVoteKickBanPlayer(const CMsgTFVoteKickBanPlayer& from);

  inline CMsgTFVoteKickBanPlayer& operator=(const CMsgTFVoteKickBanPlayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFVoteKickBanPlayer& default_instance();

  void Swap(CMsgTFVoteKickBanPlayer* other);

  // implements Message ----------------------------------------------

  CMsgTFVoteKickBanPlayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFVoteKickBanPlayer& from);
  void MergeFrom(const CMsgTFVoteKickBanPlayer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id_subject = 1;
  inline bool has_account_id_subject() const;
  inline void clear_account_id_subject();
  static const int kAccountIdSubjectFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id_subject() const;
  inline void set_account_id_subject(::google::protobuf::uint32 value);

  // optional uint32 kick_reason = 2;
  inline bool has_kick_reason() const;
  inline void clear_kick_reason();
  static const int kKickReasonFieldNumber = 2;
  inline ::google::protobuf::uint32 kick_reason() const;
  inline void set_kick_reason(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgTFVoteKickBanPlayer)
 private:
  inline void set_has_account_id_subject();
  inline void clear_has_account_id_subject();
  inline void set_has_kick_reason();
  inline void clear_has_kick_reason();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_subject_;
  ::google::protobuf::uint32 kick_reason_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFVoteKickBanPlayer* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFVoteKickBanPlayerResult : public ::google::protobuf::Message {
 public:
  CMsgTFVoteKickBanPlayerResult();
  virtual ~CMsgTFVoteKickBanPlayerResult();

  CMsgTFVoteKickBanPlayerResult(const CMsgTFVoteKickBanPlayerResult& from);

  inline CMsgTFVoteKickBanPlayerResult& operator=(const CMsgTFVoteKickBanPlayerResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFVoteKickBanPlayerResult& default_instance();

  void Swap(CMsgTFVoteKickBanPlayerResult* other);

  // implements Message ----------------------------------------------

  CMsgTFVoteKickBanPlayerResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFVoteKickBanPlayerResult& from);
  void MergeFrom(const CMsgTFVoteKickBanPlayerResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id_initiator = 1;
  inline bool has_account_id_initiator() const;
  inline void clear_account_id_initiator();
  static const int kAccountIdInitiatorFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id_initiator() const;
  inline void set_account_id_initiator(::google::protobuf::uint32 value);

  // optional uint32 account_id_subject = 2;
  inline bool has_account_id_subject() const;
  inline void clear_account_id_subject();
  static const int kAccountIdSubjectFieldNumber = 2;
  inline ::google::protobuf::uint32 account_id_subject() const;
  inline void set_account_id_subject(::google::protobuf::uint32 value);

  // optional uint32 kick_reason = 3;
  inline bool has_kick_reason() const;
  inline void clear_kick_reason();
  static const int kKickReasonFieldNumber = 3;
  inline ::google::protobuf::uint32 kick_reason() const;
  inline void set_kick_reason(::google::protobuf::uint32 value);

  // optional bool kick_successful = 4;
  inline bool has_kick_successful() const;
  inline void clear_kick_successful();
  static const int kKickSuccessfulFieldNumber = 4;
  inline bool kick_successful() const;
  inline void set_kick_successful(bool value);

  // optional uint32 num_yes_votes = 5;
  inline bool has_num_yes_votes() const;
  inline void clear_num_yes_votes();
  static const int kNumYesVotesFieldNumber = 5;
  inline ::google::protobuf::uint32 num_yes_votes() const;
  inline void set_num_yes_votes(::google::protobuf::uint32 value);

  // optional uint32 num_no_votes = 6;
  inline bool has_num_no_votes() const;
  inline void clear_num_no_votes();
  static const int kNumNoVotesFieldNumber = 6;
  inline ::google::protobuf::uint32 num_no_votes() const;
  inline void set_num_no_votes(::google::protobuf::uint32 value);

  // optional uint32 num_possible_votes = 7;
  inline bool has_num_possible_votes() const;
  inline void clear_num_possible_votes();
  static const int kNumPossibleVotesFieldNumber = 7;
  inline ::google::protobuf::uint32 num_possible_votes() const;
  inline void set_num_possible_votes(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgTFVoteKickBanPlayerResult)
 private:
  inline void set_has_account_id_initiator();
  inline void clear_has_account_id_initiator();
  inline void set_has_account_id_subject();
  inline void clear_has_account_id_subject();
  inline void set_has_kick_reason();
  inline void clear_has_kick_reason();
  inline void set_has_kick_successful();
  inline void clear_has_kick_successful();
  inline void set_has_num_yes_votes();
  inline void clear_has_num_yes_votes();
  inline void set_has_num_no_votes();
  inline void clear_has_num_no_votes();
  inline void set_has_num_possible_votes();
  inline void clear_has_num_possible_votes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_initiator_;
  ::google::protobuf::uint32 account_id_subject_;
  ::google::protobuf::uint32 kick_reason_;
  bool kick_successful_;
  ::google::protobuf::uint32 num_yes_votes_;
  ::google::protobuf::uint32 num_no_votes_;
  ::google::protobuf::uint32 num_possible_votes_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFVoteKickBanPlayerResult* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFFreeTrialChooseMostHelpfulFriend : public ::google::protobuf::Message {
 public:
  CMsgTFFreeTrialChooseMostHelpfulFriend();
  virtual ~CMsgTFFreeTrialChooseMostHelpfulFriend();

  CMsgTFFreeTrialChooseMostHelpfulFriend(const CMsgTFFreeTrialChooseMostHelpfulFriend& from);

  inline CMsgTFFreeTrialChooseMostHelpfulFriend& operator=(const CMsgTFFreeTrialChooseMostHelpfulFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFFreeTrialChooseMostHelpfulFriend& default_instance();

  void Swap(CMsgTFFreeTrialChooseMostHelpfulFriend* other);

  // implements Message ----------------------------------------------

  CMsgTFFreeTrialChooseMostHelpfulFriend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFFreeTrialChooseMostHelpfulFriend& from);
  void MergeFrom(const CMsgTFFreeTrialChooseMostHelpfulFriend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id_friend = 1;
  inline bool has_account_id_friend() const;
  inline void clear_account_id_friend();
  static const int kAccountIdFriendFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id_friend() const;
  inline void set_account_id_friend(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgTFFreeTrialChooseMostHelpfulFriend)
 private:
  inline void set_has_account_id_friend();
  inline void clear_has_account_id_friend();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_friend_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFFreeTrialChooseMostHelpfulFriend* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFRequestTF2Friends : public ::google::protobuf::Message {
 public:
  CMsgTFRequestTF2Friends();
  virtual ~CMsgTFRequestTF2Friends();

  CMsgTFRequestTF2Friends(const CMsgTFRequestTF2Friends& from);

  inline CMsgTFRequestTF2Friends& operator=(const CMsgTFRequestTF2Friends& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFRequestTF2Friends& default_instance();

  void Swap(CMsgTFRequestTF2Friends* other);

  // implements Message ----------------------------------------------

  CMsgTFRequestTF2Friends* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFRequestTF2Friends& from);
  void MergeFrom(const CMsgTFRequestTF2Friends& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 account_ids = 1;
  inline int account_ids_size() const;
  inline void clear_account_ids();
  static const int kAccountIdsFieldNumber = 1;
  inline ::google::protobuf::uint32 account_ids(int index) const;
  inline void set_account_ids(int index, ::google::protobuf::uint32 value);
  inline void add_account_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      account_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_account_ids();

  // @@protoc_insertion_point(class_scope:CMsgTFRequestTF2Friends)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > account_ids_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFRequestTF2Friends* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFRequestTF2FriendsResponse : public ::google::protobuf::Message {
 public:
  CMsgTFRequestTF2FriendsResponse();
  virtual ~CMsgTFRequestTF2FriendsResponse();

  CMsgTFRequestTF2FriendsResponse(const CMsgTFRequestTF2FriendsResponse& from);

  inline CMsgTFRequestTF2FriendsResponse& operator=(const CMsgTFRequestTF2FriendsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFRequestTF2FriendsResponse& default_instance();

  void Swap(CMsgTFRequestTF2FriendsResponse* other);

  // implements Message ----------------------------------------------

  CMsgTFRequestTF2FriendsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFRequestTF2FriendsResponse& from);
  void MergeFrom(const CMsgTFRequestTF2FriendsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 account_ids = 1;
  inline int account_ids_size() const;
  inline void clear_account_ids();
  static const int kAccountIdsFieldNumber = 1;
  inline ::google::protobuf::uint32 account_ids(int index) const;
  inline void set_account_ids(int index, ::google::protobuf::uint32 value);
  inline void add_account_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      account_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_account_ids();

  // @@protoc_insertion_point(class_scope:CMsgTFRequestTF2FriendsResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > account_ids_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFRequestTF2FriendsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CSOTFPlayerInfo : public ::google::protobuf::Message {
 public:
  CSOTFPlayerInfo();
  virtual ~CSOTFPlayerInfo();

  CSOTFPlayerInfo(const CSOTFPlayerInfo& from);

  inline CSOTFPlayerInfo& operator=(const CSOTFPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFPlayerInfo& default_instance();

  void Swap(CSOTFPlayerInfo* other);

  // implements Message ----------------------------------------------

  CSOTFPlayerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOTFPlayerInfo& from);
  void MergeFrom(const CSOTFPlayerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 num_new_users_helped = 1;
  inline bool has_num_new_users_helped() const;
  inline void clear_num_new_users_helped();
  static const int kNumNewUsersHelpedFieldNumber = 1;
  inline ::google::protobuf::uint32 num_new_users_helped() const;
  inline void set_num_new_users_helped(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSOTFPlayerInfo)
 private:
  inline void set_has_num_new_users_helped();
  inline void clear_has_num_new_users_helped();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 num_new_users_helped_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CSOTFPlayerInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFThankedBySomeone : public ::google::protobuf::Message {
 public:
  CMsgTFThankedBySomeone();
  virtual ~CMsgTFThankedBySomeone();

  CMsgTFThankedBySomeone(const CMsgTFThankedBySomeone& from);

  inline CMsgTFThankedBySomeone& operator=(const CMsgTFThankedBySomeone& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFThankedBySomeone& default_instance();

  void Swap(CMsgTFThankedBySomeone* other);

  // implements Message ----------------------------------------------

  CMsgTFThankedBySomeone* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFThankedBySomeone& from);
  void MergeFrom(const CMsgTFThankedBySomeone& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 thanker_steam_id = 1;
  inline bool has_thanker_steam_id() const;
  inline void clear_thanker_steam_id();
  static const int kThankerSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 thanker_steam_id() const;
  inline void set_thanker_steam_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgTFThankedBySomeone)
 private:
  inline void set_has_thanker_steam_id();
  inline void clear_has_thanker_steam_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 thanker_steam_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFThankedBySomeone* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFThankedSomeone : public ::google::protobuf::Message {
 public:
  CMsgTFThankedSomeone();
  virtual ~CMsgTFThankedSomeone();

  CMsgTFThankedSomeone(const CMsgTFThankedSomeone& from);

  inline CMsgTFThankedSomeone& operator=(const CMsgTFThankedSomeone& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFThankedSomeone& default_instance();

  void Swap(CMsgTFThankedSomeone* other);

  // implements Message ----------------------------------------------

  CMsgTFThankedSomeone* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFThankedSomeone& from);
  void MergeFrom(const CMsgTFThankedSomeone& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgTFThankedSomeone)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFThankedSomeone* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFFreeTrialConvertedToPremium : public ::google::protobuf::Message {
 public:
  CMsgTFFreeTrialConvertedToPremium();
  virtual ~CMsgTFFreeTrialConvertedToPremium();

  CMsgTFFreeTrialConvertedToPremium(const CMsgTFFreeTrialConvertedToPremium& from);

  inline CMsgTFFreeTrialConvertedToPremium& operator=(const CMsgTFFreeTrialConvertedToPremium& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFFreeTrialConvertedToPremium& default_instance();

  void Swap(CMsgTFFreeTrialConvertedToPremium* other);

  // implements Message ----------------------------------------------

  CMsgTFFreeTrialConvertedToPremium* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFFreeTrialConvertedToPremium& from);
  void MergeFrom(const CMsgTFFreeTrialConvertedToPremium& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgTFFreeTrialConvertedToPremium)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFFreeTrialConvertedToPremium* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSaxxyAwarded : public ::google::protobuf::Message {
 public:
  CMsgSaxxyAwarded();
  virtual ~CMsgSaxxyAwarded();

  CMsgSaxxyAwarded(const CMsgSaxxyAwarded& from);

  inline CMsgSaxxyAwarded& operator=(const CMsgSaxxyAwarded& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSaxxyAwarded& default_instance();

  void Swap(CMsgSaxxyAwarded* other);

  // implements Message ----------------------------------------------

  CMsgSaxxyAwarded* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSaxxyAwarded& from);
  void MergeFrom(const CMsgSaxxyAwarded& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 category = 1;
  inline bool has_category() const;
  inline void clear_category();
  static const int kCategoryFieldNumber = 1;
  inline ::google::protobuf::uint32 category() const;
  inline void set_category(::google::protobuf::uint32 value);

  // repeated string winner_names = 2;
  inline int winner_names_size() const;
  inline void clear_winner_names();
  static const int kWinnerNamesFieldNumber = 2;
  inline const ::std::string& winner_names(int index) const;
  inline ::std::string* mutable_winner_names(int index);
  inline void set_winner_names(int index, const ::std::string& value);
  inline void set_winner_names(int index, const char* value);
  inline void set_winner_names(int index, const char* value, size_t size);
  inline ::std::string* add_winner_names();
  inline void add_winner_names(const ::std::string& value);
  inline void add_winner_names(const char* value);
  inline void add_winner_names(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& winner_names() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_winner_names();

  // @@protoc_insertion_point(class_scope:CMsgSaxxyAwarded)
 private:
  inline void set_has_category();
  inline void clear_has_category();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> winner_names_;
  ::google::protobuf::uint32 category_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgSaxxyAwarded* default_instance_;
};
// -------------------------------------------------------------------

class CMsgReplaySubmitContestEntry : public ::google::protobuf::Message {
 public:
  CMsgReplaySubmitContestEntry();
  virtual ~CMsgReplaySubmitContestEntry();

  CMsgReplaySubmitContestEntry(const CMsgReplaySubmitContestEntry& from);

  inline CMsgReplaySubmitContestEntry& operator=(const CMsgReplaySubmitContestEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgReplaySubmitContestEntry& default_instance();

  void Swap(CMsgReplaySubmitContestEntry* other);

  // implements Message ----------------------------------------------

  CMsgReplaySubmitContestEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgReplaySubmitContestEntry& from);
  void MergeFrom(const CMsgReplaySubmitContestEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string youtube_url = 1;
  inline bool has_youtube_url() const;
  inline void clear_youtube_url();
  static const int kYoutubeUrlFieldNumber = 1;
  inline const ::std::string& youtube_url() const;
  inline void set_youtube_url(const ::std::string& value);
  inline void set_youtube_url(const char* value);
  inline void set_youtube_url(const char* value, size_t size);
  inline ::std::string* mutable_youtube_url();
  inline ::std::string* release_youtube_url();
  inline void set_allocated_youtube_url(::std::string* youtube_url);

  // optional uint32 category = 2;
  inline bool has_category() const;
  inline void clear_category();
  static const int kCategoryFieldNumber = 2;
  inline ::google::protobuf::uint32 category() const;
  inline void set_category(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgReplaySubmitContestEntry)
 private:
  inline void set_has_youtube_url();
  inline void clear_has_youtube_url();
  inline void set_has_category();
  inline void clear_has_category();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* youtube_url_;
  ::google::protobuf::uint32 category_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgReplaySubmitContestEntry* default_instance_;
};
// -------------------------------------------------------------------

class CMsgReplaySubmitContestEntryResponse : public ::google::protobuf::Message {
 public:
  CMsgReplaySubmitContestEntryResponse();
  virtual ~CMsgReplaySubmitContestEntryResponse();

  CMsgReplaySubmitContestEntryResponse(const CMsgReplaySubmitContestEntryResponse& from);

  inline CMsgReplaySubmitContestEntryResponse& operator=(const CMsgReplaySubmitContestEntryResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgReplaySubmitContestEntryResponse& default_instance();

  void Swap(CMsgReplaySubmitContestEntryResponse* other);

  // implements Message ----------------------------------------------

  CMsgReplaySubmitContestEntryResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgReplaySubmitContestEntryResponse& from);
  void MergeFrom(const CMsgReplaySubmitContestEntryResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool success = 1;
  inline bool has_success() const;
  inline void clear_success();
  static const int kSuccessFieldNumber = 1;
  inline bool success() const;
  inline void set_success(bool value);

  // @@protoc_insertion_point(class_scope:CMsgReplaySubmitContestEntryResponse)
 private:
  inline void set_has_success();
  inline void clear_has_success();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool success_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgReplaySubmitContestEntryResponse* default_instance_;
};
// -------------------------------------------------------------------

class CReplayCachedContestData : public ::google::protobuf::Message {
 public:
  CReplayCachedContestData();
  virtual ~CReplayCachedContestData();

  CReplayCachedContestData(const CReplayCachedContestData& from);

  inline CReplayCachedContestData& operator=(const CReplayCachedContestData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CReplayCachedContestData& default_instance();

  void Swap(CReplayCachedContestData* other);

  // implements Message ----------------------------------------------

  CReplayCachedContestData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CReplayCachedContestData& from);
  void MergeFrom(const CReplayCachedContestData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed32 timestamp = 1;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  inline ::google::protobuf::uint32 timestamp() const;
  inline void set_timestamp(::google::protobuf::uint32 value);

  // optional uint32 num_votes_last_day = 2;
  inline bool has_num_votes_last_day() const;
  inline void clear_num_votes_last_day();
  static const int kNumVotesLastDayFieldNumber = 2;
  inline ::google::protobuf::uint32 num_votes_last_day() const;
  inline void set_num_votes_last_day(::google::protobuf::uint32 value);

  // repeated uint32 video_entry_ids = 3;
  inline int video_entry_ids_size() const;
  inline void clear_video_entry_ids();
  static const int kVideoEntryIdsFieldNumber = 3;
  inline ::google::protobuf::uint32 video_entry_ids(int index) const;
  inline void set_video_entry_ids(int index, ::google::protobuf::uint32 value);
  inline void add_video_entry_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      video_entry_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_video_entry_ids();

  // optional uint32 num_flags_last_day = 4;
  inline bool has_num_flags_last_day() const;
  inline void clear_num_flags_last_day();
  static const int kNumFlagsLastDayFieldNumber = 4;
  inline ::google::protobuf::uint32 num_flags_last_day() const;
  inline void set_num_flags_last_day(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CReplayCachedContestData)
 private:
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_num_votes_last_day();
  inline void clear_has_num_votes_last_day();
  inline void set_has_num_flags_last_day();
  inline void clear_has_num_flags_last_day();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 timestamp_;
  ::google::protobuf::uint32 num_votes_last_day_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > video_entry_ids_;
  ::google::protobuf::uint32 num_flags_last_day_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CReplayCachedContestData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFCoaching_AddToCoaches : public ::google::protobuf::Message {
 public:
  CMsgTFCoaching_AddToCoaches();
  virtual ~CMsgTFCoaching_AddToCoaches();

  CMsgTFCoaching_AddToCoaches(const CMsgTFCoaching_AddToCoaches& from);

  inline CMsgTFCoaching_AddToCoaches& operator=(const CMsgTFCoaching_AddToCoaches& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_AddToCoaches& default_instance();

  void Swap(CMsgTFCoaching_AddToCoaches* other);

  // implements Message ----------------------------------------------

  CMsgTFCoaching_AddToCoaches* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFCoaching_AddToCoaches& from);
  void MergeFrom(const CMsgTFCoaching_AddToCoaches& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_AddToCoaches)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFCoaching_AddToCoaches* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFCoaching_RemoveFromCoaches : public ::google::protobuf::Message {
 public:
  CMsgTFCoaching_RemoveFromCoaches();
  virtual ~CMsgTFCoaching_RemoveFromCoaches();

  CMsgTFCoaching_RemoveFromCoaches(const CMsgTFCoaching_RemoveFromCoaches& from);

  inline CMsgTFCoaching_RemoveFromCoaches& operator=(const CMsgTFCoaching_RemoveFromCoaches& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_RemoveFromCoaches& default_instance();

  void Swap(CMsgTFCoaching_RemoveFromCoaches* other);

  // implements Message ----------------------------------------------

  CMsgTFCoaching_RemoveFromCoaches* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFCoaching_RemoveFromCoaches& from);
  void MergeFrom(const CMsgTFCoaching_RemoveFromCoaches& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_RemoveFromCoaches)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFCoaching_RemoveFromCoaches* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFCoaching_FindCoach : public ::google::protobuf::Message {
 public:
  CMsgTFCoaching_FindCoach();
  virtual ~CMsgTFCoaching_FindCoach();

  CMsgTFCoaching_FindCoach(const CMsgTFCoaching_FindCoach& from);

  inline CMsgTFCoaching_FindCoach& operator=(const CMsgTFCoaching_FindCoach& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_FindCoach& default_instance();

  void Swap(CMsgTFCoaching_FindCoach* other);

  // implements Message ----------------------------------------------

  CMsgTFCoaching_FindCoach* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFCoaching_FindCoach& from);
  void MergeFrom(const CMsgTFCoaching_FindCoach& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id_friend_as_coach = 1;
  inline bool has_account_id_friend_as_coach() const;
  inline void clear_account_id_friend_as_coach();
  static const int kAccountIdFriendAsCoachFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id_friend_as_coach() const;
  inline void set_account_id_friend_as_coach(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_FindCoach)
 private:
  inline void set_has_account_id_friend_as_coach();
  inline void clear_has_account_id_friend_as_coach();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_friend_as_coach_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFCoaching_FindCoach* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFCoaching_FindCoachResponse : public ::google::protobuf::Message {
 public:
  CMsgTFCoaching_FindCoachResponse();
  virtual ~CMsgTFCoaching_FindCoachResponse();

  CMsgTFCoaching_FindCoachResponse(const CMsgTFCoaching_FindCoachResponse& from);

  inline CMsgTFCoaching_FindCoachResponse& operator=(const CMsgTFCoaching_FindCoachResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_FindCoachResponse& default_instance();

  void Swap(CMsgTFCoaching_FindCoachResponse* other);

  // implements Message ----------------------------------------------

  CMsgTFCoaching_FindCoachResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFCoaching_FindCoachResponse& from);
  void MergeFrom(const CMsgTFCoaching_FindCoachResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool found_coach = 1;
  inline bool has_found_coach() const;
  inline void clear_found_coach();
  static const int kFoundCoachFieldNumber = 1;
  inline bool found_coach() const;
  inline void set_found_coach(bool value);

  // optional uint32 num_likes = 2;
  inline bool has_num_likes() const;
  inline void clear_num_likes();
  static const int kNumLikesFieldNumber = 2;
  inline ::google::protobuf::uint32 num_likes() const;
  inline void set_num_likes(::google::protobuf::uint32 value);

  // optional string coach_name = 3;
  inline bool has_coach_name() const;
  inline void clear_coach_name();
  static const int kCoachNameFieldNumber = 3;
  inline const ::std::string& coach_name() const;
  inline void set_coach_name(const ::std::string& value);
  inline void set_coach_name(const char* value);
  inline void set_coach_name(const char* value, size_t size);
  inline ::std::string* mutable_coach_name();
  inline ::std::string* release_coach_name();
  inline void set_allocated_coach_name(::std::string* coach_name);

  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_FindCoachResponse)
 private:
  inline void set_has_found_coach();
  inline void clear_has_found_coach();
  inline void set_has_num_likes();
  inline void clear_has_num_likes();
  inline void set_has_coach_name();
  inline void clear_has_coach_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool found_coach_;
  ::google::protobuf::uint32 num_likes_;
  ::std::string* coach_name_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFCoaching_FindCoachResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFCoaching_AskCoach : public ::google::protobuf::Message {
 public:
  CMsgTFCoaching_AskCoach();
  virtual ~CMsgTFCoaching_AskCoach();

  CMsgTFCoaching_AskCoach(const CMsgTFCoaching_AskCoach& from);

  inline CMsgTFCoaching_AskCoach& operator=(const CMsgTFCoaching_AskCoach& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_AskCoach& default_instance();

  void Swap(CMsgTFCoaching_AskCoach* other);

  // implements Message ----------------------------------------------

  CMsgTFCoaching_AskCoach* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFCoaching_AskCoach& from);
  void MergeFrom(const CMsgTFCoaching_AskCoach& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id_student = 1;
  inline bool has_account_id_student() const;
  inline void clear_account_id_student();
  static const int kAccountIdStudentFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id_student() const;
  inline void set_account_id_student(::google::protobuf::uint32 value);

  // optional bool student_is_friend = 2;
  inline bool has_student_is_friend() const;
  inline void clear_student_is_friend();
  static const int kStudentIsFriendFieldNumber = 2;
  inline bool student_is_friend() const;
  inline void set_student_is_friend(bool value);

  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_AskCoach)
 private:
  inline void set_has_account_id_student();
  inline void clear_has_account_id_student();
  inline void set_has_student_is_friend();
  inline void clear_has_student_is_friend();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_student_;
  bool student_is_friend_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFCoaching_AskCoach* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFCoaching_AskCoachResponse : public ::google::protobuf::Message {
 public:
  CMsgTFCoaching_AskCoachResponse();
  virtual ~CMsgTFCoaching_AskCoachResponse();

  CMsgTFCoaching_AskCoachResponse(const CMsgTFCoaching_AskCoachResponse& from);

  inline CMsgTFCoaching_AskCoachResponse& operator=(const CMsgTFCoaching_AskCoachResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_AskCoachResponse& default_instance();

  void Swap(CMsgTFCoaching_AskCoachResponse* other);

  // implements Message ----------------------------------------------

  CMsgTFCoaching_AskCoachResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFCoaching_AskCoachResponse& from);
  void MergeFrom(const CMsgTFCoaching_AskCoachResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool accept_coaching_assignment = 1;
  inline bool has_accept_coaching_assignment() const;
  inline void clear_accept_coaching_assignment();
  static const int kAcceptCoachingAssignmentFieldNumber = 1;
  inline bool accept_coaching_assignment() const;
  inline void set_accept_coaching_assignment(bool value);

  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_AskCoachResponse)
 private:
  inline void set_has_accept_coaching_assignment();
  inline void clear_has_accept_coaching_assignment();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool accept_coaching_assignment_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFCoaching_AskCoachResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFCoaching_CoachJoinGame : public ::google::protobuf::Message {
 public:
  CMsgTFCoaching_CoachJoinGame();
  virtual ~CMsgTFCoaching_CoachJoinGame();

  CMsgTFCoaching_CoachJoinGame(const CMsgTFCoaching_CoachJoinGame& from);

  inline CMsgTFCoaching_CoachJoinGame& operator=(const CMsgTFCoaching_CoachJoinGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_CoachJoinGame& default_instance();

  void Swap(CMsgTFCoaching_CoachJoinGame* other);

  // implements Message ----------------------------------------------

  CMsgTFCoaching_CoachJoinGame* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFCoaching_CoachJoinGame& from);
  void MergeFrom(const CMsgTFCoaching_CoachJoinGame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool join_game = 1;
  inline bool has_join_game() const;
  inline void clear_join_game();
  static const int kJoinGameFieldNumber = 1;
  inline bool join_game() const;
  inline void set_join_game(bool value);

  // optional uint32 server_address = 2;
  inline bool has_server_address() const;
  inline void clear_server_address();
  static const int kServerAddressFieldNumber = 2;
  inline ::google::protobuf::uint32 server_address() const;
  inline void set_server_address(::google::protobuf::uint32 value);

  // optional uint32 server_port = 3;
  inline bool has_server_port() const;
  inline void clear_server_port();
  static const int kServerPortFieldNumber = 3;
  inline ::google::protobuf::uint32 server_port() const;
  inline void set_server_port(::google::protobuf::uint32 value);

  // optional uint32 account_id_student = 4;
  inline bool has_account_id_student() const;
  inline void clear_account_id_student();
  static const int kAccountIdStudentFieldNumber = 4;
  inline ::google::protobuf::uint32 account_id_student() const;
  inline void set_account_id_student(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_CoachJoinGame)
 private:
  inline void set_has_join_game();
  inline void clear_has_join_game();
  inline void set_has_server_address();
  inline void clear_has_server_address();
  inline void set_has_server_port();
  inline void clear_has_server_port();
  inline void set_has_account_id_student();
  inline void clear_has_account_id_student();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool join_game_;
  ::google::protobuf::uint32 server_address_;
  ::google::protobuf::uint32 server_port_;
  ::google::protobuf::uint32 account_id_student_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFCoaching_CoachJoinGame* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFCoaching_CoachJoining : public ::google::protobuf::Message {
 public:
  CMsgTFCoaching_CoachJoining();
  virtual ~CMsgTFCoaching_CoachJoining();

  CMsgTFCoaching_CoachJoining(const CMsgTFCoaching_CoachJoining& from);

  inline CMsgTFCoaching_CoachJoining& operator=(const CMsgTFCoaching_CoachJoining& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_CoachJoining& default_instance();

  void Swap(CMsgTFCoaching_CoachJoining* other);

  // implements Message ----------------------------------------------

  CMsgTFCoaching_CoachJoining* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFCoaching_CoachJoining& from);
  void MergeFrom(const CMsgTFCoaching_CoachJoining& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id_coach = 1;
  inline bool has_account_id_coach() const;
  inline void clear_account_id_coach();
  static const int kAccountIdCoachFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id_coach() const;
  inline void set_account_id_coach(::google::protobuf::uint32 value);

  // optional uint32 account_id_student = 2;
  inline bool has_account_id_student() const;
  inline void clear_account_id_student();
  static const int kAccountIdStudentFieldNumber = 2;
  inline ::google::protobuf::uint32 account_id_student() const;
  inline void set_account_id_student(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_CoachJoining)
 private:
  inline void set_has_account_id_coach();
  inline void clear_has_account_id_coach();
  inline void set_has_account_id_student();
  inline void clear_has_account_id_student();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_coach_;
  ::google::protobuf::uint32 account_id_student_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFCoaching_CoachJoining* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFCoaching_CoachJoined : public ::google::protobuf::Message {
 public:
  CMsgTFCoaching_CoachJoined();
  virtual ~CMsgTFCoaching_CoachJoined();

  CMsgTFCoaching_CoachJoined(const CMsgTFCoaching_CoachJoined& from);

  inline CMsgTFCoaching_CoachJoined& operator=(const CMsgTFCoaching_CoachJoined& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_CoachJoined& default_instance();

  void Swap(CMsgTFCoaching_CoachJoined* other);

  // implements Message ----------------------------------------------

  CMsgTFCoaching_CoachJoined* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFCoaching_CoachJoined& from);
  void MergeFrom(const CMsgTFCoaching_CoachJoined& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id_coach = 1;
  inline bool has_account_id_coach() const;
  inline void clear_account_id_coach();
  static const int kAccountIdCoachFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id_coach() const;
  inline void set_account_id_coach(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_CoachJoined)
 private:
  inline void set_has_account_id_coach();
  inline void clear_has_account_id_coach();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_coach_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFCoaching_CoachJoined* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFCoaching_LikeCurrentCoach : public ::google::protobuf::Message {
 public:
  CMsgTFCoaching_LikeCurrentCoach();
  virtual ~CMsgTFCoaching_LikeCurrentCoach();

  CMsgTFCoaching_LikeCurrentCoach(const CMsgTFCoaching_LikeCurrentCoach& from);

  inline CMsgTFCoaching_LikeCurrentCoach& operator=(const CMsgTFCoaching_LikeCurrentCoach& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_LikeCurrentCoach& default_instance();

  void Swap(CMsgTFCoaching_LikeCurrentCoach* other);

  // implements Message ----------------------------------------------

  CMsgTFCoaching_LikeCurrentCoach* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFCoaching_LikeCurrentCoach& from);
  void MergeFrom(const CMsgTFCoaching_LikeCurrentCoach& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool like_coach = 1;
  inline bool has_like_coach() const;
  inline void clear_like_coach();
  static const int kLikeCoachFieldNumber = 1;
  inline bool like_coach() const;
  inline void set_like_coach(bool value);

  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_LikeCurrentCoach)
 private:
  inline void set_has_like_coach();
  inline void clear_has_like_coach();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool like_coach_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFCoaching_LikeCurrentCoach* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFCoaching_RemoveCurrentCoach : public ::google::protobuf::Message {
 public:
  CMsgTFCoaching_RemoveCurrentCoach();
  virtual ~CMsgTFCoaching_RemoveCurrentCoach();

  CMsgTFCoaching_RemoveCurrentCoach(const CMsgTFCoaching_RemoveCurrentCoach& from);

  inline CMsgTFCoaching_RemoveCurrentCoach& operator=(const CMsgTFCoaching_RemoveCurrentCoach& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFCoaching_RemoveCurrentCoach& default_instance();

  void Swap(CMsgTFCoaching_RemoveCurrentCoach* other);

  // implements Message ----------------------------------------------

  CMsgTFCoaching_RemoveCurrentCoach* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFCoaching_RemoveCurrentCoach& from);
  void MergeFrom(const CMsgTFCoaching_RemoveCurrentCoach& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id_coach = 1;
  inline bool has_account_id_coach() const;
  inline void clear_account_id_coach();
  static const int kAccountIdCoachFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id_coach() const;
  inline void set_account_id_coach(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgTFCoaching_RemoveCurrentCoach)
 private:
  inline void set_has_account_id_coach();
  inline void clear_has_account_id_coach();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_coach_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFCoaching_RemoveCurrentCoach* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFQuickplay_ScoreServers_ServerInfo : public ::google::protobuf::Message {
 public:
  CMsgTFQuickplay_ScoreServers_ServerInfo();
  virtual ~CMsgTFQuickplay_ScoreServers_ServerInfo();

  CMsgTFQuickplay_ScoreServers_ServerInfo(const CMsgTFQuickplay_ScoreServers_ServerInfo& from);

  inline CMsgTFQuickplay_ScoreServers_ServerInfo& operator=(const CMsgTFQuickplay_ScoreServers_ServerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFQuickplay_ScoreServers_ServerInfo& default_instance();

  void Swap(CMsgTFQuickplay_ScoreServers_ServerInfo* other);

  // implements Message ----------------------------------------------

  CMsgTFQuickplay_ScoreServers_ServerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFQuickplay_ScoreServers_ServerInfo& from);
  void MergeFrom(const CMsgTFQuickplay_ScoreServers_ServerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 server_address = 1;
  inline bool has_server_address() const;
  inline void clear_server_address();
  static const int kServerAddressFieldNumber = 1;
  inline ::google::protobuf::uint32 server_address() const;
  inline void set_server_address(::google::protobuf::uint32 value);

  // optional uint32 server_port = 2;
  inline bool has_server_port() const;
  inline void clear_server_port();
  static const int kServerPortFieldNumber = 2;
  inline ::google::protobuf::uint32 server_port() const;
  inline void set_server_port(::google::protobuf::uint32 value);

  // optional uint32 num_users = 3;
  inline bool has_num_users() const;
  inline void clear_num_users();
  static const int kNumUsersFieldNumber = 3;
  inline ::google::protobuf::uint32 num_users() const;
  inline void set_num_users(::google::protobuf::uint32 value);

  // optional uint64 steam_id = 4;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 4;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);

  // optional uint32 max_users = 5;
  inline bool has_max_users() const;
  inline void clear_max_users();
  static const int kMaxUsersFieldNumber = 5;
  inline ::google::protobuf::uint32 max_users() const;
  inline void set_max_users(::google::protobuf::uint32 value);

  // optional float user_score = 6;
  inline bool has_user_score() const;
  inline void clear_user_score();
  static const int kUserScoreFieldNumber = 6;
  inline float user_score() const;
  inline void set_user_score(float value);

  // @@protoc_insertion_point(class_scope:CMsgTFQuickplay_ScoreServers.ServerInfo)
 private:
  inline void set_has_server_address();
  inline void clear_has_server_address();
  inline void set_has_server_port();
  inline void clear_has_server_port();
  inline void set_has_num_users();
  inline void clear_has_num_users();
  inline void set_has_steam_id();
  inline void clear_has_steam_id();
  inline void set_has_max_users();
  inline void clear_has_max_users();
  inline void set_has_user_score();
  inline void clear_has_user_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 server_address_;
  ::google::protobuf::uint32 server_port_;
  ::google::protobuf::uint64 steam_id_;
  ::google::protobuf::uint32 num_users_;
  ::google::protobuf::uint32 max_users_;
  float user_score_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFQuickplay_ScoreServers_ServerInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFQuickplay_ScoreServers : public ::google::protobuf::Message {
 public:
  CMsgTFQuickplay_ScoreServers();
  virtual ~CMsgTFQuickplay_ScoreServers();

  CMsgTFQuickplay_ScoreServers(const CMsgTFQuickplay_ScoreServers& from);

  inline CMsgTFQuickplay_ScoreServers& operator=(const CMsgTFQuickplay_ScoreServers& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFQuickplay_ScoreServers& default_instance();

  void Swap(CMsgTFQuickplay_ScoreServers* other);

  // implements Message ----------------------------------------------

  CMsgTFQuickplay_ScoreServers* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFQuickplay_ScoreServers& from);
  void MergeFrom(const CMsgTFQuickplay_ScoreServers& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgTFQuickplay_ScoreServers_ServerInfo ServerInfo;

  // accessors -------------------------------------------------------

  // repeated .CMsgTFQuickplay_ScoreServers.ServerInfo servers = 1;
  inline int servers_size() const;
  inline void clear_servers();
  static const int kServersFieldNumber = 1;
  inline const ::CMsgTFQuickplay_ScoreServers_ServerInfo& servers(int index) const;
  inline ::CMsgTFQuickplay_ScoreServers_ServerInfo* mutable_servers(int index);
  inline ::CMsgTFQuickplay_ScoreServers_ServerInfo* add_servers();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServers_ServerInfo >&
      servers() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServers_ServerInfo >*
      mutable_servers();

  // @@protoc_insertion_point(class_scope:CMsgTFQuickplay_ScoreServers)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServers_ServerInfo > servers_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFQuickplay_ScoreServers* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFQuickplay_ScoreServersResponse_ServerInfo : public ::google::protobuf::Message {
 public:
  CMsgTFQuickplay_ScoreServersResponse_ServerInfo();
  virtual ~CMsgTFQuickplay_ScoreServersResponse_ServerInfo();

  CMsgTFQuickplay_ScoreServersResponse_ServerInfo(const CMsgTFQuickplay_ScoreServersResponse_ServerInfo& from);

  inline CMsgTFQuickplay_ScoreServersResponse_ServerInfo& operator=(const CMsgTFQuickplay_ScoreServersResponse_ServerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFQuickplay_ScoreServersResponse_ServerInfo& default_instance();

  void Swap(CMsgTFQuickplay_ScoreServersResponse_ServerInfo* other);

  // implements Message ----------------------------------------------

  CMsgTFQuickplay_ScoreServersResponse_ServerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFQuickplay_ScoreServersResponse_ServerInfo& from);
  void MergeFrom(const CMsgTFQuickplay_ScoreServersResponse_ServerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 server_address = 1;
  inline bool has_server_address() const;
  inline void clear_server_address();
  static const int kServerAddressFieldNumber = 1;
  inline ::google::protobuf::uint32 server_address() const;
  inline void set_server_address(::google::protobuf::uint32 value);

  // optional uint32 server_port = 2;
  inline bool has_server_port() const;
  inline void clear_server_port();
  static const int kServerPortFieldNumber = 2;
  inline ::google::protobuf::uint32 server_port() const;
  inline void set_server_port(::google::protobuf::uint32 value);

  // optional float total_score = 3;
  inline bool has_total_score() const;
  inline void clear_total_score();
  static const int kTotalScoreFieldNumber = 3;
  inline float total_score() const;
  inline void set_total_score(float value);

  // optional uint64 steam_id = 4;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 4;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);

  // optional uint32 options_score = 5;
  inline bool has_options_score() const;
  inline void clear_options_score();
  static const int kOptionsScoreFieldNumber = 5;
  inline ::google::protobuf::uint32 options_score() const;
  inline void set_options_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgTFQuickplay_ScoreServersResponse.ServerInfo)
 private:
  inline void set_has_server_address();
  inline void clear_has_server_address();
  inline void set_has_server_port();
  inline void clear_has_server_port();
  inline void set_has_total_score();
  inline void clear_has_total_score();
  inline void set_has_steam_id();
  inline void clear_has_steam_id();
  inline void set_has_options_score();
  inline void clear_has_options_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 server_address_;
  ::google::protobuf::uint32 server_port_;
  ::google::protobuf::uint64 steam_id_;
  float total_score_;
  ::google::protobuf::uint32 options_score_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFQuickplay_ScoreServersResponse_ServerInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFQuickplay_ScoreServersResponse : public ::google::protobuf::Message {
 public:
  CMsgTFQuickplay_ScoreServersResponse();
  virtual ~CMsgTFQuickplay_ScoreServersResponse();

  CMsgTFQuickplay_ScoreServersResponse(const CMsgTFQuickplay_ScoreServersResponse& from);

  inline CMsgTFQuickplay_ScoreServersResponse& operator=(const CMsgTFQuickplay_ScoreServersResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFQuickplay_ScoreServersResponse& default_instance();

  void Swap(CMsgTFQuickplay_ScoreServersResponse* other);

  // implements Message ----------------------------------------------

  CMsgTFQuickplay_ScoreServersResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFQuickplay_ScoreServersResponse& from);
  void MergeFrom(const CMsgTFQuickplay_ScoreServersResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgTFQuickplay_ScoreServersResponse_ServerInfo ServerInfo;

  // accessors -------------------------------------------------------

  // repeated .CMsgTFQuickplay_ScoreServersResponse.ServerInfo servers = 1;
  inline int servers_size() const;
  inline void clear_servers();
  static const int kServersFieldNumber = 1;
  inline const ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo& servers(int index) const;
  inline ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo* mutable_servers(int index);
  inline ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo* add_servers();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo >&
      servers() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo >*
      mutable_servers();

  // @@protoc_insertion_point(class_scope:CMsgTFQuickplay_ScoreServersResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo > servers_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFQuickplay_ScoreServersResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFQuickplay_PlayerJoining : public ::google::protobuf::Message {
 public:
  CMsgTFQuickplay_PlayerJoining();
  virtual ~CMsgTFQuickplay_PlayerJoining();

  CMsgTFQuickplay_PlayerJoining(const CMsgTFQuickplay_PlayerJoining& from);

  inline CMsgTFQuickplay_PlayerJoining& operator=(const CMsgTFQuickplay_PlayerJoining& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFQuickplay_PlayerJoining& default_instance();

  void Swap(CMsgTFQuickplay_PlayerJoining* other);

  // implements Message ----------------------------------------------

  CMsgTFQuickplay_PlayerJoining* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFQuickplay_PlayerJoining& from);
  void MergeFrom(const CMsgTFQuickplay_PlayerJoining& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgTFQuickplay_PlayerJoining)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFQuickplay_PlayerJoining* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_LevelInfo : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_LevelInfo();
  virtual ~CMsgGC_GameServer_LevelInfo();

  CMsgGC_GameServer_LevelInfo(const CMsgGC_GameServer_LevelInfo& from);

  inline CMsgGC_GameServer_LevelInfo& operator=(const CMsgGC_GameServer_LevelInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_LevelInfo& default_instance();

  void Swap(CMsgGC_GameServer_LevelInfo* other);

  // implements Message ----------------------------------------------

  CMsgGC_GameServer_LevelInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_LevelInfo& from);
  void MergeFrom(const CMsgGC_GameServer_LevelInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool level_loaded = 1;
  inline bool has_level_loaded() const;
  inline void clear_level_loaded();
  static const int kLevelLoadedFieldNumber = 1;
  inline bool level_loaded() const;
  inline void set_level_loaded(bool value);

  // optional string level_name = 2;
  inline bool has_level_name() const;
  inline void clear_level_name();
  static const int kLevelNameFieldNumber = 2;
  inline const ::std::string& level_name() const;
  inline void set_level_name(const ::std::string& value);
  inline void set_level_name(const char* value);
  inline void set_level_name(const char* value, size_t size);
  inline ::std::string* mutable_level_name();
  inline ::std::string* release_level_name();
  inline void set_allocated_level_name(::std::string* level_name);

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_LevelInfo)
 private:
  inline void set_has_level_loaded();
  inline void clear_has_level_loaded();
  inline void set_has_level_name();
  inline void clear_has_level_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* level_name_;
  bool level_loaded_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_GameServer_LevelInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_AuthChallenge : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_AuthChallenge();
  virtual ~CMsgGC_GameServer_AuthChallenge();

  CMsgGC_GameServer_AuthChallenge(const CMsgGC_GameServer_AuthChallenge& from);

  inline CMsgGC_GameServer_AuthChallenge& operator=(const CMsgGC_GameServer_AuthChallenge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_AuthChallenge& default_instance();

  void Swap(CMsgGC_GameServer_AuthChallenge* other);

  // implements Message ----------------------------------------------

  CMsgGC_GameServer_AuthChallenge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_AuthChallenge& from);
  void MergeFrom(const CMsgGC_GameServer_AuthChallenge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string challenge_string = 1;
  inline bool has_challenge_string() const;
  inline void clear_challenge_string();
  static const int kChallengeStringFieldNumber = 1;
  inline const ::std::string& challenge_string() const;
  inline void set_challenge_string(const ::std::string& value);
  inline void set_challenge_string(const char* value);
  inline void set_challenge_string(const char* value, size_t size);
  inline ::std::string* mutable_challenge_string();
  inline ::std::string* release_challenge_string();
  inline void set_allocated_challenge_string(::std::string* challenge_string);

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_AuthChallenge)
 private:
  inline void set_has_challenge_string();
  inline void clear_has_challenge_string();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* challenge_string_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_GameServer_AuthChallenge* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_AuthResult : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_AuthResult();
  virtual ~CMsgGC_GameServer_AuthResult();

  CMsgGC_GameServer_AuthResult(const CMsgGC_GameServer_AuthResult& from);

  inline CMsgGC_GameServer_AuthResult& operator=(const CMsgGC_GameServer_AuthResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_AuthResult& default_instance();

  void Swap(CMsgGC_GameServer_AuthResult* other);

  // implements Message ----------------------------------------------

  CMsgGC_GameServer_AuthResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_AuthResult& from);
  void MergeFrom(const CMsgGC_GameServer_AuthResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool authenticated = 1;
  inline bool has_authenticated() const;
  inline void clear_authenticated();
  static const int kAuthenticatedFieldNumber = 1;
  inline bool authenticated() const;
  inline void set_authenticated(bool value);

  // optional int32 game_server_standing = 2;
  inline bool has_game_server_standing() const;
  inline void clear_game_server_standing();
  static const int kGameServerStandingFieldNumber = 2;
  inline ::google::protobuf::int32 game_server_standing() const;
  inline void set_game_server_standing(::google::protobuf::int32 value);

  // optional int32 game_server_standing_trend = 3;
  inline bool has_game_server_standing_trend() const;
  inline void clear_game_server_standing_trend();
  static const int kGameServerStandingTrendFieldNumber = 3;
  inline ::google::protobuf::int32 game_server_standing_trend() const;
  inline void set_game_server_standing_trend(::google::protobuf::int32 value);

  // optional bool is_valve_server = 4;
  inline bool has_is_valve_server() const;
  inline void clear_is_valve_server();
  static const int kIsValveServerFieldNumber = 4;
  inline bool is_valve_server() const;
  inline void set_is_valve_server(bool value);

  // optional string message = 5;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 5;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_AuthResult)
 private:
  inline void set_has_authenticated();
  inline void clear_has_authenticated();
  inline void set_has_game_server_standing();
  inline void clear_has_game_server_standing();
  inline void set_has_game_server_standing_trend();
  inline void clear_has_game_server_standing_trend();
  inline void set_has_is_valve_server();
  inline void clear_has_is_valve_server();
  inline void set_has_message();
  inline void clear_has_message();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 game_server_standing_;
  bool authenticated_;
  bool is_valve_server_;
  ::std::string* message_;
  ::google::protobuf::int32 game_server_standing_trend_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_GameServer_AuthResult* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_AuthChallengeResponse : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_AuthChallengeResponse();
  virtual ~CMsgGC_GameServer_AuthChallengeResponse();

  CMsgGC_GameServer_AuthChallengeResponse(const CMsgGC_GameServer_AuthChallengeResponse& from);

  inline CMsgGC_GameServer_AuthChallengeResponse& operator=(const CMsgGC_GameServer_AuthChallengeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_AuthChallengeResponse& default_instance();

  void Swap(CMsgGC_GameServer_AuthChallengeResponse* other);

  // implements Message ----------------------------------------------

  CMsgGC_GameServer_AuthChallengeResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_AuthChallengeResponse& from);
  void MergeFrom(const CMsgGC_GameServer_AuthChallengeResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 game_server_account_id = 1;
  inline bool has_game_server_account_id() const;
  inline void clear_game_server_account_id();
  static const int kGameServerAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 game_server_account_id() const;
  inline void set_game_server_account_id(::google::protobuf::uint32 value);

  // optional bytes hashed_challenge_string = 2;
  inline bool has_hashed_challenge_string() const;
  inline void clear_hashed_challenge_string();
  static const int kHashedChallengeStringFieldNumber = 2;
  inline const ::std::string& hashed_challenge_string() const;
  inline void set_hashed_challenge_string(const ::std::string& value);
  inline void set_hashed_challenge_string(const char* value);
  inline void set_hashed_challenge_string(const void* value, size_t size);
  inline ::std::string* mutable_hashed_challenge_string();
  inline ::std::string* release_hashed_challenge_string();
  inline void set_allocated_hashed_challenge_string(::std::string* hashed_challenge_string);

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_AuthChallengeResponse)
 private:
  inline void set_has_game_server_account_id();
  inline void clear_has_game_server_account_id();
  inline void set_has_hashed_challenge_string();
  inline void clear_has_hashed_challenge_string();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* hashed_challenge_string_;
  ::google::protobuf::uint32 game_server_account_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_GameServer_AuthChallengeResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_CreateIdentity : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_CreateIdentity();
  virtual ~CMsgGC_GameServer_CreateIdentity();

  CMsgGC_GameServer_CreateIdentity(const CMsgGC_GameServer_CreateIdentity& from);

  inline CMsgGC_GameServer_CreateIdentity& operator=(const CMsgGC_GameServer_CreateIdentity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_CreateIdentity& default_instance();

  void Swap(CMsgGC_GameServer_CreateIdentity* other);

  // implements Message ----------------------------------------------

  CMsgGC_GameServer_CreateIdentity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_CreateIdentity& from);
  void MergeFrom(const CMsgGC_GameServer_CreateIdentity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_CreateIdentity)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_GameServer_CreateIdentity* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_CreateIdentityResponse : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_CreateIdentityResponse();
  virtual ~CMsgGC_GameServer_CreateIdentityResponse();

  CMsgGC_GameServer_CreateIdentityResponse(const CMsgGC_GameServer_CreateIdentityResponse& from);

  inline CMsgGC_GameServer_CreateIdentityResponse& operator=(const CMsgGC_GameServer_CreateIdentityResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_CreateIdentityResponse& default_instance();

  void Swap(CMsgGC_GameServer_CreateIdentityResponse* other);

  // implements Message ----------------------------------------------

  CMsgGC_GameServer_CreateIdentityResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_CreateIdentityResponse& from);
  void MergeFrom(const CMsgGC_GameServer_CreateIdentityResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGC_GameServer_CreateIdentityResponse_EStatus EStatus;
  static const EStatus kStatus_GenericFailure = CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_GenericFailure;
  static const EStatus kStatus_TooMany = CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_TooMany;
  static const EStatus kStatus_NoPrivs = CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_NoPrivs;
  static const EStatus kStatus_Created = CMsgGC_GameServer_CreateIdentityResponse_EStatus_kStatus_Created;
  static inline bool EStatus_IsValid(int value) {
    return CMsgGC_GameServer_CreateIdentityResponse_EStatus_IsValid(value);
  }
  static const EStatus EStatus_MIN =
    CMsgGC_GameServer_CreateIdentityResponse_EStatus_EStatus_MIN;
  static const EStatus EStatus_MAX =
    CMsgGC_GameServer_CreateIdentityResponse_EStatus_EStatus_MAX;
  static const int EStatus_ARRAYSIZE =
    CMsgGC_GameServer_CreateIdentityResponse_EStatus_EStatus_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EStatus_descriptor() {
    return CMsgGC_GameServer_CreateIdentityResponse_EStatus_descriptor();
  }
  static inline const ::std::string& EStatus_Name(EStatus value) {
    return CMsgGC_GameServer_CreateIdentityResponse_EStatus_Name(value);
  }
  static inline bool EStatus_Parse(const ::std::string& name,
      EStatus* value) {
    return CMsgGC_GameServer_CreateIdentityResponse_EStatus_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional bool account_created = 1;
  inline bool has_account_created() const;
  inline void clear_account_created();
  static const int kAccountCreatedFieldNumber = 1;
  inline bool account_created() const;
  inline void set_account_created(bool value);

  // optional uint32 game_server_account_id = 2;
  inline bool has_game_server_account_id() const;
  inline void clear_game_server_account_id();
  static const int kGameServerAccountIdFieldNumber = 2;
  inline ::google::protobuf::uint32 game_server_account_id() const;
  inline void set_game_server_account_id(::google::protobuf::uint32 value);

  // optional string game_server_identity_token = 3;
  inline bool has_game_server_identity_token() const;
  inline void clear_game_server_identity_token();
  static const int kGameServerIdentityTokenFieldNumber = 3;
  inline const ::std::string& game_server_identity_token() const;
  inline void set_game_server_identity_token(const ::std::string& value);
  inline void set_game_server_identity_token(const char* value);
  inline void set_game_server_identity_token(const char* value, size_t size);
  inline ::std::string* mutable_game_server_identity_token();
  inline ::std::string* release_game_server_identity_token();
  inline void set_allocated_game_server_identity_token(::std::string* game_server_identity_token);

  // optional .CMsgGC_GameServer_CreateIdentityResponse.EStatus status = 4 [default = kStatus_GenericFailure];
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 4;
  inline ::CMsgGC_GameServer_CreateIdentityResponse_EStatus status() const;
  inline void set_status(::CMsgGC_GameServer_CreateIdentityResponse_EStatus value);

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_CreateIdentityResponse)
 private:
  inline void set_has_account_created();
  inline void clear_has_account_created();
  inline void set_has_game_server_account_id();
  inline void clear_has_game_server_account_id();
  inline void set_has_game_server_identity_token();
  inline void clear_has_game_server_identity_token();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool account_created_;
  ::google::protobuf::uint32 game_server_account_id_;
  ::std::string* game_server_identity_token_;
  int status_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_GameServer_CreateIdentityResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_List : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_List();
  virtual ~CMsgGC_GameServer_List();

  CMsgGC_GameServer_List(const CMsgGC_GameServer_List& from);

  inline CMsgGC_GameServer_List& operator=(const CMsgGC_GameServer_List& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_List& default_instance();

  void Swap(CMsgGC_GameServer_List* other);

  // implements Message ----------------------------------------------

  CMsgGC_GameServer_List* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_List& from);
  void MergeFrom(const CMsgGC_GameServer_List& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_List)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_GameServer_List* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_ListResponse_GameServerIdentity : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_ListResponse_GameServerIdentity();
  virtual ~CMsgGC_GameServer_ListResponse_GameServerIdentity();

  CMsgGC_GameServer_ListResponse_GameServerIdentity(const CMsgGC_GameServer_ListResponse_GameServerIdentity& from);

  inline CMsgGC_GameServer_ListResponse_GameServerIdentity& operator=(const CMsgGC_GameServer_ListResponse_GameServerIdentity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_ListResponse_GameServerIdentity& default_instance();

  void Swap(CMsgGC_GameServer_ListResponse_GameServerIdentity* other);

  // implements Message ----------------------------------------------

  CMsgGC_GameServer_ListResponse_GameServerIdentity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_ListResponse_GameServerIdentity& from);
  void MergeFrom(const CMsgGC_GameServer_ListResponse_GameServerIdentity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 game_server_account_id = 1;
  inline bool has_game_server_account_id() const;
  inline void clear_game_server_account_id();
  static const int kGameServerAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 game_server_account_id() const;
  inline void set_game_server_account_id(::google::protobuf::uint32 value);

  // optional string game_server_identity_token = 2;
  inline bool has_game_server_identity_token() const;
  inline void clear_game_server_identity_token();
  static const int kGameServerIdentityTokenFieldNumber = 2;
  inline const ::std::string& game_server_identity_token() const;
  inline void set_game_server_identity_token(const ::std::string& value);
  inline void set_game_server_identity_token(const char* value);
  inline void set_game_server_identity_token(const char* value, size_t size);
  inline ::std::string* mutable_game_server_identity_token();
  inline ::std::string* release_game_server_identity_token();
  inline void set_allocated_game_server_identity_token(::std::string* game_server_identity_token);

  // optional int32 game_server_standing = 3;
  inline bool has_game_server_standing() const;
  inline void clear_game_server_standing();
  static const int kGameServerStandingFieldNumber = 3;
  inline ::google::protobuf::int32 game_server_standing() const;
  inline void set_game_server_standing(::google::protobuf::int32 value);

  // optional int32 game_server_standing_trend = 4;
  inline bool has_game_server_standing_trend() const;
  inline void clear_game_server_standing_trend();
  static const int kGameServerStandingTrendFieldNumber = 4;
  inline ::google::protobuf::int32 game_server_standing_trend() const;
  inline void set_game_server_standing_trend(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_ListResponse.GameServerIdentity)
 private:
  inline void set_has_game_server_account_id();
  inline void clear_has_game_server_account_id();
  inline void set_has_game_server_identity_token();
  inline void clear_has_game_server_identity_token();
  inline void set_has_game_server_standing();
  inline void clear_has_game_server_standing();
  inline void set_has_game_server_standing_trend();
  inline void clear_has_game_server_standing_trend();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* game_server_identity_token_;
  ::google::protobuf::uint32 game_server_account_id_;
  ::google::protobuf::int32 game_server_standing_;
  ::google::protobuf::int32 game_server_standing_trend_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_GameServer_ListResponse_GameServerIdentity* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_ListResponse : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_ListResponse();
  virtual ~CMsgGC_GameServer_ListResponse();

  CMsgGC_GameServer_ListResponse(const CMsgGC_GameServer_ListResponse& from);

  inline CMsgGC_GameServer_ListResponse& operator=(const CMsgGC_GameServer_ListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_ListResponse& default_instance();

  void Swap(CMsgGC_GameServer_ListResponse* other);

  // implements Message ----------------------------------------------

  CMsgGC_GameServer_ListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_ListResponse& from);
  void MergeFrom(const CMsgGC_GameServer_ListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGC_GameServer_ListResponse_GameServerIdentity GameServerIdentity;

  // accessors -------------------------------------------------------

  // repeated .CMsgGC_GameServer_ListResponse.GameServerIdentity owned_game_servers = 1;
  inline int owned_game_servers_size() const;
  inline void clear_owned_game_servers();
  static const int kOwnedGameServersFieldNumber = 1;
  inline const ::CMsgGC_GameServer_ListResponse_GameServerIdentity& owned_game_servers(int index) const;
  inline ::CMsgGC_GameServer_ListResponse_GameServerIdentity* mutable_owned_game_servers(int index);
  inline ::CMsgGC_GameServer_ListResponse_GameServerIdentity* add_owned_game_servers();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGC_GameServer_ListResponse_GameServerIdentity >&
      owned_game_servers() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGC_GameServer_ListResponse_GameServerIdentity >*
      mutable_owned_game_servers();

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_ListResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGC_GameServer_ListResponse_GameServerIdentity > owned_game_servers_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_GameServer_ListResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_ResetIdentity : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_ResetIdentity();
  virtual ~CMsgGC_GameServer_ResetIdentity();

  CMsgGC_GameServer_ResetIdentity(const CMsgGC_GameServer_ResetIdentity& from);

  inline CMsgGC_GameServer_ResetIdentity& operator=(const CMsgGC_GameServer_ResetIdentity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_ResetIdentity& default_instance();

  void Swap(CMsgGC_GameServer_ResetIdentity* other);

  // implements Message ----------------------------------------------

  CMsgGC_GameServer_ResetIdentity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_ResetIdentity& from);
  void MergeFrom(const CMsgGC_GameServer_ResetIdentity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 game_server_account_id = 1;
  inline bool has_game_server_account_id() const;
  inline void clear_game_server_account_id();
  static const int kGameServerAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 game_server_account_id() const;
  inline void set_game_server_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_ResetIdentity)
 private:
  inline void set_has_game_server_account_id();
  inline void clear_has_game_server_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 game_server_account_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_GameServer_ResetIdentity* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_ResetIdentityResponse : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_ResetIdentityResponse();
  virtual ~CMsgGC_GameServer_ResetIdentityResponse();

  CMsgGC_GameServer_ResetIdentityResponse(const CMsgGC_GameServer_ResetIdentityResponse& from);

  inline CMsgGC_GameServer_ResetIdentityResponse& operator=(const CMsgGC_GameServer_ResetIdentityResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_ResetIdentityResponse& default_instance();

  void Swap(CMsgGC_GameServer_ResetIdentityResponse* other);

  // implements Message ----------------------------------------------

  CMsgGC_GameServer_ResetIdentityResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_ResetIdentityResponse& from);
  void MergeFrom(const CMsgGC_GameServer_ResetIdentityResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool game_server_identity_token_reset = 1;
  inline bool has_game_server_identity_token_reset() const;
  inline void clear_game_server_identity_token_reset();
  static const int kGameServerIdentityTokenResetFieldNumber = 1;
  inline bool game_server_identity_token_reset() const;
  inline void set_game_server_identity_token_reset(bool value);

  // optional uint32 game_server_account_id = 2;
  inline bool has_game_server_account_id() const;
  inline void clear_game_server_account_id();
  static const int kGameServerAccountIdFieldNumber = 2;
  inline ::google::protobuf::uint32 game_server_account_id() const;
  inline void set_game_server_account_id(::google::protobuf::uint32 value);

  // optional string game_server_identity_token = 3;
  inline bool has_game_server_identity_token() const;
  inline void clear_game_server_identity_token();
  static const int kGameServerIdentityTokenFieldNumber = 3;
  inline const ::std::string& game_server_identity_token() const;
  inline void set_game_server_identity_token(const ::std::string& value);
  inline void set_game_server_identity_token(const char* value);
  inline void set_game_server_identity_token(const char* value, size_t size);
  inline ::std::string* mutable_game_server_identity_token();
  inline ::std::string* release_game_server_identity_token();
  inline void set_allocated_game_server_identity_token(::std::string* game_server_identity_token);

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_ResetIdentityResponse)
 private:
  inline void set_has_game_server_identity_token_reset();
  inline void clear_has_game_server_identity_token_reset();
  inline void set_has_game_server_account_id();
  inline void clear_has_game_server_account_id();
  inline void set_has_game_server_identity_token();
  inline void clear_has_game_server_identity_token();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool game_server_identity_token_reset_;
  ::google::protobuf::uint32 game_server_account_id_;
  ::std::string* game_server_identity_token_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_GameServer_ResetIdentityResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_AckPolicy : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_AckPolicy();
  virtual ~CMsgGC_GameServer_AckPolicy();

  CMsgGC_GameServer_AckPolicy(const CMsgGC_GameServer_AckPolicy& from);

  inline CMsgGC_GameServer_AckPolicy& operator=(const CMsgGC_GameServer_AckPolicy& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_AckPolicy& default_instance();

  void Swap(CMsgGC_GameServer_AckPolicy* other);

  // implements Message ----------------------------------------------

  CMsgGC_GameServer_AckPolicy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_AckPolicy& from);
  void MergeFrom(const CMsgGC_GameServer_AckPolicy& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_AckPolicy)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_GameServer_AckPolicy* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_AckPolicyResponse : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_AckPolicyResponse();
  virtual ~CMsgGC_GameServer_AckPolicyResponse();

  CMsgGC_GameServer_AckPolicyResponse(const CMsgGC_GameServer_AckPolicyResponse& from);

  inline CMsgGC_GameServer_AckPolicyResponse& operator=(const CMsgGC_GameServer_AckPolicyResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_AckPolicyResponse& default_instance();

  void Swap(CMsgGC_GameServer_AckPolicyResponse* other);

  // implements Message ----------------------------------------------

  CMsgGC_GameServer_AckPolicyResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_AckPolicyResponse& from);
  void MergeFrom(const CMsgGC_GameServer_AckPolicyResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // optional string message = 2;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 2;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_AckPolicyResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_message();
  inline void clear_has_message();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* message_;
  ::google::protobuf::uint32 result_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_GameServer_AckPolicyResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_Client_UseServerModificationItem : public ::google::protobuf::Message {
 public:
  CMsgGC_Client_UseServerModificationItem();
  virtual ~CMsgGC_Client_UseServerModificationItem();

  CMsgGC_Client_UseServerModificationItem(const CMsgGC_Client_UseServerModificationItem& from);

  inline CMsgGC_Client_UseServerModificationItem& operator=(const CMsgGC_Client_UseServerModificationItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_Client_UseServerModificationItem& default_instance();

  void Swap(CMsgGC_Client_UseServerModificationItem* other);

  // implements Message ----------------------------------------------

  CMsgGC_Client_UseServerModificationItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_Client_UseServerModificationItem& from);
  void MergeFrom(const CMsgGC_Client_UseServerModificationItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint64 item_id() const;
  inline void set_item_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgGC_Client_UseServerModificationItem)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 item_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_Client_UseServerModificationItem* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_Client_UseServerModificationItem_Response : public ::google::protobuf::Message {
 public:
  CMsgGC_Client_UseServerModificationItem_Response();
  virtual ~CMsgGC_Client_UseServerModificationItem_Response();

  CMsgGC_Client_UseServerModificationItem_Response(const CMsgGC_Client_UseServerModificationItem_Response& from);

  inline CMsgGC_Client_UseServerModificationItem_Response& operator=(const CMsgGC_Client_UseServerModificationItem_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_Client_UseServerModificationItem_Response& default_instance();

  void Swap(CMsgGC_Client_UseServerModificationItem_Response* other);

  // implements Message ----------------------------------------------

  CMsgGC_Client_UseServerModificationItem_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_Client_UseServerModificationItem_Response& from);
  void MergeFrom(const CMsgGC_Client_UseServerModificationItem_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse EServerModificationItemResponse;
  static const EServerModificationItemResponse kServerModificationItemResponse_AlreadyInUse = CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_AlreadyInUse;
  static const EServerModificationItemResponse kServerModificationItemResponse_NotOnAuthenticatedServer = CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_NotOnAuthenticatedServer;
  static const EServerModificationItemResponse kServerModificationItemResponse_ServerReject = CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_ServerReject;
  static const EServerModificationItemResponse kServerModificationItemResponse_InternalError = CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_InternalError;
  static const EServerModificationItemResponse kServerModificationItemResponse_EventAlreadyActive = CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_kServerModificationItemResponse_EventAlreadyActive;
  static inline bool EServerModificationItemResponse_IsValid(int value) {
    return CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_IsValid(value);
  }
  static const EServerModificationItemResponse EServerModificationItemResponse_MIN =
    CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_EServerModificationItemResponse_MIN;
  static const EServerModificationItemResponse EServerModificationItemResponse_MAX =
    CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_EServerModificationItemResponse_MAX;
  static const int EServerModificationItemResponse_ARRAYSIZE =
    CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_EServerModificationItemResponse_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EServerModificationItemResponse_descriptor() {
    return CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_descriptor();
  }
  static inline const ::std::string& EServerModificationItemResponse_Name(EServerModificationItemResponse value) {
    return CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_Name(value);
  }
  static inline bool EServerModificationItemResponse_Parse(const ::std::string& name,
      EServerModificationItemResponse* value) {
    return CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CMsgGC_Client_UseServerModificationItem_Response.EServerModificationItemResponse response_code = 1 [default = kServerModificationItemResponse_AlreadyInUse];
  inline bool has_response_code() const;
  inline void clear_response_code();
  static const int kResponseCodeFieldNumber = 1;
  inline ::CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse response_code() const;
  inline void set_response_code(::CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse value);

  // @@protoc_insertion_point(class_scope:CMsgGC_Client_UseServerModificationItem_Response)
 private:
  inline void set_has_response_code();
  inline void clear_has_response_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int response_code_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_Client_UseServerModificationItem_Response* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_UseServerModificationItem : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_UseServerModificationItem();
  virtual ~CMsgGC_GameServer_UseServerModificationItem();

  CMsgGC_GameServer_UseServerModificationItem(const CMsgGC_GameServer_UseServerModificationItem& from);

  inline CMsgGC_GameServer_UseServerModificationItem& operator=(const CMsgGC_GameServer_UseServerModificationItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_UseServerModificationItem& default_instance();

  void Swap(CMsgGC_GameServer_UseServerModificationItem* other);

  // implements Message ----------------------------------------------

  CMsgGC_GameServer_UseServerModificationItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_UseServerModificationItem& from);
  void MergeFrom(const CMsgGC_GameServer_UseServerModificationItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .EServerModificationItemType modification_type = 1 [default = kGameServerModificationItem_Halloween];
  inline bool has_modification_type() const;
  inline void clear_modification_type();
  static const int kModificationTypeFieldNumber = 1;
  inline ::EServerModificationItemType modification_type() const;
  inline void set_modification_type(::EServerModificationItemType value);

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_UseServerModificationItem)
 private:
  inline void set_has_modification_type();
  inline void clear_has_modification_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int modification_type_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_GameServer_UseServerModificationItem* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_UseServerModificationItem_Response : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_UseServerModificationItem_Response();
  virtual ~CMsgGC_GameServer_UseServerModificationItem_Response();

  CMsgGC_GameServer_UseServerModificationItem_Response(const CMsgGC_GameServer_UseServerModificationItem_Response& from);

  inline CMsgGC_GameServer_UseServerModificationItem_Response& operator=(const CMsgGC_GameServer_UseServerModificationItem_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_UseServerModificationItem_Response& default_instance();

  void Swap(CMsgGC_GameServer_UseServerModificationItem_Response* other);

  // implements Message ----------------------------------------------

  CMsgGC_GameServer_UseServerModificationItem_Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_UseServerModificationItem_Response& from);
  void MergeFrom(const CMsgGC_GameServer_UseServerModificationItem_Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse EServerModificationItemServerResponse;
  static const EServerModificationItemServerResponse kServerModificationItemServerResponse_Accepted = CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_kServerModificationItemServerResponse_Accepted;
  static const EServerModificationItemServerResponse kServerModificationItemServerResponse_NoVoteCalled = CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_kServerModificationItemServerResponse_NoVoteCalled;
  static const EServerModificationItemServerResponse kServerModificationItemServerResponse_VoteFailed = CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_kServerModificationItemServerResponse_VoteFailed;
  static inline bool EServerModificationItemServerResponse_IsValid(int value) {
    return CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_IsValid(value);
  }
  static const EServerModificationItemServerResponse EServerModificationItemServerResponse_MIN =
    CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_EServerModificationItemServerResponse_MIN;
  static const EServerModificationItemServerResponse EServerModificationItemServerResponse_MAX =
    CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_EServerModificationItemServerResponse_MAX;
  static const int EServerModificationItemServerResponse_ARRAYSIZE =
    CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_EServerModificationItemServerResponse_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EServerModificationItemServerResponse_descriptor() {
    return CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_descriptor();
  }
  static inline const ::std::string& EServerModificationItemServerResponse_Name(EServerModificationItemServerResponse value) {
    return CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_Name(value);
  }
  static inline bool EServerModificationItemServerResponse_Parse(const ::std::string& name,
      EServerModificationItemServerResponse* value) {
    return CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .EServerModificationItemType modification_type = 1 [default = kGameServerModificationItem_Halloween];
  inline bool has_modification_type() const;
  inline void clear_modification_type();
  static const int kModificationTypeFieldNumber = 1;
  inline ::EServerModificationItemType modification_type() const;
  inline void set_modification_type(::EServerModificationItemType value);

  // optional .CMsgGC_GameServer_UseServerModificationItem_Response.EServerModificationItemServerResponse server_response_code = 2 [default = kServerModificationItemServerResponse_Accepted];
  inline bool has_server_response_code() const;
  inline void clear_server_response_code();
  static const int kServerResponseCodeFieldNumber = 2;
  inline ::CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse server_response_code() const;
  inline void set_server_response_code(::CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse value);

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_UseServerModificationItem_Response)
 private:
  inline void set_has_modification_type();
  inline void clear_has_modification_type();
  inline void set_has_server_response_code();
  inline void clear_has_server_response_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int modification_type_;
  int server_response_code_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_GameServer_UseServerModificationItem_Response* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_ServerModificationItemExpired : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_ServerModificationItemExpired();
  virtual ~CMsgGC_GameServer_ServerModificationItemExpired();

  CMsgGC_GameServer_ServerModificationItemExpired(const CMsgGC_GameServer_ServerModificationItemExpired& from);

  inline CMsgGC_GameServer_ServerModificationItemExpired& operator=(const CMsgGC_GameServer_ServerModificationItemExpired& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_ServerModificationItemExpired& default_instance();

  void Swap(CMsgGC_GameServer_ServerModificationItemExpired* other);

  // implements Message ----------------------------------------------

  CMsgGC_GameServer_ServerModificationItemExpired* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_ServerModificationItemExpired& from);
  void MergeFrom(const CMsgGC_GameServer_ServerModificationItemExpired& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .EServerModificationItemType modification_type = 1 [default = kGameServerModificationItem_Halloween];
  inline bool has_modification_type() const;
  inline void clear_modification_type();
  static const int kModificationTypeFieldNumber = 1;
  inline ::EServerModificationItemType modification_type() const;
  inline void set_modification_type(::EServerModificationItemType value);

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_ServerModificationItemExpired)
 private:
  inline void set_has_modification_type();
  inline void clear_has_modification_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int modification_type_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_GameServer_ServerModificationItemExpired* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_GameServer_ServerModificationItem : public ::google::protobuf::Message {
 public:
  CMsgGC_GameServer_ServerModificationItem();
  virtual ~CMsgGC_GameServer_ServerModificationItem();

  CMsgGC_GameServer_ServerModificationItem(const CMsgGC_GameServer_ServerModificationItem& from);

  inline CMsgGC_GameServer_ServerModificationItem& operator=(const CMsgGC_GameServer_ServerModificationItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_GameServer_ServerModificationItem& default_instance();

  void Swap(CMsgGC_GameServer_ServerModificationItem* other);

  // implements Message ----------------------------------------------

  CMsgGC_GameServer_ServerModificationItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_GameServer_ServerModificationItem& from);
  void MergeFrom(const CMsgGC_GameServer_ServerModificationItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .EServerModificationItemType modification_type = 1 [default = kGameServerModificationItem_Halloween];
  inline bool has_modification_type() const;
  inline void clear_modification_type();
  static const int kModificationTypeFieldNumber = 1;
  inline ::EServerModificationItemType modification_type() const;
  inline void set_modification_type(::EServerModificationItemType value);

  // optional bool active = 2;
  inline bool has_active() const;
  inline void clear_active();
  static const int kActiveFieldNumber = 2;
  inline bool active() const;
  inline void set_active(bool value);

  // @@protoc_insertion_point(class_scope:CMsgGC_GameServer_ServerModificationItem)
 private:
  inline void set_has_modification_type();
  inline void clear_has_modification_type();
  inline void set_has_active();
  inline void clear_has_active();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int modification_type_;
  bool active_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_GameServer_ServerModificationItem* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_Halloween_ReservedItem : public ::google::protobuf::Message {
 public:
  CMsgGC_Halloween_ReservedItem();
  virtual ~CMsgGC_Halloween_ReservedItem();

  CMsgGC_Halloween_ReservedItem(const CMsgGC_Halloween_ReservedItem& from);

  inline CMsgGC_Halloween_ReservedItem& operator=(const CMsgGC_Halloween_ReservedItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_Halloween_ReservedItem& default_instance();

  void Swap(CMsgGC_Halloween_ReservedItem* other);

  // implements Message ----------------------------------------------

  CMsgGC_Halloween_ReservedItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_Halloween_ReservedItem& from);
  void MergeFrom(const CMsgGC_Halloween_ReservedItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float x = 1;
  inline int x_size() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline float x(int index) const;
  inline void set_x(int index, float value);
  inline void add_x(float value);
  inline const ::google::protobuf::RepeatedField< float >&
      x() const;
  inline ::google::protobuf::RepeatedField< float >*
      mutable_x();

  // repeated float y = 2;
  inline int y_size() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline float y(int index) const;
  inline void set_y(int index, float value);
  inline void add_y(float value);
  inline const ::google::protobuf::RepeatedField< float >&
      y() const;
  inline ::google::protobuf::RepeatedField< float >*
      mutable_y();

  // repeated float z = 3;
  inline int z_size() const;
  inline void clear_z();
  static const int kZFieldNumber = 3;
  inline float z(int index) const;
  inline void set_z(int index, float value);
  inline void add_z(float value);
  inline const ::google::protobuf::RepeatedField< float >&
      z() const;
  inline ::google::protobuf::RepeatedField< float >*
      mutable_z();

  // optional uint32 spawn_meta_info = 7;
  inline bool has_spawn_meta_info() const;
  inline void clear_spawn_meta_info();
  static const int kSpawnMetaInfoFieldNumber = 7;
  inline ::google::protobuf::uint32 spawn_meta_info() const;
  inline void set_spawn_meta_info(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGC_Halloween_ReservedItem)
 private:
  inline void set_has_spawn_meta_info();
  inline void clear_has_spawn_meta_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< float > x_;
  ::google::protobuf::RepeatedField< float > y_;
  ::google::protobuf::RepeatedField< float > z_;
  ::google::protobuf::uint32 spawn_meta_info_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_Halloween_ReservedItem* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_Halloween_GrantItem : public ::google::protobuf::Message {
 public:
  CMsgGC_Halloween_GrantItem();
  virtual ~CMsgGC_Halloween_GrantItem();

  CMsgGC_Halloween_GrantItem(const CMsgGC_Halloween_GrantItem& from);

  inline CMsgGC_Halloween_GrantItem& operator=(const CMsgGC_Halloween_GrantItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_Halloween_GrantItem& default_instance();

  void Swap(CMsgGC_Halloween_GrantItem* other);

  // implements Message ----------------------------------------------

  CMsgGC_Halloween_GrantItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_Halloween_GrantItem& from);
  void MergeFrom(const CMsgGC_Halloween_GrantItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 recipient_account_id = 1;
  inline bool has_recipient_account_id() const;
  inline void clear_recipient_account_id();
  static const int kRecipientAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 recipient_account_id() const;
  inline void set_recipient_account_id(::google::protobuf::uint32 value);

  // optional uint32 level_id = 2;
  inline bool has_level_id() const;
  inline void clear_level_id();
  static const int kLevelIdFieldNumber = 2;
  inline ::google::protobuf::uint32 level_id() const;
  inline void set_level_id(::google::protobuf::uint32 value);

  // optional bool flagged = 3;
  inline bool has_flagged() const;
  inline void clear_flagged();
  static const int kFlaggedFieldNumber = 3;
  inline bool flagged() const;
  inline void set_flagged(bool value);

  // @@protoc_insertion_point(class_scope:CMsgGC_Halloween_GrantItem)
 private:
  inline void set_has_recipient_account_id();
  inline void clear_has_recipient_account_id();
  inline void set_has_level_id();
  inline void clear_has_level_id();
  inline void set_has_flagged();
  inline void clear_has_flagged();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 recipient_account_id_;
  ::google::protobuf::uint32 level_id_;
  bool flagged_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_Halloween_GrantItem* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_Halloween_GrantItemResponse : public ::google::protobuf::Message {
 public:
  CMsgGC_Halloween_GrantItemResponse();
  virtual ~CMsgGC_Halloween_GrantItemResponse();

  CMsgGC_Halloween_GrantItemResponse(const CMsgGC_Halloween_GrantItemResponse& from);

  inline CMsgGC_Halloween_GrantItemResponse& operator=(const CMsgGC_Halloween_GrantItemResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_Halloween_GrantItemResponse& default_instance();

  void Swap(CMsgGC_Halloween_GrantItemResponse* other);

  // implements Message ----------------------------------------------

  CMsgGC_Halloween_GrantItemResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_Halloween_GrantItemResponse& from);
  void MergeFrom(const CMsgGC_Halloween_GrantItemResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 recipient_account_id = 1;
  inline bool has_recipient_account_id() const;
  inline void clear_recipient_account_id();
  static const int kRecipientAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 recipient_account_id() const;
  inline void set_recipient_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGC_Halloween_GrantItemResponse)
 private:
  inline void set_has_recipient_account_id();
  inline void clear_has_recipient_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 recipient_account_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_Halloween_GrantItemResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_Halloween_ItemClaimed : public ::google::protobuf::Message {
 public:
  CMsgGC_Halloween_ItemClaimed();
  virtual ~CMsgGC_Halloween_ItemClaimed();

  CMsgGC_Halloween_ItemClaimed(const CMsgGC_Halloween_ItemClaimed& from);

  inline CMsgGC_Halloween_ItemClaimed& operator=(const CMsgGC_Halloween_ItemClaimed& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_Halloween_ItemClaimed& default_instance();

  void Swap(CMsgGC_Halloween_ItemClaimed* other);

  // implements Message ----------------------------------------------

  CMsgGC_Halloween_ItemClaimed* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_Halloween_ItemClaimed& from);
  void MergeFrom(const CMsgGC_Halloween_ItemClaimed& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgGC_Halloween_ItemClaimed)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_Halloween_ItemClaimed* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_PickupItemEligibility_Query : public ::google::protobuf::Message {
 public:
  CMsgGC_PickupItemEligibility_Query();
  virtual ~CMsgGC_PickupItemEligibility_Query();

  CMsgGC_PickupItemEligibility_Query(const CMsgGC_PickupItemEligibility_Query& from);

  inline CMsgGC_PickupItemEligibility_Query& operator=(const CMsgGC_PickupItemEligibility_Query& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_PickupItemEligibility_Query& default_instance();

  void Swap(CMsgGC_PickupItemEligibility_Query* other);

  // implements Message ----------------------------------------------

  CMsgGC_PickupItemEligibility_Query* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_PickupItemEligibility_Query& from);
  void MergeFrom(const CMsgGC_PickupItemEligibility_Query& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 seconds_ago = 2;
  inline bool has_seconds_ago() const;
  inline void clear_seconds_ago();
  static const int kSecondsAgoFieldNumber = 2;
  inline ::google::protobuf::uint32 seconds_ago() const;
  inline void set_seconds_ago(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGC_PickupItemEligibility_Query)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_seconds_ago();
  inline void clear_has_seconds_ago();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 seconds_ago_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_PickupItemEligibility_Query* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGC_PickupItemEligibility_QueryResponse : public ::google::protobuf::Message {
 public:
  CMsgGC_PickupItemEligibility_QueryResponse();
  virtual ~CMsgGC_PickupItemEligibility_QueryResponse();

  CMsgGC_PickupItemEligibility_QueryResponse(const CMsgGC_PickupItemEligibility_QueryResponse& from);

  inline CMsgGC_PickupItemEligibility_QueryResponse& operator=(const CMsgGC_PickupItemEligibility_QueryResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGC_PickupItemEligibility_QueryResponse& default_instance();

  void Swap(CMsgGC_PickupItemEligibility_QueryResponse* other);

  // implements Message ----------------------------------------------

  CMsgGC_PickupItemEligibility_QueryResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGC_PickupItemEligibility_QueryResponse& from);
  void MergeFrom(const CMsgGC_PickupItemEligibility_QueryResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional bool was_eligible = 2;
  inline bool has_was_eligible() const;
  inline void clear_was_eligible();
  static const int kWasEligibleFieldNumber = 2;
  inline bool was_eligible() const;
  inline void set_was_eligible(bool value);

  // optional uint32 level_id = 3;
  inline bool has_level_id() const;
  inline void clear_level_id();
  static const int kLevelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 level_id() const;
  inline void set_level_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGC_PickupItemEligibility_QueryResponse)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_was_eligible();
  inline void clear_has_was_eligible();
  inline void set_has_level_id();
  inline void clear_has_level_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  bool was_eligible_;
  ::google::protobuf::uint32 level_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGC_PickupItemEligibility_QueryResponse* default_instance_;
};
// -------------------------------------------------------------------

class CSOTFPartyMember : public ::google::protobuf::Message {
 public:
  CSOTFPartyMember();
  virtual ~CSOTFPartyMember();

  CSOTFPartyMember(const CSOTFPartyMember& from);

  inline CSOTFPartyMember& operator=(const CSOTFPartyMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFPartyMember& default_instance();

  void Swap(CSOTFPartyMember* other);

  // implements Message ----------------------------------------------

  CSOTFPartyMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOTFPartyMember& from);
  void MergeFrom(const CSOTFPartyMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool owns_ticket = 2;
  inline bool has_owns_ticket() const;
  inline void clear_owns_ticket();
  static const int kOwnsTicketFieldNumber = 2;
  inline bool owns_ticket() const;
  inline void set_owns_ticket(bool value);

  // optional uint32 completed_missions = 3;
  inline bool has_completed_missions() const;
  inline void clear_completed_missions();
  static const int kCompletedMissionsFieldNumber = 3;
  inline ::google::protobuf::uint32 completed_missions() const;
  inline void set_completed_missions(::google::protobuf::uint32 value);

  // optional uint32 badge_level = 4;
  inline bool has_badge_level() const;
  inline void clear_badge_level();
  static const int kBadgeLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 badge_level() const;
  inline void set_badge_level(::google::protobuf::uint32 value);

  // optional bool squad_surplus = 5;
  inline bool has_squad_surplus() const;
  inline void clear_squad_surplus();
  static const int kSquadSurplusFieldNumber = 5;
  inline bool squad_surplus() const;
  inline void set_squad_surplus(bool value);

  // optional bool is_banned = 8 [default = false];
  inline bool has_is_banned() const;
  inline void clear_is_banned();
  static const int kIsBannedFieldNumber = 8;
  inline bool is_banned() const;
  inline void set_is_banned(bool value);

  // optional bool owns_ladder_ticket = 9;
  inline bool has_owns_ladder_ticket() const;
  inline void clear_owns_ladder_ticket();
  static const int kOwnsLadderTicketFieldNumber = 9;
  inline bool owns_ladder_ticket() const;
  inline void set_owns_ladder_ticket(bool value);

  // @@protoc_insertion_point(class_scope:CSOTFPartyMember)
 private:
  inline void set_has_owns_ticket();
  inline void clear_has_owns_ticket();
  inline void set_has_completed_missions();
  inline void clear_has_completed_missions();
  inline void set_has_badge_level();
  inline void clear_has_badge_level();
  inline void set_has_squad_surplus();
  inline void clear_has_squad_surplus();
  inline void set_has_is_banned();
  inline void clear_has_is_banned();
  inline void set_has_owns_ladder_ticket();
  inline void clear_has_owns_ladder_ticket();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 completed_missions_;
  ::google::protobuf::uint32 badge_level_;
  bool owns_ticket_;
  bool squad_surplus_;
  bool is_banned_;
  bool owns_ladder_ticket_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CSOTFPartyMember* default_instance_;
};
// -------------------------------------------------------------------

class CMsgMatchSearchCriteria : public ::google::protobuf::Message {
 public:
  CMsgMatchSearchCriteria();
  virtual ~CMsgMatchSearchCriteria();

  CMsgMatchSearchCriteria(const CMsgMatchSearchCriteria& from);

  inline CMsgMatchSearchCriteria& operator=(const CMsgMatchSearchCriteria& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMatchSearchCriteria& default_instance();

  void Swap(CMsgMatchSearchCriteria* other);

  // implements Message ----------------------------------------------

  CMsgMatchSearchCriteria* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgMatchSearchCriteria& from);
  void MergeFrom(const CMsgMatchSearchCriteria& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TF_MatchmakingMode matchmaking_mode = 7 [default = TF_Matchmaking_INVALID];
  inline bool has_matchmaking_mode() const;
  inline void clear_matchmaking_mode();
  static const int kMatchmakingModeFieldNumber = 7;
  inline ::TF_MatchmakingMode matchmaking_mode() const;
  inline void set_matchmaking_mode(::TF_MatchmakingMode value);

  // optional bool late_join_ok = 5;
  inline bool has_late_join_ok() const;
  inline void clear_late_join_ok();
  static const int kLateJoinOkFieldNumber = 5;
  inline bool late_join_ok() const;
  inline void set_late_join_ok(bool value);

  // optional string mvm_mannup_tour = 10;
  inline bool has_mvm_mannup_tour() const;
  inline void clear_mvm_mannup_tour();
  static const int kMvmMannupTourFieldNumber = 10;
  inline const ::std::string& mvm_mannup_tour() const;
  inline void set_mvm_mannup_tour(const ::std::string& value);
  inline void set_mvm_mannup_tour(const char* value);
  inline void set_mvm_mannup_tour(const char* value, size_t size);
  inline ::std::string* mutable_mvm_mannup_tour();
  inline ::std::string* release_mvm_mannup_tour();
  inline void set_allocated_mvm_mannup_tour(::std::string* mvm_mannup_tour);

  // repeated string mvm_missions = 9;
  inline int mvm_missions_size() const;
  inline void clear_mvm_missions();
  static const int kMvmMissionsFieldNumber = 9;
  inline const ::std::string& mvm_missions(int index) const;
  inline ::std::string* mutable_mvm_missions(int index);
  inline void set_mvm_missions(int index, const ::std::string& value);
  inline void set_mvm_missions(int index, const char* value);
  inline void set_mvm_missions(int index, const char* value, size_t size);
  inline ::std::string* add_mvm_missions();
  inline void add_mvm_missions(const ::std::string& value);
  inline void add_mvm_missions(const char* value);
  inline void add_mvm_missions(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& mvm_missions() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_mvm_missions();

  // optional bool play_for_bragging_rights = 6;
  inline bool has_play_for_bragging_rights() const;
  inline void clear_play_for_bragging_rights();
  static const int kPlayForBraggingRightsFieldNumber = 6;
  inline bool play_for_bragging_rights() const;
  inline void set_play_for_bragging_rights(bool value);

  // optional uint32 quickplay_game_type = 8;
  inline bool has_quickplay_game_type() const;
  inline void clear_quickplay_game_type();
  static const int kQuickplayGameTypeFieldNumber = 8;
  inline ::google::protobuf::uint32 quickplay_game_type() const;
  inline void set_quickplay_game_type(::google::protobuf::uint32 value);

  // optional uint32 ladder_type = 11;
  inline bool has_ladder_type() const;
  inline void clear_ladder_type();
  static const int kLadderTypeFieldNumber = 11;
  inline ::google::protobuf::uint32 ladder_type() const;
  inline void set_ladder_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgMatchSearchCriteria)
 private:
  inline void set_has_matchmaking_mode();
  inline void clear_has_matchmaking_mode();
  inline void set_has_late_join_ok();
  inline void clear_has_late_join_ok();
  inline void set_has_mvm_mannup_tour();
  inline void clear_has_mvm_mannup_tour();
  inline void set_has_play_for_bragging_rights();
  inline void clear_has_play_for_bragging_rights();
  inline void set_has_quickplay_game_type();
  inline void clear_has_quickplay_game_type();
  inline void set_has_ladder_type();
  inline void clear_has_ladder_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int matchmaking_mode_;
  bool late_join_ok_;
  bool play_for_bragging_rights_;
  ::std::string* mvm_mannup_tour_;
  ::google::protobuf::RepeatedPtrField< ::std::string> mvm_missions_;
  ::google::protobuf::uint32 quickplay_game_type_;
  ::google::protobuf::uint32 ladder_type_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgMatchSearchCriteria* default_instance_;
};
// -------------------------------------------------------------------

class CMsgCreateOrUpdateParty : public ::google::protobuf::Message {
 public:
  CMsgCreateOrUpdateParty();
  virtual ~CMsgCreateOrUpdateParty();

  CMsgCreateOrUpdateParty(const CMsgCreateOrUpdateParty& from);

  inline CMsgCreateOrUpdateParty& operator=(const CMsgCreateOrUpdateParty& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgCreateOrUpdateParty& default_instance();

  void Swap(CMsgCreateOrUpdateParty* other);

  // implements Message ----------------------------------------------

  CMsgCreateOrUpdateParty* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgCreateOrUpdateParty& from);
  void MergeFrom(const CMsgCreateOrUpdateParty& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgMatchSearchCriteria search_criteria = 1;
  inline bool has_search_criteria() const;
  inline void clear_search_criteria();
  static const int kSearchCriteriaFieldNumber = 1;
  inline const ::CMsgMatchSearchCriteria& search_criteria() const;
  inline ::CMsgMatchSearchCriteria* mutable_search_criteria();
  inline ::CMsgMatchSearchCriteria* release_search_criteria();
  inline void set_allocated_search_criteria(::CMsgMatchSearchCriteria* search_criteria);

  // optional fixed64 steam_lobby_id = 3;
  inline bool has_steam_lobby_id() const;
  inline void clear_steam_lobby_id();
  static const int kSteamLobbyIdFieldNumber = 3;
  inline ::google::protobuf::uint64 steam_lobby_id() const;
  inline void set_steam_lobby_id(::google::protobuf::uint64 value);

  // optional bool squad_surplus = 4;
  inline bool has_squad_surplus() const;
  inline void clear_squad_surplus();
  static const int kSquadSurplusFieldNumber = 4;
  inline bool squad_surplus() const;
  inline void set_squad_surplus(bool value);

  // optional .TF_Matchmaking_WizardStep wizard_step = 5 [default = TF_Matchmaking_WizardStep_INVALID];
  inline bool has_wizard_step() const;
  inline void clear_wizard_step();
  static const int kWizardStepFieldNumber = 5;
  inline ::TF_Matchmaking_WizardStep wizard_step() const;
  inline void set_wizard_step(::TF_Matchmaking_WizardStep value);

  // optional uint32 client_version = 6 [default = 1225];
  inline bool has_client_version() const;
  inline void clear_client_version();
  static const int kClientVersionFieldNumber = 6;
  inline ::google::protobuf::uint32 client_version() const;
  inline void set_client_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgCreateOrUpdateParty)
 private:
  inline void set_has_search_criteria();
  inline void clear_has_search_criteria();
  inline void set_has_steam_lobby_id();
  inline void clear_has_steam_lobby_id();
  inline void set_has_squad_surplus();
  inline void clear_has_squad_surplus();
  inline void set_has_wizard_step();
  inline void clear_has_wizard_step();
  inline void set_has_client_version();
  inline void clear_has_client_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::CMsgMatchSearchCriteria* search_criteria_;
  ::google::protobuf::uint64 steam_lobby_id_;
  bool squad_surplus_;
  int wizard_step_;
  ::google::protobuf::uint32 client_version_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgCreateOrUpdateParty* default_instance_;
};
// -------------------------------------------------------------------

class CMsgCreateOrUpdatePartyReply : public ::google::protobuf::Message {
 public:
  CMsgCreateOrUpdatePartyReply();
  virtual ~CMsgCreateOrUpdatePartyReply();

  CMsgCreateOrUpdatePartyReply(const CMsgCreateOrUpdatePartyReply& from);

  inline CMsgCreateOrUpdatePartyReply& operator=(const CMsgCreateOrUpdatePartyReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgCreateOrUpdatePartyReply& default_instance();

  void Swap(CMsgCreateOrUpdatePartyReply* other);

  // implements Message ----------------------------------------------

  CMsgCreateOrUpdatePartyReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgCreateOrUpdatePartyReply& from);
  void MergeFrom(const CMsgCreateOrUpdatePartyReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // optional string message = 2;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 2;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // optional .TF_Matchmaking_WizardStep wizard_step = 3 [default = TF_Matchmaking_WizardStep_INVALID];
  inline bool has_wizard_step() const;
  inline void clear_wizard_step();
  static const int kWizardStepFieldNumber = 3;
  inline ::TF_Matchmaking_WizardStep wizard_step() const;
  inline void set_wizard_step(::TF_Matchmaking_WizardStep value);

  // @@protoc_insertion_point(class_scope:CMsgCreateOrUpdatePartyReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_message();
  inline void clear_has_message();
  inline void set_has_wizard_step();
  inline void clear_has_wizard_step();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* message_;
  ::google::protobuf::uint32 result_;
  int wizard_step_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgCreateOrUpdatePartyReply* default_instance_;
};
// -------------------------------------------------------------------

class CSOTFParty : public ::google::protobuf::Message {
 public:
  CSOTFParty();
  virtual ~CSOTFParty();

  CSOTFParty(const CSOTFParty& from);

  inline CSOTFParty& operator=(const CSOTFParty& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFParty& default_instance();

  void Swap(CSOTFParty* other);

  // implements Message ----------------------------------------------

  CSOTFParty* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOTFParty& from);
  void MergeFrom(const CSOTFParty& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CSOTFParty_State State;
  static const State UI = CSOTFParty_State_UI;
  static const State FINDING_MATCH = CSOTFParty_State_FINDING_MATCH;
  static const State IN_MATCH = CSOTFParty_State_IN_MATCH;
  static const State AWAITING_RESERVATION_CONFIRMATION = CSOTFParty_State_AWAITING_RESERVATION_CONFIRMATION;
  static inline bool State_IsValid(int value) {
    return CSOTFParty_State_IsValid(value);
  }
  static const State State_MIN =
    CSOTFParty_State_State_MIN;
  static const State State_MAX =
    CSOTFParty_State_State_MAX;
  static const int State_ARRAYSIZE =
    CSOTFParty_State_State_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  State_descriptor() {
    return CSOTFParty_State_descriptor();
  }
  static inline const ::std::string& State_Name(State value) {
    return CSOTFParty_State_Name(value);
  }
  static inline bool State_Parse(const ::std::string& name,
      State* value) {
    return CSOTFParty_State_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint64 party_id = 1;
  inline bool has_party_id() const;
  inline void clear_party_id();
  static const int kPartyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 party_id() const;
  inline void set_party_id(::google::protobuf::uint64 value);

  // optional fixed64 leader_id = 2;
  inline bool has_leader_id() const;
  inline void clear_leader_id();
  static const int kLeaderIdFieldNumber = 2;
  inline ::google::protobuf::uint64 leader_id() const;
  inline void set_leader_id(::google::protobuf::uint64 value);

  // repeated fixed64 member_ids = 3;
  inline int member_ids_size() const;
  inline void clear_member_ids();
  static const int kMemberIdsFieldNumber = 3;
  inline ::google::protobuf::uint64 member_ids(int index) const;
  inline void set_member_ids(int index, ::google::protobuf::uint64 value);
  inline void add_member_ids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      member_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_member_ids();

  // repeated .CSOTFPartyMember members = 13;
  inline int members_size() const;
  inline void clear_members();
  static const int kMembersFieldNumber = 13;
  inline const ::CSOTFPartyMember& members(int index) const;
  inline ::CSOTFPartyMember* mutable_members(int index);
  inline ::CSOTFPartyMember* add_members();
  inline const ::google::protobuf::RepeatedPtrField< ::CSOTFPartyMember >&
      members() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSOTFPartyMember >*
      mutable_members();

  // repeated fixed64 pending_invites = 5;
  inline int pending_invites_size() const;
  inline void clear_pending_invites();
  static const int kPendingInvitesFieldNumber = 5;
  inline ::google::protobuf::uint64 pending_invites(int index) const;
  inline void set_pending_invites(int index, ::google::protobuf::uint64 value);
  inline void add_pending_invites(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      pending_invites() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_pending_invites();

  // optional .CSOTFParty.State state = 6 [default = UI];
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 6;
  inline ::CSOTFParty_State state() const;
  inline void set_state(::CSOTFParty_State value);

  // optional .TF_Matchmaking_WizardStep wizard_step = 29 [default = TF_Matchmaking_WizardStep_INVALID];
  inline bool has_wizard_step() const;
  inline void clear_wizard_step();
  static const int kWizardStepFieldNumber = 29;
  inline ::TF_Matchmaking_WizardStep wizard_step() const;
  inline void set_wizard_step(::TF_Matchmaking_WizardStep value);

  // optional uint32 started_matchmaking_time = 7;
  inline bool has_started_matchmaking_time() const;
  inline void clear_started_matchmaking_time();
  static const int kStartedMatchmakingTimeFieldNumber = 7;
  inline ::google::protobuf::uint32 started_matchmaking_time() const;
  inline void set_started_matchmaking_time(::google::protobuf::uint32 value);

  // repeated uint32 searching_players_by_group = 10;
  inline int searching_players_by_group_size() const;
  inline void clear_searching_players_by_group();
  static const int kSearchingPlayersByGroupFieldNumber = 10;
  inline ::google::protobuf::uint32 searching_players_by_group(int index) const;
  inline void set_searching_players_by_group(int index, ::google::protobuf::uint32 value);
  inline void add_searching_players_by_group(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      searching_players_by_group() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_searching_players_by_group();

  // optional fixed64 steam_lobby_id = 27;
  inline bool has_steam_lobby_id() const;
  inline void clear_steam_lobby_id();
  static const int kSteamLobbyIdFieldNumber = 27;
  inline ::google::protobuf::uint64 steam_lobby_id() const;
  inline void set_steam_lobby_id(::google::protobuf::uint64 value);

  // optional .TF_MatchmakingMode matchmaking_mode = 30 [default = TF_Matchmaking_INVALID];
  inline bool has_matchmaking_mode() const;
  inline void clear_matchmaking_mode();
  static const int kMatchmakingModeFieldNumber = 30;
  inline ::TF_MatchmakingMode matchmaking_mode() const;
  inline void set_matchmaking_mode(::TF_MatchmakingMode value);

  // optional bool search_late_join_ok = 23;
  inline bool has_search_late_join_ok() const;
  inline void clear_search_late_join_ok();
  static const int kSearchLateJoinOkFieldNumber = 23;
  inline bool search_late_join_ok() const;
  inline void set_search_late_join_ok(bool value);

  // optional string search_mvm_mannup_tour = 32;
  inline bool has_search_mvm_mannup_tour() const;
  inline void clear_search_mvm_mannup_tour();
  static const int kSearchMvmMannupTourFieldNumber = 32;
  inline const ::std::string& search_mvm_mannup_tour() const;
  inline void set_search_mvm_mannup_tour(const ::std::string& value);
  inline void set_search_mvm_mannup_tour(const char* value);
  inline void set_search_mvm_mannup_tour(const char* value, size_t size);
  inline ::std::string* mutable_search_mvm_mannup_tour();
  inline ::std::string* release_search_mvm_mannup_tour();
  inline void set_allocated_search_mvm_mannup_tour(::std::string* search_mvm_mannup_tour);

  // repeated string search_mvm_missions = 31;
  inline int search_mvm_missions_size() const;
  inline void clear_search_mvm_missions();
  static const int kSearchMvmMissionsFieldNumber = 31;
  inline const ::std::string& search_mvm_missions(int index) const;
  inline ::std::string* mutable_search_mvm_missions(int index);
  inline void set_search_mvm_missions(int index, const ::std::string& value);
  inline void set_search_mvm_missions(int index, const char* value);
  inline void set_search_mvm_missions(int index, const char* value, size_t size);
  inline ::std::string* add_search_mvm_missions();
  inline void add_search_mvm_missions(const ::std::string& value);
  inline void add_search_mvm_missions(const char* value);
  inline void add_search_mvm_missions(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& search_mvm_missions() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_search_mvm_missions();

  // optional bool search_play_for_bragging_rights = 26;
  inline bool has_search_play_for_bragging_rights() const;
  inline void clear_search_play_for_bragging_rights();
  static const int kSearchPlayForBraggingRightsFieldNumber = 26;
  inline bool search_play_for_bragging_rights() const;
  inline void set_search_play_for_bragging_rights(bool value);

  // optional uint32 search_quickplay_game_type = 28;
  inline bool has_search_quickplay_game_type() const;
  inline void clear_search_quickplay_game_type();
  static const int kSearchQuickplayGameTypeFieldNumber = 28;
  inline ::google::protobuf::uint32 search_quickplay_game_type() const;
  inline void set_search_quickplay_game_type(::google::protobuf::uint32 value);

  // optional uint32 search_ladder_type = 33;
  inline bool has_search_ladder_type() const;
  inline void clear_search_ladder_type();
  static const int kSearchLadderTypeFieldNumber = 33;
  inline ::google::protobuf::uint32 search_ladder_type() const;
  inline void set_search_ladder_type(::google::protobuf::uint32 value);

  // optional uint32 prevent_match_until_date = 18;
  inline bool has_prevent_match_until_date() const;
  inline void clear_prevent_match_until_date();
  static const int kPreventMatchUntilDateFieldNumber = 18;
  inline ::google::protobuf::uint32 prevent_match_until_date() const;
  inline void set_prevent_match_until_date(::google::protobuf::uint32 value);

  // optional uint32 prevent_match_account_id = 19;
  inline bool has_prevent_match_account_id() const;
  inline void clear_prevent_match_account_id();
  static const int kPreventMatchAccountIdFieldNumber = 19;
  inline ::google::protobuf::uint32 prevent_match_account_id() const;
  inline void set_prevent_match_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSOTFParty)
 private:
  inline void set_has_party_id();
  inline void clear_has_party_id();
  inline void set_has_leader_id();
  inline void clear_has_leader_id();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_wizard_step();
  inline void clear_has_wizard_step();
  inline void set_has_started_matchmaking_time();
  inline void clear_has_started_matchmaking_time();
  inline void set_has_steam_lobby_id();
  inline void clear_has_steam_lobby_id();
  inline void set_has_matchmaking_mode();
  inline void clear_has_matchmaking_mode();
  inline void set_has_search_late_join_ok();
  inline void clear_has_search_late_join_ok();
  inline void set_has_search_mvm_mannup_tour();
  inline void clear_has_search_mvm_mannup_tour();
  inline void set_has_search_play_for_bragging_rights();
  inline void clear_has_search_play_for_bragging_rights();
  inline void set_has_search_quickplay_game_type();
  inline void clear_has_search_quickplay_game_type();
  inline void set_has_search_ladder_type();
  inline void clear_has_search_ladder_type();
  inline void set_has_prevent_match_until_date();
  inline void clear_has_prevent_match_until_date();
  inline void set_has_prevent_match_account_id();
  inline void clear_has_prevent_match_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 party_id_;
  ::google::protobuf::uint64 leader_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > member_ids_;
  ::google::protobuf::RepeatedPtrField< ::CSOTFPartyMember > members_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > pending_invites_;
  int state_;
  int wizard_step_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > searching_players_by_group_;
  ::google::protobuf::uint32 started_matchmaking_time_;
  int matchmaking_mode_;
  ::google::protobuf::uint64 steam_lobby_id_;
  ::std::string* search_mvm_mannup_tour_;
  ::google::protobuf::RepeatedPtrField< ::std::string> search_mvm_missions_;
  bool search_late_join_ok_;
  bool search_play_for_bragging_rights_;
  ::google::protobuf::uint32 search_quickplay_game_type_;
  ::google::protobuf::uint32 search_ladder_type_;
  ::google::protobuf::uint32 prevent_match_until_date_;
  ::google::protobuf::uint32 prevent_match_account_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CSOTFParty* default_instance_;
};
// -------------------------------------------------------------------

class CSOTFPartyInvite_PartyMember : public ::google::protobuf::Message {
 public:
  CSOTFPartyInvite_PartyMember();
  virtual ~CSOTFPartyInvite_PartyMember();

  CSOTFPartyInvite_PartyMember(const CSOTFPartyInvite_PartyMember& from);

  inline CSOTFPartyInvite_PartyMember& operator=(const CSOTFPartyInvite_PartyMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFPartyInvite_PartyMember& default_instance();

  void Swap(CSOTFPartyInvite_PartyMember* other);

  // implements Message ----------------------------------------------

  CSOTFPartyInvite_PartyMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOTFPartyInvite_PartyMember& from);
  void MergeFrom(const CSOTFPartyInvite_PartyMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional fixed64 steam_id = 2;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 2;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);

  // optional uint32 avatar = 3;
  inline bool has_avatar() const;
  inline void clear_avatar();
  static const int kAvatarFieldNumber = 3;
  inline ::google::protobuf::uint32 avatar() const;
  inline void set_avatar(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSOTFPartyInvite.PartyMember)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_steam_id();
  inline void clear_has_steam_id();
  inline void set_has_avatar();
  inline void clear_has_avatar();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::uint64 steam_id_;
  ::google::protobuf::uint32 avatar_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CSOTFPartyInvite_PartyMember* default_instance_;
};
// -------------------------------------------------------------------

class CSOTFPartyInvite : public ::google::protobuf::Message {
 public:
  CSOTFPartyInvite();
  virtual ~CSOTFPartyInvite();

  CSOTFPartyInvite(const CSOTFPartyInvite& from);

  inline CSOTFPartyInvite& operator=(const CSOTFPartyInvite& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFPartyInvite& default_instance();

  void Swap(CSOTFPartyInvite* other);

  // implements Message ----------------------------------------------

  CSOTFPartyInvite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOTFPartyInvite& from);
  void MergeFrom(const CSOTFPartyInvite& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CSOTFPartyInvite_PartyMember PartyMember;

  // accessors -------------------------------------------------------

  // optional uint64 group_id = 1;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);

  // optional fixed64 sender_id = 2;
  inline bool has_sender_id() const;
  inline void clear_sender_id();
  static const int kSenderIdFieldNumber = 2;
  inline ::google::protobuf::uint64 sender_id() const;
  inline void set_sender_id(::google::protobuf::uint64 value);

  // optional string sender_name = 3;
  inline bool has_sender_name() const;
  inline void clear_sender_name();
  static const int kSenderNameFieldNumber = 3;
  inline const ::std::string& sender_name() const;
  inline void set_sender_name(const ::std::string& value);
  inline void set_sender_name(const char* value);
  inline void set_sender_name(const char* value, size_t size);
  inline ::std::string* mutable_sender_name();
  inline ::std::string* release_sender_name();
  inline void set_allocated_sender_name(::std::string* sender_name);

  // repeated .CSOTFPartyInvite.PartyMember members = 4;
  inline int members_size() const;
  inline void clear_members();
  static const int kMembersFieldNumber = 4;
  inline const ::CSOTFPartyInvite_PartyMember& members(int index) const;
  inline ::CSOTFPartyInvite_PartyMember* mutable_members(int index);
  inline ::CSOTFPartyInvite_PartyMember* add_members();
  inline const ::google::protobuf::RepeatedPtrField< ::CSOTFPartyInvite_PartyMember >&
      members() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSOTFPartyInvite_PartyMember >*
      mutable_members();

  // @@protoc_insertion_point(class_scope:CSOTFPartyInvite)
 private:
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_sender_id();
  inline void clear_has_sender_id();
  inline void set_has_sender_name();
  inline void clear_has_sender_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 group_id_;
  ::google::protobuf::uint64 sender_id_;
  ::std::string* sender_name_;
  ::google::protobuf::RepeatedPtrField< ::CSOTFPartyInvite_PartyMember > members_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CSOTFPartyInvite* default_instance_;
};
// -------------------------------------------------------------------

class CTFLobbyMember : public ::google::protobuf::Message {
 public:
  CTFLobbyMember();
  virtual ~CTFLobbyMember();

  CTFLobbyMember(const CTFLobbyMember& from);

  inline CTFLobbyMember& operator=(const CTFLobbyMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CTFLobbyMember& default_instance();

  void Swap(CTFLobbyMember* other);

  // implements Message ----------------------------------------------

  CTFLobbyMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CTFLobbyMember& from);
  void MergeFrom(const CTFLobbyMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CTFLobbyMember_ConnectState ConnectState;
  static const ConnectState INVALID = CTFLobbyMember_ConnectState_INVALID;
  static const ConnectState RESERVATION_PENDING = CTFLobbyMember_ConnectState_RESERVATION_PENDING;
  static const ConnectState RESERVED = CTFLobbyMember_ConnectState_RESERVED;
  static const ConnectState CONNECTED = CTFLobbyMember_ConnectState_CONNECTED;
  static const ConnectState DISCONNECTED = CTFLobbyMember_ConnectState_DISCONNECTED;
  static inline bool ConnectState_IsValid(int value) {
    return CTFLobbyMember_ConnectState_IsValid(value);
  }
  static const ConnectState ConnectState_MIN =
    CTFLobbyMember_ConnectState_ConnectState_MIN;
  static const ConnectState ConnectState_MAX =
    CTFLobbyMember_ConnectState_ConnectState_MAX;
  static const int ConnectState_ARRAYSIZE =
    CTFLobbyMember_ConnectState_ConnectState_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ConnectState_descriptor() {
    return CTFLobbyMember_ConnectState_descriptor();
  }
  static inline const ::std::string& ConnectState_Name(ConnectState value) {
    return CTFLobbyMember_ConnectState_Name(value);
  }
  static inline bool ConnectState_Parse(const ::std::string& name,
      ConnectState* value) {
    return CTFLobbyMember_ConnectState_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional fixed64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);

  // optional .TF_GC_TEAM team = 3 [default = TF_GC_TEAM_DEFENDERS];
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 3;
  inline ::TF_GC_TEAM team() const;
  inline void set_team(::TF_GC_TEAM value);

  // optional .CTFLobbyMember.ConnectState connect_state = 13 [default = INVALID];
  inline bool has_connect_state() const;
  inline void clear_connect_state();
  static const int kConnectStateFieldNumber = 13;
  inline ::CTFLobbyMember_ConnectState connect_state() const;
  inline void set_connect_state(::CTFLobbyMember_ConnectState value);

  // optional string name = 6;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 6;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional float latitude = 8;
  inline bool has_latitude() const;
  inline void clear_latitude();
  static const int kLatitudeFieldNumber = 8;
  inline float latitude() const;
  inline void set_latitude(float value);

  // optional float longitude = 9;
  inline bool has_longitude() const;
  inline void clear_longitude();
  static const int kLongitudeFieldNumber = 9;
  inline float longitude() const;
  inline void set_longitude(float value);

  // optional .TFLobbyReadyState ready_state = 11 [default = TFLobbyReadyState_UNDECLARED];
  inline bool has_ready_state() const;
  inline void clear_ready_state();
  static const int kReadyStateFieldNumber = 11;
  inline ::TFLobbyReadyState ready_state() const;
  inline void set_ready_state(::TFLobbyReadyState value);

  // optional uint64 party_id = 12;
  inline bool has_party_id() const;
  inline void clear_party_id();
  static const int kPartyIdFieldNumber = 12;
  inline ::google::protobuf::uint64 party_id() const;
  inline void set_party_id(::google::protobuf::uint64 value);

  // optional bool squad_surplus = 14;
  inline bool has_squad_surplus() const;
  inline void clear_squad_surplus();
  static const int kSquadSurplusFieldNumber = 14;
  inline bool squad_surplus() const;
  inline void set_squad_surplus(bool value);

  // optional uint32 badge_level = 15;
  inline bool has_badge_level() const;
  inline void clear_badge_level();
  static const int kBadgeLevelFieldNumber = 15;
  inline ::google::protobuf::uint32 badge_level() const;
  inline void set_badge_level(::google::protobuf::uint32 value);

  // optional uint32 abandon_time = 16 [default = 0];
  inline bool has_abandon_time() const;
  inline void clear_abandon_time();
  static const int kAbandonTimeFieldNumber = 16;
  inline ::google::protobuf::uint32 abandon_time() const;
  inline void set_abandon_time(::google::protobuf::uint32 value);

  // optional uint32 last_connect_time = 17;
  inline bool has_last_connect_time() const;
  inline void clear_last_connect_time();
  static const int kLastConnectTimeFieldNumber = 17;
  inline ::google::protobuf::uint32 last_connect_time() const;
  inline void set_last_connect_time(::google::protobuf::uint32 value);

  // optional bool quitting_results_in_penalty = 18;
  inline bool has_quitting_results_in_penalty() const;
  inline void clear_quitting_results_in_penalty();
  static const int kQuittingResultsInPenaltyFieldNumber = 18;
  inline bool quitting_results_in_penalty() const;
  inline void set_quitting_results_in_penalty(bool value);

  // @@protoc_insertion_point(class_scope:CTFLobbyMember)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_team();
  inline void clear_has_team();
  inline void set_has_connect_state();
  inline void clear_has_connect_state();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_latitude();
  inline void clear_has_latitude();
  inline void set_has_longitude();
  inline void clear_has_longitude();
  inline void set_has_ready_state();
  inline void clear_has_ready_state();
  inline void set_has_party_id();
  inline void clear_has_party_id();
  inline void set_has_squad_surplus();
  inline void clear_has_squad_surplus();
  inline void set_has_badge_level();
  inline void clear_has_badge_level();
  inline void set_has_abandon_time();
  inline void clear_has_abandon_time();
  inline void set_has_last_connect_time();
  inline void clear_has_last_connect_time();
  inline void set_has_quitting_results_in_penalty();
  inline void clear_has_quitting_results_in_penalty();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  int team_;
  int connect_state_;
  ::std::string* name_;
  float latitude_;
  float longitude_;
  ::google::protobuf::uint64 party_id_;
  int ready_state_;
  ::google::protobuf::uint32 badge_level_;
  ::google::protobuf::uint32 abandon_time_;
  bool squad_surplus_;
  bool quitting_results_in_penalty_;
  ::google::protobuf::uint32 last_connect_time_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CTFLobbyMember* default_instance_;
};
// -------------------------------------------------------------------

class CLobbyPendingPlayerReport : public ::google::protobuf::Message {
 public:
  CLobbyPendingPlayerReport();
  virtual ~CLobbyPendingPlayerReport();

  CLobbyPendingPlayerReport(const CLobbyPendingPlayerReport& from);

  inline CLobbyPendingPlayerReport& operator=(const CLobbyPendingPlayerReport& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CLobbyPendingPlayerReport& default_instance();

  void Swap(CLobbyPendingPlayerReport* other);

  // implements Message ----------------------------------------------

  CLobbyPendingPlayerReport* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CLobbyPendingPlayerReport& from);
  void MergeFrom(const CLobbyPendingPlayerReport& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional fixed32 date = 2;
  inline bool has_date() const;
  inline void clear_date();
  static const int kDateFieldNumber = 2;
  inline ::google::protobuf::uint32 date() const;
  inline void set_date(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CLobbyPendingPlayerReport)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_date();
  inline void clear_has_date();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 date_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CLobbyPendingPlayerReport* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGameMatchSignOut : public ::google::protobuf::Message {
 public:
  CMsgGameMatchSignOut();
  virtual ~CMsgGameMatchSignOut();

  CMsgGameMatchSignOut(const CMsgGameMatchSignOut& from);

  inline CMsgGameMatchSignOut& operator=(const CMsgGameMatchSignOut& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGameMatchSignOut& default_instance();

  void Swap(CMsgGameMatchSignOut* other);

  // implements Message ----------------------------------------------

  CMsgGameMatchSignOut* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGameMatchSignOut& from);
  void MergeFrom(const CMsgGameMatchSignOut& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgGameMatchSignOut)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGameMatchSignOut* default_instance_;
};
// -------------------------------------------------------------------

class CSOTFLobby : public ::google::protobuf::Message {
 public:
  CSOTFLobby();
  virtual ~CSOTFLobby();

  CSOTFLobby(const CSOTFLobby& from);

  inline CSOTFLobby& operator=(const CSOTFLobby& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFLobby& default_instance();

  void Swap(CSOTFLobby* other);

  // implements Message ----------------------------------------------

  CSOTFLobby* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOTFLobby& from);
  void MergeFrom(const CSOTFLobby& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CSOTFLobby_State State;
  static const State SERVERSETUP = CSOTFLobby_State_SERVERSETUP;
  static const State RUN = CSOTFLobby_State_RUN;
  static const State POSTGAME = CSOTFLobby_State_POSTGAME;
  static const State NOTREADY = CSOTFLobby_State_NOTREADY;
  static const State SERVERASSIGN = CSOTFLobby_State_SERVERASSIGN;
  static inline bool State_IsValid(int value) {
    return CSOTFLobby_State_IsValid(value);
  }
  static const State State_MIN =
    CSOTFLobby_State_State_MIN;
  static const State State_MAX =
    CSOTFLobby_State_State_MAX;
  static const int State_ARRAYSIZE =
    CSOTFLobby_State_State_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  State_descriptor() {
    return CSOTFLobby_State_descriptor();
  }
  static inline const ::std::string& State_Name(State value) {
    return CSOTFLobby_State_Name(value);
  }
  static inline bool State_Parse(const ::std::string& name,
      State* value) {
    return CSOTFLobby_State_Parse(name, value);
  }

  typedef CSOTFLobby_LobbyType LobbyType;
  static const LobbyType INVALID = CSOTFLobby_LobbyType_INVALID;
  static const LobbyType MATCH = CSOTFLobby_LobbyType_MATCH;
  static const LobbyType PRACTICE = CSOTFLobby_LobbyType_PRACTICE;
  static const LobbyType TOURNAMENT = CSOTFLobby_LobbyType_TOURNAMENT;
  static const LobbyType TUTORIAL = CSOTFLobby_LobbyType_TUTORIAL;
  static inline bool LobbyType_IsValid(int value) {
    return CSOTFLobby_LobbyType_IsValid(value);
  }
  static const LobbyType LobbyType_MIN =
    CSOTFLobby_LobbyType_LobbyType_MIN;
  static const LobbyType LobbyType_MAX =
    CSOTFLobby_LobbyType_LobbyType_MAX;
  static const int LobbyType_ARRAYSIZE =
    CSOTFLobby_LobbyType_LobbyType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  LobbyType_descriptor() {
    return CSOTFLobby_LobbyType_descriptor();
  }
  static inline const ::std::string& LobbyType_Name(LobbyType value) {
    return CSOTFLobby_LobbyType_Name(value);
  }
  static inline bool LobbyType_Parse(const ::std::string& name,
      LobbyType* value) {
    return CSOTFLobby_LobbyType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint64 lobby_id = 1;
  inline bool has_lobby_id() const;
  inline void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 lobby_id() const;
  inline void set_lobby_id(::google::protobuf::uint64 value);

  // repeated .CTFLobbyMember members = 2;
  inline int members_size() const;
  inline void clear_members();
  static const int kMembersFieldNumber = 2;
  inline const ::CTFLobbyMember& members(int index) const;
  inline ::CTFLobbyMember* mutable_members(int index);
  inline ::CTFLobbyMember* add_members();
  inline const ::google::protobuf::RepeatedPtrField< ::CTFLobbyMember >&
      members() const;
  inline ::google::protobuf::RepeatedPtrField< ::CTFLobbyMember >*
      mutable_members();

  // repeated .CTFLobbyMember left_members = 7;
  inline int left_members_size() const;
  inline void clear_left_members();
  static const int kLeftMembersFieldNumber = 7;
  inline const ::CTFLobbyMember& left_members(int index) const;
  inline ::CTFLobbyMember* mutable_left_members(int index);
  inline ::CTFLobbyMember* add_left_members();
  inline const ::google::protobuf::RepeatedPtrField< ::CTFLobbyMember >&
      left_members() const;
  inline ::google::protobuf::RepeatedPtrField< ::CTFLobbyMember >*
      mutable_left_members();

  // optional fixed64 leader_id = 11;
  inline bool has_leader_id() const;
  inline void clear_leader_id();
  static const int kLeaderIdFieldNumber = 11;
  inline ::google::protobuf::uint64 leader_id() const;
  inline void set_leader_id(::google::protobuf::uint64 value);

  // optional fixed64 server_id = 6 [default = 0];
  inline bool has_server_id() const;
  inline void clear_server_id();
  static const int kServerIdFieldNumber = 6;
  inline ::google::protobuf::uint64 server_id() const;
  inline void set_server_id(::google::protobuf::uint64 value);

  // repeated fixed64 pending_invites = 10;
  inline int pending_invites_size() const;
  inline void clear_pending_invites();
  static const int kPendingInvitesFieldNumber = 10;
  inline ::google::protobuf::uint64 pending_invites(int index) const;
  inline void set_pending_invites(int index, ::google::protobuf::uint64 value);
  inline void add_pending_invites(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      pending_invites() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_pending_invites();

  // optional .CSOTFLobby.State state = 4 [default = SERVERSETUP];
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 4;
  inline ::CSOTFLobby_State state() const;
  inline void set_state(::CSOTFLobby_State value);

  // optional string connect = 5;
  inline bool has_connect() const;
  inline void clear_connect();
  static const int kConnectFieldNumber = 5;
  inline const ::std::string& connect() const;
  inline void set_connect(const ::std::string& value);
  inline void set_connect(const char* value);
  inline void set_connect(const char* value, size_t size);
  inline ::std::string* mutable_connect();
  inline ::std::string* release_connect();
  inline void set_allocated_connect(::std::string* connect);

  // optional .CSOTFLobby.LobbyType lobby_type = 12 [default = INVALID];
  inline bool has_lobby_type() const;
  inline void clear_lobby_type();
  static const int kLobbyTypeFieldNumber = 12;
  inline ::CSOTFLobby_LobbyType lobby_type() const;
  inline void set_lobby_type(::CSOTFLobby_LobbyType value);

  // optional bool allow_cheats = 13;
  inline bool has_allow_cheats() const;
  inline void clear_allow_cheats();
  static const int kAllowCheatsFieldNumber = 13;
  inline bool allow_cheats() const;
  inline void set_allow_cheats(bool value);

  // optional string game_name = 16;
  inline bool has_game_name() const;
  inline void clear_game_name();
  static const int kGameNameFieldNumber = 16;
  inline const ::std::string& game_name() const;
  inline void set_game_name(const ::std::string& value);
  inline void set_game_name(const char* value);
  inline void set_game_name(const char* value, size_t size);
  inline ::std::string* mutable_game_name();
  inline ::std::string* release_game_name();
  inline void set_allocated_game_name(::std::string* game_name);

  // optional uint32 server_region = 21 [default = 0];
  inline bool has_server_region() const;
  inline void clear_server_region();
  static const int kServerRegionFieldNumber = 21;
  inline ::google::protobuf::uint32 server_region() const;
  inline void set_server_region(::google::protobuf::uint32 value);

  // optional .TF_GC_GameState game_state = 22 [default = TF_GC_GAMESTATE_STATE_INIT];
  inline bool has_game_state() const;
  inline void clear_game_state();
  static const int kGameStateFieldNumber = 22;
  inline ::TF_GC_GameState game_state() const;
  inline void set_game_state(::TF_GC_GameState value);

  // optional uint32 num_spectators = 23;
  inline bool has_num_spectators() const;
  inline void clear_num_spectators();
  static const int kNumSpectatorsFieldNumber = 23;
  inline ::google::protobuf::uint32 num_spectators() const;
  inline void set_num_spectators(::google::protobuf::uint32 value);

  // optional uint32 matchgroup = 25;
  inline bool has_matchgroup() const;
  inline void clear_matchgroup();
  static const int kMatchgroupFieldNumber = 25;
  inline ::google::protobuf::uint32 matchgroup() const;
  inline void set_matchgroup(::google::protobuf::uint32 value);

  // optional float readyup_remaining_time = 26;
  inline bool has_readyup_remaining_time() const;
  inline void clear_readyup_remaining_time();
  static const int kReadyupRemainingTimeFieldNumber = 26;
  inline float readyup_remaining_time() const;
  inline void set_readyup_remaining_time(float value);

  // optional bool leaver_detected = 27;
  inline bool has_leaver_detected() const;
  inline void clear_leaver_detected();
  static const int kLeaverDetectedFieldNumber = 27;
  inline bool leaver_detected() const;
  inline void set_leaver_detected(bool value);

  // optional bool allow_spectating = 31 [default = true];
  inline bool has_allow_spectating() const;
  inline void clear_allow_spectating();
  static const int kAllowSpectatingFieldNumber = 31;
  inline bool allow_spectating() const;
  inline void set_allow_spectating(bool value);

  // optional fixed64 load_game_lobby_id = 33;
  inline bool has_load_game_lobby_id() const;
  inline void clear_load_game_lobby_id();
  static const int kLoadGameLobbyIdFieldNumber = 33;
  inline ::google::protobuf::uint64 load_game_lobby_id() const;
  inline void set_load_game_lobby_id(::google::protobuf::uint64 value);

  // optional uint32 load_game_save_number = 34;
  inline bool has_load_game_save_number() const;
  inline void clear_load_game_save_number();
  static const int kLoadGameSaveNumberFieldNumber = 34;
  inline ::google::protobuf::uint32 load_game_save_number() const;
  inline void set_load_game_save_number(::google::protobuf::uint32 value);

  // optional string mannup_tour_name = 42;
  inline bool has_mannup_tour_name() const;
  inline void clear_mannup_tour_name();
  static const int kMannupTourNameFieldNumber = 42;
  inline const ::std::string& mannup_tour_name() const;
  inline void set_mannup_tour_name(const ::std::string& value);
  inline void set_mannup_tour_name(const char* value);
  inline void set_mannup_tour_name(const char* value, size_t size);
  inline ::std::string* mutable_mannup_tour_name();
  inline ::std::string* release_mannup_tour_name();
  inline void set_allocated_mannup_tour_name(::std::string* mannup_tour_name);

  // optional string map_name = 38;
  inline bool has_map_name() const;
  inline void clear_map_name();
  static const int kMapNameFieldNumber = 38;
  inline const ::std::string& map_name() const;
  inline void set_map_name(const ::std::string& value);
  inline void set_map_name(const char* value);
  inline void set_map_name(const char* value, size_t size);
  inline ::std::string* mutable_map_name();
  inline ::std::string* release_map_name();
  inline void set_allocated_map_name(::std::string* map_name);

  // optional string mission_name = 39;
  inline bool has_mission_name() const;
  inline void clear_mission_name();
  static const int kMissionNameFieldNumber = 39;
  inline const ::std::string& mission_name() const;
  inline void set_mission_name(const ::std::string& value);
  inline void set_mission_name(const char* value);
  inline void set_mission_name(const char* value, size_t size);
  inline ::std::string* mutable_mission_name();
  inline ::std::string* release_mission_name();
  inline void set_allocated_mission_name(::std::string* mission_name);

  // optional uint32 match_group = 41;
  inline bool has_match_group() const;
  inline void clear_match_group();
  static const int kMatchGroupFieldNumber = 41;
  inline ::google::protobuf::uint32 match_group() const;
  inline void set_match_group(::google::protobuf::uint32 value);

  // optional uint32 match_id = 30;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 30;
  inline ::google::protobuf::uint32 match_id() const;
  inline void set_match_id(::google::protobuf::uint32 value);

  // optional fixed32 replay_salt = 35;
  inline bool has_replay_salt() const;
  inline void clear_replay_salt();
  static const int kReplaySaltFieldNumber = 35;
  inline ::google::protobuf::uint32 replay_salt() const;
  inline void set_replay_salt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CSOTFLobby)
 private:
  inline void set_has_lobby_id();
  inline void clear_has_lobby_id();
  inline void set_has_leader_id();
  inline void clear_has_leader_id();
  inline void set_has_server_id();
  inline void clear_has_server_id();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_connect();
  inline void clear_has_connect();
  inline void set_has_lobby_type();
  inline void clear_has_lobby_type();
  inline void set_has_allow_cheats();
  inline void clear_has_allow_cheats();
  inline void set_has_game_name();
  inline void clear_has_game_name();
  inline void set_has_server_region();
  inline void clear_has_server_region();
  inline void set_has_game_state();
  inline void clear_has_game_state();
  inline void set_has_num_spectators();
  inline void clear_has_num_spectators();
  inline void set_has_matchgroup();
  inline void clear_has_matchgroup();
  inline void set_has_readyup_remaining_time();
  inline void clear_has_readyup_remaining_time();
  inline void set_has_leaver_detected();
  inline void clear_has_leaver_detected();
  inline void set_has_allow_spectating();
  inline void clear_has_allow_spectating();
  inline void set_has_load_game_lobby_id();
  inline void clear_has_load_game_lobby_id();
  inline void set_has_load_game_save_number();
  inline void clear_has_load_game_save_number();
  inline void set_has_mannup_tour_name();
  inline void clear_has_mannup_tour_name();
  inline void set_has_map_name();
  inline void clear_has_map_name();
  inline void set_has_mission_name();
  inline void clear_has_mission_name();
  inline void set_has_match_group();
  inline void clear_has_match_group();
  inline void set_has_match_id();
  inline void clear_has_match_id();
  inline void set_has_replay_salt();
  inline void clear_has_replay_salt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 lobby_id_;
  ::google::protobuf::RepeatedPtrField< ::CTFLobbyMember > members_;
  ::google::protobuf::RepeatedPtrField< ::CTFLobbyMember > left_members_;
  ::google::protobuf::uint64 leader_id_;
  ::google::protobuf::uint64 server_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > pending_invites_;
  ::std::string* connect_;
  int state_;
  int lobby_type_;
  ::std::string* game_name_;
  ::google::protobuf::uint32 server_region_;
  int game_state_;
  ::google::protobuf::uint32 num_spectators_;
  ::google::protobuf::uint32 matchgroup_;
  bool allow_cheats_;
  bool leaver_detected_;
  bool allow_spectating_;
  float readyup_remaining_time_;
  ::google::protobuf::uint64 load_game_lobby_id_;
  ::std::string* mannup_tour_name_;
  ::std::string* map_name_;
  ::google::protobuf::uint32 load_game_save_number_;
  ::google::protobuf::uint32 match_group_;
  ::std::string* mission_name_;
  ::google::protobuf::uint32 match_id_;
  ::google::protobuf::uint32 replay_salt_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CSOTFLobby* default_instance_;
};
// -------------------------------------------------------------------

class CMsgExitMatchmaking : public ::google::protobuf::Message {
 public:
  CMsgExitMatchmaking();
  virtual ~CMsgExitMatchmaking();

  CMsgExitMatchmaking(const CMsgExitMatchmaking& from);

  inline CMsgExitMatchmaking& operator=(const CMsgExitMatchmaking& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgExitMatchmaking& default_instance();

  void Swap(CMsgExitMatchmaking* other);

  // implements Message ----------------------------------------------

  CMsgExitMatchmaking* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgExitMatchmaking& from);
  void MergeFrom(const CMsgExitMatchmaking& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgExitMatchmaking)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgExitMatchmaking* default_instance_;
};
// -------------------------------------------------------------------

class CMsgAcceptInvite : public ::google::protobuf::Message {
 public:
  CMsgAcceptInvite();
  virtual ~CMsgAcceptInvite();

  CMsgAcceptInvite(const CMsgAcceptInvite& from);

  inline CMsgAcceptInvite& operator=(const CMsgAcceptInvite& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgAcceptInvite& default_instance();

  void Swap(CMsgAcceptInvite* other);

  // implements Message ----------------------------------------------

  CMsgAcceptInvite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgAcceptInvite& from);
  void MergeFrom(const CMsgAcceptInvite& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 party_id = 1;
  inline bool has_party_id() const;
  inline void clear_party_id();
  static const int kPartyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 party_id() const;
  inline void set_party_id(::google::protobuf::uint64 value);

  // optional fixed64 steamid_lobby = 2;
  inline bool has_steamid_lobby() const;
  inline void clear_steamid_lobby();
  static const int kSteamidLobbyFieldNumber = 2;
  inline ::google::protobuf::uint64 steamid_lobby() const;
  inline void set_steamid_lobby(::google::protobuf::uint64 value);

  // optional uint32 client_version = 3 [default = 1225];
  inline bool has_client_version() const;
  inline void clear_client_version();
  static const int kClientVersionFieldNumber = 3;
  inline ::google::protobuf::uint32 client_version() const;
  inline void set_client_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgAcceptInvite)
 private:
  inline void set_has_party_id();
  inline void clear_has_party_id();
  inline void set_has_steamid_lobby();
  inline void clear_has_steamid_lobby();
  inline void set_has_client_version();
  inline void clear_has_client_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 party_id_;
  ::google::protobuf::uint64 steamid_lobby_;
  ::google::protobuf::uint32 client_version_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgAcceptInvite* default_instance_;
};
// -------------------------------------------------------------------

class CMsgAcceptInviteResponse : public ::google::protobuf::Message {
 public:
  CMsgAcceptInviteResponse();
  virtual ~CMsgAcceptInviteResponse();

  CMsgAcceptInviteResponse(const CMsgAcceptInviteResponse& from);

  inline CMsgAcceptInviteResponse& operator=(const CMsgAcceptInviteResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgAcceptInviteResponse& default_instance();

  void Swap(CMsgAcceptInviteResponse* other);

  // implements Message ----------------------------------------------

  CMsgAcceptInviteResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgAcceptInviteResponse& from);
  void MergeFrom(const CMsgAcceptInviteResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result_code = 1;
  inline bool has_result_code() const;
  inline void clear_result_code();
  static const int kResultCodeFieldNumber = 1;
  inline ::google::protobuf::int32 result_code() const;
  inline void set_result_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgAcceptInviteResponse)
 private:
  inline void set_has_result_code();
  inline void clear_has_result_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 result_code_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgAcceptInviteResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgReadyUp : public ::google::protobuf::Message {
 public:
  CMsgReadyUp();
  virtual ~CMsgReadyUp();

  CMsgReadyUp(const CMsgReadyUp& from);

  inline CMsgReadyUp& operator=(const CMsgReadyUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgReadyUp& default_instance();

  void Swap(CMsgReadyUp* other);

  // implements Message ----------------------------------------------

  CMsgReadyUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgReadyUp& from);
  void MergeFrom(const CMsgReadyUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .TFLobbyReadyState state = 1 [default = TFLobbyReadyState_UNDECLARED];
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::TFLobbyReadyState state() const;
  inline void set_state(::TFLobbyReadyState value);

  // @@protoc_insertion_point(class_scope:CMsgReadyUp)
 private:
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int state_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgReadyUp* default_instance_;
};
// -------------------------------------------------------------------

class CMsgMatchmakingSearchCountRequest : public ::google::protobuf::Message {
 public:
  CMsgMatchmakingSearchCountRequest();
  virtual ~CMsgMatchmakingSearchCountRequest();

  CMsgMatchmakingSearchCountRequest(const CMsgMatchmakingSearchCountRequest& from);

  inline CMsgMatchmakingSearchCountRequest& operator=(const CMsgMatchmakingSearchCountRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMatchmakingSearchCountRequest& default_instance();

  void Swap(CMsgMatchmakingSearchCountRequest* other);

  // implements Message ----------------------------------------------

  CMsgMatchmakingSearchCountRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgMatchmakingSearchCountRequest& from);
  void MergeFrom(const CMsgMatchmakingSearchCountRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgMatchmakingSearchCountRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgMatchmakingSearchCountRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgMatchmakingSearchCountResponse : public ::google::protobuf::Message {
 public:
  CMsgMatchmakingSearchCountResponse();
  virtual ~CMsgMatchmakingSearchCountResponse();

  CMsgMatchmakingSearchCountResponse(const CMsgMatchmakingSearchCountResponse& from);

  inline CMsgMatchmakingSearchCountResponse& operator=(const CMsgMatchmakingSearchCountResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMatchmakingSearchCountResponse& default_instance();

  void Swap(CMsgMatchmakingSearchCountResponse* other);

  // implements Message ----------------------------------------------

  CMsgMatchmakingSearchCountResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgMatchmakingSearchCountResponse& from);
  void MergeFrom(const CMsgMatchmakingSearchCountResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 searching_players_by_group = 1;
  inline int searching_players_by_group_size() const;
  inline void clear_searching_players_by_group();
  static const int kSearchingPlayersByGroupFieldNumber = 1;
  inline ::google::protobuf::uint32 searching_players_by_group(int index) const;
  inline void set_searching_players_by_group(int index, ::google::protobuf::uint32 value);
  inline void add_searching_players_by_group(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      searching_players_by_group() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_searching_players_by_group();

  // @@protoc_insertion_point(class_scope:CMsgMatchmakingSearchCountResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > searching_players_by_group_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgMatchmakingSearchCountResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgKickedFromMatchmakingQueue : public ::google::protobuf::Message {
 public:
  CMsgKickedFromMatchmakingQueue();
  virtual ~CMsgKickedFromMatchmakingQueue();

  CMsgKickedFromMatchmakingQueue(const CMsgKickedFromMatchmakingQueue& from);

  inline CMsgKickedFromMatchmakingQueue& operator=(const CMsgKickedFromMatchmakingQueue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgKickedFromMatchmakingQueue& default_instance();

  void Swap(CMsgKickedFromMatchmakingQueue* other);

  // implements Message ----------------------------------------------

  CMsgKickedFromMatchmakingQueue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgKickedFromMatchmakingQueue& from);
  void MergeFrom(const CMsgKickedFromMatchmakingQueue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgKickedFromMatchmakingQueue)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgKickedFromMatchmakingQueue* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFPlayerFailedToConnect : public ::google::protobuf::Message {
 public:
  CMsgTFPlayerFailedToConnect();
  virtual ~CMsgTFPlayerFailedToConnect();

  CMsgTFPlayerFailedToConnect(const CMsgTFPlayerFailedToConnect& from);

  inline CMsgTFPlayerFailedToConnect& operator=(const CMsgTFPlayerFailedToConnect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFPlayerFailedToConnect& default_instance();

  void Swap(CMsgTFPlayerFailedToConnect* other);

  // implements Message ----------------------------------------------

  CMsgTFPlayerFailedToConnect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFPlayerFailedToConnect& from);
  void MergeFrom(const CMsgTFPlayerFailedToConnect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 failed_loaders = 1;
  inline int failed_loaders_size() const;
  inline void clear_failed_loaders();
  static const int kFailedLoadersFieldNumber = 1;
  inline ::google::protobuf::uint64 failed_loaders(int index) const;
  inline void set_failed_loaders(int index, ::google::protobuf::uint64 value);
  inline void add_failed_loaders(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      failed_loaders() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_failed_loaders();

  // @@protoc_insertion_point(class_scope:CMsgTFPlayerFailedToConnect)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > failed_loaders_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFPlayerFailedToConnect* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFJoinChatChannel : public ::google::protobuf::Message {
 public:
  CMsgTFJoinChatChannel();
  virtual ~CMsgTFJoinChatChannel();

  CMsgTFJoinChatChannel(const CMsgTFJoinChatChannel& from);

  inline CMsgTFJoinChatChannel& operator=(const CMsgTFJoinChatChannel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFJoinChatChannel& default_instance();

  void Swap(CMsgTFJoinChatChannel* other);

  // implements Message ----------------------------------------------

  CMsgTFJoinChatChannel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFJoinChatChannel& from);
  void MergeFrom(const CMsgTFJoinChatChannel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string persona_name = 1;
  inline bool has_persona_name() const;
  inline void clear_persona_name();
  static const int kPersonaNameFieldNumber = 1;
  inline const ::std::string& persona_name() const;
  inline void set_persona_name(const ::std::string& value);
  inline void set_persona_name(const char* value);
  inline void set_persona_name(const char* value, size_t size);
  inline ::std::string* mutable_persona_name();
  inline ::std::string* release_persona_name();
  inline void set_allocated_persona_name(::std::string* persona_name);

  // optional string channel_name = 2;
  inline bool has_channel_name() const;
  inline void clear_channel_name();
  static const int kChannelNameFieldNumber = 2;
  inline const ::std::string& channel_name() const;
  inline void set_channel_name(const ::std::string& value);
  inline void set_channel_name(const char* value);
  inline void set_channel_name(const char* value, size_t size);
  inline ::std::string* mutable_channel_name();
  inline ::std::string* release_channel_name();
  inline void set_allocated_channel_name(::std::string* channel_name);

  // optional string password = 3;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 3;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  inline ::std::string* release_password();
  inline void set_allocated_password(::std::string* password);

  // optional .ChatChannelType_t channel_type = 4 [default = ChatChannelType_Regional];
  inline bool has_channel_type() const;
  inline void clear_channel_type();
  static const int kChannelTypeFieldNumber = 4;
  inline ::ChatChannelType_t channel_type() const;
  inline void set_channel_type(::ChatChannelType_t value);

  // @@protoc_insertion_point(class_scope:CMsgTFJoinChatChannel)
 private:
  inline void set_has_persona_name();
  inline void clear_has_persona_name();
  inline void set_has_channel_name();
  inline void clear_has_channel_name();
  inline void set_has_password();
  inline void clear_has_password();
  inline void set_has_channel_type();
  inline void clear_has_channel_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* persona_name_;
  ::std::string* channel_name_;
  ::std::string* password_;
  int channel_type_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFJoinChatChannel* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFLeaveChatChannel : public ::google::protobuf::Message {
 public:
  CMsgTFLeaveChatChannel();
  virtual ~CMsgTFLeaveChatChannel();

  CMsgTFLeaveChatChannel(const CMsgTFLeaveChatChannel& from);

  inline CMsgTFLeaveChatChannel& operator=(const CMsgTFLeaveChatChannel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFLeaveChatChannel& default_instance();

  void Swap(CMsgTFLeaveChatChannel* other);

  // implements Message ----------------------------------------------

  CMsgTFLeaveChatChannel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFLeaveChatChannel& from);
  void MergeFrom(const CMsgTFLeaveChatChannel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string channel_name = 1;
  inline bool has_channel_name() const;
  inline void clear_channel_name();
  static const int kChannelNameFieldNumber = 1;
  inline const ::std::string& channel_name() const;
  inline void set_channel_name(const ::std::string& value);
  inline void set_channel_name(const char* value);
  inline void set_channel_name(const char* value, size_t size);
  inline ::std::string* mutable_channel_name();
  inline ::std::string* release_channel_name();
  inline void set_allocated_channel_name(::std::string* channel_name);

  // @@protoc_insertion_point(class_scope:CMsgTFLeaveChatChannel)
 private:
  inline void set_has_channel_name();
  inline void clear_has_channel_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* channel_name_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFLeaveChatChannel* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFJoinChatChannelResponse_ChatMember : public ::google::protobuf::Message {
 public:
  CMsgTFJoinChatChannelResponse_ChatMember();
  virtual ~CMsgTFJoinChatChannelResponse_ChatMember();

  CMsgTFJoinChatChannelResponse_ChatMember(const CMsgTFJoinChatChannelResponse_ChatMember& from);

  inline CMsgTFJoinChatChannelResponse_ChatMember& operator=(const CMsgTFJoinChatChannelResponse_ChatMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFJoinChatChannelResponse_ChatMember& default_instance();

  void Swap(CMsgTFJoinChatChannelResponse_ChatMember* other);

  // implements Message ----------------------------------------------

  CMsgTFJoinChatChannelResponse_ChatMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFJoinChatChannelResponse_ChatMember& from);
  void MergeFrom(const CMsgTFJoinChatChannelResponse_ChatMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);

  // optional string persona_name = 2;
  inline bool has_persona_name() const;
  inline void clear_persona_name();
  static const int kPersonaNameFieldNumber = 2;
  inline const ::std::string& persona_name() const;
  inline void set_persona_name(const ::std::string& value);
  inline void set_persona_name(const char* value);
  inline void set_persona_name(const char* value, size_t size);
  inline ::std::string* mutable_persona_name();
  inline ::std::string* release_persona_name();
  inline void set_allocated_persona_name(::std::string* persona_name);

  // @@protoc_insertion_point(class_scope:CMsgTFJoinChatChannelResponse.ChatMember)
 private:
  inline void set_has_steam_id();
  inline void clear_has_steam_id();
  inline void set_has_persona_name();
  inline void clear_has_persona_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 steam_id_;
  ::std::string* persona_name_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFJoinChatChannelResponse_ChatMember* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFJoinChatChannelResponse : public ::google::protobuf::Message {
 public:
  CMsgTFJoinChatChannelResponse();
  virtual ~CMsgTFJoinChatChannelResponse();

  CMsgTFJoinChatChannelResponse(const CMsgTFJoinChatChannelResponse& from);

  inline CMsgTFJoinChatChannelResponse& operator=(const CMsgTFJoinChatChannelResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFJoinChatChannelResponse& default_instance();

  void Swap(CMsgTFJoinChatChannelResponse* other);

  // implements Message ----------------------------------------------

  CMsgTFJoinChatChannelResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFJoinChatChannelResponse& from);
  void MergeFrom(const CMsgTFJoinChatChannelResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgTFJoinChatChannelResponse_ChatMember ChatMember;

  // accessors -------------------------------------------------------

  // optional uint32 response = 1;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 1;
  inline ::google::protobuf::uint32 response() const;
  inline void set_response(::google::protobuf::uint32 value);

  // optional string channel_name = 2;
  inline bool has_channel_name() const;
  inline void clear_channel_name();
  static const int kChannelNameFieldNumber = 2;
  inline const ::std::string& channel_name() const;
  inline void set_channel_name(const ::std::string& value);
  inline void set_channel_name(const char* value);
  inline void set_channel_name(const char* value, size_t size);
  inline ::std::string* mutable_channel_name();
  inline ::std::string* release_channel_name();
  inline void set_allocated_channel_name(::std::string* channel_name);

  // optional fixed64 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint64 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint64 value);

  // optional uint32 max_members = 4;
  inline bool has_max_members() const;
  inline void clear_max_members();
  static const int kMaxMembersFieldNumber = 4;
  inline ::google::protobuf::uint32 max_members() const;
  inline void set_max_members(::google::protobuf::uint32 value);

  // repeated .CMsgTFJoinChatChannelResponse.ChatMember members = 5;
  inline int members_size() const;
  inline void clear_members();
  static const int kMembersFieldNumber = 5;
  inline const ::CMsgTFJoinChatChannelResponse_ChatMember& members(int index) const;
  inline ::CMsgTFJoinChatChannelResponse_ChatMember* mutable_members(int index);
  inline ::CMsgTFJoinChatChannelResponse_ChatMember* add_members();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgTFJoinChatChannelResponse_ChatMember >&
      members() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgTFJoinChatChannelResponse_ChatMember >*
      mutable_members();

  // @@protoc_insertion_point(class_scope:CMsgTFJoinChatChannelResponse)
 private:
  inline void set_has_response();
  inline void clear_has_response();
  inline void set_has_channel_name();
  inline void clear_has_channel_name();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_max_members();
  inline void clear_has_max_members();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* channel_name_;
  ::google::protobuf::uint32 response_;
  ::google::protobuf::uint32 max_members_;
  ::google::protobuf::uint64 channel_id_;
  ::google::protobuf::RepeatedPtrField< ::CMsgTFJoinChatChannelResponse_ChatMember > members_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFJoinChatChannelResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFOtherJoinedChatChannel : public ::google::protobuf::Message {
 public:
  CMsgTFOtherJoinedChatChannel();
  virtual ~CMsgTFOtherJoinedChatChannel();

  CMsgTFOtherJoinedChatChannel(const CMsgTFOtherJoinedChatChannel& from);

  inline CMsgTFOtherJoinedChatChannel& operator=(const CMsgTFOtherJoinedChatChannel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFOtherJoinedChatChannel& default_instance();

  void Swap(CMsgTFOtherJoinedChatChannel* other);

  // implements Message ----------------------------------------------

  CMsgTFOtherJoinedChatChannel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFOtherJoinedChatChannel& from);
  void MergeFrom(const CMsgTFOtherJoinedChatChannel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 channel_id = 1;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 1;
  inline ::google::protobuf::uint64 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint64 value);

  // optional string persona_name = 2;
  inline bool has_persona_name() const;
  inline void clear_persona_name();
  static const int kPersonaNameFieldNumber = 2;
  inline const ::std::string& persona_name() const;
  inline void set_persona_name(const ::std::string& value);
  inline void set_persona_name(const char* value);
  inline void set_persona_name(const char* value, size_t size);
  inline ::std::string* mutable_persona_name();
  inline ::std::string* release_persona_name();
  inline void set_allocated_persona_name(::std::string* persona_name);

  // optional fixed64 steam_id = 3;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 3;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgTFOtherJoinedChatChannel)
 private:
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_persona_name();
  inline void clear_has_persona_name();
  inline void set_has_steam_id();
  inline void clear_has_steam_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 channel_id_;
  ::std::string* persona_name_;
  ::google::protobuf::uint64 steam_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFOtherJoinedChatChannel* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFOtherLeftChatChannel : public ::google::protobuf::Message {
 public:
  CMsgTFOtherLeftChatChannel();
  virtual ~CMsgTFOtherLeftChatChannel();

  CMsgTFOtherLeftChatChannel(const CMsgTFOtherLeftChatChannel& from);

  inline CMsgTFOtherLeftChatChannel& operator=(const CMsgTFOtherLeftChatChannel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFOtherLeftChatChannel& default_instance();

  void Swap(CMsgTFOtherLeftChatChannel* other);

  // implements Message ----------------------------------------------

  CMsgTFOtherLeftChatChannel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFOtherLeftChatChannel& from);
  void MergeFrom(const CMsgTFOtherLeftChatChannel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 channel_id = 1;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 1;
  inline ::google::protobuf::uint64 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint64 value);

  // optional fixed64 steam_id = 2;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 2;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgTFOtherLeftChatChannel)
 private:
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_steam_id();
  inline void clear_has_steam_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 channel_id_;
  ::google::protobuf::uint64 steam_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFOtherLeftChatChannel* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFRequestDefaultChatChannel : public ::google::protobuf::Message {
 public:
  CMsgTFRequestDefaultChatChannel();
  virtual ~CMsgTFRequestDefaultChatChannel();

  CMsgTFRequestDefaultChatChannel(const CMsgTFRequestDefaultChatChannel& from);

  inline CMsgTFRequestDefaultChatChannel& operator=(const CMsgTFRequestDefaultChatChannel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFRequestDefaultChatChannel& default_instance();

  void Swap(CMsgTFRequestDefaultChatChannel* other);

  // implements Message ----------------------------------------------

  CMsgTFRequestDefaultChatChannel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFRequestDefaultChatChannel& from);
  void MergeFrom(const CMsgTFRequestDefaultChatChannel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgTFRequestDefaultChatChannel)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFRequestDefaultChatChannel* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFRequestDefaultChatChannelResponse : public ::google::protobuf::Message {
 public:
  CMsgTFRequestDefaultChatChannelResponse();
  virtual ~CMsgTFRequestDefaultChatChannelResponse();

  CMsgTFRequestDefaultChatChannelResponse(const CMsgTFRequestDefaultChatChannelResponse& from);

  inline CMsgTFRequestDefaultChatChannelResponse& operator=(const CMsgTFRequestDefaultChatChannelResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFRequestDefaultChatChannelResponse& default_instance();

  void Swap(CMsgTFRequestDefaultChatChannelResponse* other);

  // implements Message ----------------------------------------------

  CMsgTFRequestDefaultChatChannelResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFRequestDefaultChatChannelResponse& from);
  void MergeFrom(const CMsgTFRequestDefaultChatChannelResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string channel_name = 1;
  inline bool has_channel_name() const;
  inline void clear_channel_name();
  static const int kChannelNameFieldNumber = 1;
  inline const ::std::string& channel_name() const;
  inline void set_channel_name(const ::std::string& value);
  inline void set_channel_name(const char* value);
  inline void set_channel_name(const char* value, size_t size);
  inline ::std::string* mutable_channel_name();
  inline ::std::string* release_channel_name();
  inline void set_allocated_channel_name(::std::string* channel_name);

  // optional fixed64 channel_id = 2;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 2;
  inline ::google::protobuf::uint64 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgTFRequestDefaultChatChannelResponse)
 private:
  inline void set_has_channel_name();
  inline void clear_has_channel_name();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* channel_name_;
  ::google::protobuf::uint64 channel_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFRequestDefaultChatChannelResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFRequestChatChannelList : public ::google::protobuf::Message {
 public:
  CMsgTFRequestChatChannelList();
  virtual ~CMsgTFRequestChatChannelList();

  CMsgTFRequestChatChannelList(const CMsgTFRequestChatChannelList& from);

  inline CMsgTFRequestChatChannelList& operator=(const CMsgTFRequestChatChannelList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFRequestChatChannelList& default_instance();

  void Swap(CMsgTFRequestChatChannelList* other);

  // implements Message ----------------------------------------------

  CMsgTFRequestChatChannelList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFRequestChatChannelList& from);
  void MergeFrom(const CMsgTFRequestChatChannelList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgTFRequestChatChannelList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFRequestChatChannelList* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFRequestChatChannelListResponse_ChatChannel : public ::google::protobuf::Message {
 public:
  CMsgTFRequestChatChannelListResponse_ChatChannel();
  virtual ~CMsgTFRequestChatChannelListResponse_ChatChannel();

  CMsgTFRequestChatChannelListResponse_ChatChannel(const CMsgTFRequestChatChannelListResponse_ChatChannel& from);

  inline CMsgTFRequestChatChannelListResponse_ChatChannel& operator=(const CMsgTFRequestChatChannelListResponse_ChatChannel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFRequestChatChannelListResponse_ChatChannel& default_instance();

  void Swap(CMsgTFRequestChatChannelListResponse_ChatChannel* other);

  // implements Message ----------------------------------------------

  CMsgTFRequestChatChannelListResponse_ChatChannel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFRequestChatChannelListResponse_ChatChannel& from);
  void MergeFrom(const CMsgTFRequestChatChannelListResponse_ChatChannel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string channel_name = 1;
  inline bool has_channel_name() const;
  inline void clear_channel_name();
  static const int kChannelNameFieldNumber = 1;
  inline const ::std::string& channel_name() const;
  inline void set_channel_name(const ::std::string& value);
  inline void set_channel_name(const char* value);
  inline void set_channel_name(const char* value, size_t size);
  inline ::std::string* mutable_channel_name();
  inline ::std::string* release_channel_name();
  inline void set_allocated_channel_name(::std::string* channel_name);

  // optional uint32 num_members = 2;
  inline bool has_num_members() const;
  inline void clear_num_members();
  static const int kNumMembersFieldNumber = 2;
  inline ::google::protobuf::uint32 num_members() const;
  inline void set_num_members(::google::protobuf::uint32 value);

  // optional .ChatChannelType_t channel_type = 3 [default = ChatChannelType_Regional];
  inline bool has_channel_type() const;
  inline void clear_channel_type();
  static const int kChannelTypeFieldNumber = 3;
  inline ::ChatChannelType_t channel_type() const;
  inline void set_channel_type(::ChatChannelType_t value);

  // @@protoc_insertion_point(class_scope:CMsgTFRequestChatChannelListResponse.ChatChannel)
 private:
  inline void set_has_channel_name();
  inline void clear_has_channel_name();
  inline void set_has_num_members();
  inline void clear_has_num_members();
  inline void set_has_channel_type();
  inline void clear_has_channel_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* channel_name_;
  ::google::protobuf::uint32 num_members_;
  int channel_type_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFRequestChatChannelListResponse_ChatChannel* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTFRequestChatChannelListResponse : public ::google::protobuf::Message {
 public:
  CMsgTFRequestChatChannelListResponse();
  virtual ~CMsgTFRequestChatChannelListResponse();

  CMsgTFRequestChatChannelListResponse(const CMsgTFRequestChatChannelListResponse& from);

  inline CMsgTFRequestChatChannelListResponse& operator=(const CMsgTFRequestChatChannelListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTFRequestChatChannelListResponse& default_instance();

  void Swap(CMsgTFRequestChatChannelListResponse* other);

  // implements Message ----------------------------------------------

  CMsgTFRequestChatChannelListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTFRequestChatChannelListResponse& from);
  void MergeFrom(const CMsgTFRequestChatChannelListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgTFRequestChatChannelListResponse_ChatChannel ChatChannel;

  // accessors -------------------------------------------------------

  // repeated .CMsgTFRequestChatChannelListResponse.ChatChannel channels = 1;
  inline int channels_size() const;
  inline void clear_channels();
  static const int kChannelsFieldNumber = 1;
  inline const ::CMsgTFRequestChatChannelListResponse_ChatChannel& channels(int index) const;
  inline ::CMsgTFRequestChatChannelListResponse_ChatChannel* mutable_channels(int index);
  inline ::CMsgTFRequestChatChannelListResponse_ChatChannel* add_channels();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgTFRequestChatChannelListResponse_ChatChannel >&
      channels() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgTFRequestChatChannelListResponse_ChatChannel >*
      mutable_channels();

  // @@protoc_insertion_point(class_scope:CMsgTFRequestChatChannelListResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgTFRequestChatChannelListResponse_ChatChannel > channels_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgTFRequestChatChannelListResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGameServerMatchmakingStatus_Player : public ::google::protobuf::Message {
 public:
  CMsgGameServerMatchmakingStatus_Player();
  virtual ~CMsgGameServerMatchmakingStatus_Player();

  CMsgGameServerMatchmakingStatus_Player(const CMsgGameServerMatchmakingStatus_Player& from);

  inline CMsgGameServerMatchmakingStatus_Player& operator=(const CMsgGameServerMatchmakingStatus_Player& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGameServerMatchmakingStatus_Player& default_instance();

  void Swap(CMsgGameServerMatchmakingStatus_Player* other);

  // implements Message ----------------------------------------------

  CMsgGameServerMatchmakingStatus_Player* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGameServerMatchmakingStatus_Player& from);
  void MergeFrom(const CMsgGameServerMatchmakingStatus_Player& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);

  // optional .CMsgGameServerMatchmakingStatus.PlayerConnectState connect_state = 2 [default = INVALID];
  inline bool has_connect_state() const;
  inline void clear_connect_state();
  static const int kConnectStateFieldNumber = 2;
  inline ::CMsgGameServerMatchmakingStatus_PlayerConnectState connect_state() const;
  inline void set_connect_state(::CMsgGameServerMatchmakingStatus_PlayerConnectState value);

  // @@protoc_insertion_point(class_scope:CMsgGameServerMatchmakingStatus.Player)
 private:
  inline void set_has_steam_id();
  inline void clear_has_steam_id();
  inline void set_has_connect_state();
  inline void clear_has_connect_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 steam_id_;
  int connect_state_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGameServerMatchmakingStatus_Player* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGameServerMatchmakingStatus : public ::google::protobuf::Message {
 public:
  CMsgGameServerMatchmakingStatus();
  virtual ~CMsgGameServerMatchmakingStatus();

  CMsgGameServerMatchmakingStatus(const CMsgGameServerMatchmakingStatus& from);

  inline CMsgGameServerMatchmakingStatus& operator=(const CMsgGameServerMatchmakingStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGameServerMatchmakingStatus& default_instance();

  void Swap(CMsgGameServerMatchmakingStatus* other);

  // implements Message ----------------------------------------------

  CMsgGameServerMatchmakingStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGameServerMatchmakingStatus& from);
  void MergeFrom(const CMsgGameServerMatchmakingStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgGameServerMatchmakingStatus_Player Player;

  typedef CMsgGameServerMatchmakingStatus_PlayerConnectState PlayerConnectState;
  static const PlayerConnectState INVALID = CMsgGameServerMatchmakingStatus_PlayerConnectState_INVALID;
  static const PlayerConnectState CONNECTED = CMsgGameServerMatchmakingStatus_PlayerConnectState_CONNECTED;
  static const PlayerConnectState RESERVED = CMsgGameServerMatchmakingStatus_PlayerConnectState_RESERVED;
  static inline bool PlayerConnectState_IsValid(int value) {
    return CMsgGameServerMatchmakingStatus_PlayerConnectState_IsValid(value);
  }
  static const PlayerConnectState PlayerConnectState_MIN =
    CMsgGameServerMatchmakingStatus_PlayerConnectState_PlayerConnectState_MIN;
  static const PlayerConnectState PlayerConnectState_MAX =
    CMsgGameServerMatchmakingStatus_PlayerConnectState_PlayerConnectState_MAX;
  static const int PlayerConnectState_ARRAYSIZE =
    CMsgGameServerMatchmakingStatus_PlayerConnectState_PlayerConnectState_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PlayerConnectState_descriptor() {
    return CMsgGameServerMatchmakingStatus_PlayerConnectState_descriptor();
  }
  static inline const ::std::string& PlayerConnectState_Name(PlayerConnectState value) {
    return CMsgGameServerMatchmakingStatus_PlayerConnectState_Name(value);
  }
  static inline bool PlayerConnectState_Parse(const ::std::string& name,
      PlayerConnectState* value) {
    return CMsgGameServerMatchmakingStatus_PlayerConnectState_Parse(name, value);
  }

  typedef CMsgGameServerMatchmakingStatus_Event Event;
  static const Event None = CMsgGameServerMatchmakingStatus_Event_None;
  static const Event MvMVictory = CMsgGameServerMatchmakingStatus_Event_MvMVictory;
  static const Event MvMDefeat = CMsgGameServerMatchmakingStatus_Event_MvMDefeat;
  static const Event AcknowledgePlayers = CMsgGameServerMatchmakingStatus_Event_AcknowledgePlayers;
  static inline bool Event_IsValid(int value) {
    return CMsgGameServerMatchmakingStatus_Event_IsValid(value);
  }
  static const Event Event_MIN =
    CMsgGameServerMatchmakingStatus_Event_Event_MIN;
  static const Event Event_MAX =
    CMsgGameServerMatchmakingStatus_Event_Event_MAX;
  static const int Event_ARRAYSIZE =
    CMsgGameServerMatchmakingStatus_Event_Event_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Event_descriptor() {
    return CMsgGameServerMatchmakingStatus_Event_descriptor();
  }
  static inline const ::std::string& Event_Name(Event value) {
    return CMsgGameServerMatchmakingStatus_Event_Name(value);
  }
  static inline bool Event_Parse(const ::std::string& name,
      Event* value) {
    return CMsgGameServerMatchmakingStatus_Event_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint32 server_version = 16 [default = 1225];
  inline bool has_server_version() const;
  inline void clear_server_version();
  static const int kServerVersionFieldNumber = 16;
  inline ::google::protobuf::uint32 server_version() const;
  inline void set_server_version(::google::protobuf::uint32 value);

  // optional .ServerMatchmakingState matchmaking_state = 1 [default = ServerMatchmakingState_INVALID];
  inline bool has_matchmaking_state() const;
  inline void clear_matchmaking_state();
  static const int kMatchmakingStateFieldNumber = 1;
  inline ::ServerMatchmakingState matchmaking_state() const;
  inline void set_matchmaking_state(::ServerMatchmakingState value);

  // optional .TF_MatchmakingMode matchmaking_mode = 2 [default = TF_Matchmaking_INVALID];
  inline bool has_matchmaking_mode() const;
  inline void clear_matchmaking_mode();
  static const int kMatchmakingModeFieldNumber = 2;
  inline ::TF_MatchmakingMode matchmaking_mode() const;
  inline void set_matchmaking_mode(::TF_MatchmakingMode value);

  // optional string map = 3;
  inline bool has_map() const;
  inline void clear_map();
  static const int kMapFieldNumber = 3;
  inline const ::std::string& map() const;
  inline void set_map(const ::std::string& value);
  inline void set_map(const char* value);
  inline void set_map(const char* value, size_t size);
  inline ::std::string* mutable_map();
  inline ::std::string* release_map();
  inline void set_allocated_map(::std::string* map);

  // optional string tags = 4;
  inline bool has_tags() const;
  inline void clear_tags();
  static const int kTagsFieldNumber = 4;
  inline const ::std::string& tags() const;
  inline void set_tags(const ::std::string& value);
  inline void set_tags(const char* value);
  inline void set_tags(const char* value, size_t size);
  inline ::std::string* mutable_tags();
  inline ::std::string* release_tags();
  inline void set_allocated_tags(::std::string* tags);

  // optional uint32 bot_count = 5;
  inline bool has_bot_count() const;
  inline void clear_bot_count();
  static const int kBotCountFieldNumber = 5;
  inline ::google::protobuf::uint32 bot_count() const;
  inline void set_bot_count(::google::protobuf::uint32 value);

  // optional uint32 num_spectators = 6;
  inline bool has_num_spectators() const;
  inline void clear_num_spectators();
  static const int kNumSpectatorsFieldNumber = 6;
  inline ::google::protobuf::uint32 num_spectators() const;
  inline void set_num_spectators(::google::protobuf::uint32 value);

  // optional uint32 max_players = 7;
  inline bool has_max_players() const;
  inline void clear_max_players();
  static const int kMaxPlayersFieldNumber = 7;
  inline ::google::protobuf::uint32 max_players() const;
  inline void set_max_players(::google::protobuf::uint32 value);

  // optional uint32 slots_free = 8;
  inline bool has_slots_free() const;
  inline void clear_slots_free();
  static const int kSlotsFreeFieldNumber = 8;
  inline ::google::protobuf::uint32 slots_free() const;
  inline void set_slots_free(::google::protobuf::uint32 value);

  // optional uint32 server_region = 9;
  inline bool has_server_region() const;
  inline void clear_server_region();
  static const int kServerRegionFieldNumber = 9;
  inline ::google::protobuf::uint32 server_region() const;
  inline void set_server_region(::google::protobuf::uint32 value);

  // optional float server_loadavg = 10;
  inline bool has_server_loadavg() const;
  inline void clear_server_loadavg();
  static const int kServerLoadavgFieldNumber = 10;
  inline float server_loadavg() const;
  inline void set_server_loadavg(float value);

  // optional bool server_trusted = 11;
  inline bool has_server_trusted() const;
  inline void clear_server_trusted();
  static const int kServerTrustedFieldNumber = 11;
  inline bool server_trusted() const;
  inline void set_server_trusted(bool value);

  // optional bool server_dedicated = 12;
  inline bool has_server_dedicated() const;
  inline void clear_server_dedicated();
  static const int kServerDedicatedFieldNumber = 12;
  inline bool server_dedicated() const;
  inline void set_server_dedicated(bool value);

  // optional uint32 strict = 17;
  inline bool has_strict() const;
  inline void clear_strict();
  static const int kStrictFieldNumber = 17;
  inline ::google::protobuf::uint32 strict() const;
  inline void set_strict(::google::protobuf::uint32 value);

  // repeated .CMsgGameServerMatchmakingStatus.Player players = 13;
  inline int players_size() const;
  inline void clear_players();
  static const int kPlayersFieldNumber = 13;
  inline const ::CMsgGameServerMatchmakingStatus_Player& players(int index) const;
  inline ::CMsgGameServerMatchmakingStatus_Player* mutable_players(int index);
  inline ::CMsgGameServerMatchmakingStatus_Player* add_players();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgGameServerMatchmakingStatus_Player >&
      players() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgGameServerMatchmakingStatus_Player >*
      mutable_players();

  // optional .TF_GC_GameState game_state = 14 [default = TF_GC_GAMESTATE_STATE_INIT];
  inline bool has_game_state() const;
  inline void clear_game_state();
  static const int kGameStateFieldNumber = 14;
  inline ::TF_GC_GameState game_state() const;
  inline void set_game_state(::TF_GC_GameState value);

  // optional .CMsgGameServerMatchmakingStatus.Event event = 15 [default = None];
  inline bool has_event() const;
  inline void clear_event();
  static const int kEventFieldNumber = 15;
  inline ::CMsgGameServerMatchmakingStatus_Event event() const;
  inline void set_event(::CMsgGameServerMatchmakingStatus_Event value);

  // optional uint32 mvm_wave = 18;
  inline bool has_mvm_wave() const;
  inline void clear_mvm_wave();
  static const int kMvmWaveFieldNumber = 18;
  inline ::google::protobuf::uint32 mvm_wave() const;
  inline void set_mvm_wave(::google::protobuf::uint32 value);

  // optional uint32 mvm_credits_acquired = 19;
  inline bool has_mvm_credits_acquired() const;
  inline void clear_mvm_credits_acquired();
  static const int kMvmCreditsAcquiredFieldNumber = 19;
  inline ::google::protobuf::uint32 mvm_credits_acquired() const;
  inline void set_mvm_credits_acquired(::google::protobuf::uint32 value);

  // optional uint32 mvm_credits_dropped = 20;
  inline bool has_mvm_credits_dropped() const;
  inline void clear_mvm_credits_dropped();
  static const int kMvmCreditsDroppedFieldNumber = 20;
  inline ::google::protobuf::uint32 mvm_credits_dropped() const;
  inline void set_mvm_credits_dropped(::google::protobuf::uint32 value);

  // optional uint32 skillrating_force_average = 21;
  inline bool has_skillrating_force_average() const;
  inline void clear_skillrating_force_average();
  static const int kSkillratingForceAverageFieldNumber = 21;
  inline ::google::protobuf::uint32 skillrating_force_average() const;
  inline void set_skillrating_force_average(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGameServerMatchmakingStatus)
 private:
  inline void set_has_server_version();
  inline void clear_has_server_version();
  inline void set_has_matchmaking_state();
  inline void clear_has_matchmaking_state();
  inline void set_has_matchmaking_mode();
  inline void clear_has_matchmaking_mode();
  inline void set_has_map();
  inline void clear_has_map();
  inline void set_has_tags();
  inline void clear_has_tags();
  inline void set_has_bot_count();
  inline void clear_has_bot_count();
  inline void set_has_num_spectators();
  inline void clear_has_num_spectators();
  inline void set_has_max_players();
  inline void clear_has_max_players();
  inline void set_has_slots_free();
  inline void clear_has_slots_free();
  inline void set_has_server_region();
  inline void clear_has_server_region();
  inline void set_has_server_loadavg();
  inline void clear_has_server_loadavg();
  inline void set_has_server_trusted();
  inline void clear_has_server_trusted();
  inline void set_has_server_dedicated();
  inline void clear_has_server_dedicated();
  inline void set_has_strict();
  inline void clear_has_strict();
  inline void set_has_game_state();
  inline void clear_has_game_state();
  inline void set_has_event();
  inline void clear_has_event();
  inline void set_has_mvm_wave();
  inline void clear_has_mvm_wave();
  inline void set_has_mvm_credits_acquired();
  inline void clear_has_mvm_credits_acquired();
  inline void set_has_mvm_credits_dropped();
  inline void clear_has_mvm_credits_dropped();
  inline void set_has_skillrating_force_average();
  inline void clear_has_skillrating_force_average();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 server_version_;
  int matchmaking_state_;
  ::std::string* map_;
  int matchmaking_mode_;
  ::google::protobuf::uint32 bot_count_;
  ::std::string* tags_;
  ::google::protobuf::uint32 num_spectators_;
  ::google::protobuf::uint32 max_players_;
  ::google::protobuf::uint32 slots_free_;
  ::google::protobuf::uint32 server_region_;
  float server_loadavg_;
  bool server_trusted_;
  bool server_dedicated_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGameServerMatchmakingStatus_Player > players_;
  ::google::protobuf::uint32 strict_;
  int game_state_;
  int event_;
  ::google::protobuf::uint32 mvm_wave_;
  ::google::protobuf::uint32 mvm_credits_acquired_;
  ::google::protobuf::uint32 mvm_credits_dropped_;
  ::google::protobuf::uint32 skillrating_force_average_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGameServerMatchmakingStatus* default_instance_;
};
// -------------------------------------------------------------------

class CMsgMatchmakingProgress : public ::google::protobuf::Message {
 public:
  CMsgMatchmakingProgress();
  virtual ~CMsgMatchmakingProgress();

  CMsgMatchmakingProgress(const CMsgMatchmakingProgress& from);

  inline CMsgMatchmakingProgress& operator=(const CMsgMatchmakingProgress& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMatchmakingProgress& default_instance();

  void Swap(CMsgMatchmakingProgress* other);

  // implements Message ----------------------------------------------

  CMsgMatchmakingProgress* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgMatchmakingProgress& from);
  void MergeFrom(const CMsgMatchmakingProgress& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 avg_wait_time_new = 4;
  inline bool has_avg_wait_time_new() const;
  inline void clear_avg_wait_time_new();
  static const int kAvgWaitTimeNewFieldNumber = 4;
  inline ::google::protobuf::uint32 avg_wait_time_new() const;
  inline void set_avg_wait_time_new(::google::protobuf::uint32 value);

  // optional uint32 avg_wait_time_join_late = 5;
  inline bool has_avg_wait_time_join_late() const;
  inline void clear_avg_wait_time_join_late();
  static const int kAvgWaitTimeJoinLateFieldNumber = 5;
  inline ::google::protobuf::uint32 avg_wait_time_join_late() const;
  inline void set_avg_wait_time_join_late(::google::protobuf::uint32 value);

  // optional uint32 your_wait_time = 6;
  inline bool has_your_wait_time() const;
  inline void clear_your_wait_time();
  static const int kYourWaitTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 your_wait_time() const;
  inline void set_your_wait_time(::google::protobuf::uint32 value);

  // optional uint32 matching_worldwide_searching_players = 8;
  inline bool has_matching_worldwide_searching_players() const;
  inline void clear_matching_worldwide_searching_players();
  static const int kMatchingWorldwideSearchingPlayersFieldNumber = 8;
  inline ::google::protobuf::uint32 matching_worldwide_searching_players() const;
  inline void set_matching_worldwide_searching_players(::google::protobuf::uint32 value);

  // optional uint32 matching_near_you_searching_players = 9;
  inline bool has_matching_near_you_searching_players() const;
  inline void clear_matching_near_you_searching_players();
  static const int kMatchingNearYouSearchingPlayersFieldNumber = 9;
  inline ::google::protobuf::uint32 matching_near_you_searching_players() const;
  inline void set_matching_near_you_searching_players(::google::protobuf::uint32 value);

  // optional uint32 total_worldwide_searching_players = 13;
  inline bool has_total_worldwide_searching_players() const;
  inline void clear_total_worldwide_searching_players();
  static const int kTotalWorldwideSearchingPlayersFieldNumber = 13;
  inline ::google::protobuf::uint32 total_worldwide_searching_players() const;
  inline void set_total_worldwide_searching_players(::google::protobuf::uint32 value);

  // optional uint32 total_near_you_searching_players = 14;
  inline bool has_total_near_you_searching_players() const;
  inline void clear_total_near_you_searching_players();
  static const int kTotalNearYouSearchingPlayersFieldNumber = 14;
  inline ::google::protobuf::uint32 total_near_you_searching_players() const;
  inline void set_total_near_you_searching_players(::google::protobuf::uint32 value);

  // optional uint32 matching_worldwide_active_players = 15;
  inline bool has_matching_worldwide_active_players() const;
  inline void clear_matching_worldwide_active_players();
  static const int kMatchingWorldwideActivePlayersFieldNumber = 15;
  inline ::google::protobuf::uint32 matching_worldwide_active_players() const;
  inline void set_matching_worldwide_active_players(::google::protobuf::uint32 value);

  // optional uint32 matching_near_you_active_players = 16;
  inline bool has_matching_near_you_active_players() const;
  inline void clear_matching_near_you_active_players();
  static const int kMatchingNearYouActivePlayersFieldNumber = 16;
  inline ::google::protobuf::uint32 matching_near_you_active_players() const;
  inline void set_matching_near_you_active_players(::google::protobuf::uint32 value);

  // optional uint32 total_worldwide_active_players = 17;
  inline bool has_total_worldwide_active_players() const;
  inline void clear_total_worldwide_active_players();
  static const int kTotalWorldwideActivePlayersFieldNumber = 17;
  inline ::google::protobuf::uint32 total_worldwide_active_players() const;
  inline void set_total_worldwide_active_players(::google::protobuf::uint32 value);

  // optional uint32 total_near_you_active_players = 18;
  inline bool has_total_near_you_active_players() const;
  inline void clear_total_near_you_active_players();
  static const int kTotalNearYouActivePlayersFieldNumber = 18;
  inline ::google::protobuf::uint32 total_near_you_active_players() const;
  inline void set_total_near_you_active_players(::google::protobuf::uint32 value);

  // optional uint32 matching_worldwide_empty_gameservers = 19;
  inline bool has_matching_worldwide_empty_gameservers() const;
  inline void clear_matching_worldwide_empty_gameservers();
  static const int kMatchingWorldwideEmptyGameserversFieldNumber = 19;
  inline ::google::protobuf::uint32 matching_worldwide_empty_gameservers() const;
  inline void set_matching_worldwide_empty_gameservers(::google::protobuf::uint32 value);

  // optional uint32 matching_near_you_empty_gameservers = 20;
  inline bool has_matching_near_you_empty_gameservers() const;
  inline void clear_matching_near_you_empty_gameservers();
  static const int kMatchingNearYouEmptyGameserversFieldNumber = 20;
  inline ::google::protobuf::uint32 matching_near_you_empty_gameservers() const;
  inline void set_matching_near_you_empty_gameservers(::google::protobuf::uint32 value);

  // optional uint32 total_worldwide_empty_gameservers = 21;
  inline bool has_total_worldwide_empty_gameservers() const;
  inline void clear_total_worldwide_empty_gameservers();
  static const int kTotalWorldwideEmptyGameserversFieldNumber = 21;
  inline ::google::protobuf::uint32 total_worldwide_empty_gameservers() const;
  inline void set_total_worldwide_empty_gameservers(::google::protobuf::uint32 value);

  // optional uint32 total_near_you_empty_gameservers = 22;
  inline bool has_total_near_you_empty_gameservers() const;
  inline void clear_total_near_you_empty_gameservers();
  static const int kTotalNearYouEmptyGameserversFieldNumber = 22;
  inline ::google::protobuf::uint32 total_near_you_empty_gameservers() const;
  inline void set_total_near_you_empty_gameservers(::google::protobuf::uint32 value);

  // optional uint32 urgency_pct = 1;
  inline bool has_urgency_pct() const;
  inline void clear_urgency_pct();
  static const int kUrgencyPctFieldNumber = 1;
  inline ::google::protobuf::uint32 urgency_pct() const;
  inline void set_urgency_pct(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgMatchmakingProgress)
 private:
  inline void set_has_avg_wait_time_new();
  inline void clear_has_avg_wait_time_new();
  inline void set_has_avg_wait_time_join_late();
  inline void clear_has_avg_wait_time_join_late();
  inline void set_has_your_wait_time();
  inline void clear_has_your_wait_time();
  inline void set_has_matching_worldwide_searching_players();
  inline void clear_has_matching_worldwide_searching_players();
  inline void set_has_matching_near_you_searching_players();
  inline void clear_has_matching_near_you_searching_players();
  inline void set_has_total_worldwide_searching_players();
  inline void clear_has_total_worldwide_searching_players();
  inline void set_has_total_near_you_searching_players();
  inline void clear_has_total_near_you_searching_players();
  inline void set_has_matching_worldwide_active_players();
  inline void clear_has_matching_worldwide_active_players();
  inline void set_has_matching_near_you_active_players();
  inline void clear_has_matching_near_you_active_players();
  inline void set_has_total_worldwide_active_players();
  inline void clear_has_total_worldwide_active_players();
  inline void set_has_total_near_you_active_players();
  inline void clear_has_total_near_you_active_players();
  inline void set_has_matching_worldwide_empty_gameservers();
  inline void clear_has_matching_worldwide_empty_gameservers();
  inline void set_has_matching_near_you_empty_gameservers();
  inline void clear_has_matching_near_you_empty_gameservers();
  inline void set_has_total_worldwide_empty_gameservers();
  inline void clear_has_total_worldwide_empty_gameservers();
  inline void set_has_total_near_you_empty_gameservers();
  inline void clear_has_total_near_you_empty_gameservers();
  inline void set_has_urgency_pct();
  inline void clear_has_urgency_pct();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 avg_wait_time_new_;
  ::google::protobuf::uint32 avg_wait_time_join_late_;
  ::google::protobuf::uint32 your_wait_time_;
  ::google::protobuf::uint32 matching_worldwide_searching_players_;
  ::google::protobuf::uint32 matching_near_you_searching_players_;
  ::google::protobuf::uint32 total_worldwide_searching_players_;
  ::google::protobuf::uint32 total_near_you_searching_players_;
  ::google::protobuf::uint32 matching_worldwide_active_players_;
  ::google::protobuf::uint32 matching_near_you_active_players_;
  ::google::protobuf::uint32 total_worldwide_active_players_;
  ::google::protobuf::uint32 total_near_you_active_players_;
  ::google::protobuf::uint32 matching_worldwide_empty_gameservers_;
  ::google::protobuf::uint32 matching_near_you_empty_gameservers_;
  ::google::protobuf::uint32 total_worldwide_empty_gameservers_;
  ::google::protobuf::uint32 total_near_you_empty_gameservers_;
  ::google::protobuf::uint32 urgency_pct_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgMatchmakingProgress* default_instance_;
};
// -------------------------------------------------------------------

class CMsgMvMVictoryInfo_Item : public ::google::protobuf::Message {
 public:
  CMsgMvMVictoryInfo_Item();
  virtual ~CMsgMvMVictoryInfo_Item();

  CMsgMvMVictoryInfo_Item(const CMsgMvMVictoryInfo_Item& from);

  inline CMsgMvMVictoryInfo_Item& operator=(const CMsgMvMVictoryInfo_Item& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMvMVictoryInfo_Item& default_instance();

  void Swap(CMsgMvMVictoryInfo_Item* other);

  // implements Message ----------------------------------------------

  CMsgMvMVictoryInfo_Item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgMvMVictoryInfo_Item& from);
  void MergeFrom(const CMsgMvMVictoryInfo_Item& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgMvMVictoryInfo.GrantReason grant_reason = 1 [default = INVALID];
  inline bool has_grant_reason() const;
  inline void clear_grant_reason();
  static const int kGrantReasonFieldNumber = 1;
  inline ::CMsgMvMVictoryInfo_GrantReason grant_reason() const;
  inline void set_grant_reason(::CMsgMvMVictoryInfo_GrantReason value);

  // optional bytes item_data = 2;
  inline bool has_item_data() const;
  inline void clear_item_data();
  static const int kItemDataFieldNumber = 2;
  inline const ::std::string& item_data() const;
  inline void set_item_data(const ::std::string& value);
  inline void set_item_data(const char* value);
  inline void set_item_data(const void* value, size_t size);
  inline ::std::string* mutable_item_data();
  inline ::std::string* release_item_data();
  inline void set_allocated_item_data(::std::string* item_data);

  // optional fixed64 squad_surplus_claimer_steam_id = 3;
  inline bool has_squad_surplus_claimer_steam_id() const;
  inline void clear_squad_surplus_claimer_steam_id();
  static const int kSquadSurplusClaimerSteamIdFieldNumber = 3;
  inline ::google::protobuf::uint64 squad_surplus_claimer_steam_id() const;
  inline void set_squad_surplus_claimer_steam_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgMvMVictoryInfo.Item)
 private:
  inline void set_has_grant_reason();
  inline void clear_has_grant_reason();
  inline void set_has_item_data();
  inline void clear_has_item_data();
  inline void set_has_squad_surplus_claimer_steam_id();
  inline void clear_has_squad_surplus_claimer_steam_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* item_data_;
  ::google::protobuf::uint64 squad_surplus_claimer_steam_id_;
  int grant_reason_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgMvMVictoryInfo_Item* default_instance_;
};
// -------------------------------------------------------------------

class CMsgMvMVictoryInfo_Player : public ::google::protobuf::Message {
 public:
  CMsgMvMVictoryInfo_Player();
  virtual ~CMsgMvMVictoryInfo_Player();

  CMsgMvMVictoryInfo_Player(const CMsgMvMVictoryInfo_Player& from);

  inline CMsgMvMVictoryInfo_Player& operator=(const CMsgMvMVictoryInfo_Player& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMvMVictoryInfo_Player& default_instance();

  void Swap(CMsgMvMVictoryInfo_Player* other);

  // implements Message ----------------------------------------------

  CMsgMvMVictoryInfo_Player* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgMvMVictoryInfo_Player& from);
  void MergeFrom(const CMsgMvMVictoryInfo_Player& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);

  // optional bool badge_granted = 3;
  inline bool has_badge_granted() const;
  inline void clear_badge_granted();
  static const int kBadgeGrantedFieldNumber = 3;
  inline bool badge_granted() const;
  inline void set_badge_granted(bool value);

  // optional bool badge_progress_updated = 4;
  inline bool has_badge_progress_updated() const;
  inline void clear_badge_progress_updated();
  static const int kBadgeProgressUpdatedFieldNumber = 4;
  inline bool badge_progress_updated() const;
  inline void set_badge_progress_updated(bool value);

  // optional bool badge_leveled = 5;
  inline bool has_badge_leveled() const;
  inline void clear_badge_leveled();
  static const int kBadgeLeveledFieldNumber = 5;
  inline bool badge_leveled() const;
  inline void set_badge_leveled(bool value);

  // optional uint32 badge_level = 6;
  inline bool has_badge_level() const;
  inline void clear_badge_level();
  static const int kBadgeLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 badge_level() const;
  inline void set_badge_level(::google::protobuf::uint32 value);

  // optional uint32 badge_progress_bits = 7;
  inline bool has_badge_progress_bits() const;
  inline void clear_badge_progress_bits();
  static const int kBadgeProgressBitsFieldNumber = 7;
  inline ::google::protobuf::uint32 badge_progress_bits() const;
  inline void set_badge_progress_bits(::google::protobuf::uint32 value);

  // repeated .CMsgMvMVictoryInfo.Item items = 8;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 8;
  inline const ::CMsgMvMVictoryInfo_Item& items(int index) const;
  inline ::CMsgMvMVictoryInfo_Item* mutable_items(int index);
  inline ::CMsgMvMVictoryInfo_Item* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictoryInfo_Item >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictoryInfo_Item >*
      mutable_items();

  // optional bool voucher_missing = 9;
  inline bool has_voucher_missing() const;
  inline void clear_voucher_missing();
  static const int kVoucherMissingFieldNumber = 9;
  inline bool voucher_missing() const;
  inline void set_voucher_missing(bool value);

  // @@protoc_insertion_point(class_scope:CMsgMvMVictoryInfo.Player)
 private:
  inline void set_has_steam_id();
  inline void clear_has_steam_id();
  inline void set_has_badge_granted();
  inline void clear_has_badge_granted();
  inline void set_has_badge_progress_updated();
  inline void clear_has_badge_progress_updated();
  inline void set_has_badge_leveled();
  inline void clear_has_badge_leveled();
  inline void set_has_badge_level();
  inline void clear_has_badge_level();
  inline void set_has_badge_progress_bits();
  inline void clear_has_badge_progress_bits();
  inline void set_has_voucher_missing();
  inline void clear_has_voucher_missing();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 steam_id_;
  bool badge_granted_;
  bool badge_progress_updated_;
  bool badge_leveled_;
  bool voucher_missing_;
  ::google::protobuf::uint32 badge_level_;
  ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictoryInfo_Item > items_;
  ::google::protobuf::uint32 badge_progress_bits_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgMvMVictoryInfo_Player* default_instance_;
};
// -------------------------------------------------------------------

class CMsgMvMVictoryInfo : public ::google::protobuf::Message {
 public:
  CMsgMvMVictoryInfo();
  virtual ~CMsgMvMVictoryInfo();

  CMsgMvMVictoryInfo(const CMsgMvMVictoryInfo& from);

  inline CMsgMvMVictoryInfo& operator=(const CMsgMvMVictoryInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMvMVictoryInfo& default_instance();

  void Swap(CMsgMvMVictoryInfo* other);

  // implements Message ----------------------------------------------

  CMsgMvMVictoryInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgMvMVictoryInfo& from);
  void MergeFrom(const CMsgMvMVictoryInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgMvMVictoryInfo_Item Item;
  typedef CMsgMvMVictoryInfo_Player Player;

  typedef CMsgMvMVictoryInfo_GrantReason GrantReason;
  static const GrantReason INVALID = CMsgMvMVictoryInfo_GrantReason_INVALID;
  static const GrantReason BADGE_LEVELED = CMsgMvMVictoryInfo_GrantReason_BADGE_LEVELED;
  static const GrantReason SQUAD_SURPLUS = CMsgMvMVictoryInfo_GrantReason_SQUAD_SURPLUS;
  static const GrantReason MANN_UP = CMsgMvMVictoryInfo_GrantReason_MANN_UP;
  static const GrantReason HELP_A_NOOB = CMsgMvMVictoryInfo_GrantReason_HELP_A_NOOB;
  static inline bool GrantReason_IsValid(int value) {
    return CMsgMvMVictoryInfo_GrantReason_IsValid(value);
  }
  static const GrantReason GrantReason_MIN =
    CMsgMvMVictoryInfo_GrantReason_GrantReason_MIN;
  static const GrantReason GrantReason_MAX =
    CMsgMvMVictoryInfo_GrantReason_GrantReason_MAX;
  static const int GrantReason_ARRAYSIZE =
    CMsgMvMVictoryInfo_GrantReason_GrantReason_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  GrantReason_descriptor() {
    return CMsgMvMVictoryInfo_GrantReason_descriptor();
  }
  static inline const ::std::string& GrantReason_Name(GrantReason value) {
    return CMsgMvMVictoryInfo_GrantReason_Name(value);
  }
  static inline bool GrantReason_Parse(const ::std::string& name,
      GrantReason* value) {
    return CMsgMvMVictoryInfo_GrantReason_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .CMsgMvMVictoryInfo.Player players = 1;
  inline int players_size() const;
  inline void clear_players();
  static const int kPlayersFieldNumber = 1;
  inline const ::CMsgMvMVictoryInfo_Player& players(int index) const;
  inline ::CMsgMvMVictoryInfo_Player* mutable_players(int index);
  inline ::CMsgMvMVictoryInfo_Player* add_players();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictoryInfo_Player >&
      players() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictoryInfo_Player >*
      mutable_players();

  // optional string tour_name = 2;
  inline bool has_tour_name() const;
  inline void clear_tour_name();
  static const int kTourNameFieldNumber = 2;
  inline const ::std::string& tour_name() const;
  inline void set_tour_name(const ::std::string& value);
  inline void set_tour_name(const char* value);
  inline void set_tour_name(const char* value, size_t size);
  inline ::std::string* mutable_tour_name();
  inline ::std::string* release_tour_name();
  inline void set_allocated_tour_name(::std::string* tour_name);

  // optional string mission_name = 3;
  inline bool has_mission_name() const;
  inline void clear_mission_name();
  static const int kMissionNameFieldNumber = 3;
  inline const ::std::string& mission_name() const;
  inline void set_mission_name(const ::std::string& value);
  inline void set_mission_name(const char* value);
  inline void set_mission_name(const char* value, size_t size);
  inline ::std::string* mutable_mission_name();
  inline ::std::string* release_mission_name();
  inline void set_allocated_mission_name(::std::string* mission_name);

  // @@protoc_insertion_point(class_scope:CMsgMvMVictoryInfo)
 private:
  inline void set_has_tour_name();
  inline void clear_has_tour_name();
  inline void set_has_mission_name();
  inline void clear_has_mission_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictoryInfo_Player > players_;
  ::std::string* tour_name_;
  ::std::string* mission_name_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgMvMVictoryInfo* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsgTFHelloResponse : public ::google::protobuf::Message {
 public:
  CGCMsgTFHelloResponse();
  virtual ~CGCMsgTFHelloResponse();

  CGCMsgTFHelloResponse(const CGCMsgTFHelloResponse& from);

  inline CGCMsgTFHelloResponse& operator=(const CGCMsgTFHelloResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgTFHelloResponse& default_instance();

  void Swap(CGCMsgTFHelloResponse* other);

  // implements Message ----------------------------------------------

  CGCMsgTFHelloResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsgTFHelloResponse& from);
  void MergeFrom(const CGCMsgTFHelloResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 version_check = 1;
  inline bool has_version_check() const;
  inline void clear_version_check();
  static const int kVersionCheckFieldNumber = 1;
  inline ::google::protobuf::uint32 version_check() const;
  inline void set_version_check(::google::protobuf::uint32 value);

  // repeated uint64 version_checksum = 2;
  inline int version_checksum_size() const;
  inline void clear_version_checksum();
  static const int kVersionChecksumFieldNumber = 2;
  inline ::google::protobuf::uint64 version_checksum(int index) const;
  inline void set_version_checksum(int index, ::google::protobuf::uint64 value);
  inline void add_version_checksum(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      version_checksum() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_version_checksum();

  // optional uint32 version_verbose = 3;
  inline bool has_version_verbose() const;
  inline void clear_version_verbose();
  static const int kVersionVerboseFieldNumber = 3;
  inline ::google::protobuf::uint32 version_verbose() const;
  inline void set_version_verbose(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CGCMsgTFHelloResponse)
 private:
  inline void set_has_version_check();
  inline void clear_has_version_check();
  inline void set_has_version_verbose();
  inline void clear_has_version_verbose();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > version_checksum_;
  ::google::protobuf::uint32 version_check_;
  ::google::protobuf::uint32 version_verbose_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CGCMsgTFHelloResponse* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsgTFSync : public ::google::protobuf::Message {
 public:
  CGCMsgTFSync();
  virtual ~CGCMsgTFSync();

  CGCMsgTFSync(const CGCMsgTFSync& from);

  inline CGCMsgTFSync& operator=(const CGCMsgTFSync& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgTFSync& default_instance();

  void Swap(CGCMsgTFSync* other);

  // implements Message ----------------------------------------------

  CGCMsgTFSync* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsgTFSync& from);
  void MergeFrom(const CGCMsgTFSync& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes version_checksum = 1;
  inline bool has_version_checksum() const;
  inline void clear_version_checksum();
  static const int kVersionChecksumFieldNumber = 1;
  inline const ::std::string& version_checksum() const;
  inline void set_version_checksum(const ::std::string& value);
  inline void set_version_checksum(const char* value);
  inline void set_version_checksum(const void* value, size_t size);
  inline ::std::string* mutable_version_checksum();
  inline ::std::string* release_version_checksum();
  inline void set_allocated_version_checksum(::std::string* version_checksum);

  // optional uint32 version_check = 2;
  inline bool has_version_check() const;
  inline void clear_version_check();
  static const int kVersionCheckFieldNumber = 2;
  inline ::google::protobuf::uint32 version_check() const;
  inline void set_version_check(::google::protobuf::uint32 value);

  // optional uint32 version_check_ex = 3;
  inline bool has_version_check_ex() const;
  inline void clear_version_check_ex();
  static const int kVersionCheckExFieldNumber = 3;
  inline ::google::protobuf::uint32 version_check_ex() const;
  inline void set_version_check_ex(::google::protobuf::uint32 value);

  // optional uint32 version_check_ex2 = 4;
  inline bool has_version_check_ex2() const;
  inline void clear_version_check_ex2();
  static const int kVersionCheckEx2FieldNumber = 4;
  inline ::google::protobuf::uint32 version_check_ex2() const;
  inline void set_version_check_ex2(::google::protobuf::uint32 value);

  // optional bytes version_checksum_ex = 5;
  inline bool has_version_checksum_ex() const;
  inline void clear_version_checksum_ex();
  static const int kVersionChecksumExFieldNumber = 5;
  inline const ::std::string& version_checksum_ex() const;
  inline void set_version_checksum_ex(const ::std::string& value);
  inline void set_version_checksum_ex(const char* value);
  inline void set_version_checksum_ex(const void* value, size_t size);
  inline ::std::string* mutable_version_checksum_ex();
  inline ::std::string* release_version_checksum_ex();
  inline void set_allocated_version_checksum_ex(::std::string* version_checksum_ex);

  // @@protoc_insertion_point(class_scope:CGCMsgTFSync)
 private:
  inline void set_has_version_checksum();
  inline void clear_has_version_checksum();
  inline void set_has_version_check();
  inline void clear_has_version_check();
  inline void set_has_version_check_ex();
  inline void clear_has_version_check_ex();
  inline void set_has_version_check_ex2();
  inline void clear_has_version_check_ex2();
  inline void set_has_version_checksum_ex();
  inline void clear_has_version_checksum_ex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* version_checksum_;
  ::google::protobuf::uint32 version_check_;
  ::google::protobuf::uint32 version_check_ex_;
  ::std::string* version_checksum_ex_;
  ::google::protobuf::uint32 version_check_ex2_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CGCMsgTFSync* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsgTFSyncEx : public ::google::protobuf::Message {
 public:
  CGCMsgTFSyncEx();
  virtual ~CGCMsgTFSyncEx();

  CGCMsgTFSyncEx(const CGCMsgTFSyncEx& from);

  inline CGCMsgTFSyncEx& operator=(const CGCMsgTFSyncEx& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgTFSyncEx& default_instance();

  void Swap(CGCMsgTFSyncEx* other);

  // implements Message ----------------------------------------------

  CGCMsgTFSyncEx* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsgTFSyncEx& from);
  void MergeFrom(const CGCMsgTFSyncEx& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string version_checksum = 1;
  inline bool has_version_checksum() const;
  inline void clear_version_checksum();
  static const int kVersionChecksumFieldNumber = 1;
  inline const ::std::string& version_checksum() const;
  inline void set_version_checksum(const ::std::string& value);
  inline void set_version_checksum(const char* value);
  inline void set_version_checksum(const char* value, size_t size);
  inline ::std::string* mutable_version_checksum();
  inline ::std::string* release_version_checksum();
  inline void set_allocated_version_checksum(::std::string* version_checksum);

  // optional bytes version_checksum_ex = 2;
  inline bool has_version_checksum_ex() const;
  inline void clear_version_checksum_ex();
  static const int kVersionChecksumExFieldNumber = 2;
  inline const ::std::string& version_checksum_ex() const;
  inline void set_version_checksum_ex(const ::std::string& value);
  inline void set_version_checksum_ex(const char* value);
  inline void set_version_checksum_ex(const void* value, size_t size);
  inline ::std::string* mutable_version_checksum_ex();
  inline ::std::string* release_version_checksum_ex();
  inline void set_allocated_version_checksum_ex(::std::string* version_checksum_ex);

  // optional uint32 version_check = 3;
  inline bool has_version_check() const;
  inline void clear_version_check();
  static const int kVersionCheckFieldNumber = 3;
  inline ::google::protobuf::uint32 version_check() const;
  inline void set_version_check(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CGCMsgTFSyncEx)
 private:
  inline void set_has_version_checksum();
  inline void clear_has_version_checksum();
  inline void set_has_version_checksum_ex();
  inline void clear_has_version_checksum_ex();
  inline void set_has_version_check();
  inline void clear_has_version_check();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* version_checksum_;
  ::std::string* version_checksum_ex_;
  ::google::protobuf::uint32 version_check_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CGCMsgTFSyncEx* default_instance_;
};
// -------------------------------------------------------------------

class CMsgMvMVictory_Player : public ::google::protobuf::Message {
 public:
  CMsgMvMVictory_Player();
  virtual ~CMsgMvMVictory_Player();

  CMsgMvMVictory_Player(const CMsgMvMVictory_Player& from);

  inline CMsgMvMVictory_Player& operator=(const CMsgMvMVictory_Player& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMvMVictory_Player& default_instance();

  void Swap(CMsgMvMVictory_Player* other);

  // implements Message ----------------------------------------------

  CMsgMvMVictory_Player* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgMvMVictory_Player& from);
  void MergeFrom(const CMsgMvMVictory_Player& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);

  // optional bool squad_surplus = 2;
  inline bool has_squad_surplus() const;
  inline void clear_squad_surplus();
  static const int kSquadSurplusFieldNumber = 2;
  inline bool squad_surplus() const;
  inline void set_squad_surplus(bool value);

  // @@protoc_insertion_point(class_scope:CMsgMvMVictory.Player)
 private:
  inline void set_has_steam_id();
  inline void clear_has_steam_id();
  inline void set_has_squad_surplus();
  inline void clear_has_squad_surplus();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 steam_id_;
  bool squad_surplus_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgMvMVictory_Player* default_instance_;
};
// -------------------------------------------------------------------

class CMsgMvMVictory : public ::google::protobuf::Message {
 public:
  CMsgMvMVictory();
  virtual ~CMsgMvMVictory();

  CMsgMvMVictory(const CMsgMvMVictory& from);

  inline CMsgMvMVictory& operator=(const CMsgMvMVictory& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMvMVictory& default_instance();

  void Swap(CMsgMvMVictory* other);

  // implements Message ----------------------------------------------

  CMsgMvMVictory* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgMvMVictory& from);
  void MergeFrom(const CMsgMvMVictory& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgMvMVictory_Player Player;

  // accessors -------------------------------------------------------

  // optional uint32 legacy_mission_index = 1;
  inline bool has_legacy_mission_index() const;
  inline void clear_legacy_mission_index();
  static const int kLegacyMissionIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 legacy_mission_index() const;
  inline void set_legacy_mission_index(::google::protobuf::uint32 value);

  // optional string tour_name_mannup = 5;
  inline bool has_tour_name_mannup() const;
  inline void clear_tour_name_mannup();
  static const int kTourNameMannupFieldNumber = 5;
  inline const ::std::string& tour_name_mannup() const;
  inline void set_tour_name_mannup(const ::std::string& value);
  inline void set_tour_name_mannup(const char* value);
  inline void set_tour_name_mannup(const char* value, size_t size);
  inline ::std::string* mutable_tour_name_mannup();
  inline ::std::string* release_tour_name_mannup();
  inline void set_allocated_tour_name_mannup(::std::string* tour_name_mannup);

  // optional string mission_name = 6;
  inline bool has_mission_name() const;
  inline void clear_mission_name();
  static const int kMissionNameFieldNumber = 6;
  inline const ::std::string& mission_name() const;
  inline void set_mission_name(const ::std::string& value);
  inline void set_mission_name(const char* value);
  inline void set_mission_name(const char* value, size_t size);
  inline ::std::string* mutable_mission_name();
  inline ::std::string* release_mission_name();
  inline void set_allocated_mission_name(::std::string* mission_name);

  // repeated .CMsgMvMVictory.Player players = 2;
  inline int players_size() const;
  inline void clear_players();
  static const int kPlayersFieldNumber = 2;
  inline const ::CMsgMvMVictory_Player& players(int index) const;
  inline ::CMsgMvMVictory_Player* mutable_players(int index);
  inline ::CMsgMvMVictory_Player* add_players();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictory_Player >&
      players() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictory_Player >*
      mutable_players();

  // optional uint64 lobby_id = 3;
  inline bool has_lobby_id() const;
  inline void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 3;
  inline ::google::protobuf::uint64 lobby_id() const;
  inline void set_lobby_id(::google::protobuf::uint64 value);

  // optional fixed32 event_time = 4;
  inline bool has_event_time() const;
  inline void clear_event_time();
  static const int kEventTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 event_time() const;
  inline void set_event_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgMvMVictory)
 private:
  inline void set_has_legacy_mission_index();
  inline void clear_has_legacy_mission_index();
  inline void set_has_tour_name_mannup();
  inline void clear_has_tour_name_mannup();
  inline void set_has_mission_name();
  inline void clear_has_mission_name();
  inline void set_has_lobby_id();
  inline void clear_has_lobby_id();
  inline void set_has_event_time();
  inline void clear_has_event_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* tour_name_mannup_;
  ::std::string* mission_name_;
  ::google::protobuf::uint32 legacy_mission_index_;
  ::google::protobuf::uint32 event_time_;
  ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictory_Player > players_;
  ::google::protobuf::uint64 lobby_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgMvMVictory* default_instance_;
};
// -------------------------------------------------------------------

class CMsgMvMMannUpVictoryReply : public ::google::protobuf::Message {
 public:
  CMsgMvMMannUpVictoryReply();
  virtual ~CMsgMvMMannUpVictoryReply();

  CMsgMvMMannUpVictoryReply(const CMsgMvMMannUpVictoryReply& from);

  inline CMsgMvMMannUpVictoryReply& operator=(const CMsgMvMMannUpVictoryReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMvMMannUpVictoryReply& default_instance();

  void Swap(CMsgMvMMannUpVictoryReply* other);

  // implements Message ----------------------------------------------

  CMsgMvMMannUpVictoryReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgMvMMannUpVictoryReply& from);
  void MergeFrom(const CMsgMvMMannUpVictoryReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgMvMMannUpVictoryReply)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 result_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgMvMMannUpVictoryReply* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGameServerKickingLobby : public ::google::protobuf::Message {
 public:
  CMsgGameServerKickingLobby();
  virtual ~CMsgGameServerKickingLobby();

  CMsgGameServerKickingLobby(const CMsgGameServerKickingLobby& from);

  inline CMsgGameServerKickingLobby& operator=(const CMsgGameServerKickingLobby& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGameServerKickingLobby& default_instance();

  void Swap(CMsgGameServerKickingLobby* other);

  // implements Message ----------------------------------------------

  CMsgGameServerKickingLobby* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGameServerKickingLobby& from);
  void MergeFrom(const CMsgGameServerKickingLobby& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 connected_players = 1;
  inline int connected_players_size() const;
  inline void clear_connected_players();
  static const int kConnectedPlayersFieldNumber = 1;
  inline ::google::protobuf::uint64 connected_players(int index) const;
  inline void set_connected_players(int index, ::google::protobuf::uint64 value);
  inline void add_connected_players(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      connected_players() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_connected_players();

  // @@protoc_insertion_point(class_scope:CMsgGameServerKickingLobby)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > connected_players_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGameServerKickingLobby* default_instance_;
};
// -------------------------------------------------------------------

class CMsgLeaveGameAndPrepareToJoinParty : public ::google::protobuf::Message {
 public:
  CMsgLeaveGameAndPrepareToJoinParty();
  virtual ~CMsgLeaveGameAndPrepareToJoinParty();

  CMsgLeaveGameAndPrepareToJoinParty(const CMsgLeaveGameAndPrepareToJoinParty& from);

  inline CMsgLeaveGameAndPrepareToJoinParty& operator=(const CMsgLeaveGameAndPrepareToJoinParty& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgLeaveGameAndPrepareToJoinParty& default_instance();

  void Swap(CMsgLeaveGameAndPrepareToJoinParty* other);

  // implements Message ----------------------------------------------

  CMsgLeaveGameAndPrepareToJoinParty* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgLeaveGameAndPrepareToJoinParty& from);
  void MergeFrom(const CMsgLeaveGameAndPrepareToJoinParty& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 party_id = 1;
  inline bool has_party_id() const;
  inline void clear_party_id();
  static const int kPartyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 party_id() const;
  inline void set_party_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgLeaveGameAndPrepareToJoinParty)
 private:
  inline void set_has_party_id();
  inline void clear_has_party_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 party_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgLeaveGameAndPrepareToJoinParty* default_instance_;
};
// -------------------------------------------------------------------

class CMsgRemovePlayerFromLobby : public ::google::protobuf::Message {
 public:
  CMsgRemovePlayerFromLobby();
  virtual ~CMsgRemovePlayerFromLobby();

  CMsgRemovePlayerFromLobby(const CMsgRemovePlayerFromLobby& from);

  inline CMsgRemovePlayerFromLobby& operator=(const CMsgRemovePlayerFromLobby& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgRemovePlayerFromLobby& default_instance();

  void Swap(CMsgRemovePlayerFromLobby* other);

  // implements Message ----------------------------------------------

  CMsgRemovePlayerFromLobby* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgRemovePlayerFromLobby& from);
  void MergeFrom(const CMsgRemovePlayerFromLobby& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgRemovePlayerFromLobby_RemoveReason RemoveReason;
  static const RemoveReason VOTE_KICK = CMsgRemovePlayerFromLobby_RemoveReason_VOTE_KICK;
  static const RemoveReason IDLE_KICK = CMsgRemovePlayerFromLobby_RemoveReason_IDLE_KICK;
  static const RemoveReason ADMIN_KICK = CMsgRemovePlayerFromLobby_RemoveReason_ADMIN_KICK;
  static const RemoveReason GAME_OVER = CMsgRemovePlayerFromLobby_RemoveReason_GAME_OVER;
  static inline bool RemoveReason_IsValid(int value) {
    return CMsgRemovePlayerFromLobby_RemoveReason_IsValid(value);
  }
  static const RemoveReason RemoveReason_MIN =
    CMsgRemovePlayerFromLobby_RemoveReason_RemoveReason_MIN;
  static const RemoveReason RemoveReason_MAX =
    CMsgRemovePlayerFromLobby_RemoveReason_RemoveReason_MAX;
  static const int RemoveReason_ARRAYSIZE =
    CMsgRemovePlayerFromLobby_RemoveReason_RemoveReason_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RemoveReason_descriptor() {
    return CMsgRemovePlayerFromLobby_RemoveReason_descriptor();
  }
  static inline const ::std::string& RemoveReason_Name(RemoveReason value) {
    return CMsgRemovePlayerFromLobby_RemoveReason_Name(value);
  }
  static inline bool RemoveReason_Parse(const ::std::string& name,
      RemoveReason* value) {
    return CMsgRemovePlayerFromLobby_RemoveReason_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);

  // optional .CMsgRemovePlayerFromLobby.RemoveReason remove_reason = 2 [default = VOTE_KICK];
  inline bool has_remove_reason() const;
  inline void clear_remove_reason();
  static const int kRemoveReasonFieldNumber = 2;
  inline ::CMsgRemovePlayerFromLobby_RemoveReason remove_reason() const;
  inline void set_remove_reason(::CMsgRemovePlayerFromLobby_RemoveReason value);

  // @@protoc_insertion_point(class_scope:CMsgRemovePlayerFromLobby)
 private:
  inline void set_has_steam_id();
  inline void clear_has_steam_id();
  inline void set_has_remove_reason();
  inline void clear_has_remove_reason();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 steam_id_;
  int remove_reason_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgRemovePlayerFromLobby* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSetLobbySafeToLeave : public ::google::protobuf::Message {
 public:
  CMsgSetLobbySafeToLeave();
  virtual ~CMsgSetLobbySafeToLeave();

  CMsgSetLobbySafeToLeave(const CMsgSetLobbySafeToLeave& from);

  inline CMsgSetLobbySafeToLeave& operator=(const CMsgSetLobbySafeToLeave& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSetLobbySafeToLeave& default_instance();

  void Swap(CMsgSetLobbySafeToLeave* other);

  // implements Message ----------------------------------------------

  CMsgSetLobbySafeToLeave* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSetLobbySafeToLeave& from);
  void MergeFrom(const CMsgSetLobbySafeToLeave& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 lobby_id = 1;
  inline bool has_lobby_id() const;
  inline void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 lobby_id() const;
  inline void set_lobby_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgSetLobbySafeToLeave)
 private:
  inline void set_has_lobby_id();
  inline void clear_has_lobby_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 lobby_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgSetLobbySafeToLeave* default_instance_;
};
// -------------------------------------------------------------------

class CMsgHalloween_ServerBossEvent : public ::google::protobuf::Message {
 public:
  CMsgHalloween_ServerBossEvent();
  virtual ~CMsgHalloween_ServerBossEvent();

  CMsgHalloween_ServerBossEvent(const CMsgHalloween_ServerBossEvent& from);

  inline CMsgHalloween_ServerBossEvent& operator=(const CMsgHalloween_ServerBossEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgHalloween_ServerBossEvent& default_instance();

  void Swap(CMsgHalloween_ServerBossEvent* other);

  // implements Message ----------------------------------------------

  CMsgHalloween_ServerBossEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgHalloween_ServerBossEvent& from);
  void MergeFrom(const CMsgHalloween_ServerBossEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 event_counter = 1;
  inline bool has_event_counter() const;
  inline void clear_event_counter();
  static const int kEventCounterFieldNumber = 1;
  inline ::google::protobuf::uint32 event_counter() const;
  inline void set_event_counter(::google::protobuf::uint32 value);

  // optional uint32 timestamp = 2;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  inline ::google::protobuf::uint32 timestamp() const;
  inline void set_timestamp(::google::protobuf::uint32 value);

  // optional uint32 boss_type = 3;
  inline bool has_boss_type() const;
  inline void clear_boss_type();
  static const int kBossTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 boss_type() const;
  inline void set_boss_type(::google::protobuf::uint32 value);

  // optional uint32 boss_level = 4;
  inline bool has_boss_level() const;
  inline void clear_boss_level();
  static const int kBossLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 boss_level() const;
  inline void set_boss_level(::google::protobuf::uint32 value);

  // optional uint32 event_type = 5;
  inline bool has_event_type() const;
  inline void clear_event_type();
  static const int kEventTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 event_type() const;
  inline void set_event_type(::google::protobuf::uint32 value);

  // optional uint32 players_involved = 6;
  inline bool has_players_involved() const;
  inline void clear_players_involved();
  static const int kPlayersInvolvedFieldNumber = 6;
  inline ::google::protobuf::uint32 players_involved() const;
  inline void set_players_involved(::google::protobuf::uint32 value);

  // optional float elapsed_time = 7;
  inline bool has_elapsed_time() const;
  inline void clear_elapsed_time();
  static const int kElapsedTimeFieldNumber = 7;
  inline float elapsed_time() const;
  inline void set_elapsed_time(float value);

  // @@protoc_insertion_point(class_scope:CMsgHalloween_ServerBossEvent)
 private:
  inline void set_has_event_counter();
  inline void clear_has_event_counter();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_boss_type();
  inline void clear_has_boss_type();
  inline void set_has_boss_level();
  inline void clear_has_boss_level();
  inline void set_has_event_type();
  inline void clear_has_event_type();
  inline void set_has_players_involved();
  inline void clear_has_players_involved();
  inline void set_has_elapsed_time();
  inline void clear_has_elapsed_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 event_counter_;
  ::google::protobuf::uint32 timestamp_;
  ::google::protobuf::uint32 boss_type_;
  ::google::protobuf::uint32 boss_level_;
  ::google::protobuf::uint32 event_type_;
  ::google::protobuf::uint32 players_involved_;
  float elapsed_time_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgHalloween_ServerBossEvent* default_instance_;
};
// -------------------------------------------------------------------

class CMsgHalloween_Merasmus2012 : public ::google::protobuf::Message {
 public:
  CMsgHalloween_Merasmus2012();
  virtual ~CMsgHalloween_Merasmus2012();

  CMsgHalloween_Merasmus2012(const CMsgHalloween_Merasmus2012& from);

  inline CMsgHalloween_Merasmus2012& operator=(const CMsgHalloween_Merasmus2012& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgHalloween_Merasmus2012& default_instance();

  void Swap(CMsgHalloween_Merasmus2012* other);

  // implements Message ----------------------------------------------

  CMsgHalloween_Merasmus2012* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgHalloween_Merasmus2012& from);
  void MergeFrom(const CMsgHalloween_Merasmus2012& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 event_counter = 1;
  inline bool has_event_counter() const;
  inline void clear_event_counter();
  static const int kEventCounterFieldNumber = 1;
  inline ::google::protobuf::uint32 event_counter() const;
  inline void set_event_counter(::google::protobuf::uint32 value);

  // optional fixed32 time_submitted = 2;
  inline bool has_time_submitted() const;
  inline void clear_time_submitted();
  static const int kTimeSubmittedFieldNumber = 2;
  inline ::google::protobuf::uint32 time_submitted() const;
  inline void set_time_submitted(::google::protobuf::uint32 value);

  // optional bool is_valve_server = 3;
  inline bool has_is_valve_server() const;
  inline void clear_is_valve_server();
  static const int kIsValveServerFieldNumber = 3;
  inline bool is_valve_server() const;
  inline void set_is_valve_server(bool value);

  // optional uint32 boss_level = 4;
  inline bool has_boss_level() const;
  inline void clear_boss_level();
  static const int kBossLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 boss_level() const;
  inline void set_boss_level(::google::protobuf::uint32 value);

  // optional uint32 spawned_health = 5;
  inline bool has_spawned_health() const;
  inline void clear_spawned_health();
  static const int kSpawnedHealthFieldNumber = 5;
  inline ::google::protobuf::uint32 spawned_health() const;
  inline void set_spawned_health(::google::protobuf::uint32 value);

  // optional uint32 remaining_health = 6;
  inline bool has_remaining_health() const;
  inline void clear_remaining_health();
  static const int kRemainingHealthFieldNumber = 6;
  inline ::google::protobuf::uint32 remaining_health() const;
  inline void set_remaining_health(::google::protobuf::uint32 value);

  // optional uint32 life_time = 7;
  inline bool has_life_time() const;
  inline void clear_life_time();
  static const int kLifeTimeFieldNumber = 7;
  inline ::google::protobuf::uint32 life_time() const;
  inline void set_life_time(::google::protobuf::uint32 value);

  // optional uint32 bomb_kills = 8;
  inline bool has_bomb_kills() const;
  inline void clear_bomb_kills();
  static const int kBombKillsFieldNumber = 8;
  inline ::google::protobuf::uint32 bomb_kills() const;
  inline void set_bomb_kills(::google::protobuf::uint32 value);

  // optional uint32 staff_kills = 9;
  inline bool has_staff_kills() const;
  inline void clear_staff_kills();
  static const int kStaffKillsFieldNumber = 9;
  inline ::google::protobuf::uint32 staff_kills() const;
  inline void set_staff_kills(::google::protobuf::uint32 value);

  // optional uint32 pvp_kills = 10;
  inline bool has_pvp_kills() const;
  inline void clear_pvp_kills();
  static const int kPvpKillsFieldNumber = 10;
  inline ::google::protobuf::uint32 pvp_kills() const;
  inline void set_pvp_kills(::google::protobuf::uint32 value);

  // optional uint32 prophunt_time1 = 11;
  inline bool has_prophunt_time1() const;
  inline void clear_prophunt_time1();
  static const int kProphuntTime1FieldNumber = 11;
  inline ::google::protobuf::uint32 prophunt_time1() const;
  inline void set_prophunt_time1(::google::protobuf::uint32 value);

  // optional uint32 prophunt_time2 = 12;
  inline bool has_prophunt_time2() const;
  inline void clear_prophunt_time2();
  static const int kProphuntTime2FieldNumber = 12;
  inline ::google::protobuf::uint32 prophunt_time2() const;
  inline void set_prophunt_time2(::google::protobuf::uint32 value);

  // optional uint32 dmg_scout = 13;
  inline bool has_dmg_scout() const;
  inline void clear_dmg_scout();
  static const int kDmgScoutFieldNumber = 13;
  inline ::google::protobuf::uint32 dmg_scout() const;
  inline void set_dmg_scout(::google::protobuf::uint32 value);

  // optional uint32 dmg_sniper = 14;
  inline bool has_dmg_sniper() const;
  inline void clear_dmg_sniper();
  static const int kDmgSniperFieldNumber = 14;
  inline ::google::protobuf::uint32 dmg_sniper() const;
  inline void set_dmg_sniper(::google::protobuf::uint32 value);

  // optional uint32 dmg_soldier = 15;
  inline bool has_dmg_soldier() const;
  inline void clear_dmg_soldier();
  static const int kDmgSoldierFieldNumber = 15;
  inline ::google::protobuf::uint32 dmg_soldier() const;
  inline void set_dmg_soldier(::google::protobuf::uint32 value);

  // optional uint32 dmg_demo = 16;
  inline bool has_dmg_demo() const;
  inline void clear_dmg_demo();
  static const int kDmgDemoFieldNumber = 16;
  inline ::google::protobuf::uint32 dmg_demo() const;
  inline void set_dmg_demo(::google::protobuf::uint32 value);

  // optional uint32 dmg_medic = 17;
  inline bool has_dmg_medic() const;
  inline void clear_dmg_medic();
  static const int kDmgMedicFieldNumber = 17;
  inline ::google::protobuf::uint32 dmg_medic() const;
  inline void set_dmg_medic(::google::protobuf::uint32 value);

  // optional uint32 dmg_heavy = 18;
  inline bool has_dmg_heavy() const;
  inline void clear_dmg_heavy();
  static const int kDmgHeavyFieldNumber = 18;
  inline ::google::protobuf::uint32 dmg_heavy() const;
  inline void set_dmg_heavy(::google::protobuf::uint32 value);

  // optional uint32 dmg_pyro = 19;
  inline bool has_dmg_pyro() const;
  inline void clear_dmg_pyro();
  static const int kDmgPyroFieldNumber = 19;
  inline ::google::protobuf::uint32 dmg_pyro() const;
  inline void set_dmg_pyro(::google::protobuf::uint32 value);

  // optional uint32 dmg_spy = 20;
  inline bool has_dmg_spy() const;
  inline void clear_dmg_spy();
  static const int kDmgSpyFieldNumber = 20;
  inline ::google::protobuf::uint32 dmg_spy() const;
  inline void set_dmg_spy(::google::protobuf::uint32 value);

  // optional uint32 dmg_engineer = 21;
  inline bool has_dmg_engineer() const;
  inline void clear_dmg_engineer();
  static const int kDmgEngineerFieldNumber = 21;
  inline ::google::protobuf::uint32 dmg_engineer() const;
  inline void set_dmg_engineer(::google::protobuf::uint32 value);

  // optional uint32 scout_count = 22;
  inline bool has_scout_count() const;
  inline void clear_scout_count();
  static const int kScoutCountFieldNumber = 22;
  inline ::google::protobuf::uint32 scout_count() const;
  inline void set_scout_count(::google::protobuf::uint32 value);

  // optional uint32 sniper_count = 23;
  inline bool has_sniper_count() const;
  inline void clear_sniper_count();
  static const int kSniperCountFieldNumber = 23;
  inline ::google::protobuf::uint32 sniper_count() const;
  inline void set_sniper_count(::google::protobuf::uint32 value);

  // optional uint32 solider_count = 24;
  inline bool has_solider_count() const;
  inline void clear_solider_count();
  static const int kSoliderCountFieldNumber = 24;
  inline ::google::protobuf::uint32 solider_count() const;
  inline void set_solider_count(::google::protobuf::uint32 value);

  // optional uint32 demo_count = 25;
  inline bool has_demo_count() const;
  inline void clear_demo_count();
  static const int kDemoCountFieldNumber = 25;
  inline ::google::protobuf::uint32 demo_count() const;
  inline void set_demo_count(::google::protobuf::uint32 value);

  // optional uint32 medic_count = 26;
  inline bool has_medic_count() const;
  inline void clear_medic_count();
  static const int kMedicCountFieldNumber = 26;
  inline ::google::protobuf::uint32 medic_count() const;
  inline void set_medic_count(::google::protobuf::uint32 value);

  // optional uint32 heavy_count = 27;
  inline bool has_heavy_count() const;
  inline void clear_heavy_count();
  static const int kHeavyCountFieldNumber = 27;
  inline ::google::protobuf::uint32 heavy_count() const;
  inline void set_heavy_count(::google::protobuf::uint32 value);

  // optional uint32 pyro_count = 28;
  inline bool has_pyro_count() const;
  inline void clear_pyro_count();
  static const int kPyroCountFieldNumber = 28;
  inline ::google::protobuf::uint32 pyro_count() const;
  inline void set_pyro_count(::google::protobuf::uint32 value);

  // optional uint32 spy_count = 29;
  inline bool has_spy_count() const;
  inline void clear_spy_count();
  static const int kSpyCountFieldNumber = 29;
  inline ::google::protobuf::uint32 spy_count() const;
  inline void set_spy_count(::google::protobuf::uint32 value);

  // optional uint32 engineer_count = 30;
  inline bool has_engineer_count() const;
  inline void clear_engineer_count();
  static const int kEngineerCountFieldNumber = 30;
  inline ::google::protobuf::uint32 engineer_count() const;
  inline void set_engineer_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgHalloween_Merasmus2012)
 private:
  inline void set_has_event_counter();
  inline void clear_has_event_counter();
  inline void set_has_time_submitted();
  inline void clear_has_time_submitted();
  inline void set_has_is_valve_server();
  inline void clear_has_is_valve_server();
  inline void set_has_boss_level();
  inline void clear_has_boss_level();
  inline void set_has_spawned_health();
  inline void clear_has_spawned_health();
  inline void set_has_remaining_health();
  inline void clear_has_remaining_health();
  inline void set_has_life_time();
  inline void clear_has_life_time();
  inline void set_has_bomb_kills();
  inline void clear_has_bomb_kills();
  inline void set_has_staff_kills();
  inline void clear_has_staff_kills();
  inline void set_has_pvp_kills();
  inline void clear_has_pvp_kills();
  inline void set_has_prophunt_time1();
  inline void clear_has_prophunt_time1();
  inline void set_has_prophunt_time2();
  inline void clear_has_prophunt_time2();
  inline void set_has_dmg_scout();
  inline void clear_has_dmg_scout();
  inline void set_has_dmg_sniper();
  inline void clear_has_dmg_sniper();
  inline void set_has_dmg_soldier();
  inline void clear_has_dmg_soldier();
  inline void set_has_dmg_demo();
  inline void clear_has_dmg_demo();
  inline void set_has_dmg_medic();
  inline void clear_has_dmg_medic();
  inline void set_has_dmg_heavy();
  inline void clear_has_dmg_heavy();
  inline void set_has_dmg_pyro();
  inline void clear_has_dmg_pyro();
  inline void set_has_dmg_spy();
  inline void clear_has_dmg_spy();
  inline void set_has_dmg_engineer();
  inline void clear_has_dmg_engineer();
  inline void set_has_scout_count();
  inline void clear_has_scout_count();
  inline void set_has_sniper_count();
  inline void clear_has_sniper_count();
  inline void set_has_solider_count();
  inline void clear_has_solider_count();
  inline void set_has_demo_count();
  inline void clear_has_demo_count();
  inline void set_has_medic_count();
  inline void clear_has_medic_count();
  inline void set_has_heavy_count();
  inline void clear_has_heavy_count();
  inline void set_has_pyro_count();
  inline void clear_has_pyro_count();
  inline void set_has_spy_count();
  inline void clear_has_spy_count();
  inline void set_has_engineer_count();
  inline void clear_has_engineer_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 event_counter_;
  ::google::protobuf::uint32 time_submitted_;
  bool is_valve_server_;
  ::google::protobuf::uint32 boss_level_;
  ::google::protobuf::uint32 spawned_health_;
  ::google::protobuf::uint32 remaining_health_;
  ::google::protobuf::uint32 life_time_;
  ::google::protobuf::uint32 bomb_kills_;
  ::google::protobuf::uint32 staff_kills_;
  ::google::protobuf::uint32 pvp_kills_;
  ::google::protobuf::uint32 prophunt_time1_;
  ::google::protobuf::uint32 prophunt_time2_;
  ::google::protobuf::uint32 dmg_scout_;
  ::google::protobuf::uint32 dmg_sniper_;
  ::google::protobuf::uint32 dmg_soldier_;
  ::google::protobuf::uint32 dmg_demo_;
  ::google::protobuf::uint32 dmg_medic_;
  ::google::protobuf::uint32 dmg_heavy_;
  ::google::protobuf::uint32 dmg_pyro_;
  ::google::protobuf::uint32 dmg_spy_;
  ::google::protobuf::uint32 dmg_engineer_;
  ::google::protobuf::uint32 scout_count_;
  ::google::protobuf::uint32 sniper_count_;
  ::google::protobuf::uint32 solider_count_;
  ::google::protobuf::uint32 demo_count_;
  ::google::protobuf::uint32 medic_count_;
  ::google::protobuf::uint32 heavy_count_;
  ::google::protobuf::uint32 pyro_count_;
  ::google::protobuf::uint32 spy_count_;
  ::google::protobuf::uint32 engineer_count_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgHalloween_Merasmus2012* default_instance_;
};
// -------------------------------------------------------------------

class CMsgUpdateHalloweenMerasmusLootLevel_Player : public ::google::protobuf::Message {
 public:
  CMsgUpdateHalloweenMerasmusLootLevel_Player();
  virtual ~CMsgUpdateHalloweenMerasmusLootLevel_Player();

  CMsgUpdateHalloweenMerasmusLootLevel_Player(const CMsgUpdateHalloweenMerasmusLootLevel_Player& from);

  inline CMsgUpdateHalloweenMerasmusLootLevel_Player& operator=(const CMsgUpdateHalloweenMerasmusLootLevel_Player& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgUpdateHalloweenMerasmusLootLevel_Player& default_instance();

  void Swap(CMsgUpdateHalloweenMerasmusLootLevel_Player* other);

  // implements Message ----------------------------------------------

  CMsgUpdateHalloweenMerasmusLootLevel_Player* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgUpdateHalloweenMerasmusLootLevel_Player& from);
  void MergeFrom(const CMsgUpdateHalloweenMerasmusLootLevel_Player& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgUpdateHalloweenMerasmusLootLevel.Player)
 private:
  inline void set_has_steam_id();
  inline void clear_has_steam_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 steam_id_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgUpdateHalloweenMerasmusLootLevel_Player* default_instance_;
};
// -------------------------------------------------------------------

class CMsgUpdateHalloweenMerasmusLootLevel : public ::google::protobuf::Message {
 public:
  CMsgUpdateHalloweenMerasmusLootLevel();
  virtual ~CMsgUpdateHalloweenMerasmusLootLevel();

  CMsgUpdateHalloweenMerasmusLootLevel(const CMsgUpdateHalloweenMerasmusLootLevel& from);

  inline CMsgUpdateHalloweenMerasmusLootLevel& operator=(const CMsgUpdateHalloweenMerasmusLootLevel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgUpdateHalloweenMerasmusLootLevel& default_instance();

  void Swap(CMsgUpdateHalloweenMerasmusLootLevel* other);

  // implements Message ----------------------------------------------

  CMsgUpdateHalloweenMerasmusLootLevel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgUpdateHalloweenMerasmusLootLevel& from);
  void MergeFrom(const CMsgUpdateHalloweenMerasmusLootLevel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgUpdateHalloweenMerasmusLootLevel_Player Player;

  // accessors -------------------------------------------------------

  // repeated .CMsgUpdateHalloweenMerasmusLootLevel.Player players = 1;
  inline int players_size() const;
  inline void clear_players();
  static const int kPlayersFieldNumber = 1;
  inline const ::CMsgUpdateHalloweenMerasmusLootLevel_Player& players(int index) const;
  inline ::CMsgUpdateHalloweenMerasmusLootLevel_Player* mutable_players(int index);
  inline ::CMsgUpdateHalloweenMerasmusLootLevel_Player* add_players();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgUpdateHalloweenMerasmusLootLevel_Player >&
      players() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgUpdateHalloweenMerasmusLootLevel_Player >*
      mutable_players();

  // optional uint32 merasmus_level = 2;
  inline bool has_merasmus_level() const;
  inline void clear_merasmus_level();
  static const int kMerasmusLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 merasmus_level() const;
  inline void set_merasmus_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgUpdateHalloweenMerasmusLootLevel)
 private:
  inline void set_has_merasmus_level();
  inline void clear_has_merasmus_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgUpdateHalloweenMerasmusLootLevel_Player > players_;
  ::google::protobuf::uint32 merasmus_level_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgUpdateHalloweenMerasmusLootLevel* default_instance_;
};
// -------------------------------------------------------------------

class CAttribute_String : public ::google::protobuf::Message {
 public:
  CAttribute_String();
  virtual ~CAttribute_String();

  CAttribute_String(const CAttribute_String& from);

  inline CAttribute_String& operator=(const CAttribute_String& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CAttribute_String& default_instance();

  void Swap(CAttribute_String* other);

  // implements Message ----------------------------------------------

  CAttribute_String* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CAttribute_String& from);
  void MergeFrom(const CAttribute_String& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string value = 1;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 1;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const char* value, size_t size);
  inline ::std::string* mutable_value();
  inline ::std::string* release_value();
  inline void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:CAttribute_String)
 private:
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* value_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CAttribute_String* default_instance_;
};
// -------------------------------------------------------------------

class CAttribute_DynamicRecipeComponent : public ::google::protobuf::Message {
 public:
  CAttribute_DynamicRecipeComponent();
  virtual ~CAttribute_DynamicRecipeComponent();

  CAttribute_DynamicRecipeComponent(const CAttribute_DynamicRecipeComponent& from);

  inline CAttribute_DynamicRecipeComponent& operator=(const CAttribute_DynamicRecipeComponent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CAttribute_DynamicRecipeComponent& default_instance();

  void Swap(CAttribute_DynamicRecipeComponent* other);

  // implements Message ----------------------------------------------

  CAttribute_DynamicRecipeComponent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CAttribute_DynamicRecipeComponent& from);
  void MergeFrom(const CAttribute_DynamicRecipeComponent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 def_index = 1;
  inline bool has_def_index() const;
  inline void clear_def_index();
  static const int kDefIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 def_index() const;
  inline void set_def_index(::google::protobuf::uint32 value);

  // optional uint32 item_quality = 2;
  inline bool has_item_quality() const;
  inline void clear_item_quality();
  static const int kItemQualityFieldNumber = 2;
  inline ::google::protobuf::uint32 item_quality() const;
  inline void set_item_quality(::google::protobuf::uint32 value);

  // optional uint32 component_flags = 3;
  inline bool has_component_flags() const;
  inline void clear_component_flags();
  static const int kComponentFlagsFieldNumber = 3;
  inline ::google::protobuf::uint32 component_flags() const;
  inline void set_component_flags(::google::protobuf::uint32 value);

  // optional string attributes_string = 4;
  inline bool has_attributes_string() const;
  inline void clear_attributes_string();
  static const int kAttributesStringFieldNumber = 4;
  inline const ::std::string& attributes_string() const;
  inline void set_attributes_string(const ::std::string& value);
  inline void set_attributes_string(const char* value);
  inline void set_attributes_string(const char* value, size_t size);
  inline ::std::string* mutable_attributes_string();
  inline ::std::string* release_attributes_string();
  inline void set_allocated_attributes_string(::std::string* attributes_string);

  // optional uint32 num_required = 5;
  inline bool has_num_required() const;
  inline void clear_num_required();
  static const int kNumRequiredFieldNumber = 5;
  inline ::google::protobuf::uint32 num_required() const;
  inline void set_num_required(::google::protobuf::uint32 value);

  // optional uint32 num_fulfilled = 6;
  inline bool has_num_fulfilled() const;
  inline void clear_num_fulfilled();
  static const int kNumFulfilledFieldNumber = 6;
  inline ::google::protobuf::uint32 num_fulfilled() const;
  inline void set_num_fulfilled(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CAttribute_DynamicRecipeComponent)
 private:
  inline void set_has_def_index();
  inline void clear_has_def_index();
  inline void set_has_item_quality();
  inline void clear_has_item_quality();
  inline void set_has_component_flags();
  inline void clear_has_component_flags();
  inline void set_has_attributes_string();
  inline void clear_has_attributes_string();
  inline void set_has_num_required();
  inline void clear_has_num_required();
  inline void set_has_num_fulfilled();
  inline void clear_has_num_fulfilled();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 def_index_;
  ::google::protobuf::uint32 item_quality_;
  ::std::string* attributes_string_;
  ::google::protobuf::uint32 component_flags_;
  ::google::protobuf::uint32 num_required_;
  ::google::protobuf::uint32 num_fulfilled_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CAttribute_DynamicRecipeComponent* default_instance_;
};
// -------------------------------------------------------------------

class CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT : public ::google::protobuf::Message {
 public:
  CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT();
  virtual ~CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT();

  CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT(const CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT& from);

  inline CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT& operator=(const CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT& default_instance();

  void Swap(CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT* other);

  // implements Message ----------------------------------------------

  CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT& from);
  void MergeFrom(const CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 def_index = 1;
  inline bool has_def_index() const;
  inline void clear_def_index();
  static const int kDefIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 def_index() const;
  inline void set_def_index(::google::protobuf::uint32 value);

  // optional uint32 item_def = 2;
  inline bool has_item_def() const;
  inline void clear_item_def();
  static const int kItemDefFieldNumber = 2;
  inline ::google::protobuf::uint32 item_def() const;
  inline void set_item_def(::google::protobuf::uint32 value);

  // optional uint32 item_quality = 3;
  inline bool has_item_quality() const;
  inline void clear_item_quality();
  static const int kItemQualityFieldNumber = 3;
  inline ::google::protobuf::uint32 item_quality() const;
  inline void set_item_quality(::google::protobuf::uint32 value);

  // optional uint32 component_flags = 4;
  inline bool has_component_flags() const;
  inline void clear_component_flags();
  static const int kComponentFlagsFieldNumber = 4;
  inline ::google::protobuf::uint32 component_flags() const;
  inline void set_component_flags(::google::protobuf::uint32 value);

  // optional uint32 item_flags = 5;
  inline bool has_item_flags() const;
  inline void clear_item_flags();
  static const int kItemFlagsFieldNumber = 5;
  inline ::google::protobuf::uint32 item_flags() const;
  inline void set_item_flags(::google::protobuf::uint32 value);

  // optional string attributes_string = 6;
  inline bool has_attributes_string() const;
  inline void clear_attributes_string();
  static const int kAttributesStringFieldNumber = 6;
  inline const ::std::string& attributes_string() const;
  inline void set_attributes_string(const ::std::string& value);
  inline void set_attributes_string(const char* value);
  inline void set_attributes_string(const char* value, size_t size);
  inline ::std::string* mutable_attributes_string();
  inline ::std::string* release_attributes_string();
  inline void set_allocated_attributes_string(::std::string* attributes_string);

  // optional uint32 num_required = 7;
  inline bool has_num_required() const;
  inline void clear_num_required();
  static const int kNumRequiredFieldNumber = 7;
  inline ::google::protobuf::uint32 num_required() const;
  inline void set_num_required(::google::protobuf::uint32 value);

  // optional uint32 item_count = 8;
  inline bool has_item_count() const;
  inline void clear_item_count();
  static const int kItemCountFieldNumber = 8;
  inline ::google::protobuf::uint32 item_count() const;
  inline void set_item_count(::google::protobuf::uint32 value);

  // optional uint32 num_fulfilled = 9;
  inline bool has_num_fulfilled() const;
  inline void clear_num_fulfilled();
  static const int kNumFulfilledFieldNumber = 9;
  inline ::google::protobuf::uint32 num_fulfilled() const;
  inline void set_num_fulfilled(::google::protobuf::uint32 value);

  // optional uint32 items_fulfilled = 10;
  inline bool has_items_fulfilled() const;
  inline void clear_items_fulfilled();
  static const int kItemsFulfilledFieldNumber = 10;
  inline ::google::protobuf::uint32 items_fulfilled() const;
  inline void set_items_fulfilled(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT)
 private:
  inline void set_has_def_index();
  inline void clear_has_def_index();
  inline void set_has_item_def();
  inline void clear_has_item_def();
  inline void set_has_item_quality();
  inline void clear_has_item_quality();
  inline void set_has_component_flags();
  inline void clear_has_component_flags();
  inline void set_has_item_flags();
  inline void clear_has_item_flags();
  inline void set_has_attributes_string();
  inline void clear_has_attributes_string();
  inline void set_has_num_required();
  inline void clear_has_num_required();
  inline void set_has_item_count();
  inline void clear_has_item_count();
  inline void set_has_num_fulfilled();
  inline void clear_has_num_fulfilled();
  inline void set_has_items_fulfilled();
  inline void clear_has_items_fulfilled();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 def_index_;
  ::google::protobuf::uint32 item_def_;
  ::google::protobuf::uint32 item_quality_;
  ::google::protobuf::uint32 component_flags_;
  ::std::string* attributes_string_;
  ::google::protobuf::uint32 item_flags_;
  ::google::protobuf::uint32 num_required_;
  ::google::protobuf::uint32 item_count_;
  ::google::protobuf::uint32 num_fulfilled_;
  ::google::protobuf::uint32 items_fulfilled_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT* default_instance_;
};
// -------------------------------------------------------------------

class CAttribute_ItemSlotCriteria : public ::google::protobuf::Message {
 public:
  CAttribute_ItemSlotCriteria();
  virtual ~CAttribute_ItemSlotCriteria();

  CAttribute_ItemSlotCriteria(const CAttribute_ItemSlotCriteria& from);

  inline CAttribute_ItemSlotCriteria& operator=(const CAttribute_ItemSlotCriteria& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CAttribute_ItemSlotCriteria& default_instance();

  void Swap(CAttribute_ItemSlotCriteria* other);

  // implements Message ----------------------------------------------

  CAttribute_ItemSlotCriteria* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CAttribute_ItemSlotCriteria& from);
  void MergeFrom(const CAttribute_ItemSlotCriteria& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string tags = 1;
  inline bool has_tags() const;
  inline void clear_tags();
  static const int kTagsFieldNumber = 1;
  inline const ::std::string& tags() const;
  inline void set_tags(const ::std::string& value);
  inline void set_tags(const char* value);
  inline void set_tags(const char* value, size_t size);
  inline ::std::string* mutable_tags();
  inline ::std::string* release_tags();
  inline void set_allocated_tags(::std::string* tags);

  // @@protoc_insertion_point(class_scope:CAttribute_ItemSlotCriteria)
 private:
  inline void set_has_tags();
  inline void clear_has_tags();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* tags_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CAttribute_ItemSlotCriteria* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSetItemSlotAttribute : public ::google::protobuf::Message {
 public:
  CMsgSetItemSlotAttribute();
  virtual ~CMsgSetItemSlotAttribute();

  CMsgSetItemSlotAttribute(const CMsgSetItemSlotAttribute& from);

  inline CMsgSetItemSlotAttribute& operator=(const CMsgSetItemSlotAttribute& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSetItemSlotAttribute& default_instance();

  void Swap(CMsgSetItemSlotAttribute* other);

  // implements Message ----------------------------------------------

  CMsgSetItemSlotAttribute* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSetItemSlotAttribute& from);
  void MergeFrom(const CMsgSetItemSlotAttribute& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint64 item_id() const;
  inline void set_item_id(::google::protobuf::uint64 value);

  // optional uint64 slot_item_original_id = 2;
  inline bool has_slot_item_original_id() const;
  inline void clear_slot_item_original_id();
  static const int kSlotItemOriginalIdFieldNumber = 2;
  inline ::google::protobuf::uint64 slot_item_original_id() const;
  inline void set_slot_item_original_id(::google::protobuf::uint64 value);

  // optional uint32 slot_index = 3;
  inline bool has_slot_index() const;
  inline void clear_slot_index();
  static const int kSlotIndexFieldNumber = 3;
  inline ::google::protobuf::uint32 slot_index() const;
  inline void set_slot_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSetItemSlotAttribute)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_slot_item_original_id();
  inline void clear_has_slot_item_original_id();
  inline void set_has_slot_index();
  inline void clear_has_slot_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 item_id_;
  ::google::protobuf::uint64 slot_item_original_id_;
  ::google::protobuf::uint32 slot_index_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgSetItemSlotAttribute* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsgTFPlayerSkillRatingAdjustment_Player : public ::google::protobuf::Message {
 public:
  CGCMsgTFPlayerSkillRatingAdjustment_Player();
  virtual ~CGCMsgTFPlayerSkillRatingAdjustment_Player();

  CGCMsgTFPlayerSkillRatingAdjustment_Player(const CGCMsgTFPlayerSkillRatingAdjustment_Player& from);

  inline CGCMsgTFPlayerSkillRatingAdjustment_Player& operator=(const CGCMsgTFPlayerSkillRatingAdjustment_Player& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgTFPlayerSkillRatingAdjustment_Player& default_instance();

  void Swap(CGCMsgTFPlayerSkillRatingAdjustment_Player* other);

  // implements Message ----------------------------------------------

  CGCMsgTFPlayerSkillRatingAdjustment_Player* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsgTFPlayerSkillRatingAdjustment_Player& from);
  void MergeFrom(const CGCMsgTFPlayerSkillRatingAdjustment_Player& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);

  // optional int32 adjustment = 3;
  inline bool has_adjustment() const;
  inline void clear_adjustment();
  static const int kAdjustmentFieldNumber = 3;
  inline ::google::protobuf::int32 adjustment() const;
  inline void set_adjustment(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGCMsgTFPlayerSkillRatingAdjustment.Player)
 private:
  inline void set_has_steam_id();
  inline void clear_has_steam_id();
  inline void set_has_adjustment();
  inline void clear_has_adjustment();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 steam_id_;
  ::google::protobuf::int32 adjustment_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CGCMsgTFPlayerSkillRatingAdjustment_Player* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsgTFPlayerSkillRatingAdjustment : public ::google::protobuf::Message {
 public:
  CGCMsgTFPlayerSkillRatingAdjustment();
  virtual ~CGCMsgTFPlayerSkillRatingAdjustment();

  CGCMsgTFPlayerSkillRatingAdjustment(const CGCMsgTFPlayerSkillRatingAdjustment& from);

  inline CGCMsgTFPlayerSkillRatingAdjustment& operator=(const CGCMsgTFPlayerSkillRatingAdjustment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgTFPlayerSkillRatingAdjustment& default_instance();

  void Swap(CGCMsgTFPlayerSkillRatingAdjustment* other);

  // implements Message ----------------------------------------------

  CGCMsgTFPlayerSkillRatingAdjustment* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsgTFPlayerSkillRatingAdjustment& from);
  void MergeFrom(const CGCMsgTFPlayerSkillRatingAdjustment& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CGCMsgTFPlayerSkillRatingAdjustment_Player Player;

  typedef CGCMsgTFPlayerSkillRatingAdjustment_MatchType MatchType;
  static const MatchType PUBLIC = CGCMsgTFPlayerSkillRatingAdjustment_MatchType_PUBLIC;
  static const MatchType BETA = CGCMsgTFPlayerSkillRatingAdjustment_MatchType_BETA;
  static inline bool MatchType_IsValid(int value) {
    return CGCMsgTFPlayerSkillRatingAdjustment_MatchType_IsValid(value);
  }
  static const MatchType MatchType_MIN =
    CGCMsgTFPlayerSkillRatingAdjustment_MatchType_MatchType_MIN;
  static const MatchType MatchType_MAX =
    CGCMsgTFPlayerSkillRatingAdjustment_MatchType_MatchType_MAX;
  static const int MatchType_ARRAYSIZE =
    CGCMsgTFPlayerSkillRatingAdjustment_MatchType_MatchType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MatchType_descriptor() {
    return CGCMsgTFPlayerSkillRatingAdjustment_MatchType_descriptor();
  }
  static inline const ::std::string& MatchType_Name(MatchType value) {
    return CGCMsgTFPlayerSkillRatingAdjustment_MatchType_Name(value);
  }
  static inline bool MatchType_Parse(const ::std::string& name,
      MatchType* value) {
    return CGCMsgTFPlayerSkillRatingAdjustment_MatchType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .CGCMsgTFPlayerSkillRatingAdjustment.Player players = 1;
  inline int players_size() const;
  inline void clear_players();
  static const int kPlayersFieldNumber = 1;
  inline const ::CGCMsgTFPlayerSkillRatingAdjustment_Player& players(int index) const;
  inline ::CGCMsgTFPlayerSkillRatingAdjustment_Player* mutable_players(int index);
  inline ::CGCMsgTFPlayerSkillRatingAdjustment_Player* add_players();
  inline const ::google::protobuf::RepeatedPtrField< ::CGCMsgTFPlayerSkillRatingAdjustment_Player >&
      players() const;
  inline ::google::protobuf::RepeatedPtrField< ::CGCMsgTFPlayerSkillRatingAdjustment_Player >*
      mutable_players();

  // optional .CGCMsgTFPlayerSkillRatingAdjustment.MatchType match_type = 2 [default = PUBLIC];
  inline bool has_match_type() const;
  inline void clear_match_type();
  static const int kMatchTypeFieldNumber = 2;
  inline ::CGCMsgTFPlayerSkillRatingAdjustment_MatchType match_type() const;
  inline void set_match_type(::CGCMsgTFPlayerSkillRatingAdjustment_MatchType value);

  // @@protoc_insertion_point(class_scope:CGCMsgTFPlayerSkillRatingAdjustment)
 private:
  inline void set_has_match_type();
  inline void clear_has_match_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CGCMsgTFPlayerSkillRatingAdjustment_Player > players_;
  int match_type_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CGCMsgTFPlayerSkillRatingAdjustment* default_instance_;
};
// -------------------------------------------------------------------

class CSOTFSpyVsEngyWarData : public ::google::protobuf::Message {
 public:
  CSOTFSpyVsEngyWarData();
  virtual ~CSOTFSpyVsEngyWarData();

  CSOTFSpyVsEngyWarData(const CSOTFSpyVsEngyWarData& from);

  inline CSOTFSpyVsEngyWarData& operator=(const CSOTFSpyVsEngyWarData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOTFSpyVsEngyWarData& default_instance();

  void Swap(CSOTFSpyVsEngyWarData* other);

  // implements Message ----------------------------------------------

  CSOTFSpyVsEngyWarData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOTFSpyVsEngyWarData& from);
  void MergeFrom(const CSOTFSpyVsEngyWarData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 affiliation = 2;
  inline bool has_affiliation() const;
  inline void clear_affiliation();
  static const int kAffiliationFieldNumber = 2;
  inline ::google::protobuf::uint32 affiliation() const;
  inline void set_affiliation(::google::protobuf::uint32 value);

  // optional uint32 points_for_engy = 3;
  inline bool has_points_for_engy() const;
  inline void clear_points_for_engy();
  static const int kPointsForEngyFieldNumber = 3;
  inline ::google::protobuf::uint32 points_for_engy() const;
  inline void set_points_for_engy(::google::protobuf::uint32 value);

  // optional uint32 points_for_spy = 4;
  inline bool has_points_for_spy() const;
  inline void clear_points_for_spy();
  static const int kPointsForSpyFieldNumber = 4;
  inline ::google::protobuf::uint32 points_for_spy() const;
  inline void set_points_for_spy(::google::protobuf::uint32 value);

  // optional uint32 kills_for_engy = 5;
  inline bool has_kills_for_engy() const;
  inline void clear_kills_for_engy();
  static const int kKillsForEngyFieldNumber = 5;
  inline ::google::protobuf::uint32 kills_for_engy() const;
  inline void set_kills_for_engy(::google::protobuf::uint32 value);

  // optional uint32 kills_for_spy = 6;
  inline bool has_kills_for_spy() const;
  inline void clear_kills_for_spy();
  static const int kKillsForSpyFieldNumber = 6;
  inline ::google::protobuf::uint32 kills_for_spy() const;
  inline void set_kills_for_spy(::google::protobuf::uint32 value);

  // optional string killcam_message = 7;
  inline bool has_killcam_message() const;
  inline void clear_killcam_message();
  static const int kKillcamMessageFieldNumber = 7;
  inline const ::std::string& killcam_message() const;
  inline void set_killcam_message(const ::std::string& value);
  inline void set_killcam_message(const char* value);
  inline void set_killcam_message(const char* value, size_t size);
  inline ::std::string* mutable_killcam_message();
  inline ::std::string* release_killcam_message();
  inline void set_allocated_killcam_message(::std::string* killcam_message);

  // @@protoc_insertion_point(class_scope:CSOTFSpyVsEngyWarData)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_affiliation();
  inline void clear_has_affiliation();
  inline void set_has_points_for_engy();
  inline void clear_has_points_for_engy();
  inline void set_has_points_for_spy();
  inline void clear_has_points_for_spy();
  inline void set_has_kills_for_engy();
  inline void clear_has_kills_for_engy();
  inline void set_has_kills_for_spy();
  inline void clear_has_kills_for_spy();
  inline void set_has_killcam_message();
  inline void clear_has_killcam_message();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 affiliation_;
  ::google::protobuf::uint32 points_for_engy_;
  ::google::protobuf::uint32 points_for_spy_;
  ::google::protobuf::uint32 kills_for_engy_;
  ::google::protobuf::uint32 kills_for_spy_;
  ::std::string* killcam_message_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CSOTFSpyVsEngyWarData* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsgGC_SpyVsEngyWar_IndividualUpdate : public ::google::protobuf::Message {
 public:
  CGCMsgGC_SpyVsEngyWar_IndividualUpdate();
  virtual ~CGCMsgGC_SpyVsEngyWar_IndividualUpdate();

  CGCMsgGC_SpyVsEngyWar_IndividualUpdate(const CGCMsgGC_SpyVsEngyWar_IndividualUpdate& from);

  inline CGCMsgGC_SpyVsEngyWar_IndividualUpdate& operator=(const CGCMsgGC_SpyVsEngyWar_IndividualUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgGC_SpyVsEngyWar_IndividualUpdate& default_instance();

  void Swap(CGCMsgGC_SpyVsEngyWar_IndividualUpdate* other);

  // implements Message ----------------------------------------------

  CGCMsgGC_SpyVsEngyWar_IndividualUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsgGC_SpyVsEngyWar_IndividualUpdate& from);
  void MergeFrom(const CGCMsgGC_SpyVsEngyWar_IndividualUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);

  // optional uint32 engy_points_scored = 2;
  inline bool has_engy_points_scored() const;
  inline void clear_engy_points_scored();
  static const int kEngyPointsScoredFieldNumber = 2;
  inline ::google::protobuf::uint32 engy_points_scored() const;
  inline void set_engy_points_scored(::google::protobuf::uint32 value);

  // optional uint32 spy_points_scored = 3;
  inline bool has_spy_points_scored() const;
  inline void clear_spy_points_scored();
  static const int kSpyPointsScoredFieldNumber = 3;
  inline ::google::protobuf::uint32 spy_points_scored() const;
  inline void set_spy_points_scored(::google::protobuf::uint32 value);

  // optional uint32 engy_kills_scored = 4;
  inline bool has_engy_kills_scored() const;
  inline void clear_engy_kills_scored();
  static const int kEngyKillsScoredFieldNumber = 4;
  inline ::google::protobuf::uint32 engy_kills_scored() const;
  inline void set_engy_kills_scored(::google::protobuf::uint32 value);

  // optional uint32 spy_kills_scored = 5;
  inline bool has_spy_kills_scored() const;
  inline void clear_spy_kills_scored();
  static const int kSpyKillsScoredFieldNumber = 5;
  inline ::google::protobuf::uint32 spy_kills_scored() const;
  inline void set_spy_kills_scored(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CGCMsgGC_SpyVsEngyWar_IndividualUpdate)
 private:
  inline void set_has_steam_id();
  inline void clear_has_steam_id();
  inline void set_has_engy_points_scored();
  inline void clear_has_engy_points_scored();
  inline void set_has_spy_points_scored();
  inline void clear_has_spy_points_scored();
  inline void set_has_engy_kills_scored();
  inline void clear_has_engy_kills_scored();
  inline void set_has_spy_kills_scored();
  inline void clear_has_spy_kills_scored();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 steam_id_;
  ::google::protobuf::uint32 engy_points_scored_;
  ::google::protobuf::uint32 spy_points_scored_;
  ::google::protobuf::uint32 engy_kills_scored_;
  ::google::protobuf::uint32 spy_kills_scored_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CGCMsgGC_SpyVsEngyWar_IndividualUpdate* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsgGC_SpyVsEngyWar_JoinWar : public ::google::protobuf::Message {
 public:
  CGCMsgGC_SpyVsEngyWar_JoinWar();
  virtual ~CGCMsgGC_SpyVsEngyWar_JoinWar();

  CGCMsgGC_SpyVsEngyWar_JoinWar(const CGCMsgGC_SpyVsEngyWar_JoinWar& from);

  inline CGCMsgGC_SpyVsEngyWar_JoinWar& operator=(const CGCMsgGC_SpyVsEngyWar_JoinWar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgGC_SpyVsEngyWar_JoinWar& default_instance();

  void Swap(CGCMsgGC_SpyVsEngyWar_JoinWar* other);

  // implements Message ----------------------------------------------

  CGCMsgGC_SpyVsEngyWar_JoinWar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsgGC_SpyVsEngyWar_JoinWar& from);
  void MergeFrom(const CGCMsgGC_SpyVsEngyWar_JoinWar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 affiliation = 1;
  inline bool has_affiliation() const;
  inline void clear_affiliation();
  static const int kAffiliationFieldNumber = 1;
  inline ::google::protobuf::uint32 affiliation() const;
  inline void set_affiliation(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CGCMsgGC_SpyVsEngyWar_JoinWar)
 private:
  inline void set_has_affiliation();
  inline void clear_has_affiliation();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 affiliation_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CGCMsgGC_SpyVsEngyWar_JoinWar* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsgGC_SpyVsEngyWar_SetKillCamMessage : public ::google::protobuf::Message {
 public:
  CGCMsgGC_SpyVsEngyWar_SetKillCamMessage();
  virtual ~CGCMsgGC_SpyVsEngyWar_SetKillCamMessage();

  CGCMsgGC_SpyVsEngyWar_SetKillCamMessage(const CGCMsgGC_SpyVsEngyWar_SetKillCamMessage& from);

  inline CGCMsgGC_SpyVsEngyWar_SetKillCamMessage& operator=(const CGCMsgGC_SpyVsEngyWar_SetKillCamMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgGC_SpyVsEngyWar_SetKillCamMessage& default_instance();

  void Swap(CGCMsgGC_SpyVsEngyWar_SetKillCamMessage* other);

  // implements Message ----------------------------------------------

  CGCMsgGC_SpyVsEngyWar_SetKillCamMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsgGC_SpyVsEngyWar_SetKillCamMessage& from);
  void MergeFrom(const CGCMsgGC_SpyVsEngyWar_SetKillCamMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string killcam_message = 1;
  inline bool has_killcam_message() const;
  inline void clear_killcam_message();
  static const int kKillcamMessageFieldNumber = 1;
  inline const ::std::string& killcam_message() const;
  inline void set_killcam_message(const ::std::string& value);
  inline void set_killcam_message(const char* value);
  inline void set_killcam_message(const char* value, size_t size);
  inline ::std::string* mutable_killcam_message();
  inline ::std::string* release_killcam_message();
  inline void set_allocated_killcam_message(::std::string* killcam_message);

  // @@protoc_insertion_point(class_scope:CGCMsgGC_SpyVsEngyWar_SetKillCamMessage)
 private:
  inline void set_has_killcam_message();
  inline void clear_has_killcam_message();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* killcam_message_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CGCMsgGC_SpyVsEngyWar_SetKillCamMessage* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsgGC_SpyVsEngyWar_RequestGlobalStats : public ::google::protobuf::Message {
 public:
  CGCMsgGC_SpyVsEngyWar_RequestGlobalStats();
  virtual ~CGCMsgGC_SpyVsEngyWar_RequestGlobalStats();

  CGCMsgGC_SpyVsEngyWar_RequestGlobalStats(const CGCMsgGC_SpyVsEngyWar_RequestGlobalStats& from);

  inline CGCMsgGC_SpyVsEngyWar_RequestGlobalStats& operator=(const CGCMsgGC_SpyVsEngyWar_RequestGlobalStats& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgGC_SpyVsEngyWar_RequestGlobalStats& default_instance();

  void Swap(CGCMsgGC_SpyVsEngyWar_RequestGlobalStats* other);

  // implements Message ----------------------------------------------

  CGCMsgGC_SpyVsEngyWar_RequestGlobalStats* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsgGC_SpyVsEngyWar_RequestGlobalStats& from);
  void MergeFrom(const CGCMsgGC_SpyVsEngyWar_RequestGlobalStats& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CGCMsgGC_SpyVsEngyWar_RequestGlobalStats)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CGCMsgGC_SpyVsEngyWar_RequestGlobalStats* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsgGC_SpyVsEngyWar_GlobalStatsResponse : public ::google::protobuf::Message {
 public:
  CGCMsgGC_SpyVsEngyWar_GlobalStatsResponse();
  virtual ~CGCMsgGC_SpyVsEngyWar_GlobalStatsResponse();

  CGCMsgGC_SpyVsEngyWar_GlobalStatsResponse(const CGCMsgGC_SpyVsEngyWar_GlobalStatsResponse& from);

  inline CGCMsgGC_SpyVsEngyWar_GlobalStatsResponse& operator=(const CGCMsgGC_SpyVsEngyWar_GlobalStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgGC_SpyVsEngyWar_GlobalStatsResponse& default_instance();

  void Swap(CGCMsgGC_SpyVsEngyWar_GlobalStatsResponse* other);

  // implements Message ----------------------------------------------

  CGCMsgGC_SpyVsEngyWar_GlobalStatsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsgGC_SpyVsEngyWar_GlobalStatsResponse& from);
  void MergeFrom(const CGCMsgGC_SpyVsEngyWar_GlobalStatsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 spy_score = 1;
  inline bool has_spy_score() const;
  inline void clear_spy_score();
  static const int kSpyScoreFieldNumber = 1;
  inline ::google::protobuf::uint64 spy_score() const;
  inline void set_spy_score(::google::protobuf::uint64 value);

  // optional uint64 engy_score = 2;
  inline bool has_engy_score() const;
  inline void clear_engy_score();
  static const int kEngyScoreFieldNumber = 2;
  inline ::google::protobuf::uint64 engy_score() const;
  inline void set_engy_score(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CGCMsgGC_SpyVsEngyWar_GlobalStatsResponse)
 private:
  inline void set_has_spy_score();
  inline void clear_has_spy_score();
  inline void set_has_engy_score();
  inline void clear_has_engy_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 spy_score_;
  ::google::protobuf::uint64 engy_score_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CGCMsgGC_SpyVsEngyWar_GlobalStatsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate : public ::google::protobuf::Message {
 public:
  CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate();
  virtual ~CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate();

  CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate(const CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate& from);

  inline CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate& operator=(const CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate& default_instance();

  void Swap(CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate* other);

  // implements Message ----------------------------------------------

  CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate& from);
  void MergeFrom(const CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // optional uint32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // optional bytes score_id = 4;
  inline bool has_score_id() const;
  inline void clear_score_id();
  static const int kScoreIdFieldNumber = 4;
  inline const ::std::string& score_id() const;
  inline void set_score_id(const ::std::string& value);
  inline void set_score_id(const char* value);
  inline void set_score_id(const void* value, size_t size);
  inline ::std::string* mutable_score_id();
  inline ::std::string* release_score_id();
  inline void set_allocated_score_id(::std::string* score_id);

  // optional uint32 score_check = 5;
  inline bool has_score_check() const;
  inline void clear_score_check();
  static const int kScoreCheckFieldNumber = 5;
  inline ::google::protobuf::uint32 score_check() const;
  inline void set_score_check(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate)
 private:
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_score_id();
  inline void clear_has_score_id();
  inline void set_has_score_check();
  inline void clear_has_score_check();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 type_;
  ::std::string* score_id_;
  ::google::protobuf::uint32 score_check_;
  friend void  protobuf_AddDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_tf_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_tf_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate* default_instance_;
};
// ===================================================================


// ===================================================================

// CMsgTFGoldenWrenchBroadcast

// optional int32 wrench_number = 1;
inline bool CMsgTFGoldenWrenchBroadcast::has_wrench_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFGoldenWrenchBroadcast::set_has_wrench_number() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFGoldenWrenchBroadcast::clear_has_wrench_number() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFGoldenWrenchBroadcast::clear_wrench_number() {
  wrench_number_ = 0;
  clear_has_wrench_number();
}
inline ::google::protobuf::int32 CMsgTFGoldenWrenchBroadcast::wrench_number() const {
  // @@protoc_insertion_point(field_get:CMsgTFGoldenWrenchBroadcast.wrench_number)
  return wrench_number_;
}
inline void CMsgTFGoldenWrenchBroadcast::set_wrench_number(::google::protobuf::int32 value) {
  set_has_wrench_number();
  wrench_number_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFGoldenWrenchBroadcast.wrench_number)
}

// optional bool deleted = 2;
inline bool CMsgTFGoldenWrenchBroadcast::has_deleted() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFGoldenWrenchBroadcast::set_has_deleted() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFGoldenWrenchBroadcast::clear_has_deleted() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFGoldenWrenchBroadcast::clear_deleted() {
  deleted_ = false;
  clear_has_deleted();
}
inline bool CMsgTFGoldenWrenchBroadcast::deleted() const {
  // @@protoc_insertion_point(field_get:CMsgTFGoldenWrenchBroadcast.deleted)
  return deleted_;
}
inline void CMsgTFGoldenWrenchBroadcast::set_deleted(bool value) {
  set_has_deleted();
  deleted_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFGoldenWrenchBroadcast.deleted)
}

// optional string user_name = 3;
inline bool CMsgTFGoldenWrenchBroadcast::has_user_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTFGoldenWrenchBroadcast::set_has_user_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgTFGoldenWrenchBroadcast::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgTFGoldenWrenchBroadcast::clear_user_name() {
  if (user_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_->clear();
  }
  clear_has_user_name();
}
inline const ::std::string& CMsgTFGoldenWrenchBroadcast::user_name() const {
  // @@protoc_insertion_point(field_get:CMsgTFGoldenWrenchBroadcast.user_name)
  return *user_name_;
}
inline void CMsgTFGoldenWrenchBroadcast::set_user_name(const ::std::string& value) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgTFGoldenWrenchBroadcast.user_name)
}
inline void CMsgTFGoldenWrenchBroadcast::set_user_name(const char* value) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgTFGoldenWrenchBroadcast.user_name)
}
inline void CMsgTFGoldenWrenchBroadcast::set_user_name(const char* value, size_t size) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgTFGoldenWrenchBroadcast.user_name)
}
inline ::std::string* CMsgTFGoldenWrenchBroadcast::mutable_user_name() {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgTFGoldenWrenchBroadcast.user_name)
  return user_name_;
}
inline ::std::string* CMsgTFGoldenWrenchBroadcast::release_user_name() {
  clear_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = user_name_;
    user_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgTFGoldenWrenchBroadcast::set_allocated_user_name(::std::string* user_name) {
  if (user_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete user_name_;
  }
  if (user_name) {
    set_has_user_name();
    user_name_ = user_name;
  } else {
    clear_has_user_name();
    user_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgTFGoldenWrenchBroadcast.user_name)
}

// -------------------------------------------------------------------

// CMsgTFSaxxyBroadcast

// optional int32 category_number = 1;
inline bool CMsgTFSaxxyBroadcast::has_category_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFSaxxyBroadcast::set_has_category_number() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFSaxxyBroadcast::clear_has_category_number() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFSaxxyBroadcast::clear_category_number() {
  category_number_ = 0;
  clear_has_category_number();
}
inline ::google::protobuf::int32 CMsgTFSaxxyBroadcast::category_number() const {
  // @@protoc_insertion_point(field_get:CMsgTFSaxxyBroadcast.category_number)
  return category_number_;
}
inline void CMsgTFSaxxyBroadcast::set_category_number(::google::protobuf::int32 value) {
  set_has_category_number();
  category_number_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFSaxxyBroadcast.category_number)
}

// optional string user_name = 2;
inline bool CMsgTFSaxxyBroadcast::has_user_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFSaxxyBroadcast::set_has_user_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFSaxxyBroadcast::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFSaxxyBroadcast::clear_user_name() {
  if (user_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_->clear();
  }
  clear_has_user_name();
}
inline const ::std::string& CMsgTFSaxxyBroadcast::user_name() const {
  // @@protoc_insertion_point(field_get:CMsgTFSaxxyBroadcast.user_name)
  return *user_name_;
}
inline void CMsgTFSaxxyBroadcast::set_user_name(const ::std::string& value) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgTFSaxxyBroadcast.user_name)
}
inline void CMsgTFSaxxyBroadcast::set_user_name(const char* value) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgTFSaxxyBroadcast.user_name)
}
inline void CMsgTFSaxxyBroadcast::set_user_name(const char* value, size_t size) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgTFSaxxyBroadcast.user_name)
}
inline ::std::string* CMsgTFSaxxyBroadcast::mutable_user_name() {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgTFSaxxyBroadcast.user_name)
  return user_name_;
}
inline ::std::string* CMsgTFSaxxyBroadcast::release_user_name() {
  clear_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = user_name_;
    user_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgTFSaxxyBroadcast::set_allocated_user_name(::std::string* user_name) {
  if (user_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete user_name_;
  }
  if (user_name) {
    set_has_user_name();
    user_name_ = user_name;
  } else {
    clear_has_user_name();
    user_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgTFSaxxyBroadcast.user_name)
}

// -------------------------------------------------------------------

// CMsgGCTFSpecificItemBroadcast

// optional uint32 item_def_index = 1;
inline bool CMsgGCTFSpecificItemBroadcast::has_item_def_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCTFSpecificItemBroadcast::set_has_item_def_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCTFSpecificItemBroadcast::clear_has_item_def_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCTFSpecificItemBroadcast::clear_item_def_index() {
  item_def_index_ = 0u;
  clear_has_item_def_index();
}
inline ::google::protobuf::uint32 CMsgGCTFSpecificItemBroadcast::item_def_index() const {
  // @@protoc_insertion_point(field_get:CMsgGCTFSpecificItemBroadcast.item_def_index)
  return item_def_index_;
}
inline void CMsgGCTFSpecificItemBroadcast::set_item_def_index(::google::protobuf::uint32 value) {
  set_has_item_def_index();
  item_def_index_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCTFSpecificItemBroadcast.item_def_index)
}

// optional bool was_destruction = 2;
inline bool CMsgGCTFSpecificItemBroadcast::has_was_destruction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCTFSpecificItemBroadcast::set_has_was_destruction() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCTFSpecificItemBroadcast::clear_has_was_destruction() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCTFSpecificItemBroadcast::clear_was_destruction() {
  was_destruction_ = false;
  clear_has_was_destruction();
}
inline bool CMsgGCTFSpecificItemBroadcast::was_destruction() const {
  // @@protoc_insertion_point(field_get:CMsgGCTFSpecificItemBroadcast.was_destruction)
  return was_destruction_;
}
inline void CMsgGCTFSpecificItemBroadcast::set_was_destruction(bool value) {
  set_has_was_destruction();
  was_destruction_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCTFSpecificItemBroadcast.was_destruction)
}

// optional string user_name = 3;
inline bool CMsgGCTFSpecificItemBroadcast::has_user_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCTFSpecificItemBroadcast::set_has_user_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCTFSpecificItemBroadcast::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCTFSpecificItemBroadcast::clear_user_name() {
  if (user_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_->clear();
  }
  clear_has_user_name();
}
inline const ::std::string& CMsgGCTFSpecificItemBroadcast::user_name() const {
  // @@protoc_insertion_point(field_get:CMsgGCTFSpecificItemBroadcast.user_name)
  return *user_name_;
}
inline void CMsgGCTFSpecificItemBroadcast::set_user_name(const ::std::string& value) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGCTFSpecificItemBroadcast.user_name)
}
inline void CMsgGCTFSpecificItemBroadcast::set_user_name(const char* value) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGCTFSpecificItemBroadcast.user_name)
}
inline void CMsgGCTFSpecificItemBroadcast::set_user_name(const char* value, size_t size) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGCTFSpecificItemBroadcast.user_name)
}
inline ::std::string* CMsgGCTFSpecificItemBroadcast::mutable_user_name() {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGCTFSpecificItemBroadcast.user_name)
  return user_name_;
}
inline ::std::string* CMsgGCTFSpecificItemBroadcast::release_user_name() {
  clear_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = user_name_;
    user_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGCTFSpecificItemBroadcast::set_allocated_user_name(::std::string* user_name) {
  if (user_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete user_name_;
  }
  if (user_name) {
    set_has_user_name();
    user_name_ = user_name;
  } else {
    clear_has_user_name();
    user_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGCTFSpecificItemBroadcast.user_name)
}

// -------------------------------------------------------------------

// CSOTFDuelSummary

// optional uint32 account_id = 1;
inline bool CSOTFDuelSummary::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOTFDuelSummary::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOTFDuelSummary::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOTFDuelSummary::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CSOTFDuelSummary::account_id() const {
  // @@protoc_insertion_point(field_get:CSOTFDuelSummary.account_id)
  return account_id_;
}
inline void CSOTFDuelSummary::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFDuelSummary.account_id)
}

// optional uint32 duel_wins = 2;
inline bool CSOTFDuelSummary::has_duel_wins() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOTFDuelSummary::set_has_duel_wins() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOTFDuelSummary::clear_has_duel_wins() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOTFDuelSummary::clear_duel_wins() {
  duel_wins_ = 0u;
  clear_has_duel_wins();
}
inline ::google::protobuf::uint32 CSOTFDuelSummary::duel_wins() const {
  // @@protoc_insertion_point(field_get:CSOTFDuelSummary.duel_wins)
  return duel_wins_;
}
inline void CSOTFDuelSummary::set_duel_wins(::google::protobuf::uint32 value) {
  set_has_duel_wins();
  duel_wins_ = value;
  // @@protoc_insertion_point(field_set:CSOTFDuelSummary.duel_wins)
}

// optional uint32 duel_losses = 3;
inline bool CSOTFDuelSummary::has_duel_losses() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSOTFDuelSummary::set_has_duel_losses() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSOTFDuelSummary::clear_has_duel_losses() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSOTFDuelSummary::clear_duel_losses() {
  duel_losses_ = 0u;
  clear_has_duel_losses();
}
inline ::google::protobuf::uint32 CSOTFDuelSummary::duel_losses() const {
  // @@protoc_insertion_point(field_get:CSOTFDuelSummary.duel_losses)
  return duel_losses_;
}
inline void CSOTFDuelSummary::set_duel_losses(::google::protobuf::uint32 value) {
  set_has_duel_losses();
  duel_losses_ = value;
  // @@protoc_insertion_point(field_set:CSOTFDuelSummary.duel_losses)
}

// optional uint32 last_duel_account_id = 4;
inline bool CSOTFDuelSummary::has_last_duel_account_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSOTFDuelSummary::set_has_last_duel_account_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSOTFDuelSummary::clear_has_last_duel_account_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSOTFDuelSummary::clear_last_duel_account_id() {
  last_duel_account_id_ = 0u;
  clear_has_last_duel_account_id();
}
inline ::google::protobuf::uint32 CSOTFDuelSummary::last_duel_account_id() const {
  // @@protoc_insertion_point(field_get:CSOTFDuelSummary.last_duel_account_id)
  return last_duel_account_id_;
}
inline void CSOTFDuelSummary::set_last_duel_account_id(::google::protobuf::uint32 value) {
  set_has_last_duel_account_id();
  last_duel_account_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFDuelSummary.last_duel_account_id)
}

// optional uint32 last_duel_timestamp = 5;
inline bool CSOTFDuelSummary::has_last_duel_timestamp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSOTFDuelSummary::set_has_last_duel_timestamp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSOTFDuelSummary::clear_has_last_duel_timestamp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSOTFDuelSummary::clear_last_duel_timestamp() {
  last_duel_timestamp_ = 0u;
  clear_has_last_duel_timestamp();
}
inline ::google::protobuf::uint32 CSOTFDuelSummary::last_duel_timestamp() const {
  // @@protoc_insertion_point(field_get:CSOTFDuelSummary.last_duel_timestamp)
  return last_duel_timestamp_;
}
inline void CSOTFDuelSummary::set_last_duel_timestamp(::google::protobuf::uint32 value) {
  set_has_last_duel_timestamp();
  last_duel_timestamp_ = value;
  // @@protoc_insertion_point(field_set:CSOTFDuelSummary.last_duel_timestamp)
}

// optional uint32 last_duel_status = 6;
inline bool CSOTFDuelSummary::has_last_duel_status() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSOTFDuelSummary::set_has_last_duel_status() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSOTFDuelSummary::clear_has_last_duel_status() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSOTFDuelSummary::clear_last_duel_status() {
  last_duel_status_ = 0u;
  clear_has_last_duel_status();
}
inline ::google::protobuf::uint32 CSOTFDuelSummary::last_duel_status() const {
  // @@protoc_insertion_point(field_get:CSOTFDuelSummary.last_duel_status)
  return last_duel_status_;
}
inline void CSOTFDuelSummary::set_last_duel_status(::google::protobuf::uint32 value) {
  set_has_last_duel_status();
  last_duel_status_ = value;
  // @@protoc_insertion_point(field_set:CSOTFDuelSummary.last_duel_status)
}

// -------------------------------------------------------------------

// CSOTFMapContribution

// optional uint32 account_id = 1;
inline bool CSOTFMapContribution::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOTFMapContribution::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOTFMapContribution::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOTFMapContribution::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CSOTFMapContribution::account_id() const {
  // @@protoc_insertion_point(field_get:CSOTFMapContribution.account_id)
  return account_id_;
}
inline void CSOTFMapContribution::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMapContribution.account_id)
}

// optional uint32 def_index = 2;
inline bool CSOTFMapContribution::has_def_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOTFMapContribution::set_has_def_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOTFMapContribution::clear_has_def_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOTFMapContribution::clear_def_index() {
  def_index_ = 0u;
  clear_has_def_index();
}
inline ::google::protobuf::uint32 CSOTFMapContribution::def_index() const {
  // @@protoc_insertion_point(field_get:CSOTFMapContribution.def_index)
  return def_index_;
}
inline void CSOTFMapContribution::set_def_index(::google::protobuf::uint32 value) {
  set_has_def_index();
  def_index_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMapContribution.def_index)
}

// optional uint32 contribution_level = 3;
inline bool CSOTFMapContribution::has_contribution_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSOTFMapContribution::set_has_contribution_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSOTFMapContribution::clear_has_contribution_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSOTFMapContribution::clear_contribution_level() {
  contribution_level_ = 0u;
  clear_has_contribution_level();
}
inline ::google::protobuf::uint32 CSOTFMapContribution::contribution_level() const {
  // @@protoc_insertion_point(field_get:CSOTFMapContribution.contribution_level)
  return contribution_level_;
}
inline void CSOTFMapContribution::set_contribution_level(::google::protobuf::uint32 value) {
  set_has_contribution_level();
  contribution_level_ = value;
  // @@protoc_insertion_point(field_set:CSOTFMapContribution.contribution_level)
}

// -------------------------------------------------------------------

// CMsgTFVoteKickBanPlayer

// optional uint32 account_id_subject = 1;
inline bool CMsgTFVoteKickBanPlayer::has_account_id_subject() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFVoteKickBanPlayer::set_has_account_id_subject() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFVoteKickBanPlayer::clear_has_account_id_subject() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFVoteKickBanPlayer::clear_account_id_subject() {
  account_id_subject_ = 0u;
  clear_has_account_id_subject();
}
inline ::google::protobuf::uint32 CMsgTFVoteKickBanPlayer::account_id_subject() const {
  // @@protoc_insertion_point(field_get:CMsgTFVoteKickBanPlayer.account_id_subject)
  return account_id_subject_;
}
inline void CMsgTFVoteKickBanPlayer::set_account_id_subject(::google::protobuf::uint32 value) {
  set_has_account_id_subject();
  account_id_subject_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFVoteKickBanPlayer.account_id_subject)
}

// optional uint32 kick_reason = 2;
inline bool CMsgTFVoteKickBanPlayer::has_kick_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFVoteKickBanPlayer::set_has_kick_reason() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFVoteKickBanPlayer::clear_has_kick_reason() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFVoteKickBanPlayer::clear_kick_reason() {
  kick_reason_ = 0u;
  clear_has_kick_reason();
}
inline ::google::protobuf::uint32 CMsgTFVoteKickBanPlayer::kick_reason() const {
  // @@protoc_insertion_point(field_get:CMsgTFVoteKickBanPlayer.kick_reason)
  return kick_reason_;
}
inline void CMsgTFVoteKickBanPlayer::set_kick_reason(::google::protobuf::uint32 value) {
  set_has_kick_reason();
  kick_reason_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFVoteKickBanPlayer.kick_reason)
}

// -------------------------------------------------------------------

// CMsgTFVoteKickBanPlayerResult

// optional uint32 account_id_initiator = 1;
inline bool CMsgTFVoteKickBanPlayerResult::has_account_id_initiator() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFVoteKickBanPlayerResult::set_has_account_id_initiator() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFVoteKickBanPlayerResult::clear_has_account_id_initiator() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFVoteKickBanPlayerResult::clear_account_id_initiator() {
  account_id_initiator_ = 0u;
  clear_has_account_id_initiator();
}
inline ::google::protobuf::uint32 CMsgTFVoteKickBanPlayerResult::account_id_initiator() const {
  // @@protoc_insertion_point(field_get:CMsgTFVoteKickBanPlayerResult.account_id_initiator)
  return account_id_initiator_;
}
inline void CMsgTFVoteKickBanPlayerResult::set_account_id_initiator(::google::protobuf::uint32 value) {
  set_has_account_id_initiator();
  account_id_initiator_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFVoteKickBanPlayerResult.account_id_initiator)
}

// optional uint32 account_id_subject = 2;
inline bool CMsgTFVoteKickBanPlayerResult::has_account_id_subject() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFVoteKickBanPlayerResult::set_has_account_id_subject() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFVoteKickBanPlayerResult::clear_has_account_id_subject() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFVoteKickBanPlayerResult::clear_account_id_subject() {
  account_id_subject_ = 0u;
  clear_has_account_id_subject();
}
inline ::google::protobuf::uint32 CMsgTFVoteKickBanPlayerResult::account_id_subject() const {
  // @@protoc_insertion_point(field_get:CMsgTFVoteKickBanPlayerResult.account_id_subject)
  return account_id_subject_;
}
inline void CMsgTFVoteKickBanPlayerResult::set_account_id_subject(::google::protobuf::uint32 value) {
  set_has_account_id_subject();
  account_id_subject_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFVoteKickBanPlayerResult.account_id_subject)
}

// optional uint32 kick_reason = 3;
inline bool CMsgTFVoteKickBanPlayerResult::has_kick_reason() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTFVoteKickBanPlayerResult::set_has_kick_reason() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgTFVoteKickBanPlayerResult::clear_has_kick_reason() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgTFVoteKickBanPlayerResult::clear_kick_reason() {
  kick_reason_ = 0u;
  clear_has_kick_reason();
}
inline ::google::protobuf::uint32 CMsgTFVoteKickBanPlayerResult::kick_reason() const {
  // @@protoc_insertion_point(field_get:CMsgTFVoteKickBanPlayerResult.kick_reason)
  return kick_reason_;
}
inline void CMsgTFVoteKickBanPlayerResult::set_kick_reason(::google::protobuf::uint32 value) {
  set_has_kick_reason();
  kick_reason_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFVoteKickBanPlayerResult.kick_reason)
}

// optional bool kick_successful = 4;
inline bool CMsgTFVoteKickBanPlayerResult::has_kick_successful() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgTFVoteKickBanPlayerResult::set_has_kick_successful() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgTFVoteKickBanPlayerResult::clear_has_kick_successful() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgTFVoteKickBanPlayerResult::clear_kick_successful() {
  kick_successful_ = false;
  clear_has_kick_successful();
}
inline bool CMsgTFVoteKickBanPlayerResult::kick_successful() const {
  // @@protoc_insertion_point(field_get:CMsgTFVoteKickBanPlayerResult.kick_successful)
  return kick_successful_;
}
inline void CMsgTFVoteKickBanPlayerResult::set_kick_successful(bool value) {
  set_has_kick_successful();
  kick_successful_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFVoteKickBanPlayerResult.kick_successful)
}

// optional uint32 num_yes_votes = 5;
inline bool CMsgTFVoteKickBanPlayerResult::has_num_yes_votes() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgTFVoteKickBanPlayerResult::set_has_num_yes_votes() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgTFVoteKickBanPlayerResult::clear_has_num_yes_votes() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgTFVoteKickBanPlayerResult::clear_num_yes_votes() {
  num_yes_votes_ = 0u;
  clear_has_num_yes_votes();
}
inline ::google::protobuf::uint32 CMsgTFVoteKickBanPlayerResult::num_yes_votes() const {
  // @@protoc_insertion_point(field_get:CMsgTFVoteKickBanPlayerResult.num_yes_votes)
  return num_yes_votes_;
}
inline void CMsgTFVoteKickBanPlayerResult::set_num_yes_votes(::google::protobuf::uint32 value) {
  set_has_num_yes_votes();
  num_yes_votes_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFVoteKickBanPlayerResult.num_yes_votes)
}

// optional uint32 num_no_votes = 6;
inline bool CMsgTFVoteKickBanPlayerResult::has_num_no_votes() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgTFVoteKickBanPlayerResult::set_has_num_no_votes() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgTFVoteKickBanPlayerResult::clear_has_num_no_votes() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgTFVoteKickBanPlayerResult::clear_num_no_votes() {
  num_no_votes_ = 0u;
  clear_has_num_no_votes();
}
inline ::google::protobuf::uint32 CMsgTFVoteKickBanPlayerResult::num_no_votes() const {
  // @@protoc_insertion_point(field_get:CMsgTFVoteKickBanPlayerResult.num_no_votes)
  return num_no_votes_;
}
inline void CMsgTFVoteKickBanPlayerResult::set_num_no_votes(::google::protobuf::uint32 value) {
  set_has_num_no_votes();
  num_no_votes_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFVoteKickBanPlayerResult.num_no_votes)
}

// optional uint32 num_possible_votes = 7;
inline bool CMsgTFVoteKickBanPlayerResult::has_num_possible_votes() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgTFVoteKickBanPlayerResult::set_has_num_possible_votes() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgTFVoteKickBanPlayerResult::clear_has_num_possible_votes() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgTFVoteKickBanPlayerResult::clear_num_possible_votes() {
  num_possible_votes_ = 0u;
  clear_has_num_possible_votes();
}
inline ::google::protobuf::uint32 CMsgTFVoteKickBanPlayerResult::num_possible_votes() const {
  // @@protoc_insertion_point(field_get:CMsgTFVoteKickBanPlayerResult.num_possible_votes)
  return num_possible_votes_;
}
inline void CMsgTFVoteKickBanPlayerResult::set_num_possible_votes(::google::protobuf::uint32 value) {
  set_has_num_possible_votes();
  num_possible_votes_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFVoteKickBanPlayerResult.num_possible_votes)
}

// -------------------------------------------------------------------

// CMsgTFFreeTrialChooseMostHelpfulFriend

// optional uint32 account_id_friend = 1;
inline bool CMsgTFFreeTrialChooseMostHelpfulFriend::has_account_id_friend() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFFreeTrialChooseMostHelpfulFriend::set_has_account_id_friend() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFFreeTrialChooseMostHelpfulFriend::clear_has_account_id_friend() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFFreeTrialChooseMostHelpfulFriend::clear_account_id_friend() {
  account_id_friend_ = 0u;
  clear_has_account_id_friend();
}
inline ::google::protobuf::uint32 CMsgTFFreeTrialChooseMostHelpfulFriend::account_id_friend() const {
  // @@protoc_insertion_point(field_get:CMsgTFFreeTrialChooseMostHelpfulFriend.account_id_friend)
  return account_id_friend_;
}
inline void CMsgTFFreeTrialChooseMostHelpfulFriend::set_account_id_friend(::google::protobuf::uint32 value) {
  set_has_account_id_friend();
  account_id_friend_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFFreeTrialChooseMostHelpfulFriend.account_id_friend)
}

// -------------------------------------------------------------------

// CMsgTFRequestTF2Friends

// repeated uint32 account_ids = 1;
inline int CMsgTFRequestTF2Friends::account_ids_size() const {
  return account_ids_.size();
}
inline void CMsgTFRequestTF2Friends::clear_account_ids() {
  account_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgTFRequestTF2Friends::account_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgTFRequestTF2Friends.account_ids)
  return account_ids_.Get(index);
}
inline void CMsgTFRequestTF2Friends::set_account_ids(int index, ::google::protobuf::uint32 value) {
  account_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgTFRequestTF2Friends.account_ids)
}
inline void CMsgTFRequestTF2Friends::add_account_ids(::google::protobuf::uint32 value) {
  account_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgTFRequestTF2Friends.account_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgTFRequestTF2Friends::account_ids() const {
  // @@protoc_insertion_point(field_list:CMsgTFRequestTF2Friends.account_ids)
  return account_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgTFRequestTF2Friends::mutable_account_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgTFRequestTF2Friends.account_ids)
  return &account_ids_;
}

// -------------------------------------------------------------------

// CMsgTFRequestTF2FriendsResponse

// repeated uint32 account_ids = 1;
inline int CMsgTFRequestTF2FriendsResponse::account_ids_size() const {
  return account_ids_.size();
}
inline void CMsgTFRequestTF2FriendsResponse::clear_account_ids() {
  account_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgTFRequestTF2FriendsResponse::account_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgTFRequestTF2FriendsResponse.account_ids)
  return account_ids_.Get(index);
}
inline void CMsgTFRequestTF2FriendsResponse::set_account_ids(int index, ::google::protobuf::uint32 value) {
  account_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgTFRequestTF2FriendsResponse.account_ids)
}
inline void CMsgTFRequestTF2FriendsResponse::add_account_ids(::google::protobuf::uint32 value) {
  account_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgTFRequestTF2FriendsResponse.account_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgTFRequestTF2FriendsResponse::account_ids() const {
  // @@protoc_insertion_point(field_list:CMsgTFRequestTF2FriendsResponse.account_ids)
  return account_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgTFRequestTF2FriendsResponse::mutable_account_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgTFRequestTF2FriendsResponse.account_ids)
  return &account_ids_;
}

// -------------------------------------------------------------------

// CSOTFPlayerInfo

// optional uint32 num_new_users_helped = 1;
inline bool CSOTFPlayerInfo::has_num_new_users_helped() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOTFPlayerInfo::set_has_num_new_users_helped() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOTFPlayerInfo::clear_has_num_new_users_helped() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOTFPlayerInfo::clear_num_new_users_helped() {
  num_new_users_helped_ = 0u;
  clear_has_num_new_users_helped();
}
inline ::google::protobuf::uint32 CSOTFPlayerInfo::num_new_users_helped() const {
  // @@protoc_insertion_point(field_get:CSOTFPlayerInfo.num_new_users_helped)
  return num_new_users_helped_;
}
inline void CSOTFPlayerInfo::set_num_new_users_helped(::google::protobuf::uint32 value) {
  set_has_num_new_users_helped();
  num_new_users_helped_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPlayerInfo.num_new_users_helped)
}

// -------------------------------------------------------------------

// CMsgTFThankedBySomeone

// optional uint64 thanker_steam_id = 1;
inline bool CMsgTFThankedBySomeone::has_thanker_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFThankedBySomeone::set_has_thanker_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFThankedBySomeone::clear_has_thanker_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFThankedBySomeone::clear_thanker_steam_id() {
  thanker_steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_thanker_steam_id();
}
inline ::google::protobuf::uint64 CMsgTFThankedBySomeone::thanker_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgTFThankedBySomeone.thanker_steam_id)
  return thanker_steam_id_;
}
inline void CMsgTFThankedBySomeone::set_thanker_steam_id(::google::protobuf::uint64 value) {
  set_has_thanker_steam_id();
  thanker_steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFThankedBySomeone.thanker_steam_id)
}

// -------------------------------------------------------------------

// CMsgTFThankedSomeone

// -------------------------------------------------------------------

// CMsgTFFreeTrialConvertedToPremium

// -------------------------------------------------------------------

// CMsgSaxxyAwarded

// optional uint32 category = 1;
inline bool CMsgSaxxyAwarded::has_category() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSaxxyAwarded::set_has_category() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSaxxyAwarded::clear_has_category() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSaxxyAwarded::clear_category() {
  category_ = 0u;
  clear_has_category();
}
inline ::google::protobuf::uint32 CMsgSaxxyAwarded::category() const {
  // @@protoc_insertion_point(field_get:CMsgSaxxyAwarded.category)
  return category_;
}
inline void CMsgSaxxyAwarded::set_category(::google::protobuf::uint32 value) {
  set_has_category();
  category_ = value;
  // @@protoc_insertion_point(field_set:CMsgSaxxyAwarded.category)
}

// repeated string winner_names = 2;
inline int CMsgSaxxyAwarded::winner_names_size() const {
  return winner_names_.size();
}
inline void CMsgSaxxyAwarded::clear_winner_names() {
  winner_names_.Clear();
}
inline const ::std::string& CMsgSaxxyAwarded::winner_names(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSaxxyAwarded.winner_names)
  return winner_names_.Get(index);
}
inline ::std::string* CMsgSaxxyAwarded::mutable_winner_names(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSaxxyAwarded.winner_names)
  return winner_names_.Mutable(index);
}
inline void CMsgSaxxyAwarded::set_winner_names(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CMsgSaxxyAwarded.winner_names)
  winner_names_.Mutable(index)->assign(value);
}
inline void CMsgSaxxyAwarded::set_winner_names(int index, const char* value) {
  winner_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgSaxxyAwarded.winner_names)
}
inline void CMsgSaxxyAwarded::set_winner_names(int index, const char* value, size_t size) {
  winner_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgSaxxyAwarded.winner_names)
}
inline ::std::string* CMsgSaxxyAwarded::add_winner_names() {
  return winner_names_.Add();
}
inline void CMsgSaxxyAwarded::add_winner_names(const ::std::string& value) {
  winner_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CMsgSaxxyAwarded.winner_names)
}
inline void CMsgSaxxyAwarded::add_winner_names(const char* value) {
  winner_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CMsgSaxxyAwarded.winner_names)
}
inline void CMsgSaxxyAwarded::add_winner_names(const char* value, size_t size) {
  winner_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CMsgSaxxyAwarded.winner_names)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMsgSaxxyAwarded::winner_names() const {
  // @@protoc_insertion_point(field_list:CMsgSaxxyAwarded.winner_names)
  return winner_names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CMsgSaxxyAwarded::mutable_winner_names() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSaxxyAwarded.winner_names)
  return &winner_names_;
}

// -------------------------------------------------------------------

// CMsgReplaySubmitContestEntry

// optional string youtube_url = 1;
inline bool CMsgReplaySubmitContestEntry::has_youtube_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgReplaySubmitContestEntry::set_has_youtube_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgReplaySubmitContestEntry::clear_has_youtube_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgReplaySubmitContestEntry::clear_youtube_url() {
  if (youtube_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    youtube_url_->clear();
  }
  clear_has_youtube_url();
}
inline const ::std::string& CMsgReplaySubmitContestEntry::youtube_url() const {
  // @@protoc_insertion_point(field_get:CMsgReplaySubmitContestEntry.youtube_url)
  return *youtube_url_;
}
inline void CMsgReplaySubmitContestEntry::set_youtube_url(const ::std::string& value) {
  set_has_youtube_url();
  if (youtube_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    youtube_url_ = new ::std::string;
  }
  youtube_url_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgReplaySubmitContestEntry.youtube_url)
}
inline void CMsgReplaySubmitContestEntry::set_youtube_url(const char* value) {
  set_has_youtube_url();
  if (youtube_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    youtube_url_ = new ::std::string;
  }
  youtube_url_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgReplaySubmitContestEntry.youtube_url)
}
inline void CMsgReplaySubmitContestEntry::set_youtube_url(const char* value, size_t size) {
  set_has_youtube_url();
  if (youtube_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    youtube_url_ = new ::std::string;
  }
  youtube_url_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgReplaySubmitContestEntry.youtube_url)
}
inline ::std::string* CMsgReplaySubmitContestEntry::mutable_youtube_url() {
  set_has_youtube_url();
  if (youtube_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    youtube_url_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgReplaySubmitContestEntry.youtube_url)
  return youtube_url_;
}
inline ::std::string* CMsgReplaySubmitContestEntry::release_youtube_url() {
  clear_has_youtube_url();
  if (youtube_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = youtube_url_;
    youtube_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgReplaySubmitContestEntry::set_allocated_youtube_url(::std::string* youtube_url) {
  if (youtube_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete youtube_url_;
  }
  if (youtube_url) {
    set_has_youtube_url();
    youtube_url_ = youtube_url;
  } else {
    clear_has_youtube_url();
    youtube_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgReplaySubmitContestEntry.youtube_url)
}

// optional uint32 category = 2;
inline bool CMsgReplaySubmitContestEntry::has_category() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgReplaySubmitContestEntry::set_has_category() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgReplaySubmitContestEntry::clear_has_category() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgReplaySubmitContestEntry::clear_category() {
  category_ = 0u;
  clear_has_category();
}
inline ::google::protobuf::uint32 CMsgReplaySubmitContestEntry::category() const {
  // @@protoc_insertion_point(field_get:CMsgReplaySubmitContestEntry.category)
  return category_;
}
inline void CMsgReplaySubmitContestEntry::set_category(::google::protobuf::uint32 value) {
  set_has_category();
  category_ = value;
  // @@protoc_insertion_point(field_set:CMsgReplaySubmitContestEntry.category)
}

// -------------------------------------------------------------------

// CMsgReplaySubmitContestEntryResponse

// optional bool success = 1;
inline bool CMsgReplaySubmitContestEntryResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgReplaySubmitContestEntryResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgReplaySubmitContestEntryResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgReplaySubmitContestEntryResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool CMsgReplaySubmitContestEntryResponse::success() const {
  // @@protoc_insertion_point(field_get:CMsgReplaySubmitContestEntryResponse.success)
  return success_;
}
inline void CMsgReplaySubmitContestEntryResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:CMsgReplaySubmitContestEntryResponse.success)
}

// -------------------------------------------------------------------

// CReplayCachedContestData

// optional fixed32 timestamp = 1;
inline bool CReplayCachedContestData::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CReplayCachedContestData::set_has_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CReplayCachedContestData::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CReplayCachedContestData::clear_timestamp() {
  timestamp_ = 0u;
  clear_has_timestamp();
}
inline ::google::protobuf::uint32 CReplayCachedContestData::timestamp() const {
  // @@protoc_insertion_point(field_get:CReplayCachedContestData.timestamp)
  return timestamp_;
}
inline void CReplayCachedContestData::set_timestamp(::google::protobuf::uint32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:CReplayCachedContestData.timestamp)
}

// optional uint32 num_votes_last_day = 2;
inline bool CReplayCachedContestData::has_num_votes_last_day() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CReplayCachedContestData::set_has_num_votes_last_day() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CReplayCachedContestData::clear_has_num_votes_last_day() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CReplayCachedContestData::clear_num_votes_last_day() {
  num_votes_last_day_ = 0u;
  clear_has_num_votes_last_day();
}
inline ::google::protobuf::uint32 CReplayCachedContestData::num_votes_last_day() const {
  // @@protoc_insertion_point(field_get:CReplayCachedContestData.num_votes_last_day)
  return num_votes_last_day_;
}
inline void CReplayCachedContestData::set_num_votes_last_day(::google::protobuf::uint32 value) {
  set_has_num_votes_last_day();
  num_votes_last_day_ = value;
  // @@protoc_insertion_point(field_set:CReplayCachedContestData.num_votes_last_day)
}

// repeated uint32 video_entry_ids = 3;
inline int CReplayCachedContestData::video_entry_ids_size() const {
  return video_entry_ids_.size();
}
inline void CReplayCachedContestData::clear_video_entry_ids() {
  video_entry_ids_.Clear();
}
inline ::google::protobuf::uint32 CReplayCachedContestData::video_entry_ids(int index) const {
  // @@protoc_insertion_point(field_get:CReplayCachedContestData.video_entry_ids)
  return video_entry_ids_.Get(index);
}
inline void CReplayCachedContestData::set_video_entry_ids(int index, ::google::protobuf::uint32 value) {
  video_entry_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CReplayCachedContestData.video_entry_ids)
}
inline void CReplayCachedContestData::add_video_entry_ids(::google::protobuf::uint32 value) {
  video_entry_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CReplayCachedContestData.video_entry_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CReplayCachedContestData::video_entry_ids() const {
  // @@protoc_insertion_point(field_list:CReplayCachedContestData.video_entry_ids)
  return video_entry_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CReplayCachedContestData::mutable_video_entry_ids() {
  // @@protoc_insertion_point(field_mutable_list:CReplayCachedContestData.video_entry_ids)
  return &video_entry_ids_;
}

// optional uint32 num_flags_last_day = 4;
inline bool CReplayCachedContestData::has_num_flags_last_day() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CReplayCachedContestData::set_has_num_flags_last_day() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CReplayCachedContestData::clear_has_num_flags_last_day() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CReplayCachedContestData::clear_num_flags_last_day() {
  num_flags_last_day_ = 0u;
  clear_has_num_flags_last_day();
}
inline ::google::protobuf::uint32 CReplayCachedContestData::num_flags_last_day() const {
  // @@protoc_insertion_point(field_get:CReplayCachedContestData.num_flags_last_day)
  return num_flags_last_day_;
}
inline void CReplayCachedContestData::set_num_flags_last_day(::google::protobuf::uint32 value) {
  set_has_num_flags_last_day();
  num_flags_last_day_ = value;
  // @@protoc_insertion_point(field_set:CReplayCachedContestData.num_flags_last_day)
}

// -------------------------------------------------------------------

// CMsgTFCoaching_AddToCoaches

// -------------------------------------------------------------------

// CMsgTFCoaching_RemoveFromCoaches

// -------------------------------------------------------------------

// CMsgTFCoaching_FindCoach

// optional uint32 account_id_friend_as_coach = 1;
inline bool CMsgTFCoaching_FindCoach::has_account_id_friend_as_coach() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFCoaching_FindCoach::set_has_account_id_friend_as_coach() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFCoaching_FindCoach::clear_has_account_id_friend_as_coach() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFCoaching_FindCoach::clear_account_id_friend_as_coach() {
  account_id_friend_as_coach_ = 0u;
  clear_has_account_id_friend_as_coach();
}
inline ::google::protobuf::uint32 CMsgTFCoaching_FindCoach::account_id_friend_as_coach() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_FindCoach.account_id_friend_as_coach)
  return account_id_friend_as_coach_;
}
inline void CMsgTFCoaching_FindCoach::set_account_id_friend_as_coach(::google::protobuf::uint32 value) {
  set_has_account_id_friend_as_coach();
  account_id_friend_as_coach_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_FindCoach.account_id_friend_as_coach)
}

// -------------------------------------------------------------------

// CMsgTFCoaching_FindCoachResponse

// optional bool found_coach = 1;
inline bool CMsgTFCoaching_FindCoachResponse::has_found_coach() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFCoaching_FindCoachResponse::set_has_found_coach() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFCoaching_FindCoachResponse::clear_has_found_coach() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFCoaching_FindCoachResponse::clear_found_coach() {
  found_coach_ = false;
  clear_has_found_coach();
}
inline bool CMsgTFCoaching_FindCoachResponse::found_coach() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_FindCoachResponse.found_coach)
  return found_coach_;
}
inline void CMsgTFCoaching_FindCoachResponse::set_found_coach(bool value) {
  set_has_found_coach();
  found_coach_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_FindCoachResponse.found_coach)
}

// optional uint32 num_likes = 2;
inline bool CMsgTFCoaching_FindCoachResponse::has_num_likes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFCoaching_FindCoachResponse::set_has_num_likes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFCoaching_FindCoachResponse::clear_has_num_likes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFCoaching_FindCoachResponse::clear_num_likes() {
  num_likes_ = 0u;
  clear_has_num_likes();
}
inline ::google::protobuf::uint32 CMsgTFCoaching_FindCoachResponse::num_likes() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_FindCoachResponse.num_likes)
  return num_likes_;
}
inline void CMsgTFCoaching_FindCoachResponse::set_num_likes(::google::protobuf::uint32 value) {
  set_has_num_likes();
  num_likes_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_FindCoachResponse.num_likes)
}

// optional string coach_name = 3;
inline bool CMsgTFCoaching_FindCoachResponse::has_coach_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTFCoaching_FindCoachResponse::set_has_coach_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgTFCoaching_FindCoachResponse::clear_has_coach_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgTFCoaching_FindCoachResponse::clear_coach_name() {
  if (coach_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    coach_name_->clear();
  }
  clear_has_coach_name();
}
inline const ::std::string& CMsgTFCoaching_FindCoachResponse::coach_name() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_FindCoachResponse.coach_name)
  return *coach_name_;
}
inline void CMsgTFCoaching_FindCoachResponse::set_coach_name(const ::std::string& value) {
  set_has_coach_name();
  if (coach_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    coach_name_ = new ::std::string;
  }
  coach_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_FindCoachResponse.coach_name)
}
inline void CMsgTFCoaching_FindCoachResponse::set_coach_name(const char* value) {
  set_has_coach_name();
  if (coach_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    coach_name_ = new ::std::string;
  }
  coach_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgTFCoaching_FindCoachResponse.coach_name)
}
inline void CMsgTFCoaching_FindCoachResponse::set_coach_name(const char* value, size_t size) {
  set_has_coach_name();
  if (coach_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    coach_name_ = new ::std::string;
  }
  coach_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgTFCoaching_FindCoachResponse.coach_name)
}
inline ::std::string* CMsgTFCoaching_FindCoachResponse::mutable_coach_name() {
  set_has_coach_name();
  if (coach_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    coach_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgTFCoaching_FindCoachResponse.coach_name)
  return coach_name_;
}
inline ::std::string* CMsgTFCoaching_FindCoachResponse::release_coach_name() {
  clear_has_coach_name();
  if (coach_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = coach_name_;
    coach_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgTFCoaching_FindCoachResponse::set_allocated_coach_name(::std::string* coach_name) {
  if (coach_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete coach_name_;
  }
  if (coach_name) {
    set_has_coach_name();
    coach_name_ = coach_name;
  } else {
    clear_has_coach_name();
    coach_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgTFCoaching_FindCoachResponse.coach_name)
}

// -------------------------------------------------------------------

// CMsgTFCoaching_AskCoach

// optional uint32 account_id_student = 1;
inline bool CMsgTFCoaching_AskCoach::has_account_id_student() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFCoaching_AskCoach::set_has_account_id_student() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFCoaching_AskCoach::clear_has_account_id_student() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFCoaching_AskCoach::clear_account_id_student() {
  account_id_student_ = 0u;
  clear_has_account_id_student();
}
inline ::google::protobuf::uint32 CMsgTFCoaching_AskCoach::account_id_student() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_AskCoach.account_id_student)
  return account_id_student_;
}
inline void CMsgTFCoaching_AskCoach::set_account_id_student(::google::protobuf::uint32 value) {
  set_has_account_id_student();
  account_id_student_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_AskCoach.account_id_student)
}

// optional bool student_is_friend = 2;
inline bool CMsgTFCoaching_AskCoach::has_student_is_friend() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFCoaching_AskCoach::set_has_student_is_friend() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFCoaching_AskCoach::clear_has_student_is_friend() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFCoaching_AskCoach::clear_student_is_friend() {
  student_is_friend_ = false;
  clear_has_student_is_friend();
}
inline bool CMsgTFCoaching_AskCoach::student_is_friend() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_AskCoach.student_is_friend)
  return student_is_friend_;
}
inline void CMsgTFCoaching_AskCoach::set_student_is_friend(bool value) {
  set_has_student_is_friend();
  student_is_friend_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_AskCoach.student_is_friend)
}

// -------------------------------------------------------------------

// CMsgTFCoaching_AskCoachResponse

// optional bool accept_coaching_assignment = 1;
inline bool CMsgTFCoaching_AskCoachResponse::has_accept_coaching_assignment() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFCoaching_AskCoachResponse::set_has_accept_coaching_assignment() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFCoaching_AskCoachResponse::clear_has_accept_coaching_assignment() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFCoaching_AskCoachResponse::clear_accept_coaching_assignment() {
  accept_coaching_assignment_ = false;
  clear_has_accept_coaching_assignment();
}
inline bool CMsgTFCoaching_AskCoachResponse::accept_coaching_assignment() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_AskCoachResponse.accept_coaching_assignment)
  return accept_coaching_assignment_;
}
inline void CMsgTFCoaching_AskCoachResponse::set_accept_coaching_assignment(bool value) {
  set_has_accept_coaching_assignment();
  accept_coaching_assignment_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_AskCoachResponse.accept_coaching_assignment)
}

// -------------------------------------------------------------------

// CMsgTFCoaching_CoachJoinGame

// optional bool join_game = 1;
inline bool CMsgTFCoaching_CoachJoinGame::has_join_game() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFCoaching_CoachJoinGame::set_has_join_game() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFCoaching_CoachJoinGame::clear_has_join_game() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFCoaching_CoachJoinGame::clear_join_game() {
  join_game_ = false;
  clear_has_join_game();
}
inline bool CMsgTFCoaching_CoachJoinGame::join_game() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_CoachJoinGame.join_game)
  return join_game_;
}
inline void CMsgTFCoaching_CoachJoinGame::set_join_game(bool value) {
  set_has_join_game();
  join_game_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_CoachJoinGame.join_game)
}

// optional uint32 server_address = 2;
inline bool CMsgTFCoaching_CoachJoinGame::has_server_address() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFCoaching_CoachJoinGame::set_has_server_address() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFCoaching_CoachJoinGame::clear_has_server_address() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFCoaching_CoachJoinGame::clear_server_address() {
  server_address_ = 0u;
  clear_has_server_address();
}
inline ::google::protobuf::uint32 CMsgTFCoaching_CoachJoinGame::server_address() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_CoachJoinGame.server_address)
  return server_address_;
}
inline void CMsgTFCoaching_CoachJoinGame::set_server_address(::google::protobuf::uint32 value) {
  set_has_server_address();
  server_address_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_CoachJoinGame.server_address)
}

// optional uint32 server_port = 3;
inline bool CMsgTFCoaching_CoachJoinGame::has_server_port() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTFCoaching_CoachJoinGame::set_has_server_port() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgTFCoaching_CoachJoinGame::clear_has_server_port() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgTFCoaching_CoachJoinGame::clear_server_port() {
  server_port_ = 0u;
  clear_has_server_port();
}
inline ::google::protobuf::uint32 CMsgTFCoaching_CoachJoinGame::server_port() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_CoachJoinGame.server_port)
  return server_port_;
}
inline void CMsgTFCoaching_CoachJoinGame::set_server_port(::google::protobuf::uint32 value) {
  set_has_server_port();
  server_port_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_CoachJoinGame.server_port)
}

// optional uint32 account_id_student = 4;
inline bool CMsgTFCoaching_CoachJoinGame::has_account_id_student() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgTFCoaching_CoachJoinGame::set_has_account_id_student() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgTFCoaching_CoachJoinGame::clear_has_account_id_student() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgTFCoaching_CoachJoinGame::clear_account_id_student() {
  account_id_student_ = 0u;
  clear_has_account_id_student();
}
inline ::google::protobuf::uint32 CMsgTFCoaching_CoachJoinGame::account_id_student() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_CoachJoinGame.account_id_student)
  return account_id_student_;
}
inline void CMsgTFCoaching_CoachJoinGame::set_account_id_student(::google::protobuf::uint32 value) {
  set_has_account_id_student();
  account_id_student_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_CoachJoinGame.account_id_student)
}

// -------------------------------------------------------------------

// CMsgTFCoaching_CoachJoining

// optional uint32 account_id_coach = 1;
inline bool CMsgTFCoaching_CoachJoining::has_account_id_coach() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFCoaching_CoachJoining::set_has_account_id_coach() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFCoaching_CoachJoining::clear_has_account_id_coach() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFCoaching_CoachJoining::clear_account_id_coach() {
  account_id_coach_ = 0u;
  clear_has_account_id_coach();
}
inline ::google::protobuf::uint32 CMsgTFCoaching_CoachJoining::account_id_coach() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_CoachJoining.account_id_coach)
  return account_id_coach_;
}
inline void CMsgTFCoaching_CoachJoining::set_account_id_coach(::google::protobuf::uint32 value) {
  set_has_account_id_coach();
  account_id_coach_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_CoachJoining.account_id_coach)
}

// optional uint32 account_id_student = 2;
inline bool CMsgTFCoaching_CoachJoining::has_account_id_student() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFCoaching_CoachJoining::set_has_account_id_student() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFCoaching_CoachJoining::clear_has_account_id_student() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFCoaching_CoachJoining::clear_account_id_student() {
  account_id_student_ = 0u;
  clear_has_account_id_student();
}
inline ::google::protobuf::uint32 CMsgTFCoaching_CoachJoining::account_id_student() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_CoachJoining.account_id_student)
  return account_id_student_;
}
inline void CMsgTFCoaching_CoachJoining::set_account_id_student(::google::protobuf::uint32 value) {
  set_has_account_id_student();
  account_id_student_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_CoachJoining.account_id_student)
}

// -------------------------------------------------------------------

// CMsgTFCoaching_CoachJoined

// optional uint32 account_id_coach = 1;
inline bool CMsgTFCoaching_CoachJoined::has_account_id_coach() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFCoaching_CoachJoined::set_has_account_id_coach() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFCoaching_CoachJoined::clear_has_account_id_coach() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFCoaching_CoachJoined::clear_account_id_coach() {
  account_id_coach_ = 0u;
  clear_has_account_id_coach();
}
inline ::google::protobuf::uint32 CMsgTFCoaching_CoachJoined::account_id_coach() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_CoachJoined.account_id_coach)
  return account_id_coach_;
}
inline void CMsgTFCoaching_CoachJoined::set_account_id_coach(::google::protobuf::uint32 value) {
  set_has_account_id_coach();
  account_id_coach_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_CoachJoined.account_id_coach)
}

// -------------------------------------------------------------------

// CMsgTFCoaching_LikeCurrentCoach

// optional bool like_coach = 1;
inline bool CMsgTFCoaching_LikeCurrentCoach::has_like_coach() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFCoaching_LikeCurrentCoach::set_has_like_coach() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFCoaching_LikeCurrentCoach::clear_has_like_coach() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFCoaching_LikeCurrentCoach::clear_like_coach() {
  like_coach_ = false;
  clear_has_like_coach();
}
inline bool CMsgTFCoaching_LikeCurrentCoach::like_coach() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_LikeCurrentCoach.like_coach)
  return like_coach_;
}
inline void CMsgTFCoaching_LikeCurrentCoach::set_like_coach(bool value) {
  set_has_like_coach();
  like_coach_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_LikeCurrentCoach.like_coach)
}

// -------------------------------------------------------------------

// CMsgTFCoaching_RemoveCurrentCoach

// optional uint32 account_id_coach = 1;
inline bool CMsgTFCoaching_RemoveCurrentCoach::has_account_id_coach() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFCoaching_RemoveCurrentCoach::set_has_account_id_coach() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFCoaching_RemoveCurrentCoach::clear_has_account_id_coach() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFCoaching_RemoveCurrentCoach::clear_account_id_coach() {
  account_id_coach_ = 0u;
  clear_has_account_id_coach();
}
inline ::google::protobuf::uint32 CMsgTFCoaching_RemoveCurrentCoach::account_id_coach() const {
  // @@protoc_insertion_point(field_get:CMsgTFCoaching_RemoveCurrentCoach.account_id_coach)
  return account_id_coach_;
}
inline void CMsgTFCoaching_RemoveCurrentCoach::set_account_id_coach(::google::protobuf::uint32 value) {
  set_has_account_id_coach();
  account_id_coach_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFCoaching_RemoveCurrentCoach.account_id_coach)
}

// -------------------------------------------------------------------

// CMsgTFQuickplay_ScoreServers_ServerInfo

// optional uint32 server_address = 1;
inline bool CMsgTFQuickplay_ScoreServers_ServerInfo::has_server_address() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_has_server_address() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_has_server_address() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_server_address() {
  server_address_ = 0u;
  clear_has_server_address();
}
inline ::google::protobuf::uint32 CMsgTFQuickplay_ScoreServers_ServerInfo::server_address() const {
  // @@protoc_insertion_point(field_get:CMsgTFQuickplay_ScoreServers.ServerInfo.server_address)
  return server_address_;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_server_address(::google::protobuf::uint32 value) {
  set_has_server_address();
  server_address_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFQuickplay_ScoreServers.ServerInfo.server_address)
}

// optional uint32 server_port = 2;
inline bool CMsgTFQuickplay_ScoreServers_ServerInfo::has_server_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_has_server_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_has_server_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_server_port() {
  server_port_ = 0u;
  clear_has_server_port();
}
inline ::google::protobuf::uint32 CMsgTFQuickplay_ScoreServers_ServerInfo::server_port() const {
  // @@protoc_insertion_point(field_get:CMsgTFQuickplay_ScoreServers.ServerInfo.server_port)
  return server_port_;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_server_port(::google::protobuf::uint32 value) {
  set_has_server_port();
  server_port_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFQuickplay_ScoreServers.ServerInfo.server_port)
}

// optional uint32 num_users = 3;
inline bool CMsgTFQuickplay_ScoreServers_ServerInfo::has_num_users() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_has_num_users() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_has_num_users() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_num_users() {
  num_users_ = 0u;
  clear_has_num_users();
}
inline ::google::protobuf::uint32 CMsgTFQuickplay_ScoreServers_ServerInfo::num_users() const {
  // @@protoc_insertion_point(field_get:CMsgTFQuickplay_ScoreServers.ServerInfo.num_users)
  return num_users_;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_num_users(::google::protobuf::uint32 value) {
  set_has_num_users();
  num_users_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFQuickplay_ScoreServers.ServerInfo.num_users)
}

// optional uint64 steam_id = 4;
inline bool CMsgTFQuickplay_ScoreServers_ServerInfo::has_steam_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_has_steam_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgTFQuickplay_ScoreServers_ServerInfo::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgTFQuickplay_ScoreServers.ServerInfo.steam_id)
  return steam_id_;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFQuickplay_ScoreServers.ServerInfo.steam_id)
}

// optional uint32 max_users = 5;
inline bool CMsgTFQuickplay_ScoreServers_ServerInfo::has_max_users() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_has_max_users() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_has_max_users() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_max_users() {
  max_users_ = 0u;
  clear_has_max_users();
}
inline ::google::protobuf::uint32 CMsgTFQuickplay_ScoreServers_ServerInfo::max_users() const {
  // @@protoc_insertion_point(field_get:CMsgTFQuickplay_ScoreServers.ServerInfo.max_users)
  return max_users_;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_max_users(::google::protobuf::uint32 value) {
  set_has_max_users();
  max_users_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFQuickplay_ScoreServers.ServerInfo.max_users)
}

// optional float user_score = 6;
inline bool CMsgTFQuickplay_ScoreServers_ServerInfo::has_user_score() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_has_user_score() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_has_user_score() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::clear_user_score() {
  user_score_ = 0;
  clear_has_user_score();
}
inline float CMsgTFQuickplay_ScoreServers_ServerInfo::user_score() const {
  // @@protoc_insertion_point(field_get:CMsgTFQuickplay_ScoreServers.ServerInfo.user_score)
  return user_score_;
}
inline void CMsgTFQuickplay_ScoreServers_ServerInfo::set_user_score(float value) {
  set_has_user_score();
  user_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFQuickplay_ScoreServers.ServerInfo.user_score)
}

// -------------------------------------------------------------------

// CMsgTFQuickplay_ScoreServers

// repeated .CMsgTFQuickplay_ScoreServers.ServerInfo servers = 1;
inline int CMsgTFQuickplay_ScoreServers::servers_size() const {
  return servers_.size();
}
inline void CMsgTFQuickplay_ScoreServers::clear_servers() {
  servers_.Clear();
}
inline const ::CMsgTFQuickplay_ScoreServers_ServerInfo& CMsgTFQuickplay_ScoreServers::servers(int index) const {
  // @@protoc_insertion_point(field_get:CMsgTFQuickplay_ScoreServers.servers)
  return servers_.Get(index);
}
inline ::CMsgTFQuickplay_ScoreServers_ServerInfo* CMsgTFQuickplay_ScoreServers::mutable_servers(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgTFQuickplay_ScoreServers.servers)
  return servers_.Mutable(index);
}
inline ::CMsgTFQuickplay_ScoreServers_ServerInfo* CMsgTFQuickplay_ScoreServers::add_servers() {
  // @@protoc_insertion_point(field_add:CMsgTFQuickplay_ScoreServers.servers)
  return servers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServers_ServerInfo >&
CMsgTFQuickplay_ScoreServers::servers() const {
  // @@protoc_insertion_point(field_list:CMsgTFQuickplay_ScoreServers.servers)
  return servers_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServers_ServerInfo >*
CMsgTFQuickplay_ScoreServers::mutable_servers() {
  // @@protoc_insertion_point(field_mutable_list:CMsgTFQuickplay_ScoreServers.servers)
  return &servers_;
}

// -------------------------------------------------------------------

// CMsgTFQuickplay_ScoreServersResponse_ServerInfo

// optional uint32 server_address = 1;
inline bool CMsgTFQuickplay_ScoreServersResponse_ServerInfo::has_server_address() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::set_has_server_address() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::clear_has_server_address() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::clear_server_address() {
  server_address_ = 0u;
  clear_has_server_address();
}
inline ::google::protobuf::uint32 CMsgTFQuickplay_ScoreServersResponse_ServerInfo::server_address() const {
  // @@protoc_insertion_point(field_get:CMsgTFQuickplay_ScoreServersResponse.ServerInfo.server_address)
  return server_address_;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::set_server_address(::google::protobuf::uint32 value) {
  set_has_server_address();
  server_address_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFQuickplay_ScoreServersResponse.ServerInfo.server_address)
}

// optional uint32 server_port = 2;
inline bool CMsgTFQuickplay_ScoreServersResponse_ServerInfo::has_server_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::set_has_server_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::clear_has_server_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::clear_server_port() {
  server_port_ = 0u;
  clear_has_server_port();
}
inline ::google::protobuf::uint32 CMsgTFQuickplay_ScoreServersResponse_ServerInfo::server_port() const {
  // @@protoc_insertion_point(field_get:CMsgTFQuickplay_ScoreServersResponse.ServerInfo.server_port)
  return server_port_;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::set_server_port(::google::protobuf::uint32 value) {
  set_has_server_port();
  server_port_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFQuickplay_ScoreServersResponse.ServerInfo.server_port)
}

// optional float total_score = 3;
inline bool CMsgTFQuickplay_ScoreServersResponse_ServerInfo::has_total_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::set_has_total_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::clear_has_total_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::clear_total_score() {
  total_score_ = 0;
  clear_has_total_score();
}
inline float CMsgTFQuickplay_ScoreServersResponse_ServerInfo::total_score() const {
  // @@protoc_insertion_point(field_get:CMsgTFQuickplay_ScoreServersResponse.ServerInfo.total_score)
  return total_score_;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::set_total_score(float value) {
  set_has_total_score();
  total_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFQuickplay_ScoreServersResponse.ServerInfo.total_score)
}

// optional uint64 steam_id = 4;
inline bool CMsgTFQuickplay_ScoreServersResponse_ServerInfo::has_steam_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::set_has_steam_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgTFQuickplay_ScoreServersResponse_ServerInfo::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgTFQuickplay_ScoreServersResponse.ServerInfo.steam_id)
  return steam_id_;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFQuickplay_ScoreServersResponse.ServerInfo.steam_id)
}

// optional uint32 options_score = 5;
inline bool CMsgTFQuickplay_ScoreServersResponse_ServerInfo::has_options_score() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::set_has_options_score() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::clear_has_options_score() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::clear_options_score() {
  options_score_ = 0u;
  clear_has_options_score();
}
inline ::google::protobuf::uint32 CMsgTFQuickplay_ScoreServersResponse_ServerInfo::options_score() const {
  // @@protoc_insertion_point(field_get:CMsgTFQuickplay_ScoreServersResponse.ServerInfo.options_score)
  return options_score_;
}
inline void CMsgTFQuickplay_ScoreServersResponse_ServerInfo::set_options_score(::google::protobuf::uint32 value) {
  set_has_options_score();
  options_score_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFQuickplay_ScoreServersResponse.ServerInfo.options_score)
}

// -------------------------------------------------------------------

// CMsgTFQuickplay_ScoreServersResponse

// repeated .CMsgTFQuickplay_ScoreServersResponse.ServerInfo servers = 1;
inline int CMsgTFQuickplay_ScoreServersResponse::servers_size() const {
  return servers_.size();
}
inline void CMsgTFQuickplay_ScoreServersResponse::clear_servers() {
  servers_.Clear();
}
inline const ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo& CMsgTFQuickplay_ScoreServersResponse::servers(int index) const {
  // @@protoc_insertion_point(field_get:CMsgTFQuickplay_ScoreServersResponse.servers)
  return servers_.Get(index);
}
inline ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo* CMsgTFQuickplay_ScoreServersResponse::mutable_servers(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgTFQuickplay_ScoreServersResponse.servers)
  return servers_.Mutable(index);
}
inline ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo* CMsgTFQuickplay_ScoreServersResponse::add_servers() {
  // @@protoc_insertion_point(field_add:CMsgTFQuickplay_ScoreServersResponse.servers)
  return servers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo >&
CMsgTFQuickplay_ScoreServersResponse::servers() const {
  // @@protoc_insertion_point(field_list:CMsgTFQuickplay_ScoreServersResponse.servers)
  return servers_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgTFQuickplay_ScoreServersResponse_ServerInfo >*
CMsgTFQuickplay_ScoreServersResponse::mutable_servers() {
  // @@protoc_insertion_point(field_mutable_list:CMsgTFQuickplay_ScoreServersResponse.servers)
  return &servers_;
}

// -------------------------------------------------------------------

// CMsgTFQuickplay_PlayerJoining

// optional uint32 account_id = 1;
inline bool CMsgTFQuickplay_PlayerJoining::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFQuickplay_PlayerJoining::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFQuickplay_PlayerJoining::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFQuickplay_PlayerJoining::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgTFQuickplay_PlayerJoining::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgTFQuickplay_PlayerJoining.account_id)
  return account_id_;
}
inline void CMsgTFQuickplay_PlayerJoining::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFQuickplay_PlayerJoining.account_id)
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_LevelInfo

// optional bool level_loaded = 1;
inline bool CMsgGC_GameServer_LevelInfo::has_level_loaded() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_LevelInfo::set_has_level_loaded() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_LevelInfo::clear_has_level_loaded() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_LevelInfo::clear_level_loaded() {
  level_loaded_ = false;
  clear_has_level_loaded();
}
inline bool CMsgGC_GameServer_LevelInfo::level_loaded() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_LevelInfo.level_loaded)
  return level_loaded_;
}
inline void CMsgGC_GameServer_LevelInfo::set_level_loaded(bool value) {
  set_has_level_loaded();
  level_loaded_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_LevelInfo.level_loaded)
}

// optional string level_name = 2;
inline bool CMsgGC_GameServer_LevelInfo::has_level_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_GameServer_LevelInfo::set_has_level_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_GameServer_LevelInfo::clear_has_level_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_GameServer_LevelInfo::clear_level_name() {
  if (level_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    level_name_->clear();
  }
  clear_has_level_name();
}
inline const ::std::string& CMsgGC_GameServer_LevelInfo::level_name() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_LevelInfo.level_name)
  return *level_name_;
}
inline void CMsgGC_GameServer_LevelInfo::set_level_name(const ::std::string& value) {
  set_has_level_name();
  if (level_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    level_name_ = new ::std::string;
  }
  level_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_LevelInfo.level_name)
}
inline void CMsgGC_GameServer_LevelInfo::set_level_name(const char* value) {
  set_has_level_name();
  if (level_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    level_name_ = new ::std::string;
  }
  level_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGC_GameServer_LevelInfo.level_name)
}
inline void CMsgGC_GameServer_LevelInfo::set_level_name(const char* value, size_t size) {
  set_has_level_name();
  if (level_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    level_name_ = new ::std::string;
  }
  level_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGC_GameServer_LevelInfo.level_name)
}
inline ::std::string* CMsgGC_GameServer_LevelInfo::mutable_level_name() {
  set_has_level_name();
  if (level_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    level_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGC_GameServer_LevelInfo.level_name)
  return level_name_;
}
inline ::std::string* CMsgGC_GameServer_LevelInfo::release_level_name() {
  clear_has_level_name();
  if (level_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = level_name_;
    level_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGC_GameServer_LevelInfo::set_allocated_level_name(::std::string* level_name) {
  if (level_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete level_name_;
  }
  if (level_name) {
    set_has_level_name();
    level_name_ = level_name;
  } else {
    clear_has_level_name();
    level_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGC_GameServer_LevelInfo.level_name)
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_AuthChallenge

// optional string challenge_string = 1;
inline bool CMsgGC_GameServer_AuthChallenge::has_challenge_string() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_AuthChallenge::set_has_challenge_string() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_AuthChallenge::clear_has_challenge_string() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_AuthChallenge::clear_challenge_string() {
  if (challenge_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    challenge_string_->clear();
  }
  clear_has_challenge_string();
}
inline const ::std::string& CMsgGC_GameServer_AuthChallenge::challenge_string() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_AuthChallenge.challenge_string)
  return *challenge_string_;
}
inline void CMsgGC_GameServer_AuthChallenge::set_challenge_string(const ::std::string& value) {
  set_has_challenge_string();
  if (challenge_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    challenge_string_ = new ::std::string;
  }
  challenge_string_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_AuthChallenge.challenge_string)
}
inline void CMsgGC_GameServer_AuthChallenge::set_challenge_string(const char* value) {
  set_has_challenge_string();
  if (challenge_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    challenge_string_ = new ::std::string;
  }
  challenge_string_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGC_GameServer_AuthChallenge.challenge_string)
}
inline void CMsgGC_GameServer_AuthChallenge::set_challenge_string(const char* value, size_t size) {
  set_has_challenge_string();
  if (challenge_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    challenge_string_ = new ::std::string;
  }
  challenge_string_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGC_GameServer_AuthChallenge.challenge_string)
}
inline ::std::string* CMsgGC_GameServer_AuthChallenge::mutable_challenge_string() {
  set_has_challenge_string();
  if (challenge_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    challenge_string_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGC_GameServer_AuthChallenge.challenge_string)
  return challenge_string_;
}
inline ::std::string* CMsgGC_GameServer_AuthChallenge::release_challenge_string() {
  clear_has_challenge_string();
  if (challenge_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = challenge_string_;
    challenge_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGC_GameServer_AuthChallenge::set_allocated_challenge_string(::std::string* challenge_string) {
  if (challenge_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete challenge_string_;
  }
  if (challenge_string) {
    set_has_challenge_string();
    challenge_string_ = challenge_string;
  } else {
    clear_has_challenge_string();
    challenge_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGC_GameServer_AuthChallenge.challenge_string)
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_AuthResult

// optional bool authenticated = 1;
inline bool CMsgGC_GameServer_AuthResult::has_authenticated() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_AuthResult::set_has_authenticated() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_AuthResult::clear_has_authenticated() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_AuthResult::clear_authenticated() {
  authenticated_ = false;
  clear_has_authenticated();
}
inline bool CMsgGC_GameServer_AuthResult::authenticated() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_AuthResult.authenticated)
  return authenticated_;
}
inline void CMsgGC_GameServer_AuthResult::set_authenticated(bool value) {
  set_has_authenticated();
  authenticated_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_AuthResult.authenticated)
}

// optional int32 game_server_standing = 2;
inline bool CMsgGC_GameServer_AuthResult::has_game_server_standing() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_GameServer_AuthResult::set_has_game_server_standing() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_GameServer_AuthResult::clear_has_game_server_standing() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_GameServer_AuthResult::clear_game_server_standing() {
  game_server_standing_ = 0;
  clear_has_game_server_standing();
}
inline ::google::protobuf::int32 CMsgGC_GameServer_AuthResult::game_server_standing() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_AuthResult.game_server_standing)
  return game_server_standing_;
}
inline void CMsgGC_GameServer_AuthResult::set_game_server_standing(::google::protobuf::int32 value) {
  set_has_game_server_standing();
  game_server_standing_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_AuthResult.game_server_standing)
}

// optional int32 game_server_standing_trend = 3;
inline bool CMsgGC_GameServer_AuthResult::has_game_server_standing_trend() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGC_GameServer_AuthResult::set_has_game_server_standing_trend() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGC_GameServer_AuthResult::clear_has_game_server_standing_trend() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGC_GameServer_AuthResult::clear_game_server_standing_trend() {
  game_server_standing_trend_ = 0;
  clear_has_game_server_standing_trend();
}
inline ::google::protobuf::int32 CMsgGC_GameServer_AuthResult::game_server_standing_trend() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_AuthResult.game_server_standing_trend)
  return game_server_standing_trend_;
}
inline void CMsgGC_GameServer_AuthResult::set_game_server_standing_trend(::google::protobuf::int32 value) {
  set_has_game_server_standing_trend();
  game_server_standing_trend_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_AuthResult.game_server_standing_trend)
}

// optional bool is_valve_server = 4;
inline bool CMsgGC_GameServer_AuthResult::has_is_valve_server() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGC_GameServer_AuthResult::set_has_is_valve_server() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGC_GameServer_AuthResult::clear_has_is_valve_server() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGC_GameServer_AuthResult::clear_is_valve_server() {
  is_valve_server_ = false;
  clear_has_is_valve_server();
}
inline bool CMsgGC_GameServer_AuthResult::is_valve_server() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_AuthResult.is_valve_server)
  return is_valve_server_;
}
inline void CMsgGC_GameServer_AuthResult::set_is_valve_server(bool value) {
  set_has_is_valve_server();
  is_valve_server_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_AuthResult.is_valve_server)
}

// optional string message = 5;
inline bool CMsgGC_GameServer_AuthResult::has_message() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGC_GameServer_AuthResult::set_has_message() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGC_GameServer_AuthResult::clear_has_message() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGC_GameServer_AuthResult::clear_message() {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& CMsgGC_GameServer_AuthResult::message() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_AuthResult.message)
  return *message_;
}
inline void CMsgGC_GameServer_AuthResult::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_AuthResult.message)
}
inline void CMsgGC_GameServer_AuthResult::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGC_GameServer_AuthResult.message)
}
inline void CMsgGC_GameServer_AuthResult::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGC_GameServer_AuthResult.message)
}
inline ::std::string* CMsgGC_GameServer_AuthResult::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGC_GameServer_AuthResult.message)
  return message_;
}
inline ::std::string* CMsgGC_GameServer_AuthResult::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGC_GameServer_AuthResult::set_allocated_message(::std::string* message) {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGC_GameServer_AuthResult.message)
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_AuthChallengeResponse

// optional uint32 game_server_account_id = 1;
inline bool CMsgGC_GameServer_AuthChallengeResponse::has_game_server_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_AuthChallengeResponse::set_has_game_server_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_AuthChallengeResponse::clear_has_game_server_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_AuthChallengeResponse::clear_game_server_account_id() {
  game_server_account_id_ = 0u;
  clear_has_game_server_account_id();
}
inline ::google::protobuf::uint32 CMsgGC_GameServer_AuthChallengeResponse::game_server_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_AuthChallengeResponse.game_server_account_id)
  return game_server_account_id_;
}
inline void CMsgGC_GameServer_AuthChallengeResponse::set_game_server_account_id(::google::protobuf::uint32 value) {
  set_has_game_server_account_id();
  game_server_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_AuthChallengeResponse.game_server_account_id)
}

// optional bytes hashed_challenge_string = 2;
inline bool CMsgGC_GameServer_AuthChallengeResponse::has_hashed_challenge_string() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_GameServer_AuthChallengeResponse::set_has_hashed_challenge_string() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_GameServer_AuthChallengeResponse::clear_has_hashed_challenge_string() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_GameServer_AuthChallengeResponse::clear_hashed_challenge_string() {
  if (hashed_challenge_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    hashed_challenge_string_->clear();
  }
  clear_has_hashed_challenge_string();
}
inline const ::std::string& CMsgGC_GameServer_AuthChallengeResponse::hashed_challenge_string() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_AuthChallengeResponse.hashed_challenge_string)
  return *hashed_challenge_string_;
}
inline void CMsgGC_GameServer_AuthChallengeResponse::set_hashed_challenge_string(const ::std::string& value) {
  set_has_hashed_challenge_string();
  if (hashed_challenge_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    hashed_challenge_string_ = new ::std::string;
  }
  hashed_challenge_string_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_AuthChallengeResponse.hashed_challenge_string)
}
inline void CMsgGC_GameServer_AuthChallengeResponse::set_hashed_challenge_string(const char* value) {
  set_has_hashed_challenge_string();
  if (hashed_challenge_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    hashed_challenge_string_ = new ::std::string;
  }
  hashed_challenge_string_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGC_GameServer_AuthChallengeResponse.hashed_challenge_string)
}
inline void CMsgGC_GameServer_AuthChallengeResponse::set_hashed_challenge_string(const void* value, size_t size) {
  set_has_hashed_challenge_string();
  if (hashed_challenge_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    hashed_challenge_string_ = new ::std::string;
  }
  hashed_challenge_string_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGC_GameServer_AuthChallengeResponse.hashed_challenge_string)
}
inline ::std::string* CMsgGC_GameServer_AuthChallengeResponse::mutable_hashed_challenge_string() {
  set_has_hashed_challenge_string();
  if (hashed_challenge_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    hashed_challenge_string_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGC_GameServer_AuthChallengeResponse.hashed_challenge_string)
  return hashed_challenge_string_;
}
inline ::std::string* CMsgGC_GameServer_AuthChallengeResponse::release_hashed_challenge_string() {
  clear_has_hashed_challenge_string();
  if (hashed_challenge_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = hashed_challenge_string_;
    hashed_challenge_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGC_GameServer_AuthChallengeResponse::set_allocated_hashed_challenge_string(::std::string* hashed_challenge_string) {
  if (hashed_challenge_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete hashed_challenge_string_;
  }
  if (hashed_challenge_string) {
    set_has_hashed_challenge_string();
    hashed_challenge_string_ = hashed_challenge_string;
  } else {
    clear_has_hashed_challenge_string();
    hashed_challenge_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGC_GameServer_AuthChallengeResponse.hashed_challenge_string)
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_CreateIdentity

// optional uint32 account_id = 1;
inline bool CMsgGC_GameServer_CreateIdentity::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_CreateIdentity::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_CreateIdentity::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_CreateIdentity::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgGC_GameServer_CreateIdentity::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_CreateIdentity.account_id)
  return account_id_;
}
inline void CMsgGC_GameServer_CreateIdentity::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_CreateIdentity.account_id)
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_CreateIdentityResponse

// optional bool account_created = 1;
inline bool CMsgGC_GameServer_CreateIdentityResponse::has_account_created() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_has_account_created() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::clear_has_account_created() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::clear_account_created() {
  account_created_ = false;
  clear_has_account_created();
}
inline bool CMsgGC_GameServer_CreateIdentityResponse::account_created() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_CreateIdentityResponse.account_created)
  return account_created_;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_account_created(bool value) {
  set_has_account_created();
  account_created_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_CreateIdentityResponse.account_created)
}

// optional uint32 game_server_account_id = 2;
inline bool CMsgGC_GameServer_CreateIdentityResponse::has_game_server_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_has_game_server_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::clear_has_game_server_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::clear_game_server_account_id() {
  game_server_account_id_ = 0u;
  clear_has_game_server_account_id();
}
inline ::google::protobuf::uint32 CMsgGC_GameServer_CreateIdentityResponse::game_server_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_CreateIdentityResponse.game_server_account_id)
  return game_server_account_id_;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_game_server_account_id(::google::protobuf::uint32 value) {
  set_has_game_server_account_id();
  game_server_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_CreateIdentityResponse.game_server_account_id)
}

// optional string game_server_identity_token = 3;
inline bool CMsgGC_GameServer_CreateIdentityResponse::has_game_server_identity_token() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_has_game_server_identity_token() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::clear_has_game_server_identity_token() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::clear_game_server_identity_token() {
  if (game_server_identity_token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_server_identity_token_->clear();
  }
  clear_has_game_server_identity_token();
}
inline const ::std::string& CMsgGC_GameServer_CreateIdentityResponse::game_server_identity_token() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_CreateIdentityResponse.game_server_identity_token)
  return *game_server_identity_token_;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_game_server_identity_token(const ::std::string& value) {
  set_has_game_server_identity_token();
  if (game_server_identity_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_server_identity_token_ = new ::std::string;
  }
  game_server_identity_token_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_CreateIdentityResponse.game_server_identity_token)
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_game_server_identity_token(const char* value) {
  set_has_game_server_identity_token();
  if (game_server_identity_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_server_identity_token_ = new ::std::string;
  }
  game_server_identity_token_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGC_GameServer_CreateIdentityResponse.game_server_identity_token)
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_game_server_identity_token(const char* value, size_t size) {
  set_has_game_server_identity_token();
  if (game_server_identity_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_server_identity_token_ = new ::std::string;
  }
  game_server_identity_token_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGC_GameServer_CreateIdentityResponse.game_server_identity_token)
}
inline ::std::string* CMsgGC_GameServer_CreateIdentityResponse::mutable_game_server_identity_token() {
  set_has_game_server_identity_token();
  if (game_server_identity_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_server_identity_token_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGC_GameServer_CreateIdentityResponse.game_server_identity_token)
  return game_server_identity_token_;
}
inline ::std::string* CMsgGC_GameServer_CreateIdentityResponse::release_game_server_identity_token() {
  clear_has_game_server_identity_token();
  if (game_server_identity_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = game_server_identity_token_;
    game_server_identity_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_allocated_game_server_identity_token(::std::string* game_server_identity_token) {
  if (game_server_identity_token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete game_server_identity_token_;
  }
  if (game_server_identity_token) {
    set_has_game_server_identity_token();
    game_server_identity_token_ = game_server_identity_token;
  } else {
    clear_has_game_server_identity_token();
    game_server_identity_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGC_GameServer_CreateIdentityResponse.game_server_identity_token)
}

// optional .CMsgGC_GameServer_CreateIdentityResponse.EStatus status = 4 [default = kStatus_GenericFailure];
inline bool CMsgGC_GameServer_CreateIdentityResponse::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGC_GameServer_CreateIdentityResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::CMsgGC_GameServer_CreateIdentityResponse_EStatus CMsgGC_GameServer_CreateIdentityResponse::status() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_CreateIdentityResponse.status)
  return static_cast< ::CMsgGC_GameServer_CreateIdentityResponse_EStatus >(status_);
}
inline void CMsgGC_GameServer_CreateIdentityResponse::set_status(::CMsgGC_GameServer_CreateIdentityResponse_EStatus value) {
  assert(::CMsgGC_GameServer_CreateIdentityResponse_EStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_CreateIdentityResponse.status)
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_List

// optional uint32 account_id = 1;
inline bool CMsgGC_GameServer_List::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_List::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_List::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_List::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgGC_GameServer_List::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_List.account_id)
  return account_id_;
}
inline void CMsgGC_GameServer_List::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_List.account_id)
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_ListResponse_GameServerIdentity

// optional uint32 game_server_account_id = 1;
inline bool CMsgGC_GameServer_ListResponse_GameServerIdentity::has_game_server_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_has_game_server_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::clear_has_game_server_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::clear_game_server_account_id() {
  game_server_account_id_ = 0u;
  clear_has_game_server_account_id();
}
inline ::google::protobuf::uint32 CMsgGC_GameServer_ListResponse_GameServerIdentity::game_server_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_ListResponse.GameServerIdentity.game_server_account_id)
  return game_server_account_id_;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_game_server_account_id(::google::protobuf::uint32 value) {
  set_has_game_server_account_id();
  game_server_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_ListResponse.GameServerIdentity.game_server_account_id)
}

// optional string game_server_identity_token = 2;
inline bool CMsgGC_GameServer_ListResponse_GameServerIdentity::has_game_server_identity_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_has_game_server_identity_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::clear_has_game_server_identity_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::clear_game_server_identity_token() {
  if (game_server_identity_token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_server_identity_token_->clear();
  }
  clear_has_game_server_identity_token();
}
inline const ::std::string& CMsgGC_GameServer_ListResponse_GameServerIdentity::game_server_identity_token() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_ListResponse.GameServerIdentity.game_server_identity_token)
  return *game_server_identity_token_;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_game_server_identity_token(const ::std::string& value) {
  set_has_game_server_identity_token();
  if (game_server_identity_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_server_identity_token_ = new ::std::string;
  }
  game_server_identity_token_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_ListResponse.GameServerIdentity.game_server_identity_token)
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_game_server_identity_token(const char* value) {
  set_has_game_server_identity_token();
  if (game_server_identity_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_server_identity_token_ = new ::std::string;
  }
  game_server_identity_token_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGC_GameServer_ListResponse.GameServerIdentity.game_server_identity_token)
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_game_server_identity_token(const char* value, size_t size) {
  set_has_game_server_identity_token();
  if (game_server_identity_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_server_identity_token_ = new ::std::string;
  }
  game_server_identity_token_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGC_GameServer_ListResponse.GameServerIdentity.game_server_identity_token)
}
inline ::std::string* CMsgGC_GameServer_ListResponse_GameServerIdentity::mutable_game_server_identity_token() {
  set_has_game_server_identity_token();
  if (game_server_identity_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_server_identity_token_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGC_GameServer_ListResponse.GameServerIdentity.game_server_identity_token)
  return game_server_identity_token_;
}
inline ::std::string* CMsgGC_GameServer_ListResponse_GameServerIdentity::release_game_server_identity_token() {
  clear_has_game_server_identity_token();
  if (game_server_identity_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = game_server_identity_token_;
    game_server_identity_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_allocated_game_server_identity_token(::std::string* game_server_identity_token) {
  if (game_server_identity_token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete game_server_identity_token_;
  }
  if (game_server_identity_token) {
    set_has_game_server_identity_token();
    game_server_identity_token_ = game_server_identity_token;
  } else {
    clear_has_game_server_identity_token();
    game_server_identity_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGC_GameServer_ListResponse.GameServerIdentity.game_server_identity_token)
}

// optional int32 game_server_standing = 3;
inline bool CMsgGC_GameServer_ListResponse_GameServerIdentity::has_game_server_standing() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_has_game_server_standing() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::clear_has_game_server_standing() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::clear_game_server_standing() {
  game_server_standing_ = 0;
  clear_has_game_server_standing();
}
inline ::google::protobuf::int32 CMsgGC_GameServer_ListResponse_GameServerIdentity::game_server_standing() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_ListResponse.GameServerIdentity.game_server_standing)
  return game_server_standing_;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_game_server_standing(::google::protobuf::int32 value) {
  set_has_game_server_standing();
  game_server_standing_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_ListResponse.GameServerIdentity.game_server_standing)
}

// optional int32 game_server_standing_trend = 4;
inline bool CMsgGC_GameServer_ListResponse_GameServerIdentity::has_game_server_standing_trend() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_has_game_server_standing_trend() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::clear_has_game_server_standing_trend() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::clear_game_server_standing_trend() {
  game_server_standing_trend_ = 0;
  clear_has_game_server_standing_trend();
}
inline ::google::protobuf::int32 CMsgGC_GameServer_ListResponse_GameServerIdentity::game_server_standing_trend() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_ListResponse.GameServerIdentity.game_server_standing_trend)
  return game_server_standing_trend_;
}
inline void CMsgGC_GameServer_ListResponse_GameServerIdentity::set_game_server_standing_trend(::google::protobuf::int32 value) {
  set_has_game_server_standing_trend();
  game_server_standing_trend_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_ListResponse.GameServerIdentity.game_server_standing_trend)
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_ListResponse

// repeated .CMsgGC_GameServer_ListResponse.GameServerIdentity owned_game_servers = 1;
inline int CMsgGC_GameServer_ListResponse::owned_game_servers_size() const {
  return owned_game_servers_.size();
}
inline void CMsgGC_GameServer_ListResponse::clear_owned_game_servers() {
  owned_game_servers_.Clear();
}
inline const ::CMsgGC_GameServer_ListResponse_GameServerIdentity& CMsgGC_GameServer_ListResponse::owned_game_servers(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_ListResponse.owned_game_servers)
  return owned_game_servers_.Get(index);
}
inline ::CMsgGC_GameServer_ListResponse_GameServerIdentity* CMsgGC_GameServer_ListResponse::mutable_owned_game_servers(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGC_GameServer_ListResponse.owned_game_servers)
  return owned_game_servers_.Mutable(index);
}
inline ::CMsgGC_GameServer_ListResponse_GameServerIdentity* CMsgGC_GameServer_ListResponse::add_owned_game_servers() {
  // @@protoc_insertion_point(field_add:CMsgGC_GameServer_ListResponse.owned_game_servers)
  return owned_game_servers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGC_GameServer_ListResponse_GameServerIdentity >&
CMsgGC_GameServer_ListResponse::owned_game_servers() const {
  // @@protoc_insertion_point(field_list:CMsgGC_GameServer_ListResponse.owned_game_servers)
  return owned_game_servers_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGC_GameServer_ListResponse_GameServerIdentity >*
CMsgGC_GameServer_ListResponse::mutable_owned_game_servers() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGC_GameServer_ListResponse.owned_game_servers)
  return &owned_game_servers_;
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_ResetIdentity

// optional uint32 game_server_account_id = 1;
inline bool CMsgGC_GameServer_ResetIdentity::has_game_server_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_ResetIdentity::set_has_game_server_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_ResetIdentity::clear_has_game_server_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_ResetIdentity::clear_game_server_account_id() {
  game_server_account_id_ = 0u;
  clear_has_game_server_account_id();
}
inline ::google::protobuf::uint32 CMsgGC_GameServer_ResetIdentity::game_server_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_ResetIdentity.game_server_account_id)
  return game_server_account_id_;
}
inline void CMsgGC_GameServer_ResetIdentity::set_game_server_account_id(::google::protobuf::uint32 value) {
  set_has_game_server_account_id();
  game_server_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_ResetIdentity.game_server_account_id)
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_ResetIdentityResponse

// optional bool game_server_identity_token_reset = 1;
inline bool CMsgGC_GameServer_ResetIdentityResponse::has_game_server_identity_token_reset() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::set_has_game_server_identity_token_reset() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::clear_has_game_server_identity_token_reset() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::clear_game_server_identity_token_reset() {
  game_server_identity_token_reset_ = false;
  clear_has_game_server_identity_token_reset();
}
inline bool CMsgGC_GameServer_ResetIdentityResponse::game_server_identity_token_reset() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_ResetIdentityResponse.game_server_identity_token_reset)
  return game_server_identity_token_reset_;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::set_game_server_identity_token_reset(bool value) {
  set_has_game_server_identity_token_reset();
  game_server_identity_token_reset_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_ResetIdentityResponse.game_server_identity_token_reset)
}

// optional uint32 game_server_account_id = 2;
inline bool CMsgGC_GameServer_ResetIdentityResponse::has_game_server_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::set_has_game_server_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::clear_has_game_server_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::clear_game_server_account_id() {
  game_server_account_id_ = 0u;
  clear_has_game_server_account_id();
}
inline ::google::protobuf::uint32 CMsgGC_GameServer_ResetIdentityResponse::game_server_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_ResetIdentityResponse.game_server_account_id)
  return game_server_account_id_;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::set_game_server_account_id(::google::protobuf::uint32 value) {
  set_has_game_server_account_id();
  game_server_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_ResetIdentityResponse.game_server_account_id)
}

// optional string game_server_identity_token = 3;
inline bool CMsgGC_GameServer_ResetIdentityResponse::has_game_server_identity_token() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::set_has_game_server_identity_token() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::clear_has_game_server_identity_token() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::clear_game_server_identity_token() {
  if (game_server_identity_token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_server_identity_token_->clear();
  }
  clear_has_game_server_identity_token();
}
inline const ::std::string& CMsgGC_GameServer_ResetIdentityResponse::game_server_identity_token() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_ResetIdentityResponse.game_server_identity_token)
  return *game_server_identity_token_;
}
inline void CMsgGC_GameServer_ResetIdentityResponse::set_game_server_identity_token(const ::std::string& value) {
  set_has_game_server_identity_token();
  if (game_server_identity_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_server_identity_token_ = new ::std::string;
  }
  game_server_identity_token_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_ResetIdentityResponse.game_server_identity_token)
}
inline void CMsgGC_GameServer_ResetIdentityResponse::set_game_server_identity_token(const char* value) {
  set_has_game_server_identity_token();
  if (game_server_identity_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_server_identity_token_ = new ::std::string;
  }
  game_server_identity_token_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGC_GameServer_ResetIdentityResponse.game_server_identity_token)
}
inline void CMsgGC_GameServer_ResetIdentityResponse::set_game_server_identity_token(const char* value, size_t size) {
  set_has_game_server_identity_token();
  if (game_server_identity_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_server_identity_token_ = new ::std::string;
  }
  game_server_identity_token_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGC_GameServer_ResetIdentityResponse.game_server_identity_token)
}
inline ::std::string* CMsgGC_GameServer_ResetIdentityResponse::mutable_game_server_identity_token() {
  set_has_game_server_identity_token();
  if (game_server_identity_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_server_identity_token_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGC_GameServer_ResetIdentityResponse.game_server_identity_token)
  return game_server_identity_token_;
}
inline ::std::string* CMsgGC_GameServer_ResetIdentityResponse::release_game_server_identity_token() {
  clear_has_game_server_identity_token();
  if (game_server_identity_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = game_server_identity_token_;
    game_server_identity_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGC_GameServer_ResetIdentityResponse::set_allocated_game_server_identity_token(::std::string* game_server_identity_token) {
  if (game_server_identity_token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete game_server_identity_token_;
  }
  if (game_server_identity_token) {
    set_has_game_server_identity_token();
    game_server_identity_token_ = game_server_identity_token;
  } else {
    clear_has_game_server_identity_token();
    game_server_identity_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGC_GameServer_ResetIdentityResponse.game_server_identity_token)
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_AckPolicy

// -------------------------------------------------------------------

// CMsgGC_GameServer_AckPolicyResponse

// optional uint32 result = 1;
inline bool CMsgGC_GameServer_AckPolicyResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_AckPolicyResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_AckPolicyResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_AckPolicyResponse::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CMsgGC_GameServer_AckPolicyResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_AckPolicyResponse.result)
  return result_;
}
inline void CMsgGC_GameServer_AckPolicyResponse::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_AckPolicyResponse.result)
}

// optional string message = 2;
inline bool CMsgGC_GameServer_AckPolicyResponse::has_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_GameServer_AckPolicyResponse::set_has_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_GameServer_AckPolicyResponse::clear_has_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_GameServer_AckPolicyResponse::clear_message() {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& CMsgGC_GameServer_AckPolicyResponse::message() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_AckPolicyResponse.message)
  return *message_;
}
inline void CMsgGC_GameServer_AckPolicyResponse::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_AckPolicyResponse.message)
}
inline void CMsgGC_GameServer_AckPolicyResponse::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGC_GameServer_AckPolicyResponse.message)
}
inline void CMsgGC_GameServer_AckPolicyResponse::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGC_GameServer_AckPolicyResponse.message)
}
inline ::std::string* CMsgGC_GameServer_AckPolicyResponse::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGC_GameServer_AckPolicyResponse.message)
  return message_;
}
inline ::std::string* CMsgGC_GameServer_AckPolicyResponse::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGC_GameServer_AckPolicyResponse::set_allocated_message(::std::string* message) {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGC_GameServer_AckPolicyResponse.message)
}

// -------------------------------------------------------------------

// CMsgGC_Client_UseServerModificationItem

// optional uint64 item_id = 1;
inline bool CMsgGC_Client_UseServerModificationItem::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_Client_UseServerModificationItem::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_Client_UseServerModificationItem::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_Client_UseServerModificationItem::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::uint64 CMsgGC_Client_UseServerModificationItem::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Client_UseServerModificationItem.item_id)
  return item_id_;
}
inline void CMsgGC_Client_UseServerModificationItem::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Client_UseServerModificationItem.item_id)
}

// -------------------------------------------------------------------

// CMsgGC_Client_UseServerModificationItem_Response

// optional .CMsgGC_Client_UseServerModificationItem_Response.EServerModificationItemResponse response_code = 1 [default = kServerModificationItemResponse_AlreadyInUse];
inline bool CMsgGC_Client_UseServerModificationItem_Response::has_response_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_Client_UseServerModificationItem_Response::set_has_response_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_Client_UseServerModificationItem_Response::clear_has_response_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_Client_UseServerModificationItem_Response::clear_response_code() {
  response_code_ = 1;
  clear_has_response_code();
}
inline ::CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse CMsgGC_Client_UseServerModificationItem_Response::response_code() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Client_UseServerModificationItem_Response.response_code)
  return static_cast< ::CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse >(response_code_);
}
inline void CMsgGC_Client_UseServerModificationItem_Response::set_response_code(::CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse value) {
  assert(::CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_IsValid(value));
  set_has_response_code();
  response_code_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Client_UseServerModificationItem_Response.response_code)
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_UseServerModificationItem

// optional .EServerModificationItemType modification_type = 1 [default = kGameServerModificationItem_Halloween];
inline bool CMsgGC_GameServer_UseServerModificationItem::has_modification_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_UseServerModificationItem::set_has_modification_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_UseServerModificationItem::clear_has_modification_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_UseServerModificationItem::clear_modification_type() {
  modification_type_ = 1;
  clear_has_modification_type();
}
inline ::EServerModificationItemType CMsgGC_GameServer_UseServerModificationItem::modification_type() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_UseServerModificationItem.modification_type)
  return static_cast< ::EServerModificationItemType >(modification_type_);
}
inline void CMsgGC_GameServer_UseServerModificationItem::set_modification_type(::EServerModificationItemType value) {
  assert(::EServerModificationItemType_IsValid(value));
  set_has_modification_type();
  modification_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_UseServerModificationItem.modification_type)
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_UseServerModificationItem_Response

// optional .EServerModificationItemType modification_type = 1 [default = kGameServerModificationItem_Halloween];
inline bool CMsgGC_GameServer_UseServerModificationItem_Response::has_modification_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_UseServerModificationItem_Response::set_has_modification_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_UseServerModificationItem_Response::clear_has_modification_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_UseServerModificationItem_Response::clear_modification_type() {
  modification_type_ = 1;
  clear_has_modification_type();
}
inline ::EServerModificationItemType CMsgGC_GameServer_UseServerModificationItem_Response::modification_type() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_UseServerModificationItem_Response.modification_type)
  return static_cast< ::EServerModificationItemType >(modification_type_);
}
inline void CMsgGC_GameServer_UseServerModificationItem_Response::set_modification_type(::EServerModificationItemType value) {
  assert(::EServerModificationItemType_IsValid(value));
  set_has_modification_type();
  modification_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_UseServerModificationItem_Response.modification_type)
}

// optional .CMsgGC_GameServer_UseServerModificationItem_Response.EServerModificationItemServerResponse server_response_code = 2 [default = kServerModificationItemServerResponse_Accepted];
inline bool CMsgGC_GameServer_UseServerModificationItem_Response::has_server_response_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_GameServer_UseServerModificationItem_Response::set_has_server_response_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_GameServer_UseServerModificationItem_Response::clear_has_server_response_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_GameServer_UseServerModificationItem_Response::clear_server_response_code() {
  server_response_code_ = 1;
  clear_has_server_response_code();
}
inline ::CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse CMsgGC_GameServer_UseServerModificationItem_Response::server_response_code() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_UseServerModificationItem_Response.server_response_code)
  return static_cast< ::CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse >(server_response_code_);
}
inline void CMsgGC_GameServer_UseServerModificationItem_Response::set_server_response_code(::CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse value) {
  assert(::CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_IsValid(value));
  set_has_server_response_code();
  server_response_code_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_UseServerModificationItem_Response.server_response_code)
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_ServerModificationItemExpired

// optional .EServerModificationItemType modification_type = 1 [default = kGameServerModificationItem_Halloween];
inline bool CMsgGC_GameServer_ServerModificationItemExpired::has_modification_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_ServerModificationItemExpired::set_has_modification_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_ServerModificationItemExpired::clear_has_modification_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_ServerModificationItemExpired::clear_modification_type() {
  modification_type_ = 1;
  clear_has_modification_type();
}
inline ::EServerModificationItemType CMsgGC_GameServer_ServerModificationItemExpired::modification_type() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_ServerModificationItemExpired.modification_type)
  return static_cast< ::EServerModificationItemType >(modification_type_);
}
inline void CMsgGC_GameServer_ServerModificationItemExpired::set_modification_type(::EServerModificationItemType value) {
  assert(::EServerModificationItemType_IsValid(value));
  set_has_modification_type();
  modification_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_ServerModificationItemExpired.modification_type)
}

// -------------------------------------------------------------------

// CMsgGC_GameServer_ServerModificationItem

// optional .EServerModificationItemType modification_type = 1 [default = kGameServerModificationItem_Halloween];
inline bool CMsgGC_GameServer_ServerModificationItem::has_modification_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_GameServer_ServerModificationItem::set_has_modification_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_GameServer_ServerModificationItem::clear_has_modification_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_GameServer_ServerModificationItem::clear_modification_type() {
  modification_type_ = 1;
  clear_has_modification_type();
}
inline ::EServerModificationItemType CMsgGC_GameServer_ServerModificationItem::modification_type() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_ServerModificationItem.modification_type)
  return static_cast< ::EServerModificationItemType >(modification_type_);
}
inline void CMsgGC_GameServer_ServerModificationItem::set_modification_type(::EServerModificationItemType value) {
  assert(::EServerModificationItemType_IsValid(value));
  set_has_modification_type();
  modification_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_ServerModificationItem.modification_type)
}

// optional bool active = 2;
inline bool CMsgGC_GameServer_ServerModificationItem::has_active() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_GameServer_ServerModificationItem::set_has_active() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_GameServer_ServerModificationItem::clear_has_active() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_GameServer_ServerModificationItem::clear_active() {
  active_ = false;
  clear_has_active();
}
inline bool CMsgGC_GameServer_ServerModificationItem::active() const {
  // @@protoc_insertion_point(field_get:CMsgGC_GameServer_ServerModificationItem.active)
  return active_;
}
inline void CMsgGC_GameServer_ServerModificationItem::set_active(bool value) {
  set_has_active();
  active_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_GameServer_ServerModificationItem.active)
}

// -------------------------------------------------------------------

// CMsgGC_Halloween_ReservedItem

// repeated float x = 1;
inline int CMsgGC_Halloween_ReservedItem::x_size() const {
  return x_.size();
}
inline void CMsgGC_Halloween_ReservedItem::clear_x() {
  x_.Clear();
}
inline float CMsgGC_Halloween_ReservedItem::x(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGC_Halloween_ReservedItem.x)
  return x_.Get(index);
}
inline void CMsgGC_Halloween_ReservedItem::set_x(int index, float value) {
  x_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGC_Halloween_ReservedItem.x)
}
inline void CMsgGC_Halloween_ReservedItem::add_x(float value) {
  x_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgGC_Halloween_ReservedItem.x)
}
inline const ::google::protobuf::RepeatedField< float >&
CMsgGC_Halloween_ReservedItem::x() const {
  // @@protoc_insertion_point(field_list:CMsgGC_Halloween_ReservedItem.x)
  return x_;
}
inline ::google::protobuf::RepeatedField< float >*
CMsgGC_Halloween_ReservedItem::mutable_x() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGC_Halloween_ReservedItem.x)
  return &x_;
}

// repeated float y = 2;
inline int CMsgGC_Halloween_ReservedItem::y_size() const {
  return y_.size();
}
inline void CMsgGC_Halloween_ReservedItem::clear_y() {
  y_.Clear();
}
inline float CMsgGC_Halloween_ReservedItem::y(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGC_Halloween_ReservedItem.y)
  return y_.Get(index);
}
inline void CMsgGC_Halloween_ReservedItem::set_y(int index, float value) {
  y_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGC_Halloween_ReservedItem.y)
}
inline void CMsgGC_Halloween_ReservedItem::add_y(float value) {
  y_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgGC_Halloween_ReservedItem.y)
}
inline const ::google::protobuf::RepeatedField< float >&
CMsgGC_Halloween_ReservedItem::y() const {
  // @@protoc_insertion_point(field_list:CMsgGC_Halloween_ReservedItem.y)
  return y_;
}
inline ::google::protobuf::RepeatedField< float >*
CMsgGC_Halloween_ReservedItem::mutable_y() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGC_Halloween_ReservedItem.y)
  return &y_;
}

// repeated float z = 3;
inline int CMsgGC_Halloween_ReservedItem::z_size() const {
  return z_.size();
}
inline void CMsgGC_Halloween_ReservedItem::clear_z() {
  z_.Clear();
}
inline float CMsgGC_Halloween_ReservedItem::z(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGC_Halloween_ReservedItem.z)
  return z_.Get(index);
}
inline void CMsgGC_Halloween_ReservedItem::set_z(int index, float value) {
  z_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGC_Halloween_ReservedItem.z)
}
inline void CMsgGC_Halloween_ReservedItem::add_z(float value) {
  z_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgGC_Halloween_ReservedItem.z)
}
inline const ::google::protobuf::RepeatedField< float >&
CMsgGC_Halloween_ReservedItem::z() const {
  // @@protoc_insertion_point(field_list:CMsgGC_Halloween_ReservedItem.z)
  return z_;
}
inline ::google::protobuf::RepeatedField< float >*
CMsgGC_Halloween_ReservedItem::mutable_z() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGC_Halloween_ReservedItem.z)
  return &z_;
}

// optional uint32 spawn_meta_info = 7;
inline bool CMsgGC_Halloween_ReservedItem::has_spawn_meta_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGC_Halloween_ReservedItem::set_has_spawn_meta_info() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGC_Halloween_ReservedItem::clear_has_spawn_meta_info() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGC_Halloween_ReservedItem::clear_spawn_meta_info() {
  spawn_meta_info_ = 0u;
  clear_has_spawn_meta_info();
}
inline ::google::protobuf::uint32 CMsgGC_Halloween_ReservedItem::spawn_meta_info() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Halloween_ReservedItem.spawn_meta_info)
  return spawn_meta_info_;
}
inline void CMsgGC_Halloween_ReservedItem::set_spawn_meta_info(::google::protobuf::uint32 value) {
  set_has_spawn_meta_info();
  spawn_meta_info_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Halloween_ReservedItem.spawn_meta_info)
}

// -------------------------------------------------------------------

// CMsgGC_Halloween_GrantItem

// optional uint32 recipient_account_id = 1;
inline bool CMsgGC_Halloween_GrantItem::has_recipient_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_Halloween_GrantItem::set_has_recipient_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_Halloween_GrantItem::clear_has_recipient_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_Halloween_GrantItem::clear_recipient_account_id() {
  recipient_account_id_ = 0u;
  clear_has_recipient_account_id();
}
inline ::google::protobuf::uint32 CMsgGC_Halloween_GrantItem::recipient_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Halloween_GrantItem.recipient_account_id)
  return recipient_account_id_;
}
inline void CMsgGC_Halloween_GrantItem::set_recipient_account_id(::google::protobuf::uint32 value) {
  set_has_recipient_account_id();
  recipient_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Halloween_GrantItem.recipient_account_id)
}

// optional uint32 level_id = 2;
inline bool CMsgGC_Halloween_GrantItem::has_level_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_Halloween_GrantItem::set_has_level_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_Halloween_GrantItem::clear_has_level_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_Halloween_GrantItem::clear_level_id() {
  level_id_ = 0u;
  clear_has_level_id();
}
inline ::google::protobuf::uint32 CMsgGC_Halloween_GrantItem::level_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Halloween_GrantItem.level_id)
  return level_id_;
}
inline void CMsgGC_Halloween_GrantItem::set_level_id(::google::protobuf::uint32 value) {
  set_has_level_id();
  level_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Halloween_GrantItem.level_id)
}

// optional bool flagged = 3;
inline bool CMsgGC_Halloween_GrantItem::has_flagged() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGC_Halloween_GrantItem::set_has_flagged() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGC_Halloween_GrantItem::clear_has_flagged() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGC_Halloween_GrantItem::clear_flagged() {
  flagged_ = false;
  clear_has_flagged();
}
inline bool CMsgGC_Halloween_GrantItem::flagged() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Halloween_GrantItem.flagged)
  return flagged_;
}
inline void CMsgGC_Halloween_GrantItem::set_flagged(bool value) {
  set_has_flagged();
  flagged_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Halloween_GrantItem.flagged)
}

// -------------------------------------------------------------------

// CMsgGC_Halloween_GrantItemResponse

// optional uint32 recipient_account_id = 1;
inline bool CMsgGC_Halloween_GrantItemResponse::has_recipient_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_Halloween_GrantItemResponse::set_has_recipient_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_Halloween_GrantItemResponse::clear_has_recipient_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_Halloween_GrantItemResponse::clear_recipient_account_id() {
  recipient_account_id_ = 0u;
  clear_has_recipient_account_id();
}
inline ::google::protobuf::uint32 CMsgGC_Halloween_GrantItemResponse::recipient_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_Halloween_GrantItemResponse.recipient_account_id)
  return recipient_account_id_;
}
inline void CMsgGC_Halloween_GrantItemResponse::set_recipient_account_id(::google::protobuf::uint32 value) {
  set_has_recipient_account_id();
  recipient_account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_Halloween_GrantItemResponse.recipient_account_id)
}

// -------------------------------------------------------------------

// CMsgGC_Halloween_ItemClaimed

// -------------------------------------------------------------------

// CMsgGC_PickupItemEligibility_Query

// optional uint32 account_id = 1;
inline bool CMsgGC_PickupItemEligibility_Query::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_PickupItemEligibility_Query::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_PickupItemEligibility_Query::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_PickupItemEligibility_Query::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgGC_PickupItemEligibility_Query::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_PickupItemEligibility_Query.account_id)
  return account_id_;
}
inline void CMsgGC_PickupItemEligibility_Query::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_PickupItemEligibility_Query.account_id)
}

// optional uint32 seconds_ago = 2;
inline bool CMsgGC_PickupItemEligibility_Query::has_seconds_ago() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_PickupItemEligibility_Query::set_has_seconds_ago() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_PickupItemEligibility_Query::clear_has_seconds_ago() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_PickupItemEligibility_Query::clear_seconds_ago() {
  seconds_ago_ = 0u;
  clear_has_seconds_ago();
}
inline ::google::protobuf::uint32 CMsgGC_PickupItemEligibility_Query::seconds_ago() const {
  // @@protoc_insertion_point(field_get:CMsgGC_PickupItemEligibility_Query.seconds_ago)
  return seconds_ago_;
}
inline void CMsgGC_PickupItemEligibility_Query::set_seconds_ago(::google::protobuf::uint32 value) {
  set_has_seconds_ago();
  seconds_ago_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_PickupItemEligibility_Query.seconds_ago)
}

// -------------------------------------------------------------------

// CMsgGC_PickupItemEligibility_QueryResponse

// optional uint32 account_id = 1;
inline bool CMsgGC_PickupItemEligibility_QueryResponse::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGC_PickupItemEligibility_QueryResponse::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGC_PickupItemEligibility_QueryResponse::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGC_PickupItemEligibility_QueryResponse::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgGC_PickupItemEligibility_QueryResponse::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_PickupItemEligibility_QueryResponse.account_id)
  return account_id_;
}
inline void CMsgGC_PickupItemEligibility_QueryResponse::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_PickupItemEligibility_QueryResponse.account_id)
}

// optional bool was_eligible = 2;
inline bool CMsgGC_PickupItemEligibility_QueryResponse::has_was_eligible() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGC_PickupItemEligibility_QueryResponse::set_has_was_eligible() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGC_PickupItemEligibility_QueryResponse::clear_has_was_eligible() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGC_PickupItemEligibility_QueryResponse::clear_was_eligible() {
  was_eligible_ = false;
  clear_has_was_eligible();
}
inline bool CMsgGC_PickupItemEligibility_QueryResponse::was_eligible() const {
  // @@protoc_insertion_point(field_get:CMsgGC_PickupItemEligibility_QueryResponse.was_eligible)
  return was_eligible_;
}
inline void CMsgGC_PickupItemEligibility_QueryResponse::set_was_eligible(bool value) {
  set_has_was_eligible();
  was_eligible_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_PickupItemEligibility_QueryResponse.was_eligible)
}

// optional uint32 level_id = 3;
inline bool CMsgGC_PickupItemEligibility_QueryResponse::has_level_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGC_PickupItemEligibility_QueryResponse::set_has_level_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGC_PickupItemEligibility_QueryResponse::clear_has_level_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGC_PickupItemEligibility_QueryResponse::clear_level_id() {
  level_id_ = 0u;
  clear_has_level_id();
}
inline ::google::protobuf::uint32 CMsgGC_PickupItemEligibility_QueryResponse::level_id() const {
  // @@protoc_insertion_point(field_get:CMsgGC_PickupItemEligibility_QueryResponse.level_id)
  return level_id_;
}
inline void CMsgGC_PickupItemEligibility_QueryResponse::set_level_id(::google::protobuf::uint32 value) {
  set_has_level_id();
  level_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGC_PickupItemEligibility_QueryResponse.level_id)
}

// -------------------------------------------------------------------

// CSOTFPartyMember

// optional bool owns_ticket = 2;
inline bool CSOTFPartyMember::has_owns_ticket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOTFPartyMember::set_has_owns_ticket() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOTFPartyMember::clear_has_owns_ticket() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOTFPartyMember::clear_owns_ticket() {
  owns_ticket_ = false;
  clear_has_owns_ticket();
}
inline bool CSOTFPartyMember::owns_ticket() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyMember.owns_ticket)
  return owns_ticket_;
}
inline void CSOTFPartyMember::set_owns_ticket(bool value) {
  set_has_owns_ticket();
  owns_ticket_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPartyMember.owns_ticket)
}

// optional uint32 completed_missions = 3;
inline bool CSOTFPartyMember::has_completed_missions() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOTFPartyMember::set_has_completed_missions() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOTFPartyMember::clear_has_completed_missions() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOTFPartyMember::clear_completed_missions() {
  completed_missions_ = 0u;
  clear_has_completed_missions();
}
inline ::google::protobuf::uint32 CSOTFPartyMember::completed_missions() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyMember.completed_missions)
  return completed_missions_;
}
inline void CSOTFPartyMember::set_completed_missions(::google::protobuf::uint32 value) {
  set_has_completed_missions();
  completed_missions_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPartyMember.completed_missions)
}

// optional uint32 badge_level = 4;
inline bool CSOTFPartyMember::has_badge_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSOTFPartyMember::set_has_badge_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSOTFPartyMember::clear_has_badge_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSOTFPartyMember::clear_badge_level() {
  badge_level_ = 0u;
  clear_has_badge_level();
}
inline ::google::protobuf::uint32 CSOTFPartyMember::badge_level() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyMember.badge_level)
  return badge_level_;
}
inline void CSOTFPartyMember::set_badge_level(::google::protobuf::uint32 value) {
  set_has_badge_level();
  badge_level_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPartyMember.badge_level)
}

// optional bool squad_surplus = 5;
inline bool CSOTFPartyMember::has_squad_surplus() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSOTFPartyMember::set_has_squad_surplus() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSOTFPartyMember::clear_has_squad_surplus() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSOTFPartyMember::clear_squad_surplus() {
  squad_surplus_ = false;
  clear_has_squad_surplus();
}
inline bool CSOTFPartyMember::squad_surplus() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyMember.squad_surplus)
  return squad_surplus_;
}
inline void CSOTFPartyMember::set_squad_surplus(bool value) {
  set_has_squad_surplus();
  squad_surplus_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPartyMember.squad_surplus)
}

// optional bool is_banned = 8 [default = false];
inline bool CSOTFPartyMember::has_is_banned() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSOTFPartyMember::set_has_is_banned() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSOTFPartyMember::clear_has_is_banned() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSOTFPartyMember::clear_is_banned() {
  is_banned_ = false;
  clear_has_is_banned();
}
inline bool CSOTFPartyMember::is_banned() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyMember.is_banned)
  return is_banned_;
}
inline void CSOTFPartyMember::set_is_banned(bool value) {
  set_has_is_banned();
  is_banned_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPartyMember.is_banned)
}

// optional bool owns_ladder_ticket = 9;
inline bool CSOTFPartyMember::has_owns_ladder_ticket() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSOTFPartyMember::set_has_owns_ladder_ticket() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSOTFPartyMember::clear_has_owns_ladder_ticket() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSOTFPartyMember::clear_owns_ladder_ticket() {
  owns_ladder_ticket_ = false;
  clear_has_owns_ladder_ticket();
}
inline bool CSOTFPartyMember::owns_ladder_ticket() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyMember.owns_ladder_ticket)
  return owns_ladder_ticket_;
}
inline void CSOTFPartyMember::set_owns_ladder_ticket(bool value) {
  set_has_owns_ladder_ticket();
  owns_ladder_ticket_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPartyMember.owns_ladder_ticket)
}

// -------------------------------------------------------------------

// CMsgMatchSearchCriteria

// optional .TF_MatchmakingMode matchmaking_mode = 7 [default = TF_Matchmaking_INVALID];
inline bool CMsgMatchSearchCriteria::has_matchmaking_mode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgMatchSearchCriteria::set_has_matchmaking_mode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgMatchSearchCriteria::clear_has_matchmaking_mode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgMatchSearchCriteria::clear_matchmaking_mode() {
  matchmaking_mode_ = 0;
  clear_has_matchmaking_mode();
}
inline ::TF_MatchmakingMode CMsgMatchSearchCriteria::matchmaking_mode() const {
  // @@protoc_insertion_point(field_get:CMsgMatchSearchCriteria.matchmaking_mode)
  return static_cast< ::TF_MatchmakingMode >(matchmaking_mode_);
}
inline void CMsgMatchSearchCriteria::set_matchmaking_mode(::TF_MatchmakingMode value) {
  assert(::TF_MatchmakingMode_IsValid(value));
  set_has_matchmaking_mode();
  matchmaking_mode_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchSearchCriteria.matchmaking_mode)
}

// optional bool late_join_ok = 5;
inline bool CMsgMatchSearchCriteria::has_late_join_ok() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgMatchSearchCriteria::set_has_late_join_ok() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgMatchSearchCriteria::clear_has_late_join_ok() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgMatchSearchCriteria::clear_late_join_ok() {
  late_join_ok_ = false;
  clear_has_late_join_ok();
}
inline bool CMsgMatchSearchCriteria::late_join_ok() const {
  // @@protoc_insertion_point(field_get:CMsgMatchSearchCriteria.late_join_ok)
  return late_join_ok_;
}
inline void CMsgMatchSearchCriteria::set_late_join_ok(bool value) {
  set_has_late_join_ok();
  late_join_ok_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchSearchCriteria.late_join_ok)
}

// optional string mvm_mannup_tour = 10;
inline bool CMsgMatchSearchCriteria::has_mvm_mannup_tour() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgMatchSearchCriteria::set_has_mvm_mannup_tour() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgMatchSearchCriteria::clear_has_mvm_mannup_tour() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgMatchSearchCriteria::clear_mvm_mannup_tour() {
  if (mvm_mannup_tour_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mvm_mannup_tour_->clear();
  }
  clear_has_mvm_mannup_tour();
}
inline const ::std::string& CMsgMatchSearchCriteria::mvm_mannup_tour() const {
  // @@protoc_insertion_point(field_get:CMsgMatchSearchCriteria.mvm_mannup_tour)
  return *mvm_mannup_tour_;
}
inline void CMsgMatchSearchCriteria::set_mvm_mannup_tour(const ::std::string& value) {
  set_has_mvm_mannup_tour();
  if (mvm_mannup_tour_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mvm_mannup_tour_ = new ::std::string;
  }
  mvm_mannup_tour_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgMatchSearchCriteria.mvm_mannup_tour)
}
inline void CMsgMatchSearchCriteria::set_mvm_mannup_tour(const char* value) {
  set_has_mvm_mannup_tour();
  if (mvm_mannup_tour_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mvm_mannup_tour_ = new ::std::string;
  }
  mvm_mannup_tour_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgMatchSearchCriteria.mvm_mannup_tour)
}
inline void CMsgMatchSearchCriteria::set_mvm_mannup_tour(const char* value, size_t size) {
  set_has_mvm_mannup_tour();
  if (mvm_mannup_tour_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mvm_mannup_tour_ = new ::std::string;
  }
  mvm_mannup_tour_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgMatchSearchCriteria.mvm_mannup_tour)
}
inline ::std::string* CMsgMatchSearchCriteria::mutable_mvm_mannup_tour() {
  set_has_mvm_mannup_tour();
  if (mvm_mannup_tour_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mvm_mannup_tour_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgMatchSearchCriteria.mvm_mannup_tour)
  return mvm_mannup_tour_;
}
inline ::std::string* CMsgMatchSearchCriteria::release_mvm_mannup_tour() {
  clear_has_mvm_mannup_tour();
  if (mvm_mannup_tour_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mvm_mannup_tour_;
    mvm_mannup_tour_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgMatchSearchCriteria::set_allocated_mvm_mannup_tour(::std::string* mvm_mannup_tour) {
  if (mvm_mannup_tour_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mvm_mannup_tour_;
  }
  if (mvm_mannup_tour) {
    set_has_mvm_mannup_tour();
    mvm_mannup_tour_ = mvm_mannup_tour;
  } else {
    clear_has_mvm_mannup_tour();
    mvm_mannup_tour_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgMatchSearchCriteria.mvm_mannup_tour)
}

// repeated string mvm_missions = 9;
inline int CMsgMatchSearchCriteria::mvm_missions_size() const {
  return mvm_missions_.size();
}
inline void CMsgMatchSearchCriteria::clear_mvm_missions() {
  mvm_missions_.Clear();
}
inline const ::std::string& CMsgMatchSearchCriteria::mvm_missions(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMatchSearchCriteria.mvm_missions)
  return mvm_missions_.Get(index);
}
inline ::std::string* CMsgMatchSearchCriteria::mutable_mvm_missions(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgMatchSearchCriteria.mvm_missions)
  return mvm_missions_.Mutable(index);
}
inline void CMsgMatchSearchCriteria::set_mvm_missions(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CMsgMatchSearchCriteria.mvm_missions)
  mvm_missions_.Mutable(index)->assign(value);
}
inline void CMsgMatchSearchCriteria::set_mvm_missions(int index, const char* value) {
  mvm_missions_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgMatchSearchCriteria.mvm_missions)
}
inline void CMsgMatchSearchCriteria::set_mvm_missions(int index, const char* value, size_t size) {
  mvm_missions_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgMatchSearchCriteria.mvm_missions)
}
inline ::std::string* CMsgMatchSearchCriteria::add_mvm_missions() {
  return mvm_missions_.Add();
}
inline void CMsgMatchSearchCriteria::add_mvm_missions(const ::std::string& value) {
  mvm_missions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CMsgMatchSearchCriteria.mvm_missions)
}
inline void CMsgMatchSearchCriteria::add_mvm_missions(const char* value) {
  mvm_missions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CMsgMatchSearchCriteria.mvm_missions)
}
inline void CMsgMatchSearchCriteria::add_mvm_missions(const char* value, size_t size) {
  mvm_missions_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CMsgMatchSearchCriteria.mvm_missions)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMsgMatchSearchCriteria::mvm_missions() const {
  // @@protoc_insertion_point(field_list:CMsgMatchSearchCriteria.mvm_missions)
  return mvm_missions_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CMsgMatchSearchCriteria::mutable_mvm_missions() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMatchSearchCriteria.mvm_missions)
  return &mvm_missions_;
}

// optional bool play_for_bragging_rights = 6;
inline bool CMsgMatchSearchCriteria::has_play_for_bragging_rights() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgMatchSearchCriteria::set_has_play_for_bragging_rights() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgMatchSearchCriteria::clear_has_play_for_bragging_rights() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgMatchSearchCriteria::clear_play_for_bragging_rights() {
  play_for_bragging_rights_ = false;
  clear_has_play_for_bragging_rights();
}
inline bool CMsgMatchSearchCriteria::play_for_bragging_rights() const {
  // @@protoc_insertion_point(field_get:CMsgMatchSearchCriteria.play_for_bragging_rights)
  return play_for_bragging_rights_;
}
inline void CMsgMatchSearchCriteria::set_play_for_bragging_rights(bool value) {
  set_has_play_for_bragging_rights();
  play_for_bragging_rights_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchSearchCriteria.play_for_bragging_rights)
}

// optional uint32 quickplay_game_type = 8;
inline bool CMsgMatchSearchCriteria::has_quickplay_game_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgMatchSearchCriteria::set_has_quickplay_game_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgMatchSearchCriteria::clear_has_quickplay_game_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgMatchSearchCriteria::clear_quickplay_game_type() {
  quickplay_game_type_ = 0u;
  clear_has_quickplay_game_type();
}
inline ::google::protobuf::uint32 CMsgMatchSearchCriteria::quickplay_game_type() const {
  // @@protoc_insertion_point(field_get:CMsgMatchSearchCriteria.quickplay_game_type)
  return quickplay_game_type_;
}
inline void CMsgMatchSearchCriteria::set_quickplay_game_type(::google::protobuf::uint32 value) {
  set_has_quickplay_game_type();
  quickplay_game_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchSearchCriteria.quickplay_game_type)
}

// optional uint32 ladder_type = 11;
inline bool CMsgMatchSearchCriteria::has_ladder_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgMatchSearchCriteria::set_has_ladder_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgMatchSearchCriteria::clear_has_ladder_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgMatchSearchCriteria::clear_ladder_type() {
  ladder_type_ = 0u;
  clear_has_ladder_type();
}
inline ::google::protobuf::uint32 CMsgMatchSearchCriteria::ladder_type() const {
  // @@protoc_insertion_point(field_get:CMsgMatchSearchCriteria.ladder_type)
  return ladder_type_;
}
inline void CMsgMatchSearchCriteria::set_ladder_type(::google::protobuf::uint32 value) {
  set_has_ladder_type();
  ladder_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchSearchCriteria.ladder_type)
}

// -------------------------------------------------------------------

// CMsgCreateOrUpdateParty

// optional .CMsgMatchSearchCriteria search_criteria = 1;
inline bool CMsgCreateOrUpdateParty::has_search_criteria() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgCreateOrUpdateParty::set_has_search_criteria() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgCreateOrUpdateParty::clear_has_search_criteria() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgCreateOrUpdateParty::clear_search_criteria() {
  if (search_criteria_ != NULL) search_criteria_->::CMsgMatchSearchCriteria::Clear();
  clear_has_search_criteria();
}
inline const ::CMsgMatchSearchCriteria& CMsgCreateOrUpdateParty::search_criteria() const {
  // @@protoc_insertion_point(field_get:CMsgCreateOrUpdateParty.search_criteria)
  return search_criteria_ != NULL ? *search_criteria_ : *default_instance_->search_criteria_;
}
inline ::CMsgMatchSearchCriteria* CMsgCreateOrUpdateParty::mutable_search_criteria() {
  set_has_search_criteria();
  if (search_criteria_ == NULL) search_criteria_ = new ::CMsgMatchSearchCriteria;
  // @@protoc_insertion_point(field_mutable:CMsgCreateOrUpdateParty.search_criteria)
  return search_criteria_;
}
inline ::CMsgMatchSearchCriteria* CMsgCreateOrUpdateParty::release_search_criteria() {
  clear_has_search_criteria();
  ::CMsgMatchSearchCriteria* temp = search_criteria_;
  search_criteria_ = NULL;
  return temp;
}
inline void CMsgCreateOrUpdateParty::set_allocated_search_criteria(::CMsgMatchSearchCriteria* search_criteria) {
  delete search_criteria_;
  search_criteria_ = search_criteria;
  if (search_criteria) {
    set_has_search_criteria();
  } else {
    clear_has_search_criteria();
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgCreateOrUpdateParty.search_criteria)
}

// optional fixed64 steam_lobby_id = 3;
inline bool CMsgCreateOrUpdateParty::has_steam_lobby_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgCreateOrUpdateParty::set_has_steam_lobby_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgCreateOrUpdateParty::clear_has_steam_lobby_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgCreateOrUpdateParty::clear_steam_lobby_id() {
  steam_lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_lobby_id();
}
inline ::google::protobuf::uint64 CMsgCreateOrUpdateParty::steam_lobby_id() const {
  // @@protoc_insertion_point(field_get:CMsgCreateOrUpdateParty.steam_lobby_id)
  return steam_lobby_id_;
}
inline void CMsgCreateOrUpdateParty::set_steam_lobby_id(::google::protobuf::uint64 value) {
  set_has_steam_lobby_id();
  steam_lobby_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgCreateOrUpdateParty.steam_lobby_id)
}

// optional bool squad_surplus = 4;
inline bool CMsgCreateOrUpdateParty::has_squad_surplus() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgCreateOrUpdateParty::set_has_squad_surplus() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgCreateOrUpdateParty::clear_has_squad_surplus() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgCreateOrUpdateParty::clear_squad_surplus() {
  squad_surplus_ = false;
  clear_has_squad_surplus();
}
inline bool CMsgCreateOrUpdateParty::squad_surplus() const {
  // @@protoc_insertion_point(field_get:CMsgCreateOrUpdateParty.squad_surplus)
  return squad_surplus_;
}
inline void CMsgCreateOrUpdateParty::set_squad_surplus(bool value) {
  set_has_squad_surplus();
  squad_surplus_ = value;
  // @@protoc_insertion_point(field_set:CMsgCreateOrUpdateParty.squad_surplus)
}

// optional .TF_Matchmaking_WizardStep wizard_step = 5 [default = TF_Matchmaking_WizardStep_INVALID];
inline bool CMsgCreateOrUpdateParty::has_wizard_step() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgCreateOrUpdateParty::set_has_wizard_step() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgCreateOrUpdateParty::clear_has_wizard_step() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgCreateOrUpdateParty::clear_wizard_step() {
  wizard_step_ = 0;
  clear_has_wizard_step();
}
inline ::TF_Matchmaking_WizardStep CMsgCreateOrUpdateParty::wizard_step() const {
  // @@protoc_insertion_point(field_get:CMsgCreateOrUpdateParty.wizard_step)
  return static_cast< ::TF_Matchmaking_WizardStep >(wizard_step_);
}
inline void CMsgCreateOrUpdateParty::set_wizard_step(::TF_Matchmaking_WizardStep value) {
  assert(::TF_Matchmaking_WizardStep_IsValid(value));
  set_has_wizard_step();
  wizard_step_ = value;
  // @@protoc_insertion_point(field_set:CMsgCreateOrUpdateParty.wizard_step)
}

// optional uint32 client_version = 6 [default = 1225];
inline bool CMsgCreateOrUpdateParty::has_client_version() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgCreateOrUpdateParty::set_has_client_version() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgCreateOrUpdateParty::clear_has_client_version() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgCreateOrUpdateParty::clear_client_version() {
  client_version_ = 1225u;
  clear_has_client_version();
}
inline ::google::protobuf::uint32 CMsgCreateOrUpdateParty::client_version() const {
  // @@protoc_insertion_point(field_get:CMsgCreateOrUpdateParty.client_version)
  return client_version_;
}
inline void CMsgCreateOrUpdateParty::set_client_version(::google::protobuf::uint32 value) {
  set_has_client_version();
  client_version_ = value;
  // @@protoc_insertion_point(field_set:CMsgCreateOrUpdateParty.client_version)
}

// -------------------------------------------------------------------

// CMsgCreateOrUpdatePartyReply

// optional uint32 result = 1;
inline bool CMsgCreateOrUpdatePartyReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgCreateOrUpdatePartyReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgCreateOrUpdatePartyReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgCreateOrUpdatePartyReply::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CMsgCreateOrUpdatePartyReply::result() const {
  // @@protoc_insertion_point(field_get:CMsgCreateOrUpdatePartyReply.result)
  return result_;
}
inline void CMsgCreateOrUpdatePartyReply::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgCreateOrUpdatePartyReply.result)
}

// optional string message = 2;
inline bool CMsgCreateOrUpdatePartyReply::has_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgCreateOrUpdatePartyReply::set_has_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgCreateOrUpdatePartyReply::clear_has_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgCreateOrUpdatePartyReply::clear_message() {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& CMsgCreateOrUpdatePartyReply::message() const {
  // @@protoc_insertion_point(field_get:CMsgCreateOrUpdatePartyReply.message)
  return *message_;
}
inline void CMsgCreateOrUpdatePartyReply::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgCreateOrUpdatePartyReply.message)
}
inline void CMsgCreateOrUpdatePartyReply::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgCreateOrUpdatePartyReply.message)
}
inline void CMsgCreateOrUpdatePartyReply::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgCreateOrUpdatePartyReply.message)
}
inline ::std::string* CMsgCreateOrUpdatePartyReply::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgCreateOrUpdatePartyReply.message)
  return message_;
}
inline ::std::string* CMsgCreateOrUpdatePartyReply::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgCreateOrUpdatePartyReply::set_allocated_message(::std::string* message) {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgCreateOrUpdatePartyReply.message)
}

// optional .TF_Matchmaking_WizardStep wizard_step = 3 [default = TF_Matchmaking_WizardStep_INVALID];
inline bool CMsgCreateOrUpdatePartyReply::has_wizard_step() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgCreateOrUpdatePartyReply::set_has_wizard_step() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgCreateOrUpdatePartyReply::clear_has_wizard_step() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgCreateOrUpdatePartyReply::clear_wizard_step() {
  wizard_step_ = 0;
  clear_has_wizard_step();
}
inline ::TF_Matchmaking_WizardStep CMsgCreateOrUpdatePartyReply::wizard_step() const {
  // @@protoc_insertion_point(field_get:CMsgCreateOrUpdatePartyReply.wizard_step)
  return static_cast< ::TF_Matchmaking_WizardStep >(wizard_step_);
}
inline void CMsgCreateOrUpdatePartyReply::set_wizard_step(::TF_Matchmaking_WizardStep value) {
  assert(::TF_Matchmaking_WizardStep_IsValid(value));
  set_has_wizard_step();
  wizard_step_ = value;
  // @@protoc_insertion_point(field_set:CMsgCreateOrUpdatePartyReply.wizard_step)
}

// -------------------------------------------------------------------

// CSOTFParty

// optional uint64 party_id = 1;
inline bool CSOTFParty::has_party_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOTFParty::set_has_party_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOTFParty::clear_has_party_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOTFParty::clear_party_id() {
  party_id_ = GOOGLE_ULONGLONG(0);
  clear_has_party_id();
}
inline ::google::protobuf::uint64 CSOTFParty::party_id() const {
  // @@protoc_insertion_point(field_get:CSOTFParty.party_id)
  return party_id_;
}
inline void CSOTFParty::set_party_id(::google::protobuf::uint64 value) {
  set_has_party_id();
  party_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFParty.party_id)
}

// optional fixed64 leader_id = 2;
inline bool CSOTFParty::has_leader_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOTFParty::set_has_leader_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOTFParty::clear_has_leader_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOTFParty::clear_leader_id() {
  leader_id_ = GOOGLE_ULONGLONG(0);
  clear_has_leader_id();
}
inline ::google::protobuf::uint64 CSOTFParty::leader_id() const {
  // @@protoc_insertion_point(field_get:CSOTFParty.leader_id)
  return leader_id_;
}
inline void CSOTFParty::set_leader_id(::google::protobuf::uint64 value) {
  set_has_leader_id();
  leader_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFParty.leader_id)
}

// repeated fixed64 member_ids = 3;
inline int CSOTFParty::member_ids_size() const {
  return member_ids_.size();
}
inline void CSOTFParty::clear_member_ids() {
  member_ids_.Clear();
}
inline ::google::protobuf::uint64 CSOTFParty::member_ids(int index) const {
  // @@protoc_insertion_point(field_get:CSOTFParty.member_ids)
  return member_ids_.Get(index);
}
inline void CSOTFParty::set_member_ids(int index, ::google::protobuf::uint64 value) {
  member_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CSOTFParty.member_ids)
}
inline void CSOTFParty::add_member_ids(::google::protobuf::uint64 value) {
  member_ids_.Add(value);
  // @@protoc_insertion_point(field_add:CSOTFParty.member_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CSOTFParty::member_ids() const {
  // @@protoc_insertion_point(field_list:CSOTFParty.member_ids)
  return member_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CSOTFParty::mutable_member_ids() {
  // @@protoc_insertion_point(field_mutable_list:CSOTFParty.member_ids)
  return &member_ids_;
}

// repeated .CSOTFPartyMember members = 13;
inline int CSOTFParty::members_size() const {
  return members_.size();
}
inline void CSOTFParty::clear_members() {
  members_.Clear();
}
inline const ::CSOTFPartyMember& CSOTFParty::members(int index) const {
  // @@protoc_insertion_point(field_get:CSOTFParty.members)
  return members_.Get(index);
}
inline ::CSOTFPartyMember* CSOTFParty::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:CSOTFParty.members)
  return members_.Mutable(index);
}
inline ::CSOTFPartyMember* CSOTFParty::add_members() {
  // @@protoc_insertion_point(field_add:CSOTFParty.members)
  return members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSOTFPartyMember >&
CSOTFParty::members() const {
  // @@protoc_insertion_point(field_list:CSOTFParty.members)
  return members_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSOTFPartyMember >*
CSOTFParty::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:CSOTFParty.members)
  return &members_;
}

// repeated fixed64 pending_invites = 5;
inline int CSOTFParty::pending_invites_size() const {
  return pending_invites_.size();
}
inline void CSOTFParty::clear_pending_invites() {
  pending_invites_.Clear();
}
inline ::google::protobuf::uint64 CSOTFParty::pending_invites(int index) const {
  // @@protoc_insertion_point(field_get:CSOTFParty.pending_invites)
  return pending_invites_.Get(index);
}
inline void CSOTFParty::set_pending_invites(int index, ::google::protobuf::uint64 value) {
  pending_invites_.Set(index, value);
  // @@protoc_insertion_point(field_set:CSOTFParty.pending_invites)
}
inline void CSOTFParty::add_pending_invites(::google::protobuf::uint64 value) {
  pending_invites_.Add(value);
  // @@protoc_insertion_point(field_add:CSOTFParty.pending_invites)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CSOTFParty::pending_invites() const {
  // @@protoc_insertion_point(field_list:CSOTFParty.pending_invites)
  return pending_invites_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CSOTFParty::mutable_pending_invites() {
  // @@protoc_insertion_point(field_mutable_list:CSOTFParty.pending_invites)
  return &pending_invites_;
}

// optional .CSOTFParty.State state = 6 [default = UI];
inline bool CSOTFParty::has_state() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSOTFParty::set_has_state() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSOTFParty::clear_has_state() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSOTFParty::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::CSOTFParty_State CSOTFParty::state() const {
  // @@protoc_insertion_point(field_get:CSOTFParty.state)
  return static_cast< ::CSOTFParty_State >(state_);
}
inline void CSOTFParty::set_state(::CSOTFParty_State value) {
  assert(::CSOTFParty_State_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:CSOTFParty.state)
}

// optional .TF_Matchmaking_WizardStep wizard_step = 29 [default = TF_Matchmaking_WizardStep_INVALID];
inline bool CSOTFParty::has_wizard_step() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSOTFParty::set_has_wizard_step() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSOTFParty::clear_has_wizard_step() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSOTFParty::clear_wizard_step() {
  wizard_step_ = 0;
  clear_has_wizard_step();
}
inline ::TF_Matchmaking_WizardStep CSOTFParty::wizard_step() const {
  // @@protoc_insertion_point(field_get:CSOTFParty.wizard_step)
  return static_cast< ::TF_Matchmaking_WizardStep >(wizard_step_);
}
inline void CSOTFParty::set_wizard_step(::TF_Matchmaking_WizardStep value) {
  assert(::TF_Matchmaking_WizardStep_IsValid(value));
  set_has_wizard_step();
  wizard_step_ = value;
  // @@protoc_insertion_point(field_set:CSOTFParty.wizard_step)
}

// optional uint32 started_matchmaking_time = 7;
inline bool CSOTFParty::has_started_matchmaking_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSOTFParty::set_has_started_matchmaking_time() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSOTFParty::clear_has_started_matchmaking_time() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSOTFParty::clear_started_matchmaking_time() {
  started_matchmaking_time_ = 0u;
  clear_has_started_matchmaking_time();
}
inline ::google::protobuf::uint32 CSOTFParty::started_matchmaking_time() const {
  // @@protoc_insertion_point(field_get:CSOTFParty.started_matchmaking_time)
  return started_matchmaking_time_;
}
inline void CSOTFParty::set_started_matchmaking_time(::google::protobuf::uint32 value) {
  set_has_started_matchmaking_time();
  started_matchmaking_time_ = value;
  // @@protoc_insertion_point(field_set:CSOTFParty.started_matchmaking_time)
}

// repeated uint32 searching_players_by_group = 10;
inline int CSOTFParty::searching_players_by_group_size() const {
  return searching_players_by_group_.size();
}
inline void CSOTFParty::clear_searching_players_by_group() {
  searching_players_by_group_.Clear();
}
inline ::google::protobuf::uint32 CSOTFParty::searching_players_by_group(int index) const {
  // @@protoc_insertion_point(field_get:CSOTFParty.searching_players_by_group)
  return searching_players_by_group_.Get(index);
}
inline void CSOTFParty::set_searching_players_by_group(int index, ::google::protobuf::uint32 value) {
  searching_players_by_group_.Set(index, value);
  // @@protoc_insertion_point(field_set:CSOTFParty.searching_players_by_group)
}
inline void CSOTFParty::add_searching_players_by_group(::google::protobuf::uint32 value) {
  searching_players_by_group_.Add(value);
  // @@protoc_insertion_point(field_add:CSOTFParty.searching_players_by_group)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSOTFParty::searching_players_by_group() const {
  // @@protoc_insertion_point(field_list:CSOTFParty.searching_players_by_group)
  return searching_players_by_group_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSOTFParty::mutable_searching_players_by_group() {
  // @@protoc_insertion_point(field_mutable_list:CSOTFParty.searching_players_by_group)
  return &searching_players_by_group_;
}

// optional fixed64 steam_lobby_id = 27;
inline bool CSOTFParty::has_steam_lobby_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSOTFParty::set_has_steam_lobby_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CSOTFParty::clear_has_steam_lobby_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CSOTFParty::clear_steam_lobby_id() {
  steam_lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_lobby_id();
}
inline ::google::protobuf::uint64 CSOTFParty::steam_lobby_id() const {
  // @@protoc_insertion_point(field_get:CSOTFParty.steam_lobby_id)
  return steam_lobby_id_;
}
inline void CSOTFParty::set_steam_lobby_id(::google::protobuf::uint64 value) {
  set_has_steam_lobby_id();
  steam_lobby_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFParty.steam_lobby_id)
}

// optional .TF_MatchmakingMode matchmaking_mode = 30 [default = TF_Matchmaking_INVALID];
inline bool CSOTFParty::has_matchmaking_mode() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CSOTFParty::set_has_matchmaking_mode() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CSOTFParty::clear_has_matchmaking_mode() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CSOTFParty::clear_matchmaking_mode() {
  matchmaking_mode_ = 0;
  clear_has_matchmaking_mode();
}
inline ::TF_MatchmakingMode CSOTFParty::matchmaking_mode() const {
  // @@protoc_insertion_point(field_get:CSOTFParty.matchmaking_mode)
  return static_cast< ::TF_MatchmakingMode >(matchmaking_mode_);
}
inline void CSOTFParty::set_matchmaking_mode(::TF_MatchmakingMode value) {
  assert(::TF_MatchmakingMode_IsValid(value));
  set_has_matchmaking_mode();
  matchmaking_mode_ = value;
  // @@protoc_insertion_point(field_set:CSOTFParty.matchmaking_mode)
}

// optional bool search_late_join_ok = 23;
inline bool CSOTFParty::has_search_late_join_ok() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CSOTFParty::set_has_search_late_join_ok() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CSOTFParty::clear_has_search_late_join_ok() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CSOTFParty::clear_search_late_join_ok() {
  search_late_join_ok_ = false;
  clear_has_search_late_join_ok();
}
inline bool CSOTFParty::search_late_join_ok() const {
  // @@protoc_insertion_point(field_get:CSOTFParty.search_late_join_ok)
  return search_late_join_ok_;
}
inline void CSOTFParty::set_search_late_join_ok(bool value) {
  set_has_search_late_join_ok();
  search_late_join_ok_ = value;
  // @@protoc_insertion_point(field_set:CSOTFParty.search_late_join_ok)
}

// optional string search_mvm_mannup_tour = 32;
inline bool CSOTFParty::has_search_mvm_mannup_tour() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CSOTFParty::set_has_search_mvm_mannup_tour() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CSOTFParty::clear_has_search_mvm_mannup_tour() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CSOTFParty::clear_search_mvm_mannup_tour() {
  if (search_mvm_mannup_tour_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_mvm_mannup_tour_->clear();
  }
  clear_has_search_mvm_mannup_tour();
}
inline const ::std::string& CSOTFParty::search_mvm_mannup_tour() const {
  // @@protoc_insertion_point(field_get:CSOTFParty.search_mvm_mannup_tour)
  return *search_mvm_mannup_tour_;
}
inline void CSOTFParty::set_search_mvm_mannup_tour(const ::std::string& value) {
  set_has_search_mvm_mannup_tour();
  if (search_mvm_mannup_tour_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_mvm_mannup_tour_ = new ::std::string;
  }
  search_mvm_mannup_tour_->assign(value);
  // @@protoc_insertion_point(field_set:CSOTFParty.search_mvm_mannup_tour)
}
inline void CSOTFParty::set_search_mvm_mannup_tour(const char* value) {
  set_has_search_mvm_mannup_tour();
  if (search_mvm_mannup_tour_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_mvm_mannup_tour_ = new ::std::string;
  }
  search_mvm_mannup_tour_->assign(value);
  // @@protoc_insertion_point(field_set_char:CSOTFParty.search_mvm_mannup_tour)
}
inline void CSOTFParty::set_search_mvm_mannup_tour(const char* value, size_t size) {
  set_has_search_mvm_mannup_tour();
  if (search_mvm_mannup_tour_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_mvm_mannup_tour_ = new ::std::string;
  }
  search_mvm_mannup_tour_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSOTFParty.search_mvm_mannup_tour)
}
inline ::std::string* CSOTFParty::mutable_search_mvm_mannup_tour() {
  set_has_search_mvm_mannup_tour();
  if (search_mvm_mannup_tour_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    search_mvm_mannup_tour_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CSOTFParty.search_mvm_mannup_tour)
  return search_mvm_mannup_tour_;
}
inline ::std::string* CSOTFParty::release_search_mvm_mannup_tour() {
  clear_has_search_mvm_mannup_tour();
  if (search_mvm_mannup_tour_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = search_mvm_mannup_tour_;
    search_mvm_mannup_tour_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CSOTFParty::set_allocated_search_mvm_mannup_tour(::std::string* search_mvm_mannup_tour) {
  if (search_mvm_mannup_tour_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete search_mvm_mannup_tour_;
  }
  if (search_mvm_mannup_tour) {
    set_has_search_mvm_mannup_tour();
    search_mvm_mannup_tour_ = search_mvm_mannup_tour;
  } else {
    clear_has_search_mvm_mannup_tour();
    search_mvm_mannup_tour_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CSOTFParty.search_mvm_mannup_tour)
}

// repeated string search_mvm_missions = 31;
inline int CSOTFParty::search_mvm_missions_size() const {
  return search_mvm_missions_.size();
}
inline void CSOTFParty::clear_search_mvm_missions() {
  search_mvm_missions_.Clear();
}
inline const ::std::string& CSOTFParty::search_mvm_missions(int index) const {
  // @@protoc_insertion_point(field_get:CSOTFParty.search_mvm_missions)
  return search_mvm_missions_.Get(index);
}
inline ::std::string* CSOTFParty::mutable_search_mvm_missions(int index) {
  // @@protoc_insertion_point(field_mutable:CSOTFParty.search_mvm_missions)
  return search_mvm_missions_.Mutable(index);
}
inline void CSOTFParty::set_search_mvm_missions(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CSOTFParty.search_mvm_missions)
  search_mvm_missions_.Mutable(index)->assign(value);
}
inline void CSOTFParty::set_search_mvm_missions(int index, const char* value) {
  search_mvm_missions_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CSOTFParty.search_mvm_missions)
}
inline void CSOTFParty::set_search_mvm_missions(int index, const char* value, size_t size) {
  search_mvm_missions_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSOTFParty.search_mvm_missions)
}
inline ::std::string* CSOTFParty::add_search_mvm_missions() {
  return search_mvm_missions_.Add();
}
inline void CSOTFParty::add_search_mvm_missions(const ::std::string& value) {
  search_mvm_missions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CSOTFParty.search_mvm_missions)
}
inline void CSOTFParty::add_search_mvm_missions(const char* value) {
  search_mvm_missions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CSOTFParty.search_mvm_missions)
}
inline void CSOTFParty::add_search_mvm_missions(const char* value, size_t size) {
  search_mvm_missions_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CSOTFParty.search_mvm_missions)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CSOTFParty::search_mvm_missions() const {
  // @@protoc_insertion_point(field_list:CSOTFParty.search_mvm_missions)
  return search_mvm_missions_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CSOTFParty::mutable_search_mvm_missions() {
  // @@protoc_insertion_point(field_mutable_list:CSOTFParty.search_mvm_missions)
  return &search_mvm_missions_;
}

// optional bool search_play_for_bragging_rights = 26;
inline bool CSOTFParty::has_search_play_for_bragging_rights() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CSOTFParty::set_has_search_play_for_bragging_rights() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CSOTFParty::clear_has_search_play_for_bragging_rights() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CSOTFParty::clear_search_play_for_bragging_rights() {
  search_play_for_bragging_rights_ = false;
  clear_has_search_play_for_bragging_rights();
}
inline bool CSOTFParty::search_play_for_bragging_rights() const {
  // @@protoc_insertion_point(field_get:CSOTFParty.search_play_for_bragging_rights)
  return search_play_for_bragging_rights_;
}
inline void CSOTFParty::set_search_play_for_bragging_rights(bool value) {
  set_has_search_play_for_bragging_rights();
  search_play_for_bragging_rights_ = value;
  // @@protoc_insertion_point(field_set:CSOTFParty.search_play_for_bragging_rights)
}

// optional uint32 search_quickplay_game_type = 28;
inline bool CSOTFParty::has_search_quickplay_game_type() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CSOTFParty::set_has_search_quickplay_game_type() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CSOTFParty::clear_has_search_quickplay_game_type() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CSOTFParty::clear_search_quickplay_game_type() {
  search_quickplay_game_type_ = 0u;
  clear_has_search_quickplay_game_type();
}
inline ::google::protobuf::uint32 CSOTFParty::search_quickplay_game_type() const {
  // @@protoc_insertion_point(field_get:CSOTFParty.search_quickplay_game_type)
  return search_quickplay_game_type_;
}
inline void CSOTFParty::set_search_quickplay_game_type(::google::protobuf::uint32 value) {
  set_has_search_quickplay_game_type();
  search_quickplay_game_type_ = value;
  // @@protoc_insertion_point(field_set:CSOTFParty.search_quickplay_game_type)
}

// optional uint32 search_ladder_type = 33;
inline bool CSOTFParty::has_search_ladder_type() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CSOTFParty::set_has_search_ladder_type() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CSOTFParty::clear_has_search_ladder_type() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CSOTFParty::clear_search_ladder_type() {
  search_ladder_type_ = 0u;
  clear_has_search_ladder_type();
}
inline ::google::protobuf::uint32 CSOTFParty::search_ladder_type() const {
  // @@protoc_insertion_point(field_get:CSOTFParty.search_ladder_type)
  return search_ladder_type_;
}
inline void CSOTFParty::set_search_ladder_type(::google::protobuf::uint32 value) {
  set_has_search_ladder_type();
  search_ladder_type_ = value;
  // @@protoc_insertion_point(field_set:CSOTFParty.search_ladder_type)
}

// optional uint32 prevent_match_until_date = 18;
inline bool CSOTFParty::has_prevent_match_until_date() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CSOTFParty::set_has_prevent_match_until_date() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CSOTFParty::clear_has_prevent_match_until_date() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CSOTFParty::clear_prevent_match_until_date() {
  prevent_match_until_date_ = 0u;
  clear_has_prevent_match_until_date();
}
inline ::google::protobuf::uint32 CSOTFParty::prevent_match_until_date() const {
  // @@protoc_insertion_point(field_get:CSOTFParty.prevent_match_until_date)
  return prevent_match_until_date_;
}
inline void CSOTFParty::set_prevent_match_until_date(::google::protobuf::uint32 value) {
  set_has_prevent_match_until_date();
  prevent_match_until_date_ = value;
  // @@protoc_insertion_point(field_set:CSOTFParty.prevent_match_until_date)
}

// optional uint32 prevent_match_account_id = 19;
inline bool CSOTFParty::has_prevent_match_account_id() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CSOTFParty::set_has_prevent_match_account_id() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CSOTFParty::clear_has_prevent_match_account_id() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CSOTFParty::clear_prevent_match_account_id() {
  prevent_match_account_id_ = 0u;
  clear_has_prevent_match_account_id();
}
inline ::google::protobuf::uint32 CSOTFParty::prevent_match_account_id() const {
  // @@protoc_insertion_point(field_get:CSOTFParty.prevent_match_account_id)
  return prevent_match_account_id_;
}
inline void CSOTFParty::set_prevent_match_account_id(::google::protobuf::uint32 value) {
  set_has_prevent_match_account_id();
  prevent_match_account_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFParty.prevent_match_account_id)
}

// -------------------------------------------------------------------

// CSOTFPartyInvite_PartyMember

// optional string name = 1;
inline bool CSOTFPartyInvite_PartyMember::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOTFPartyInvite_PartyMember::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOTFPartyInvite_PartyMember::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOTFPartyInvite_PartyMember::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CSOTFPartyInvite_PartyMember::name() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyInvite.PartyMember.name)
  return *name_;
}
inline void CSOTFPartyInvite_PartyMember::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:CSOTFPartyInvite.PartyMember.name)
}
inline void CSOTFPartyInvite_PartyMember::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CSOTFPartyInvite.PartyMember.name)
}
inline void CSOTFPartyInvite_PartyMember::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSOTFPartyInvite.PartyMember.name)
}
inline ::std::string* CSOTFPartyInvite_PartyMember::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CSOTFPartyInvite.PartyMember.name)
  return name_;
}
inline ::std::string* CSOTFPartyInvite_PartyMember::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CSOTFPartyInvite_PartyMember::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CSOTFPartyInvite.PartyMember.name)
}

// optional fixed64 steam_id = 2;
inline bool CSOTFPartyInvite_PartyMember::has_steam_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOTFPartyInvite_PartyMember::set_has_steam_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOTFPartyInvite_PartyMember::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOTFPartyInvite_PartyMember::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CSOTFPartyInvite_PartyMember::steam_id() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyInvite.PartyMember.steam_id)
  return steam_id_;
}
inline void CSOTFPartyInvite_PartyMember::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPartyInvite.PartyMember.steam_id)
}

// optional uint32 avatar = 3;
inline bool CSOTFPartyInvite_PartyMember::has_avatar() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSOTFPartyInvite_PartyMember::set_has_avatar() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSOTFPartyInvite_PartyMember::clear_has_avatar() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSOTFPartyInvite_PartyMember::clear_avatar() {
  avatar_ = 0u;
  clear_has_avatar();
}
inline ::google::protobuf::uint32 CSOTFPartyInvite_PartyMember::avatar() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyInvite.PartyMember.avatar)
  return avatar_;
}
inline void CSOTFPartyInvite_PartyMember::set_avatar(::google::protobuf::uint32 value) {
  set_has_avatar();
  avatar_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPartyInvite.PartyMember.avatar)
}

// -------------------------------------------------------------------

// CSOTFPartyInvite

// optional uint64 group_id = 1;
inline bool CSOTFPartyInvite::has_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOTFPartyInvite::set_has_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOTFPartyInvite::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOTFPartyInvite::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 CSOTFPartyInvite::group_id() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyInvite.group_id)
  return group_id_;
}
inline void CSOTFPartyInvite::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPartyInvite.group_id)
}

// optional fixed64 sender_id = 2;
inline bool CSOTFPartyInvite::has_sender_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOTFPartyInvite::set_has_sender_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOTFPartyInvite::clear_has_sender_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOTFPartyInvite::clear_sender_id() {
  sender_id_ = GOOGLE_ULONGLONG(0);
  clear_has_sender_id();
}
inline ::google::protobuf::uint64 CSOTFPartyInvite::sender_id() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyInvite.sender_id)
  return sender_id_;
}
inline void CSOTFPartyInvite::set_sender_id(::google::protobuf::uint64 value) {
  set_has_sender_id();
  sender_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFPartyInvite.sender_id)
}

// optional string sender_name = 3;
inline bool CSOTFPartyInvite::has_sender_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSOTFPartyInvite::set_has_sender_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSOTFPartyInvite::clear_has_sender_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSOTFPartyInvite::clear_sender_name() {
  if (sender_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sender_name_->clear();
  }
  clear_has_sender_name();
}
inline const ::std::string& CSOTFPartyInvite::sender_name() const {
  // @@protoc_insertion_point(field_get:CSOTFPartyInvite.sender_name)
  return *sender_name_;
}
inline void CSOTFPartyInvite::set_sender_name(const ::std::string& value) {
  set_has_sender_name();
  if (sender_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sender_name_ = new ::std::string;
  }
  sender_name_->assign(value);
  // @@protoc_insertion_point(field_set:CSOTFPartyInvite.sender_name)
}
inline void CSOTFPartyInvite::set_sender_name(const char* value) {
  set_has_sender_name();
  if (sender_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sender_name_ = new ::std::string;
  }
  sender_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CSOTFPartyInvite.sender_name)
}
inline void CSOTFPartyInvite::set_sender_name(const char* value, size_t size) {
  set_has_sender_name();
  if (sender_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sender_name_ = new ::std::string;
  }
  sender_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSOTFPartyInvite.sender_name)
}
inline ::std::string* CSOTFPartyInvite::mutable_sender_name() {
  set_has_sender_name();
  if (sender_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sender_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CSOTFPartyInvite.sender_name)
  return sender_name_;
}
inline ::std::string* CSOTFPartyInvite::release_sender_name() {
  clear_has_sender_name();
  if (sender_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sender_name_;
    sender_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CSOTFPartyInvite::set_allocated_sender_name(::std::string* sender_name) {
  if (sender_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sender_name_;
  }
  if (sender_name) {
    set_has_sender_name();
    sender_name_ = sender_name;
  } else {
    clear_has_sender_name();
    sender_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CSOTFPartyInvite.sender_name)
}

// repeated .CSOTFPartyInvite.PartyMember members = 4;
inline int CSOTFPartyInvite::members_size() const {
  return members_.size();
}
inline void CSOTFPartyInvite::clear_members() {
  members_.Clear();
}
inline const ::CSOTFPartyInvite_PartyMember& CSOTFPartyInvite::members(int index) const {
  // @@protoc_insertion_point(field_get:CSOTFPartyInvite.members)
  return members_.Get(index);
}
inline ::CSOTFPartyInvite_PartyMember* CSOTFPartyInvite::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:CSOTFPartyInvite.members)
  return members_.Mutable(index);
}
inline ::CSOTFPartyInvite_PartyMember* CSOTFPartyInvite::add_members() {
  // @@protoc_insertion_point(field_add:CSOTFPartyInvite.members)
  return members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSOTFPartyInvite_PartyMember >&
CSOTFPartyInvite::members() const {
  // @@protoc_insertion_point(field_list:CSOTFPartyInvite.members)
  return members_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSOTFPartyInvite_PartyMember >*
CSOTFPartyInvite::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:CSOTFPartyInvite.members)
  return &members_;
}

// -------------------------------------------------------------------

// CTFLobbyMember

// optional fixed64 id = 1;
inline bool CTFLobbyMember::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CTFLobbyMember::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CTFLobbyMember::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CTFLobbyMember::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 CTFLobbyMember::id() const {
  // @@protoc_insertion_point(field_get:CTFLobbyMember.id)
  return id_;
}
inline void CTFLobbyMember::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CTFLobbyMember.id)
}

// optional .TF_GC_TEAM team = 3 [default = TF_GC_TEAM_DEFENDERS];
inline bool CTFLobbyMember::has_team() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CTFLobbyMember::set_has_team() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CTFLobbyMember::clear_has_team() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CTFLobbyMember::clear_team() {
  team_ = 0;
  clear_has_team();
}
inline ::TF_GC_TEAM CTFLobbyMember::team() const {
  // @@protoc_insertion_point(field_get:CTFLobbyMember.team)
  return static_cast< ::TF_GC_TEAM >(team_);
}
inline void CTFLobbyMember::set_team(::TF_GC_TEAM value) {
  assert(::TF_GC_TEAM_IsValid(value));
  set_has_team();
  team_ = value;
  // @@protoc_insertion_point(field_set:CTFLobbyMember.team)
}

// optional .CTFLobbyMember.ConnectState connect_state = 13 [default = INVALID];
inline bool CTFLobbyMember::has_connect_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CTFLobbyMember::set_has_connect_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CTFLobbyMember::clear_has_connect_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CTFLobbyMember::clear_connect_state() {
  connect_state_ = 0;
  clear_has_connect_state();
}
inline ::CTFLobbyMember_ConnectState CTFLobbyMember::connect_state() const {
  // @@protoc_insertion_point(field_get:CTFLobbyMember.connect_state)
  return static_cast< ::CTFLobbyMember_ConnectState >(connect_state_);
}
inline void CTFLobbyMember::set_connect_state(::CTFLobbyMember_ConnectState value) {
  assert(::CTFLobbyMember_ConnectState_IsValid(value));
  set_has_connect_state();
  connect_state_ = value;
  // @@protoc_insertion_point(field_set:CTFLobbyMember.connect_state)
}

// optional string name = 6;
inline bool CTFLobbyMember::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CTFLobbyMember::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CTFLobbyMember::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CTFLobbyMember::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CTFLobbyMember::name() const {
  // @@protoc_insertion_point(field_get:CTFLobbyMember.name)
  return *name_;
}
inline void CTFLobbyMember::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:CTFLobbyMember.name)
}
inline void CTFLobbyMember::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CTFLobbyMember.name)
}
inline void CTFLobbyMember::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CTFLobbyMember.name)
}
inline ::std::string* CTFLobbyMember::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CTFLobbyMember.name)
  return name_;
}
inline ::std::string* CTFLobbyMember::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CTFLobbyMember::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CTFLobbyMember.name)
}

// optional float latitude = 8;
inline bool CTFLobbyMember::has_latitude() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CTFLobbyMember::set_has_latitude() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CTFLobbyMember::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CTFLobbyMember::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
inline float CTFLobbyMember::latitude() const {
  // @@protoc_insertion_point(field_get:CTFLobbyMember.latitude)
  return latitude_;
}
inline void CTFLobbyMember::set_latitude(float value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:CTFLobbyMember.latitude)
}

// optional float longitude = 9;
inline bool CTFLobbyMember::has_longitude() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CTFLobbyMember::set_has_longitude() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CTFLobbyMember::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CTFLobbyMember::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
inline float CTFLobbyMember::longitude() const {
  // @@protoc_insertion_point(field_get:CTFLobbyMember.longitude)
  return longitude_;
}
inline void CTFLobbyMember::set_longitude(float value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:CTFLobbyMember.longitude)
}

// optional .TFLobbyReadyState ready_state = 11 [default = TFLobbyReadyState_UNDECLARED];
inline bool CTFLobbyMember::has_ready_state() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CTFLobbyMember::set_has_ready_state() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CTFLobbyMember::clear_has_ready_state() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CTFLobbyMember::clear_ready_state() {
  ready_state_ = 0;
  clear_has_ready_state();
}
inline ::TFLobbyReadyState CTFLobbyMember::ready_state() const {
  // @@protoc_insertion_point(field_get:CTFLobbyMember.ready_state)
  return static_cast< ::TFLobbyReadyState >(ready_state_);
}
inline void CTFLobbyMember::set_ready_state(::TFLobbyReadyState value) {
  assert(::TFLobbyReadyState_IsValid(value));
  set_has_ready_state();
  ready_state_ = value;
  // @@protoc_insertion_point(field_set:CTFLobbyMember.ready_state)
}

// optional uint64 party_id = 12;
inline bool CTFLobbyMember::has_party_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CTFLobbyMember::set_has_party_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CTFLobbyMember::clear_has_party_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CTFLobbyMember::clear_party_id() {
  party_id_ = GOOGLE_ULONGLONG(0);
  clear_has_party_id();
}
inline ::google::protobuf::uint64 CTFLobbyMember::party_id() const {
  // @@protoc_insertion_point(field_get:CTFLobbyMember.party_id)
  return party_id_;
}
inline void CTFLobbyMember::set_party_id(::google::protobuf::uint64 value) {
  set_has_party_id();
  party_id_ = value;
  // @@protoc_insertion_point(field_set:CTFLobbyMember.party_id)
}

// optional bool squad_surplus = 14;
inline bool CTFLobbyMember::has_squad_surplus() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CTFLobbyMember::set_has_squad_surplus() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CTFLobbyMember::clear_has_squad_surplus() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CTFLobbyMember::clear_squad_surplus() {
  squad_surplus_ = false;
  clear_has_squad_surplus();
}
inline bool CTFLobbyMember::squad_surplus() const {
  // @@protoc_insertion_point(field_get:CTFLobbyMember.squad_surplus)
  return squad_surplus_;
}
inline void CTFLobbyMember::set_squad_surplus(bool value) {
  set_has_squad_surplus();
  squad_surplus_ = value;
  // @@protoc_insertion_point(field_set:CTFLobbyMember.squad_surplus)
}

// optional uint32 badge_level = 15;
inline bool CTFLobbyMember::has_badge_level() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CTFLobbyMember::set_has_badge_level() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CTFLobbyMember::clear_has_badge_level() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CTFLobbyMember::clear_badge_level() {
  badge_level_ = 0u;
  clear_has_badge_level();
}
inline ::google::protobuf::uint32 CTFLobbyMember::badge_level() const {
  // @@protoc_insertion_point(field_get:CTFLobbyMember.badge_level)
  return badge_level_;
}
inline void CTFLobbyMember::set_badge_level(::google::protobuf::uint32 value) {
  set_has_badge_level();
  badge_level_ = value;
  // @@protoc_insertion_point(field_set:CTFLobbyMember.badge_level)
}

// optional uint32 abandon_time = 16 [default = 0];
inline bool CTFLobbyMember::has_abandon_time() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CTFLobbyMember::set_has_abandon_time() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CTFLobbyMember::clear_has_abandon_time() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CTFLobbyMember::clear_abandon_time() {
  abandon_time_ = 0u;
  clear_has_abandon_time();
}
inline ::google::protobuf::uint32 CTFLobbyMember::abandon_time() const {
  // @@protoc_insertion_point(field_get:CTFLobbyMember.abandon_time)
  return abandon_time_;
}
inline void CTFLobbyMember::set_abandon_time(::google::protobuf::uint32 value) {
  set_has_abandon_time();
  abandon_time_ = value;
  // @@protoc_insertion_point(field_set:CTFLobbyMember.abandon_time)
}

// optional uint32 last_connect_time = 17;
inline bool CTFLobbyMember::has_last_connect_time() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CTFLobbyMember::set_has_last_connect_time() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CTFLobbyMember::clear_has_last_connect_time() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CTFLobbyMember::clear_last_connect_time() {
  last_connect_time_ = 0u;
  clear_has_last_connect_time();
}
inline ::google::protobuf::uint32 CTFLobbyMember::last_connect_time() const {
  // @@protoc_insertion_point(field_get:CTFLobbyMember.last_connect_time)
  return last_connect_time_;
}
inline void CTFLobbyMember::set_last_connect_time(::google::protobuf::uint32 value) {
  set_has_last_connect_time();
  last_connect_time_ = value;
  // @@protoc_insertion_point(field_set:CTFLobbyMember.last_connect_time)
}

// optional bool quitting_results_in_penalty = 18;
inline bool CTFLobbyMember::has_quitting_results_in_penalty() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CTFLobbyMember::set_has_quitting_results_in_penalty() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CTFLobbyMember::clear_has_quitting_results_in_penalty() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CTFLobbyMember::clear_quitting_results_in_penalty() {
  quitting_results_in_penalty_ = false;
  clear_has_quitting_results_in_penalty();
}
inline bool CTFLobbyMember::quitting_results_in_penalty() const {
  // @@protoc_insertion_point(field_get:CTFLobbyMember.quitting_results_in_penalty)
  return quitting_results_in_penalty_;
}
inline void CTFLobbyMember::set_quitting_results_in_penalty(bool value) {
  set_has_quitting_results_in_penalty();
  quitting_results_in_penalty_ = value;
  // @@protoc_insertion_point(field_set:CTFLobbyMember.quitting_results_in_penalty)
}

// -------------------------------------------------------------------

// CLobbyPendingPlayerReport

// optional uint32 account_id = 1;
inline bool CLobbyPendingPlayerReport::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CLobbyPendingPlayerReport::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CLobbyPendingPlayerReport::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CLobbyPendingPlayerReport::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CLobbyPendingPlayerReport::account_id() const {
  // @@protoc_insertion_point(field_get:CLobbyPendingPlayerReport.account_id)
  return account_id_;
}
inline void CLobbyPendingPlayerReport::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CLobbyPendingPlayerReport.account_id)
}

// optional fixed32 date = 2;
inline bool CLobbyPendingPlayerReport::has_date() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CLobbyPendingPlayerReport::set_has_date() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CLobbyPendingPlayerReport::clear_has_date() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CLobbyPendingPlayerReport::clear_date() {
  date_ = 0u;
  clear_has_date();
}
inline ::google::protobuf::uint32 CLobbyPendingPlayerReport::date() const {
  // @@protoc_insertion_point(field_get:CLobbyPendingPlayerReport.date)
  return date_;
}
inline void CLobbyPendingPlayerReport::set_date(::google::protobuf::uint32 value) {
  set_has_date();
  date_ = value;
  // @@protoc_insertion_point(field_set:CLobbyPendingPlayerReport.date)
}

// -------------------------------------------------------------------

// CMsgGameMatchSignOut

// -------------------------------------------------------------------

// CSOTFLobby

// optional uint64 lobby_id = 1;
inline bool CSOTFLobby::has_lobby_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOTFLobby::set_has_lobby_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOTFLobby::clear_has_lobby_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOTFLobby::clear_lobby_id() {
  lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_lobby_id();
}
inline ::google::protobuf::uint64 CSOTFLobby::lobby_id() const {
  // @@protoc_insertion_point(field_get:CSOTFLobby.lobby_id)
  return lobby_id_;
}
inline void CSOTFLobby::set_lobby_id(::google::protobuf::uint64 value) {
  set_has_lobby_id();
  lobby_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLobby.lobby_id)
}

// repeated .CTFLobbyMember members = 2;
inline int CSOTFLobby::members_size() const {
  return members_.size();
}
inline void CSOTFLobby::clear_members() {
  members_.Clear();
}
inline const ::CTFLobbyMember& CSOTFLobby::members(int index) const {
  // @@protoc_insertion_point(field_get:CSOTFLobby.members)
  return members_.Get(index);
}
inline ::CTFLobbyMember* CSOTFLobby::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:CSOTFLobby.members)
  return members_.Mutable(index);
}
inline ::CTFLobbyMember* CSOTFLobby::add_members() {
  // @@protoc_insertion_point(field_add:CSOTFLobby.members)
  return members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CTFLobbyMember >&
CSOTFLobby::members() const {
  // @@protoc_insertion_point(field_list:CSOTFLobby.members)
  return members_;
}
inline ::google::protobuf::RepeatedPtrField< ::CTFLobbyMember >*
CSOTFLobby::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:CSOTFLobby.members)
  return &members_;
}

// repeated .CTFLobbyMember left_members = 7;
inline int CSOTFLobby::left_members_size() const {
  return left_members_.size();
}
inline void CSOTFLobby::clear_left_members() {
  left_members_.Clear();
}
inline const ::CTFLobbyMember& CSOTFLobby::left_members(int index) const {
  // @@protoc_insertion_point(field_get:CSOTFLobby.left_members)
  return left_members_.Get(index);
}
inline ::CTFLobbyMember* CSOTFLobby::mutable_left_members(int index) {
  // @@protoc_insertion_point(field_mutable:CSOTFLobby.left_members)
  return left_members_.Mutable(index);
}
inline ::CTFLobbyMember* CSOTFLobby::add_left_members() {
  // @@protoc_insertion_point(field_add:CSOTFLobby.left_members)
  return left_members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CTFLobbyMember >&
CSOTFLobby::left_members() const {
  // @@protoc_insertion_point(field_list:CSOTFLobby.left_members)
  return left_members_;
}
inline ::google::protobuf::RepeatedPtrField< ::CTFLobbyMember >*
CSOTFLobby::mutable_left_members() {
  // @@protoc_insertion_point(field_mutable_list:CSOTFLobby.left_members)
  return &left_members_;
}

// optional fixed64 leader_id = 11;
inline bool CSOTFLobby::has_leader_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSOTFLobby::set_has_leader_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSOTFLobby::clear_has_leader_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSOTFLobby::clear_leader_id() {
  leader_id_ = GOOGLE_ULONGLONG(0);
  clear_has_leader_id();
}
inline ::google::protobuf::uint64 CSOTFLobby::leader_id() const {
  // @@protoc_insertion_point(field_get:CSOTFLobby.leader_id)
  return leader_id_;
}
inline void CSOTFLobby::set_leader_id(::google::protobuf::uint64 value) {
  set_has_leader_id();
  leader_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLobby.leader_id)
}

// optional fixed64 server_id = 6 [default = 0];
inline bool CSOTFLobby::has_server_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSOTFLobby::set_has_server_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSOTFLobby::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSOTFLobby::clear_server_id() {
  server_id_ = GOOGLE_ULONGLONG(0);
  clear_has_server_id();
}
inline ::google::protobuf::uint64 CSOTFLobby::server_id() const {
  // @@protoc_insertion_point(field_get:CSOTFLobby.server_id)
  return server_id_;
}
inline void CSOTFLobby::set_server_id(::google::protobuf::uint64 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLobby.server_id)
}

// repeated fixed64 pending_invites = 10;
inline int CSOTFLobby::pending_invites_size() const {
  return pending_invites_.size();
}
inline void CSOTFLobby::clear_pending_invites() {
  pending_invites_.Clear();
}
inline ::google::protobuf::uint64 CSOTFLobby::pending_invites(int index) const {
  // @@protoc_insertion_point(field_get:CSOTFLobby.pending_invites)
  return pending_invites_.Get(index);
}
inline void CSOTFLobby::set_pending_invites(int index, ::google::protobuf::uint64 value) {
  pending_invites_.Set(index, value);
  // @@protoc_insertion_point(field_set:CSOTFLobby.pending_invites)
}
inline void CSOTFLobby::add_pending_invites(::google::protobuf::uint64 value) {
  pending_invites_.Add(value);
  // @@protoc_insertion_point(field_add:CSOTFLobby.pending_invites)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CSOTFLobby::pending_invites() const {
  // @@protoc_insertion_point(field_list:CSOTFLobby.pending_invites)
  return pending_invites_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CSOTFLobby::mutable_pending_invites() {
  // @@protoc_insertion_point(field_mutable_list:CSOTFLobby.pending_invites)
  return &pending_invites_;
}

// optional .CSOTFLobby.State state = 4 [default = SERVERSETUP];
inline bool CSOTFLobby::has_state() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSOTFLobby::set_has_state() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSOTFLobby::clear_has_state() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSOTFLobby::clear_state() {
  state_ = 1;
  clear_has_state();
}
inline ::CSOTFLobby_State CSOTFLobby::state() const {
  // @@protoc_insertion_point(field_get:CSOTFLobby.state)
  return static_cast< ::CSOTFLobby_State >(state_);
}
inline void CSOTFLobby::set_state(::CSOTFLobby_State value) {
  assert(::CSOTFLobby_State_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLobby.state)
}

// optional string connect = 5;
inline bool CSOTFLobby::has_connect() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSOTFLobby::set_has_connect() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSOTFLobby::clear_has_connect() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSOTFLobby::clear_connect() {
  if (connect_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    connect_->clear();
  }
  clear_has_connect();
}
inline const ::std::string& CSOTFLobby::connect() const {
  // @@protoc_insertion_point(field_get:CSOTFLobby.connect)
  return *connect_;
}
inline void CSOTFLobby::set_connect(const ::std::string& value) {
  set_has_connect();
  if (connect_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    connect_ = new ::std::string;
  }
  connect_->assign(value);
  // @@protoc_insertion_point(field_set:CSOTFLobby.connect)
}
inline void CSOTFLobby::set_connect(const char* value) {
  set_has_connect();
  if (connect_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    connect_ = new ::std::string;
  }
  connect_->assign(value);
  // @@protoc_insertion_point(field_set_char:CSOTFLobby.connect)
}
inline void CSOTFLobby::set_connect(const char* value, size_t size) {
  set_has_connect();
  if (connect_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    connect_ = new ::std::string;
  }
  connect_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSOTFLobby.connect)
}
inline ::std::string* CSOTFLobby::mutable_connect() {
  set_has_connect();
  if (connect_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    connect_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CSOTFLobby.connect)
  return connect_;
}
inline ::std::string* CSOTFLobby::release_connect() {
  clear_has_connect();
  if (connect_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = connect_;
    connect_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CSOTFLobby::set_allocated_connect(::std::string* connect) {
  if (connect_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete connect_;
  }
  if (connect) {
    set_has_connect();
    connect_ = connect;
  } else {
    clear_has_connect();
    connect_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CSOTFLobby.connect)
}

// optional .CSOTFLobby.LobbyType lobby_type = 12 [default = INVALID];
inline bool CSOTFLobby::has_lobby_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSOTFLobby::set_has_lobby_type() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSOTFLobby::clear_has_lobby_type() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSOTFLobby::clear_lobby_type() {
  lobby_type_ = -1;
  clear_has_lobby_type();
}
inline ::CSOTFLobby_LobbyType CSOTFLobby::lobby_type() const {
  // @@protoc_insertion_point(field_get:CSOTFLobby.lobby_type)
  return static_cast< ::CSOTFLobby_LobbyType >(lobby_type_);
}
inline void CSOTFLobby::set_lobby_type(::CSOTFLobby_LobbyType value) {
  assert(::CSOTFLobby_LobbyType_IsValid(value));
  set_has_lobby_type();
  lobby_type_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLobby.lobby_type)
}

// optional bool allow_cheats = 13;
inline bool CSOTFLobby::has_allow_cheats() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSOTFLobby::set_has_allow_cheats() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CSOTFLobby::clear_has_allow_cheats() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CSOTFLobby::clear_allow_cheats() {
  allow_cheats_ = false;
  clear_has_allow_cheats();
}
inline bool CSOTFLobby::allow_cheats() const {
  // @@protoc_insertion_point(field_get:CSOTFLobby.allow_cheats)
  return allow_cheats_;
}
inline void CSOTFLobby::set_allow_cheats(bool value) {
  set_has_allow_cheats();
  allow_cheats_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLobby.allow_cheats)
}

// optional string game_name = 16;
inline bool CSOTFLobby::has_game_name() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CSOTFLobby::set_has_game_name() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CSOTFLobby::clear_has_game_name() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CSOTFLobby::clear_game_name() {
  if (game_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_name_->clear();
  }
  clear_has_game_name();
}
inline const ::std::string& CSOTFLobby::game_name() const {
  // @@protoc_insertion_point(field_get:CSOTFLobby.game_name)
  return *game_name_;
}
inline void CSOTFLobby::set_game_name(const ::std::string& value) {
  set_has_game_name();
  if (game_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_name_ = new ::std::string;
  }
  game_name_->assign(value);
  // @@protoc_insertion_point(field_set:CSOTFLobby.game_name)
}
inline void CSOTFLobby::set_game_name(const char* value) {
  set_has_game_name();
  if (game_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_name_ = new ::std::string;
  }
  game_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CSOTFLobby.game_name)
}
inline void CSOTFLobby::set_game_name(const char* value, size_t size) {
  set_has_game_name();
  if (game_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_name_ = new ::std::string;
  }
  game_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSOTFLobby.game_name)
}
inline ::std::string* CSOTFLobby::mutable_game_name() {
  set_has_game_name();
  if (game_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    game_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CSOTFLobby.game_name)
  return game_name_;
}
inline ::std::string* CSOTFLobby::release_game_name() {
  clear_has_game_name();
  if (game_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = game_name_;
    game_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CSOTFLobby::set_allocated_game_name(::std::string* game_name) {
  if (game_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete game_name_;
  }
  if (game_name) {
    set_has_game_name();
    game_name_ = game_name;
  } else {
    clear_has_game_name();
    game_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CSOTFLobby.game_name)
}

// optional uint32 server_region = 21 [default = 0];
inline bool CSOTFLobby::has_server_region() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CSOTFLobby::set_has_server_region() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CSOTFLobby::clear_has_server_region() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CSOTFLobby::clear_server_region() {
  server_region_ = 0u;
  clear_has_server_region();
}
inline ::google::protobuf::uint32 CSOTFLobby::server_region() const {
  // @@protoc_insertion_point(field_get:CSOTFLobby.server_region)
  return server_region_;
}
inline void CSOTFLobby::set_server_region(::google::protobuf::uint32 value) {
  set_has_server_region();
  server_region_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLobby.server_region)
}

// optional .TF_GC_GameState game_state = 22 [default = TF_GC_GAMESTATE_STATE_INIT];
inline bool CSOTFLobby::has_game_state() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CSOTFLobby::set_has_game_state() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CSOTFLobby::clear_has_game_state() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CSOTFLobby::clear_game_state() {
  game_state_ = 0;
  clear_has_game_state();
}
inline ::TF_GC_GameState CSOTFLobby::game_state() const {
  // @@protoc_insertion_point(field_get:CSOTFLobby.game_state)
  return static_cast< ::TF_GC_GameState >(game_state_);
}
inline void CSOTFLobby::set_game_state(::TF_GC_GameState value) {
  assert(::TF_GC_GameState_IsValid(value));
  set_has_game_state();
  game_state_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLobby.game_state)
}

// optional uint32 num_spectators = 23;
inline bool CSOTFLobby::has_num_spectators() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CSOTFLobby::set_has_num_spectators() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CSOTFLobby::clear_has_num_spectators() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CSOTFLobby::clear_num_spectators() {
  num_spectators_ = 0u;
  clear_has_num_spectators();
}
inline ::google::protobuf::uint32 CSOTFLobby::num_spectators() const {
  // @@protoc_insertion_point(field_get:CSOTFLobby.num_spectators)
  return num_spectators_;
}
inline void CSOTFLobby::set_num_spectators(::google::protobuf::uint32 value) {
  set_has_num_spectators();
  num_spectators_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLobby.num_spectators)
}

// optional uint32 matchgroup = 25;
inline bool CSOTFLobby::has_matchgroup() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CSOTFLobby::set_has_matchgroup() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CSOTFLobby::clear_has_matchgroup() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CSOTFLobby::clear_matchgroup() {
  matchgroup_ = 0u;
  clear_has_matchgroup();
}
inline ::google::protobuf::uint32 CSOTFLobby::matchgroup() const {
  // @@protoc_insertion_point(field_get:CSOTFLobby.matchgroup)
  return matchgroup_;
}
inline void CSOTFLobby::set_matchgroup(::google::protobuf::uint32 value) {
  set_has_matchgroup();
  matchgroup_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLobby.matchgroup)
}

// optional float readyup_remaining_time = 26;
inline bool CSOTFLobby::has_readyup_remaining_time() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CSOTFLobby::set_has_readyup_remaining_time() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CSOTFLobby::clear_has_readyup_remaining_time() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CSOTFLobby::clear_readyup_remaining_time() {
  readyup_remaining_time_ = 0;
  clear_has_readyup_remaining_time();
}
inline float CSOTFLobby::readyup_remaining_time() const {
  // @@protoc_insertion_point(field_get:CSOTFLobby.readyup_remaining_time)
  return readyup_remaining_time_;
}
inline void CSOTFLobby::set_readyup_remaining_time(float value) {
  set_has_readyup_remaining_time();
  readyup_remaining_time_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLobby.readyup_remaining_time)
}

// optional bool leaver_detected = 27;
inline bool CSOTFLobby::has_leaver_detected() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CSOTFLobby::set_has_leaver_detected() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CSOTFLobby::clear_has_leaver_detected() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CSOTFLobby::clear_leaver_detected() {
  leaver_detected_ = false;
  clear_has_leaver_detected();
}
inline bool CSOTFLobby::leaver_detected() const {
  // @@protoc_insertion_point(field_get:CSOTFLobby.leaver_detected)
  return leaver_detected_;
}
inline void CSOTFLobby::set_leaver_detected(bool value) {
  set_has_leaver_detected();
  leaver_detected_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLobby.leaver_detected)
}

// optional bool allow_spectating = 31 [default = true];
inline bool CSOTFLobby::has_allow_spectating() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CSOTFLobby::set_has_allow_spectating() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CSOTFLobby::clear_has_allow_spectating() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CSOTFLobby::clear_allow_spectating() {
  allow_spectating_ = true;
  clear_has_allow_spectating();
}
inline bool CSOTFLobby::allow_spectating() const {
  // @@protoc_insertion_point(field_get:CSOTFLobby.allow_spectating)
  return allow_spectating_;
}
inline void CSOTFLobby::set_allow_spectating(bool value) {
  set_has_allow_spectating();
  allow_spectating_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLobby.allow_spectating)
}

// optional fixed64 load_game_lobby_id = 33;
inline bool CSOTFLobby::has_load_game_lobby_id() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CSOTFLobby::set_has_load_game_lobby_id() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CSOTFLobby::clear_has_load_game_lobby_id() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CSOTFLobby::clear_load_game_lobby_id() {
  load_game_lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_load_game_lobby_id();
}
inline ::google::protobuf::uint64 CSOTFLobby::load_game_lobby_id() const {
  // @@protoc_insertion_point(field_get:CSOTFLobby.load_game_lobby_id)
  return load_game_lobby_id_;
}
inline void CSOTFLobby::set_load_game_lobby_id(::google::protobuf::uint64 value) {
  set_has_load_game_lobby_id();
  load_game_lobby_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLobby.load_game_lobby_id)
}

// optional uint32 load_game_save_number = 34;
inline bool CSOTFLobby::has_load_game_save_number() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CSOTFLobby::set_has_load_game_save_number() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CSOTFLobby::clear_has_load_game_save_number() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CSOTFLobby::clear_load_game_save_number() {
  load_game_save_number_ = 0u;
  clear_has_load_game_save_number();
}
inline ::google::protobuf::uint32 CSOTFLobby::load_game_save_number() const {
  // @@protoc_insertion_point(field_get:CSOTFLobby.load_game_save_number)
  return load_game_save_number_;
}
inline void CSOTFLobby::set_load_game_save_number(::google::protobuf::uint32 value) {
  set_has_load_game_save_number();
  load_game_save_number_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLobby.load_game_save_number)
}

// optional string mannup_tour_name = 42;
inline bool CSOTFLobby::has_mannup_tour_name() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CSOTFLobby::set_has_mannup_tour_name() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CSOTFLobby::clear_has_mannup_tour_name() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CSOTFLobby::clear_mannup_tour_name() {
  if (mannup_tour_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mannup_tour_name_->clear();
  }
  clear_has_mannup_tour_name();
}
inline const ::std::string& CSOTFLobby::mannup_tour_name() const {
  // @@protoc_insertion_point(field_get:CSOTFLobby.mannup_tour_name)
  return *mannup_tour_name_;
}
inline void CSOTFLobby::set_mannup_tour_name(const ::std::string& value) {
  set_has_mannup_tour_name();
  if (mannup_tour_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mannup_tour_name_ = new ::std::string;
  }
  mannup_tour_name_->assign(value);
  // @@protoc_insertion_point(field_set:CSOTFLobby.mannup_tour_name)
}
inline void CSOTFLobby::set_mannup_tour_name(const char* value) {
  set_has_mannup_tour_name();
  if (mannup_tour_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mannup_tour_name_ = new ::std::string;
  }
  mannup_tour_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CSOTFLobby.mannup_tour_name)
}
inline void CSOTFLobby::set_mannup_tour_name(const char* value, size_t size) {
  set_has_mannup_tour_name();
  if (mannup_tour_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mannup_tour_name_ = new ::std::string;
  }
  mannup_tour_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSOTFLobby.mannup_tour_name)
}
inline ::std::string* CSOTFLobby::mutable_mannup_tour_name() {
  set_has_mannup_tour_name();
  if (mannup_tour_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mannup_tour_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CSOTFLobby.mannup_tour_name)
  return mannup_tour_name_;
}
inline ::std::string* CSOTFLobby::release_mannup_tour_name() {
  clear_has_mannup_tour_name();
  if (mannup_tour_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mannup_tour_name_;
    mannup_tour_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CSOTFLobby::set_allocated_mannup_tour_name(::std::string* mannup_tour_name) {
  if (mannup_tour_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mannup_tour_name_;
  }
  if (mannup_tour_name) {
    set_has_mannup_tour_name();
    mannup_tour_name_ = mannup_tour_name;
  } else {
    clear_has_mannup_tour_name();
    mannup_tour_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CSOTFLobby.mannup_tour_name)
}

// optional string map_name = 38;
inline bool CSOTFLobby::has_map_name() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CSOTFLobby::set_has_map_name() {
  _has_bits_[0] |= 0x00200000u;
}
inline void CSOTFLobby::clear_has_map_name() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void CSOTFLobby::clear_map_name() {
  if (map_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    map_name_->clear();
  }
  clear_has_map_name();
}
inline const ::std::string& CSOTFLobby::map_name() const {
  // @@protoc_insertion_point(field_get:CSOTFLobby.map_name)
  return *map_name_;
}
inline void CSOTFLobby::set_map_name(const ::std::string& value) {
  set_has_map_name();
  if (map_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    map_name_ = new ::std::string;
  }
  map_name_->assign(value);
  // @@protoc_insertion_point(field_set:CSOTFLobby.map_name)
}
inline void CSOTFLobby::set_map_name(const char* value) {
  set_has_map_name();
  if (map_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    map_name_ = new ::std::string;
  }
  map_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CSOTFLobby.map_name)
}
inline void CSOTFLobby::set_map_name(const char* value, size_t size) {
  set_has_map_name();
  if (map_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    map_name_ = new ::std::string;
  }
  map_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSOTFLobby.map_name)
}
inline ::std::string* CSOTFLobby::mutable_map_name() {
  set_has_map_name();
  if (map_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    map_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CSOTFLobby.map_name)
  return map_name_;
}
inline ::std::string* CSOTFLobby::release_map_name() {
  clear_has_map_name();
  if (map_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = map_name_;
    map_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CSOTFLobby::set_allocated_map_name(::std::string* map_name) {
  if (map_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete map_name_;
  }
  if (map_name) {
    set_has_map_name();
    map_name_ = map_name;
  } else {
    clear_has_map_name();
    map_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CSOTFLobby.map_name)
}

// optional string mission_name = 39;
inline bool CSOTFLobby::has_mission_name() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void CSOTFLobby::set_has_mission_name() {
  _has_bits_[0] |= 0x00400000u;
}
inline void CSOTFLobby::clear_has_mission_name() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void CSOTFLobby::clear_mission_name() {
  if (mission_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mission_name_->clear();
  }
  clear_has_mission_name();
}
inline const ::std::string& CSOTFLobby::mission_name() const {
  // @@protoc_insertion_point(field_get:CSOTFLobby.mission_name)
  return *mission_name_;
}
inline void CSOTFLobby::set_mission_name(const ::std::string& value) {
  set_has_mission_name();
  if (mission_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mission_name_ = new ::std::string;
  }
  mission_name_->assign(value);
  // @@protoc_insertion_point(field_set:CSOTFLobby.mission_name)
}
inline void CSOTFLobby::set_mission_name(const char* value) {
  set_has_mission_name();
  if (mission_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mission_name_ = new ::std::string;
  }
  mission_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CSOTFLobby.mission_name)
}
inline void CSOTFLobby::set_mission_name(const char* value, size_t size) {
  set_has_mission_name();
  if (mission_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mission_name_ = new ::std::string;
  }
  mission_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSOTFLobby.mission_name)
}
inline ::std::string* CSOTFLobby::mutable_mission_name() {
  set_has_mission_name();
  if (mission_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mission_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CSOTFLobby.mission_name)
  return mission_name_;
}
inline ::std::string* CSOTFLobby::release_mission_name() {
  clear_has_mission_name();
  if (mission_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mission_name_;
    mission_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CSOTFLobby::set_allocated_mission_name(::std::string* mission_name) {
  if (mission_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mission_name_;
  }
  if (mission_name) {
    set_has_mission_name();
    mission_name_ = mission_name;
  } else {
    clear_has_mission_name();
    mission_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CSOTFLobby.mission_name)
}

// optional uint32 match_group = 41;
inline bool CSOTFLobby::has_match_group() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void CSOTFLobby::set_has_match_group() {
  _has_bits_[0] |= 0x00800000u;
}
inline void CSOTFLobby::clear_has_match_group() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void CSOTFLobby::clear_match_group() {
  match_group_ = 0u;
  clear_has_match_group();
}
inline ::google::protobuf::uint32 CSOTFLobby::match_group() const {
  // @@protoc_insertion_point(field_get:CSOTFLobby.match_group)
  return match_group_;
}
inline void CSOTFLobby::set_match_group(::google::protobuf::uint32 value) {
  set_has_match_group();
  match_group_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLobby.match_group)
}

// optional uint32 match_id = 30;
inline bool CSOTFLobby::has_match_id() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void CSOTFLobby::set_has_match_id() {
  _has_bits_[0] |= 0x01000000u;
}
inline void CSOTFLobby::clear_has_match_id() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void CSOTFLobby::clear_match_id() {
  match_id_ = 0u;
  clear_has_match_id();
}
inline ::google::protobuf::uint32 CSOTFLobby::match_id() const {
  // @@protoc_insertion_point(field_get:CSOTFLobby.match_id)
  return match_id_;
}
inline void CSOTFLobby::set_match_id(::google::protobuf::uint32 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLobby.match_id)
}

// optional fixed32 replay_salt = 35;
inline bool CSOTFLobby::has_replay_salt() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void CSOTFLobby::set_has_replay_salt() {
  _has_bits_[0] |= 0x02000000u;
}
inline void CSOTFLobby::clear_has_replay_salt() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void CSOTFLobby::clear_replay_salt() {
  replay_salt_ = 0u;
  clear_has_replay_salt();
}
inline ::google::protobuf::uint32 CSOTFLobby::replay_salt() const {
  // @@protoc_insertion_point(field_get:CSOTFLobby.replay_salt)
  return replay_salt_;
}
inline void CSOTFLobby::set_replay_salt(::google::protobuf::uint32 value) {
  set_has_replay_salt();
  replay_salt_ = value;
  // @@protoc_insertion_point(field_set:CSOTFLobby.replay_salt)
}

// -------------------------------------------------------------------

// CMsgExitMatchmaking

// -------------------------------------------------------------------

// CMsgAcceptInvite

// optional uint64 party_id = 1;
inline bool CMsgAcceptInvite::has_party_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAcceptInvite::set_has_party_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgAcceptInvite::clear_has_party_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgAcceptInvite::clear_party_id() {
  party_id_ = GOOGLE_ULONGLONG(0);
  clear_has_party_id();
}
inline ::google::protobuf::uint64 CMsgAcceptInvite::party_id() const {
  // @@protoc_insertion_point(field_get:CMsgAcceptInvite.party_id)
  return party_id_;
}
inline void CMsgAcceptInvite::set_party_id(::google::protobuf::uint64 value) {
  set_has_party_id();
  party_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgAcceptInvite.party_id)
}

// optional fixed64 steamid_lobby = 2;
inline bool CMsgAcceptInvite::has_steamid_lobby() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgAcceptInvite::set_has_steamid_lobby() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgAcceptInvite::clear_has_steamid_lobby() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgAcceptInvite::clear_steamid_lobby() {
  steamid_lobby_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid_lobby();
}
inline ::google::protobuf::uint64 CMsgAcceptInvite::steamid_lobby() const {
  // @@protoc_insertion_point(field_get:CMsgAcceptInvite.steamid_lobby)
  return steamid_lobby_;
}
inline void CMsgAcceptInvite::set_steamid_lobby(::google::protobuf::uint64 value) {
  set_has_steamid_lobby();
  steamid_lobby_ = value;
  // @@protoc_insertion_point(field_set:CMsgAcceptInvite.steamid_lobby)
}

// optional uint32 client_version = 3 [default = 1225];
inline bool CMsgAcceptInvite::has_client_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgAcceptInvite::set_has_client_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgAcceptInvite::clear_has_client_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgAcceptInvite::clear_client_version() {
  client_version_ = 1225u;
  clear_has_client_version();
}
inline ::google::protobuf::uint32 CMsgAcceptInvite::client_version() const {
  // @@protoc_insertion_point(field_get:CMsgAcceptInvite.client_version)
  return client_version_;
}
inline void CMsgAcceptInvite::set_client_version(::google::protobuf::uint32 value) {
  set_has_client_version();
  client_version_ = value;
  // @@protoc_insertion_point(field_set:CMsgAcceptInvite.client_version)
}

// -------------------------------------------------------------------

// CMsgAcceptInviteResponse

// optional int32 result_code = 1;
inline bool CMsgAcceptInviteResponse::has_result_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAcceptInviteResponse::set_has_result_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgAcceptInviteResponse::clear_has_result_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgAcceptInviteResponse::clear_result_code() {
  result_code_ = 0;
  clear_has_result_code();
}
inline ::google::protobuf::int32 CMsgAcceptInviteResponse::result_code() const {
  // @@protoc_insertion_point(field_get:CMsgAcceptInviteResponse.result_code)
  return result_code_;
}
inline void CMsgAcceptInviteResponse::set_result_code(::google::protobuf::int32 value) {
  set_has_result_code();
  result_code_ = value;
  // @@protoc_insertion_point(field_set:CMsgAcceptInviteResponse.result_code)
}

// -------------------------------------------------------------------

// CMsgReadyUp

// optional .TFLobbyReadyState state = 1 [default = TFLobbyReadyState_UNDECLARED];
inline bool CMsgReadyUp::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgReadyUp::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgReadyUp::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgReadyUp::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::TFLobbyReadyState CMsgReadyUp::state() const {
  // @@protoc_insertion_point(field_get:CMsgReadyUp.state)
  return static_cast< ::TFLobbyReadyState >(state_);
}
inline void CMsgReadyUp::set_state(::TFLobbyReadyState value) {
  assert(::TFLobbyReadyState_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:CMsgReadyUp.state)
}

// -------------------------------------------------------------------

// CMsgMatchmakingSearchCountRequest

// -------------------------------------------------------------------

// CMsgMatchmakingSearchCountResponse

// repeated uint32 searching_players_by_group = 1;
inline int CMsgMatchmakingSearchCountResponse::searching_players_by_group_size() const {
  return searching_players_by_group_.size();
}
inline void CMsgMatchmakingSearchCountResponse::clear_searching_players_by_group() {
  searching_players_by_group_.Clear();
}
inline ::google::protobuf::uint32 CMsgMatchmakingSearchCountResponse::searching_players_by_group(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingSearchCountResponse.searching_players_by_group)
  return searching_players_by_group_.Get(index);
}
inline void CMsgMatchmakingSearchCountResponse::set_searching_players_by_group(int index, ::google::protobuf::uint32 value) {
  searching_players_by_group_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgMatchmakingSearchCountResponse.searching_players_by_group)
}
inline void CMsgMatchmakingSearchCountResponse::add_searching_players_by_group(::google::protobuf::uint32 value) {
  searching_players_by_group_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgMatchmakingSearchCountResponse.searching_players_by_group)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgMatchmakingSearchCountResponse::searching_players_by_group() const {
  // @@protoc_insertion_point(field_list:CMsgMatchmakingSearchCountResponse.searching_players_by_group)
  return searching_players_by_group_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgMatchmakingSearchCountResponse::mutable_searching_players_by_group() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMatchmakingSearchCountResponse.searching_players_by_group)
  return &searching_players_by_group_;
}

// -------------------------------------------------------------------

// CMsgKickedFromMatchmakingQueue

// -------------------------------------------------------------------

// CMsgTFPlayerFailedToConnect

// repeated fixed64 failed_loaders = 1;
inline int CMsgTFPlayerFailedToConnect::failed_loaders_size() const {
  return failed_loaders_.size();
}
inline void CMsgTFPlayerFailedToConnect::clear_failed_loaders() {
  failed_loaders_.Clear();
}
inline ::google::protobuf::uint64 CMsgTFPlayerFailedToConnect::failed_loaders(int index) const {
  // @@protoc_insertion_point(field_get:CMsgTFPlayerFailedToConnect.failed_loaders)
  return failed_loaders_.Get(index);
}
inline void CMsgTFPlayerFailedToConnect::set_failed_loaders(int index, ::google::protobuf::uint64 value) {
  failed_loaders_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgTFPlayerFailedToConnect.failed_loaders)
}
inline void CMsgTFPlayerFailedToConnect::add_failed_loaders(::google::protobuf::uint64 value) {
  failed_loaders_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgTFPlayerFailedToConnect.failed_loaders)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgTFPlayerFailedToConnect::failed_loaders() const {
  // @@protoc_insertion_point(field_list:CMsgTFPlayerFailedToConnect.failed_loaders)
  return failed_loaders_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgTFPlayerFailedToConnect::mutable_failed_loaders() {
  // @@protoc_insertion_point(field_mutable_list:CMsgTFPlayerFailedToConnect.failed_loaders)
  return &failed_loaders_;
}

// -------------------------------------------------------------------

// CMsgTFJoinChatChannel

// optional string persona_name = 1;
inline bool CMsgTFJoinChatChannel::has_persona_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFJoinChatChannel::set_has_persona_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFJoinChatChannel::clear_has_persona_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFJoinChatChannel::clear_persona_name() {
  if (persona_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_->clear();
  }
  clear_has_persona_name();
}
inline const ::std::string& CMsgTFJoinChatChannel::persona_name() const {
  // @@protoc_insertion_point(field_get:CMsgTFJoinChatChannel.persona_name)
  return *persona_name_;
}
inline void CMsgTFJoinChatChannel::set_persona_name(const ::std::string& value) {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_ = new ::std::string;
  }
  persona_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgTFJoinChatChannel.persona_name)
}
inline void CMsgTFJoinChatChannel::set_persona_name(const char* value) {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_ = new ::std::string;
  }
  persona_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgTFJoinChatChannel.persona_name)
}
inline void CMsgTFJoinChatChannel::set_persona_name(const char* value, size_t size) {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_ = new ::std::string;
  }
  persona_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgTFJoinChatChannel.persona_name)
}
inline ::std::string* CMsgTFJoinChatChannel::mutable_persona_name() {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgTFJoinChatChannel.persona_name)
  return persona_name_;
}
inline ::std::string* CMsgTFJoinChatChannel::release_persona_name() {
  clear_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = persona_name_;
    persona_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgTFJoinChatChannel::set_allocated_persona_name(::std::string* persona_name) {
  if (persona_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete persona_name_;
  }
  if (persona_name) {
    set_has_persona_name();
    persona_name_ = persona_name;
  } else {
    clear_has_persona_name();
    persona_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgTFJoinChatChannel.persona_name)
}

// optional string channel_name = 2;
inline bool CMsgTFJoinChatChannel::has_channel_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFJoinChatChannel::set_has_channel_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFJoinChatChannel::clear_has_channel_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFJoinChatChannel::clear_channel_name() {
  if (channel_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_->clear();
  }
  clear_has_channel_name();
}
inline const ::std::string& CMsgTFJoinChatChannel::channel_name() const {
  // @@protoc_insertion_point(field_get:CMsgTFJoinChatChannel.channel_name)
  return *channel_name_;
}
inline void CMsgTFJoinChatChannel::set_channel_name(const ::std::string& value) {
  set_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_ = new ::std::string;
  }
  channel_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgTFJoinChatChannel.channel_name)
}
inline void CMsgTFJoinChatChannel::set_channel_name(const char* value) {
  set_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_ = new ::std::string;
  }
  channel_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgTFJoinChatChannel.channel_name)
}
inline void CMsgTFJoinChatChannel::set_channel_name(const char* value, size_t size) {
  set_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_ = new ::std::string;
  }
  channel_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgTFJoinChatChannel.channel_name)
}
inline ::std::string* CMsgTFJoinChatChannel::mutable_channel_name() {
  set_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgTFJoinChatChannel.channel_name)
  return channel_name_;
}
inline ::std::string* CMsgTFJoinChatChannel::release_channel_name() {
  clear_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = channel_name_;
    channel_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgTFJoinChatChannel::set_allocated_channel_name(::std::string* channel_name) {
  if (channel_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete channel_name_;
  }
  if (channel_name) {
    set_has_channel_name();
    channel_name_ = channel_name;
  } else {
    clear_has_channel_name();
    channel_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgTFJoinChatChannel.channel_name)
}

// optional string password = 3;
inline bool CMsgTFJoinChatChannel::has_password() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTFJoinChatChannel::set_has_password() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgTFJoinChatChannel::clear_has_password() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgTFJoinChatChannel::clear_password() {
  if (password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_->clear();
  }
  clear_has_password();
}
inline const ::std::string& CMsgTFJoinChatChannel::password() const {
  // @@protoc_insertion_point(field_get:CMsgTFJoinChatChannel.password)
  return *password_;
}
inline void CMsgTFJoinChatChannel::set_password(const ::std::string& value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  password_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgTFJoinChatChannel.password)
}
inline void CMsgTFJoinChatChannel::set_password(const char* value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  password_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgTFJoinChatChannel.password)
}
inline void CMsgTFJoinChatChannel::set_password(const char* value, size_t size) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgTFJoinChatChannel.password)
}
inline ::std::string* CMsgTFJoinChatChannel::mutable_password() {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgTFJoinChatChannel.password)
  return password_;
}
inline ::std::string* CMsgTFJoinChatChannel::release_password() {
  clear_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = password_;
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgTFJoinChatChannel::set_allocated_password(::std::string* password) {
  if (password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete password_;
  }
  if (password) {
    set_has_password();
    password_ = password;
  } else {
    clear_has_password();
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgTFJoinChatChannel.password)
}

// optional .ChatChannelType_t channel_type = 4 [default = ChatChannelType_Regional];
inline bool CMsgTFJoinChatChannel::has_channel_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgTFJoinChatChannel::set_has_channel_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgTFJoinChatChannel::clear_has_channel_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgTFJoinChatChannel::clear_channel_type() {
  channel_type_ = 0;
  clear_has_channel_type();
}
inline ::ChatChannelType_t CMsgTFJoinChatChannel::channel_type() const {
  // @@protoc_insertion_point(field_get:CMsgTFJoinChatChannel.channel_type)
  return static_cast< ::ChatChannelType_t >(channel_type_);
}
inline void CMsgTFJoinChatChannel::set_channel_type(::ChatChannelType_t value) {
  assert(::ChatChannelType_t_IsValid(value));
  set_has_channel_type();
  channel_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFJoinChatChannel.channel_type)
}

// -------------------------------------------------------------------

// CMsgTFLeaveChatChannel

// optional string channel_name = 1;
inline bool CMsgTFLeaveChatChannel::has_channel_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFLeaveChatChannel::set_has_channel_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFLeaveChatChannel::clear_has_channel_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFLeaveChatChannel::clear_channel_name() {
  if (channel_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_->clear();
  }
  clear_has_channel_name();
}
inline const ::std::string& CMsgTFLeaveChatChannel::channel_name() const {
  // @@protoc_insertion_point(field_get:CMsgTFLeaveChatChannel.channel_name)
  return *channel_name_;
}
inline void CMsgTFLeaveChatChannel::set_channel_name(const ::std::string& value) {
  set_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_ = new ::std::string;
  }
  channel_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgTFLeaveChatChannel.channel_name)
}
inline void CMsgTFLeaveChatChannel::set_channel_name(const char* value) {
  set_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_ = new ::std::string;
  }
  channel_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgTFLeaveChatChannel.channel_name)
}
inline void CMsgTFLeaveChatChannel::set_channel_name(const char* value, size_t size) {
  set_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_ = new ::std::string;
  }
  channel_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgTFLeaveChatChannel.channel_name)
}
inline ::std::string* CMsgTFLeaveChatChannel::mutable_channel_name() {
  set_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgTFLeaveChatChannel.channel_name)
  return channel_name_;
}
inline ::std::string* CMsgTFLeaveChatChannel::release_channel_name() {
  clear_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = channel_name_;
    channel_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgTFLeaveChatChannel::set_allocated_channel_name(::std::string* channel_name) {
  if (channel_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete channel_name_;
  }
  if (channel_name) {
    set_has_channel_name();
    channel_name_ = channel_name;
  } else {
    clear_has_channel_name();
    channel_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgTFLeaveChatChannel.channel_name)
}

// -------------------------------------------------------------------

// CMsgTFJoinChatChannelResponse_ChatMember

// optional fixed64 steam_id = 1;
inline bool CMsgTFJoinChatChannelResponse_ChatMember::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFJoinChatChannelResponse_ChatMember::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFJoinChatChannelResponse_ChatMember::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFJoinChatChannelResponse_ChatMember::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgTFJoinChatChannelResponse_ChatMember::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgTFJoinChatChannelResponse.ChatMember.steam_id)
  return steam_id_;
}
inline void CMsgTFJoinChatChannelResponse_ChatMember::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFJoinChatChannelResponse.ChatMember.steam_id)
}

// optional string persona_name = 2;
inline bool CMsgTFJoinChatChannelResponse_ChatMember::has_persona_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFJoinChatChannelResponse_ChatMember::set_has_persona_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFJoinChatChannelResponse_ChatMember::clear_has_persona_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFJoinChatChannelResponse_ChatMember::clear_persona_name() {
  if (persona_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_->clear();
  }
  clear_has_persona_name();
}
inline const ::std::string& CMsgTFJoinChatChannelResponse_ChatMember::persona_name() const {
  // @@protoc_insertion_point(field_get:CMsgTFJoinChatChannelResponse.ChatMember.persona_name)
  return *persona_name_;
}
inline void CMsgTFJoinChatChannelResponse_ChatMember::set_persona_name(const ::std::string& value) {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_ = new ::std::string;
  }
  persona_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgTFJoinChatChannelResponse.ChatMember.persona_name)
}
inline void CMsgTFJoinChatChannelResponse_ChatMember::set_persona_name(const char* value) {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_ = new ::std::string;
  }
  persona_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgTFJoinChatChannelResponse.ChatMember.persona_name)
}
inline void CMsgTFJoinChatChannelResponse_ChatMember::set_persona_name(const char* value, size_t size) {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_ = new ::std::string;
  }
  persona_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgTFJoinChatChannelResponse.ChatMember.persona_name)
}
inline ::std::string* CMsgTFJoinChatChannelResponse_ChatMember::mutable_persona_name() {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgTFJoinChatChannelResponse.ChatMember.persona_name)
  return persona_name_;
}
inline ::std::string* CMsgTFJoinChatChannelResponse_ChatMember::release_persona_name() {
  clear_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = persona_name_;
    persona_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgTFJoinChatChannelResponse_ChatMember::set_allocated_persona_name(::std::string* persona_name) {
  if (persona_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete persona_name_;
  }
  if (persona_name) {
    set_has_persona_name();
    persona_name_ = persona_name;
  } else {
    clear_has_persona_name();
    persona_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgTFJoinChatChannelResponse.ChatMember.persona_name)
}

// -------------------------------------------------------------------

// CMsgTFJoinChatChannelResponse

// optional uint32 response = 1;
inline bool CMsgTFJoinChatChannelResponse::has_response() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFJoinChatChannelResponse::set_has_response() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFJoinChatChannelResponse::clear_has_response() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFJoinChatChannelResponse::clear_response() {
  response_ = 0u;
  clear_has_response();
}
inline ::google::protobuf::uint32 CMsgTFJoinChatChannelResponse::response() const {
  // @@protoc_insertion_point(field_get:CMsgTFJoinChatChannelResponse.response)
  return response_;
}
inline void CMsgTFJoinChatChannelResponse::set_response(::google::protobuf::uint32 value) {
  set_has_response();
  response_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFJoinChatChannelResponse.response)
}

// optional string channel_name = 2;
inline bool CMsgTFJoinChatChannelResponse::has_channel_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFJoinChatChannelResponse::set_has_channel_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFJoinChatChannelResponse::clear_has_channel_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFJoinChatChannelResponse::clear_channel_name() {
  if (channel_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_->clear();
  }
  clear_has_channel_name();
}
inline const ::std::string& CMsgTFJoinChatChannelResponse::channel_name() const {
  // @@protoc_insertion_point(field_get:CMsgTFJoinChatChannelResponse.channel_name)
  return *channel_name_;
}
inline void CMsgTFJoinChatChannelResponse::set_channel_name(const ::std::string& value) {
  set_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_ = new ::std::string;
  }
  channel_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgTFJoinChatChannelResponse.channel_name)
}
inline void CMsgTFJoinChatChannelResponse::set_channel_name(const char* value) {
  set_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_ = new ::std::string;
  }
  channel_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgTFJoinChatChannelResponse.channel_name)
}
inline void CMsgTFJoinChatChannelResponse::set_channel_name(const char* value, size_t size) {
  set_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_ = new ::std::string;
  }
  channel_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgTFJoinChatChannelResponse.channel_name)
}
inline ::std::string* CMsgTFJoinChatChannelResponse::mutable_channel_name() {
  set_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgTFJoinChatChannelResponse.channel_name)
  return channel_name_;
}
inline ::std::string* CMsgTFJoinChatChannelResponse::release_channel_name() {
  clear_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = channel_name_;
    channel_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgTFJoinChatChannelResponse::set_allocated_channel_name(::std::string* channel_name) {
  if (channel_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete channel_name_;
  }
  if (channel_name) {
    set_has_channel_name();
    channel_name_ = channel_name;
  } else {
    clear_has_channel_name();
    channel_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgTFJoinChatChannelResponse.channel_name)
}

// optional fixed64 channel_id = 3;
inline bool CMsgTFJoinChatChannelResponse::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTFJoinChatChannelResponse::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgTFJoinChatChannelResponse::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgTFJoinChatChannelResponse::clear_channel_id() {
  channel_id_ = GOOGLE_ULONGLONG(0);
  clear_has_channel_id();
}
inline ::google::protobuf::uint64 CMsgTFJoinChatChannelResponse::channel_id() const {
  // @@protoc_insertion_point(field_get:CMsgTFJoinChatChannelResponse.channel_id)
  return channel_id_;
}
inline void CMsgTFJoinChatChannelResponse::set_channel_id(::google::protobuf::uint64 value) {
  set_has_channel_id();
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFJoinChatChannelResponse.channel_id)
}

// optional uint32 max_members = 4;
inline bool CMsgTFJoinChatChannelResponse::has_max_members() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgTFJoinChatChannelResponse::set_has_max_members() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgTFJoinChatChannelResponse::clear_has_max_members() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgTFJoinChatChannelResponse::clear_max_members() {
  max_members_ = 0u;
  clear_has_max_members();
}
inline ::google::protobuf::uint32 CMsgTFJoinChatChannelResponse::max_members() const {
  // @@protoc_insertion_point(field_get:CMsgTFJoinChatChannelResponse.max_members)
  return max_members_;
}
inline void CMsgTFJoinChatChannelResponse::set_max_members(::google::protobuf::uint32 value) {
  set_has_max_members();
  max_members_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFJoinChatChannelResponse.max_members)
}

// repeated .CMsgTFJoinChatChannelResponse.ChatMember members = 5;
inline int CMsgTFJoinChatChannelResponse::members_size() const {
  return members_.size();
}
inline void CMsgTFJoinChatChannelResponse::clear_members() {
  members_.Clear();
}
inline const ::CMsgTFJoinChatChannelResponse_ChatMember& CMsgTFJoinChatChannelResponse::members(int index) const {
  // @@protoc_insertion_point(field_get:CMsgTFJoinChatChannelResponse.members)
  return members_.Get(index);
}
inline ::CMsgTFJoinChatChannelResponse_ChatMember* CMsgTFJoinChatChannelResponse::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgTFJoinChatChannelResponse.members)
  return members_.Mutable(index);
}
inline ::CMsgTFJoinChatChannelResponse_ChatMember* CMsgTFJoinChatChannelResponse::add_members() {
  // @@protoc_insertion_point(field_add:CMsgTFJoinChatChannelResponse.members)
  return members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgTFJoinChatChannelResponse_ChatMember >&
CMsgTFJoinChatChannelResponse::members() const {
  // @@protoc_insertion_point(field_list:CMsgTFJoinChatChannelResponse.members)
  return members_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgTFJoinChatChannelResponse_ChatMember >*
CMsgTFJoinChatChannelResponse::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:CMsgTFJoinChatChannelResponse.members)
  return &members_;
}

// -------------------------------------------------------------------

// CMsgTFOtherJoinedChatChannel

// optional fixed64 channel_id = 1;
inline bool CMsgTFOtherJoinedChatChannel::has_channel_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFOtherJoinedChatChannel::set_has_channel_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFOtherJoinedChatChannel::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFOtherJoinedChatChannel::clear_channel_id() {
  channel_id_ = GOOGLE_ULONGLONG(0);
  clear_has_channel_id();
}
inline ::google::protobuf::uint64 CMsgTFOtherJoinedChatChannel::channel_id() const {
  // @@protoc_insertion_point(field_get:CMsgTFOtherJoinedChatChannel.channel_id)
  return channel_id_;
}
inline void CMsgTFOtherJoinedChatChannel::set_channel_id(::google::protobuf::uint64 value) {
  set_has_channel_id();
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFOtherJoinedChatChannel.channel_id)
}

// optional string persona_name = 2;
inline bool CMsgTFOtherJoinedChatChannel::has_persona_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFOtherJoinedChatChannel::set_has_persona_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFOtherJoinedChatChannel::clear_has_persona_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFOtherJoinedChatChannel::clear_persona_name() {
  if (persona_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_->clear();
  }
  clear_has_persona_name();
}
inline const ::std::string& CMsgTFOtherJoinedChatChannel::persona_name() const {
  // @@protoc_insertion_point(field_get:CMsgTFOtherJoinedChatChannel.persona_name)
  return *persona_name_;
}
inline void CMsgTFOtherJoinedChatChannel::set_persona_name(const ::std::string& value) {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_ = new ::std::string;
  }
  persona_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgTFOtherJoinedChatChannel.persona_name)
}
inline void CMsgTFOtherJoinedChatChannel::set_persona_name(const char* value) {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_ = new ::std::string;
  }
  persona_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgTFOtherJoinedChatChannel.persona_name)
}
inline void CMsgTFOtherJoinedChatChannel::set_persona_name(const char* value, size_t size) {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_ = new ::std::string;
  }
  persona_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgTFOtherJoinedChatChannel.persona_name)
}
inline ::std::string* CMsgTFOtherJoinedChatChannel::mutable_persona_name() {
  set_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    persona_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgTFOtherJoinedChatChannel.persona_name)
  return persona_name_;
}
inline ::std::string* CMsgTFOtherJoinedChatChannel::release_persona_name() {
  clear_has_persona_name();
  if (persona_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = persona_name_;
    persona_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgTFOtherJoinedChatChannel::set_allocated_persona_name(::std::string* persona_name) {
  if (persona_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete persona_name_;
  }
  if (persona_name) {
    set_has_persona_name();
    persona_name_ = persona_name;
  } else {
    clear_has_persona_name();
    persona_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgTFOtherJoinedChatChannel.persona_name)
}

// optional fixed64 steam_id = 3;
inline bool CMsgTFOtherJoinedChatChannel::has_steam_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTFOtherJoinedChatChannel::set_has_steam_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgTFOtherJoinedChatChannel::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgTFOtherJoinedChatChannel::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgTFOtherJoinedChatChannel::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgTFOtherJoinedChatChannel.steam_id)
  return steam_id_;
}
inline void CMsgTFOtherJoinedChatChannel::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFOtherJoinedChatChannel.steam_id)
}

// -------------------------------------------------------------------

// CMsgTFOtherLeftChatChannel

// optional fixed64 channel_id = 1;
inline bool CMsgTFOtherLeftChatChannel::has_channel_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFOtherLeftChatChannel::set_has_channel_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFOtherLeftChatChannel::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFOtherLeftChatChannel::clear_channel_id() {
  channel_id_ = GOOGLE_ULONGLONG(0);
  clear_has_channel_id();
}
inline ::google::protobuf::uint64 CMsgTFOtherLeftChatChannel::channel_id() const {
  // @@protoc_insertion_point(field_get:CMsgTFOtherLeftChatChannel.channel_id)
  return channel_id_;
}
inline void CMsgTFOtherLeftChatChannel::set_channel_id(::google::protobuf::uint64 value) {
  set_has_channel_id();
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFOtherLeftChatChannel.channel_id)
}

// optional fixed64 steam_id = 2;
inline bool CMsgTFOtherLeftChatChannel::has_steam_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFOtherLeftChatChannel::set_has_steam_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFOtherLeftChatChannel::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFOtherLeftChatChannel::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgTFOtherLeftChatChannel::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgTFOtherLeftChatChannel.steam_id)
  return steam_id_;
}
inline void CMsgTFOtherLeftChatChannel::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFOtherLeftChatChannel.steam_id)
}

// -------------------------------------------------------------------

// CMsgTFRequestDefaultChatChannel

// -------------------------------------------------------------------

// CMsgTFRequestDefaultChatChannelResponse

// optional string channel_name = 1;
inline bool CMsgTFRequestDefaultChatChannelResponse::has_channel_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFRequestDefaultChatChannelResponse::set_has_channel_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFRequestDefaultChatChannelResponse::clear_has_channel_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFRequestDefaultChatChannelResponse::clear_channel_name() {
  if (channel_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_->clear();
  }
  clear_has_channel_name();
}
inline const ::std::string& CMsgTFRequestDefaultChatChannelResponse::channel_name() const {
  // @@protoc_insertion_point(field_get:CMsgTFRequestDefaultChatChannelResponse.channel_name)
  return *channel_name_;
}
inline void CMsgTFRequestDefaultChatChannelResponse::set_channel_name(const ::std::string& value) {
  set_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_ = new ::std::string;
  }
  channel_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgTFRequestDefaultChatChannelResponse.channel_name)
}
inline void CMsgTFRequestDefaultChatChannelResponse::set_channel_name(const char* value) {
  set_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_ = new ::std::string;
  }
  channel_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgTFRequestDefaultChatChannelResponse.channel_name)
}
inline void CMsgTFRequestDefaultChatChannelResponse::set_channel_name(const char* value, size_t size) {
  set_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_ = new ::std::string;
  }
  channel_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgTFRequestDefaultChatChannelResponse.channel_name)
}
inline ::std::string* CMsgTFRequestDefaultChatChannelResponse::mutable_channel_name() {
  set_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgTFRequestDefaultChatChannelResponse.channel_name)
  return channel_name_;
}
inline ::std::string* CMsgTFRequestDefaultChatChannelResponse::release_channel_name() {
  clear_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = channel_name_;
    channel_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgTFRequestDefaultChatChannelResponse::set_allocated_channel_name(::std::string* channel_name) {
  if (channel_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete channel_name_;
  }
  if (channel_name) {
    set_has_channel_name();
    channel_name_ = channel_name;
  } else {
    clear_has_channel_name();
    channel_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgTFRequestDefaultChatChannelResponse.channel_name)
}

// optional fixed64 channel_id = 2;
inline bool CMsgTFRequestDefaultChatChannelResponse::has_channel_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFRequestDefaultChatChannelResponse::set_has_channel_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFRequestDefaultChatChannelResponse::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFRequestDefaultChatChannelResponse::clear_channel_id() {
  channel_id_ = GOOGLE_ULONGLONG(0);
  clear_has_channel_id();
}
inline ::google::protobuf::uint64 CMsgTFRequestDefaultChatChannelResponse::channel_id() const {
  // @@protoc_insertion_point(field_get:CMsgTFRequestDefaultChatChannelResponse.channel_id)
  return channel_id_;
}
inline void CMsgTFRequestDefaultChatChannelResponse::set_channel_id(::google::protobuf::uint64 value) {
  set_has_channel_id();
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFRequestDefaultChatChannelResponse.channel_id)
}

// -------------------------------------------------------------------

// CMsgTFRequestChatChannelList

// -------------------------------------------------------------------

// CMsgTFRequestChatChannelListResponse_ChatChannel

// optional string channel_name = 1;
inline bool CMsgTFRequestChatChannelListResponse_ChatChannel::has_channel_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTFRequestChatChannelListResponse_ChatChannel::set_has_channel_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTFRequestChatChannelListResponse_ChatChannel::clear_has_channel_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTFRequestChatChannelListResponse_ChatChannel::clear_channel_name() {
  if (channel_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_->clear();
  }
  clear_has_channel_name();
}
inline const ::std::string& CMsgTFRequestChatChannelListResponse_ChatChannel::channel_name() const {
  // @@protoc_insertion_point(field_get:CMsgTFRequestChatChannelListResponse.ChatChannel.channel_name)
  return *channel_name_;
}
inline void CMsgTFRequestChatChannelListResponse_ChatChannel::set_channel_name(const ::std::string& value) {
  set_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_ = new ::std::string;
  }
  channel_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgTFRequestChatChannelListResponse.ChatChannel.channel_name)
}
inline void CMsgTFRequestChatChannelListResponse_ChatChannel::set_channel_name(const char* value) {
  set_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_ = new ::std::string;
  }
  channel_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgTFRequestChatChannelListResponse.ChatChannel.channel_name)
}
inline void CMsgTFRequestChatChannelListResponse_ChatChannel::set_channel_name(const char* value, size_t size) {
  set_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_ = new ::std::string;
  }
  channel_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgTFRequestChatChannelListResponse.ChatChannel.channel_name)
}
inline ::std::string* CMsgTFRequestChatChannelListResponse_ChatChannel::mutable_channel_name() {
  set_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    channel_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgTFRequestChatChannelListResponse.ChatChannel.channel_name)
  return channel_name_;
}
inline ::std::string* CMsgTFRequestChatChannelListResponse_ChatChannel::release_channel_name() {
  clear_has_channel_name();
  if (channel_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = channel_name_;
    channel_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgTFRequestChatChannelListResponse_ChatChannel::set_allocated_channel_name(::std::string* channel_name) {
  if (channel_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete channel_name_;
  }
  if (channel_name) {
    set_has_channel_name();
    channel_name_ = channel_name;
  } else {
    clear_has_channel_name();
    channel_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgTFRequestChatChannelListResponse.ChatChannel.channel_name)
}

// optional uint32 num_members = 2;
inline bool CMsgTFRequestChatChannelListResponse_ChatChannel::has_num_members() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTFRequestChatChannelListResponse_ChatChannel::set_has_num_members() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTFRequestChatChannelListResponse_ChatChannel::clear_has_num_members() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTFRequestChatChannelListResponse_ChatChannel::clear_num_members() {
  num_members_ = 0u;
  clear_has_num_members();
}
inline ::google::protobuf::uint32 CMsgTFRequestChatChannelListResponse_ChatChannel::num_members() const {
  // @@protoc_insertion_point(field_get:CMsgTFRequestChatChannelListResponse.ChatChannel.num_members)
  return num_members_;
}
inline void CMsgTFRequestChatChannelListResponse_ChatChannel::set_num_members(::google::protobuf::uint32 value) {
  set_has_num_members();
  num_members_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFRequestChatChannelListResponse.ChatChannel.num_members)
}

// optional .ChatChannelType_t channel_type = 3 [default = ChatChannelType_Regional];
inline bool CMsgTFRequestChatChannelListResponse_ChatChannel::has_channel_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTFRequestChatChannelListResponse_ChatChannel::set_has_channel_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgTFRequestChatChannelListResponse_ChatChannel::clear_has_channel_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgTFRequestChatChannelListResponse_ChatChannel::clear_channel_type() {
  channel_type_ = 0;
  clear_has_channel_type();
}
inline ::ChatChannelType_t CMsgTFRequestChatChannelListResponse_ChatChannel::channel_type() const {
  // @@protoc_insertion_point(field_get:CMsgTFRequestChatChannelListResponse.ChatChannel.channel_type)
  return static_cast< ::ChatChannelType_t >(channel_type_);
}
inline void CMsgTFRequestChatChannelListResponse_ChatChannel::set_channel_type(::ChatChannelType_t value) {
  assert(::ChatChannelType_t_IsValid(value));
  set_has_channel_type();
  channel_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgTFRequestChatChannelListResponse.ChatChannel.channel_type)
}

// -------------------------------------------------------------------

// CMsgTFRequestChatChannelListResponse

// repeated .CMsgTFRequestChatChannelListResponse.ChatChannel channels = 1;
inline int CMsgTFRequestChatChannelListResponse::channels_size() const {
  return channels_.size();
}
inline void CMsgTFRequestChatChannelListResponse::clear_channels() {
  channels_.Clear();
}
inline const ::CMsgTFRequestChatChannelListResponse_ChatChannel& CMsgTFRequestChatChannelListResponse::channels(int index) const {
  // @@protoc_insertion_point(field_get:CMsgTFRequestChatChannelListResponse.channels)
  return channels_.Get(index);
}
inline ::CMsgTFRequestChatChannelListResponse_ChatChannel* CMsgTFRequestChatChannelListResponse::mutable_channels(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgTFRequestChatChannelListResponse.channels)
  return channels_.Mutable(index);
}
inline ::CMsgTFRequestChatChannelListResponse_ChatChannel* CMsgTFRequestChatChannelListResponse::add_channels() {
  // @@protoc_insertion_point(field_add:CMsgTFRequestChatChannelListResponse.channels)
  return channels_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgTFRequestChatChannelListResponse_ChatChannel >&
CMsgTFRequestChatChannelListResponse::channels() const {
  // @@protoc_insertion_point(field_list:CMsgTFRequestChatChannelListResponse.channels)
  return channels_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgTFRequestChatChannelListResponse_ChatChannel >*
CMsgTFRequestChatChannelListResponse::mutable_channels() {
  // @@protoc_insertion_point(field_mutable_list:CMsgTFRequestChatChannelListResponse.channels)
  return &channels_;
}

// -------------------------------------------------------------------

// CMsgGameServerMatchmakingStatus_Player

// optional fixed64 steam_id = 1;
inline bool CMsgGameServerMatchmakingStatus_Player::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGameServerMatchmakingStatus_Player::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGameServerMatchmakingStatus_Player::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGameServerMatchmakingStatus_Player::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgGameServerMatchmakingStatus_Player::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.Player.steam_id)
  return steam_id_;
}
inline void CMsgGameServerMatchmakingStatus_Player::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.Player.steam_id)
}

// optional .CMsgGameServerMatchmakingStatus.PlayerConnectState connect_state = 2 [default = INVALID];
inline bool CMsgGameServerMatchmakingStatus_Player::has_connect_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGameServerMatchmakingStatus_Player::set_has_connect_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGameServerMatchmakingStatus_Player::clear_has_connect_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGameServerMatchmakingStatus_Player::clear_connect_state() {
  connect_state_ = 0;
  clear_has_connect_state();
}
inline ::CMsgGameServerMatchmakingStatus_PlayerConnectState CMsgGameServerMatchmakingStatus_Player::connect_state() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.Player.connect_state)
  return static_cast< ::CMsgGameServerMatchmakingStatus_PlayerConnectState >(connect_state_);
}
inline void CMsgGameServerMatchmakingStatus_Player::set_connect_state(::CMsgGameServerMatchmakingStatus_PlayerConnectState value) {
  assert(::CMsgGameServerMatchmakingStatus_PlayerConnectState_IsValid(value));
  set_has_connect_state();
  connect_state_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.Player.connect_state)
}

// -------------------------------------------------------------------

// CMsgGameServerMatchmakingStatus

// optional uint32 server_version = 16 [default = 1225];
inline bool CMsgGameServerMatchmakingStatus::has_server_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_server_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_server_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGameServerMatchmakingStatus::clear_server_version() {
  server_version_ = 1225u;
  clear_has_server_version();
}
inline ::google::protobuf::uint32 CMsgGameServerMatchmakingStatus::server_version() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.server_version)
  return server_version_;
}
inline void CMsgGameServerMatchmakingStatus::set_server_version(::google::protobuf::uint32 value) {
  set_has_server_version();
  server_version_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.server_version)
}

// optional .ServerMatchmakingState matchmaking_state = 1 [default = ServerMatchmakingState_INVALID];
inline bool CMsgGameServerMatchmakingStatus::has_matchmaking_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_matchmaking_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_matchmaking_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGameServerMatchmakingStatus::clear_matchmaking_state() {
  matchmaking_state_ = 0;
  clear_has_matchmaking_state();
}
inline ::ServerMatchmakingState CMsgGameServerMatchmakingStatus::matchmaking_state() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.matchmaking_state)
  return static_cast< ::ServerMatchmakingState >(matchmaking_state_);
}
inline void CMsgGameServerMatchmakingStatus::set_matchmaking_state(::ServerMatchmakingState value) {
  assert(::ServerMatchmakingState_IsValid(value));
  set_has_matchmaking_state();
  matchmaking_state_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.matchmaking_state)
}

// optional .TF_MatchmakingMode matchmaking_mode = 2 [default = TF_Matchmaking_INVALID];
inline bool CMsgGameServerMatchmakingStatus::has_matchmaking_mode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_matchmaking_mode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_matchmaking_mode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGameServerMatchmakingStatus::clear_matchmaking_mode() {
  matchmaking_mode_ = 0;
  clear_has_matchmaking_mode();
}
inline ::TF_MatchmakingMode CMsgGameServerMatchmakingStatus::matchmaking_mode() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.matchmaking_mode)
  return static_cast< ::TF_MatchmakingMode >(matchmaking_mode_);
}
inline void CMsgGameServerMatchmakingStatus::set_matchmaking_mode(::TF_MatchmakingMode value) {
  assert(::TF_MatchmakingMode_IsValid(value));
  set_has_matchmaking_mode();
  matchmaking_mode_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.matchmaking_mode)
}

// optional string map = 3;
inline bool CMsgGameServerMatchmakingStatus::has_map() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_map() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_map() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGameServerMatchmakingStatus::clear_map() {
  if (map_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    map_->clear();
  }
  clear_has_map();
}
inline const ::std::string& CMsgGameServerMatchmakingStatus::map() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.map)
  return *map_;
}
inline void CMsgGameServerMatchmakingStatus::set_map(const ::std::string& value) {
  set_has_map();
  if (map_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    map_ = new ::std::string;
  }
  map_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.map)
}
inline void CMsgGameServerMatchmakingStatus::set_map(const char* value) {
  set_has_map();
  if (map_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    map_ = new ::std::string;
  }
  map_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGameServerMatchmakingStatus.map)
}
inline void CMsgGameServerMatchmakingStatus::set_map(const char* value, size_t size) {
  set_has_map();
  if (map_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    map_ = new ::std::string;
  }
  map_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGameServerMatchmakingStatus.map)
}
inline ::std::string* CMsgGameServerMatchmakingStatus::mutable_map() {
  set_has_map();
  if (map_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    map_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGameServerMatchmakingStatus.map)
  return map_;
}
inline ::std::string* CMsgGameServerMatchmakingStatus::release_map() {
  clear_has_map();
  if (map_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = map_;
    map_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGameServerMatchmakingStatus::set_allocated_map(::std::string* map) {
  if (map_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete map_;
  }
  if (map) {
    set_has_map();
    map_ = map;
  } else {
    clear_has_map();
    map_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGameServerMatchmakingStatus.map)
}

// optional string tags = 4;
inline bool CMsgGameServerMatchmakingStatus::has_tags() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_tags() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_tags() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGameServerMatchmakingStatus::clear_tags() {
  if (tags_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tags_->clear();
  }
  clear_has_tags();
}
inline const ::std::string& CMsgGameServerMatchmakingStatus::tags() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.tags)
  return *tags_;
}
inline void CMsgGameServerMatchmakingStatus::set_tags(const ::std::string& value) {
  set_has_tags();
  if (tags_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tags_ = new ::std::string;
  }
  tags_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.tags)
}
inline void CMsgGameServerMatchmakingStatus::set_tags(const char* value) {
  set_has_tags();
  if (tags_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tags_ = new ::std::string;
  }
  tags_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgGameServerMatchmakingStatus.tags)
}
inline void CMsgGameServerMatchmakingStatus::set_tags(const char* value, size_t size) {
  set_has_tags();
  if (tags_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tags_ = new ::std::string;
  }
  tags_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgGameServerMatchmakingStatus.tags)
}
inline ::std::string* CMsgGameServerMatchmakingStatus::mutable_tags() {
  set_has_tags();
  if (tags_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tags_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgGameServerMatchmakingStatus.tags)
  return tags_;
}
inline ::std::string* CMsgGameServerMatchmakingStatus::release_tags() {
  clear_has_tags();
  if (tags_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = tags_;
    tags_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgGameServerMatchmakingStatus::set_allocated_tags(::std::string* tags) {
  if (tags_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tags_;
  }
  if (tags) {
    set_has_tags();
    tags_ = tags;
  } else {
    clear_has_tags();
    tags_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgGameServerMatchmakingStatus.tags)
}

// optional uint32 bot_count = 5;
inline bool CMsgGameServerMatchmakingStatus::has_bot_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_bot_count() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_bot_count() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgGameServerMatchmakingStatus::clear_bot_count() {
  bot_count_ = 0u;
  clear_has_bot_count();
}
inline ::google::protobuf::uint32 CMsgGameServerMatchmakingStatus::bot_count() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.bot_count)
  return bot_count_;
}
inline void CMsgGameServerMatchmakingStatus::set_bot_count(::google::protobuf::uint32 value) {
  set_has_bot_count();
  bot_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.bot_count)
}

// optional uint32 num_spectators = 6;
inline bool CMsgGameServerMatchmakingStatus::has_num_spectators() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_num_spectators() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_num_spectators() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgGameServerMatchmakingStatus::clear_num_spectators() {
  num_spectators_ = 0u;
  clear_has_num_spectators();
}
inline ::google::protobuf::uint32 CMsgGameServerMatchmakingStatus::num_spectators() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.num_spectators)
  return num_spectators_;
}
inline void CMsgGameServerMatchmakingStatus::set_num_spectators(::google::protobuf::uint32 value) {
  set_has_num_spectators();
  num_spectators_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.num_spectators)
}

// optional uint32 max_players = 7;
inline bool CMsgGameServerMatchmakingStatus::has_max_players() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_max_players() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_max_players() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgGameServerMatchmakingStatus::clear_max_players() {
  max_players_ = 0u;
  clear_has_max_players();
}
inline ::google::protobuf::uint32 CMsgGameServerMatchmakingStatus::max_players() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.max_players)
  return max_players_;
}
inline void CMsgGameServerMatchmakingStatus::set_max_players(::google::protobuf::uint32 value) {
  set_has_max_players();
  max_players_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.max_players)
}

// optional uint32 slots_free = 8;
inline bool CMsgGameServerMatchmakingStatus::has_slots_free() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_slots_free() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_slots_free() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgGameServerMatchmakingStatus::clear_slots_free() {
  slots_free_ = 0u;
  clear_has_slots_free();
}
inline ::google::protobuf::uint32 CMsgGameServerMatchmakingStatus::slots_free() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.slots_free)
  return slots_free_;
}
inline void CMsgGameServerMatchmakingStatus::set_slots_free(::google::protobuf::uint32 value) {
  set_has_slots_free();
  slots_free_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.slots_free)
}

// optional uint32 server_region = 9;
inline bool CMsgGameServerMatchmakingStatus::has_server_region() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_server_region() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_server_region() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgGameServerMatchmakingStatus::clear_server_region() {
  server_region_ = 0u;
  clear_has_server_region();
}
inline ::google::protobuf::uint32 CMsgGameServerMatchmakingStatus::server_region() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.server_region)
  return server_region_;
}
inline void CMsgGameServerMatchmakingStatus::set_server_region(::google::protobuf::uint32 value) {
  set_has_server_region();
  server_region_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.server_region)
}

// optional float server_loadavg = 10;
inline bool CMsgGameServerMatchmakingStatus::has_server_loadavg() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_server_loadavg() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_server_loadavg() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgGameServerMatchmakingStatus::clear_server_loadavg() {
  server_loadavg_ = 0;
  clear_has_server_loadavg();
}
inline float CMsgGameServerMatchmakingStatus::server_loadavg() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.server_loadavg)
  return server_loadavg_;
}
inline void CMsgGameServerMatchmakingStatus::set_server_loadavg(float value) {
  set_has_server_loadavg();
  server_loadavg_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.server_loadavg)
}

// optional bool server_trusted = 11;
inline bool CMsgGameServerMatchmakingStatus::has_server_trusted() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_server_trusted() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_server_trusted() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgGameServerMatchmakingStatus::clear_server_trusted() {
  server_trusted_ = false;
  clear_has_server_trusted();
}
inline bool CMsgGameServerMatchmakingStatus::server_trusted() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.server_trusted)
  return server_trusted_;
}
inline void CMsgGameServerMatchmakingStatus::set_server_trusted(bool value) {
  set_has_server_trusted();
  server_trusted_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.server_trusted)
}

// optional bool server_dedicated = 12;
inline bool CMsgGameServerMatchmakingStatus::has_server_dedicated() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_server_dedicated() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_server_dedicated() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_server_dedicated() {
  server_dedicated_ = false;
  clear_has_server_dedicated();
}
inline bool CMsgGameServerMatchmakingStatus::server_dedicated() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.server_dedicated)
  return server_dedicated_;
}
inline void CMsgGameServerMatchmakingStatus::set_server_dedicated(bool value) {
  set_has_server_dedicated();
  server_dedicated_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.server_dedicated)
}

// optional uint32 strict = 17;
inline bool CMsgGameServerMatchmakingStatus::has_strict() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_strict() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_strict() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_strict() {
  strict_ = 0u;
  clear_has_strict();
}
inline ::google::protobuf::uint32 CMsgGameServerMatchmakingStatus::strict() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.strict)
  return strict_;
}
inline void CMsgGameServerMatchmakingStatus::set_strict(::google::protobuf::uint32 value) {
  set_has_strict();
  strict_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.strict)
}

// repeated .CMsgGameServerMatchmakingStatus.Player players = 13;
inline int CMsgGameServerMatchmakingStatus::players_size() const {
  return players_.size();
}
inline void CMsgGameServerMatchmakingStatus::clear_players() {
  players_.Clear();
}
inline const ::CMsgGameServerMatchmakingStatus_Player& CMsgGameServerMatchmakingStatus::players(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.players)
  return players_.Get(index);
}
inline ::CMsgGameServerMatchmakingStatus_Player* CMsgGameServerMatchmakingStatus::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGameServerMatchmakingStatus.players)
  return players_.Mutable(index);
}
inline ::CMsgGameServerMatchmakingStatus_Player* CMsgGameServerMatchmakingStatus::add_players() {
  // @@protoc_insertion_point(field_add:CMsgGameServerMatchmakingStatus.players)
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGameServerMatchmakingStatus_Player >&
CMsgGameServerMatchmakingStatus::players() const {
  // @@protoc_insertion_point(field_list:CMsgGameServerMatchmakingStatus.players)
  return players_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGameServerMatchmakingStatus_Player >*
CMsgGameServerMatchmakingStatus::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGameServerMatchmakingStatus.players)
  return &players_;
}

// optional .TF_GC_GameState game_state = 14 [default = TF_GC_GAMESTATE_STATE_INIT];
inline bool CMsgGameServerMatchmakingStatus::has_game_state() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_game_state() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_game_state() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_game_state() {
  game_state_ = 0;
  clear_has_game_state();
}
inline ::TF_GC_GameState CMsgGameServerMatchmakingStatus::game_state() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.game_state)
  return static_cast< ::TF_GC_GameState >(game_state_);
}
inline void CMsgGameServerMatchmakingStatus::set_game_state(::TF_GC_GameState value) {
  assert(::TF_GC_GameState_IsValid(value));
  set_has_game_state();
  game_state_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.game_state)
}

// optional .CMsgGameServerMatchmakingStatus.Event event = 15 [default = None];
inline bool CMsgGameServerMatchmakingStatus::has_event() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_event() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_event() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_event() {
  event_ = 0;
  clear_has_event();
}
inline ::CMsgGameServerMatchmakingStatus_Event CMsgGameServerMatchmakingStatus::event() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.event)
  return static_cast< ::CMsgGameServerMatchmakingStatus_Event >(event_);
}
inline void CMsgGameServerMatchmakingStatus::set_event(::CMsgGameServerMatchmakingStatus_Event value) {
  assert(::CMsgGameServerMatchmakingStatus_Event_IsValid(value));
  set_has_event();
  event_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.event)
}

// optional uint32 mvm_wave = 18;
inline bool CMsgGameServerMatchmakingStatus::has_mvm_wave() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_mvm_wave() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_mvm_wave() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_mvm_wave() {
  mvm_wave_ = 0u;
  clear_has_mvm_wave();
}
inline ::google::protobuf::uint32 CMsgGameServerMatchmakingStatus::mvm_wave() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.mvm_wave)
  return mvm_wave_;
}
inline void CMsgGameServerMatchmakingStatus::set_mvm_wave(::google::protobuf::uint32 value) {
  set_has_mvm_wave();
  mvm_wave_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.mvm_wave)
}

// optional uint32 mvm_credits_acquired = 19;
inline bool CMsgGameServerMatchmakingStatus::has_mvm_credits_acquired() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_mvm_credits_acquired() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_mvm_credits_acquired() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_mvm_credits_acquired() {
  mvm_credits_acquired_ = 0u;
  clear_has_mvm_credits_acquired();
}
inline ::google::protobuf::uint32 CMsgGameServerMatchmakingStatus::mvm_credits_acquired() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.mvm_credits_acquired)
  return mvm_credits_acquired_;
}
inline void CMsgGameServerMatchmakingStatus::set_mvm_credits_acquired(::google::protobuf::uint32 value) {
  set_has_mvm_credits_acquired();
  mvm_credits_acquired_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.mvm_credits_acquired)
}

// optional uint32 mvm_credits_dropped = 20;
inline bool CMsgGameServerMatchmakingStatus::has_mvm_credits_dropped() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_mvm_credits_dropped() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_mvm_credits_dropped() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_mvm_credits_dropped() {
  mvm_credits_dropped_ = 0u;
  clear_has_mvm_credits_dropped();
}
inline ::google::protobuf::uint32 CMsgGameServerMatchmakingStatus::mvm_credits_dropped() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.mvm_credits_dropped)
  return mvm_credits_dropped_;
}
inline void CMsgGameServerMatchmakingStatus::set_mvm_credits_dropped(::google::protobuf::uint32 value) {
  set_has_mvm_credits_dropped();
  mvm_credits_dropped_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.mvm_credits_dropped)
}

// optional uint32 skillrating_force_average = 21;
inline bool CMsgGameServerMatchmakingStatus::has_skillrating_force_average() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CMsgGameServerMatchmakingStatus::set_has_skillrating_force_average() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_has_skillrating_force_average() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CMsgGameServerMatchmakingStatus::clear_skillrating_force_average() {
  skillrating_force_average_ = 0u;
  clear_has_skillrating_force_average();
}
inline ::google::protobuf::uint32 CMsgGameServerMatchmakingStatus::skillrating_force_average() const {
  // @@protoc_insertion_point(field_get:CMsgGameServerMatchmakingStatus.skillrating_force_average)
  return skillrating_force_average_;
}
inline void CMsgGameServerMatchmakingStatus::set_skillrating_force_average(::google::protobuf::uint32 value) {
  set_has_skillrating_force_average();
  skillrating_force_average_ = value;
  // @@protoc_insertion_point(field_set:CMsgGameServerMatchmakingStatus.skillrating_force_average)
}

// -------------------------------------------------------------------

// CMsgMatchmakingProgress

// optional uint32 avg_wait_time_new = 4;
inline bool CMsgMatchmakingProgress::has_avg_wait_time_new() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_avg_wait_time_new() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgMatchmakingProgress::clear_has_avg_wait_time_new() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgMatchmakingProgress::clear_avg_wait_time_new() {
  avg_wait_time_new_ = 0u;
  clear_has_avg_wait_time_new();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::avg_wait_time_new() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.avg_wait_time_new)
  return avg_wait_time_new_;
}
inline void CMsgMatchmakingProgress::set_avg_wait_time_new(::google::protobuf::uint32 value) {
  set_has_avg_wait_time_new();
  avg_wait_time_new_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.avg_wait_time_new)
}

// optional uint32 avg_wait_time_join_late = 5;
inline bool CMsgMatchmakingProgress::has_avg_wait_time_join_late() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_avg_wait_time_join_late() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgMatchmakingProgress::clear_has_avg_wait_time_join_late() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgMatchmakingProgress::clear_avg_wait_time_join_late() {
  avg_wait_time_join_late_ = 0u;
  clear_has_avg_wait_time_join_late();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::avg_wait_time_join_late() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.avg_wait_time_join_late)
  return avg_wait_time_join_late_;
}
inline void CMsgMatchmakingProgress::set_avg_wait_time_join_late(::google::protobuf::uint32 value) {
  set_has_avg_wait_time_join_late();
  avg_wait_time_join_late_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.avg_wait_time_join_late)
}

// optional uint32 your_wait_time = 6;
inline bool CMsgMatchmakingProgress::has_your_wait_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_your_wait_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgMatchmakingProgress::clear_has_your_wait_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgMatchmakingProgress::clear_your_wait_time() {
  your_wait_time_ = 0u;
  clear_has_your_wait_time();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::your_wait_time() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.your_wait_time)
  return your_wait_time_;
}
inline void CMsgMatchmakingProgress::set_your_wait_time(::google::protobuf::uint32 value) {
  set_has_your_wait_time();
  your_wait_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.your_wait_time)
}

// optional uint32 matching_worldwide_searching_players = 8;
inline bool CMsgMatchmakingProgress::has_matching_worldwide_searching_players() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_matching_worldwide_searching_players() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgMatchmakingProgress::clear_has_matching_worldwide_searching_players() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgMatchmakingProgress::clear_matching_worldwide_searching_players() {
  matching_worldwide_searching_players_ = 0u;
  clear_has_matching_worldwide_searching_players();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::matching_worldwide_searching_players() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.matching_worldwide_searching_players)
  return matching_worldwide_searching_players_;
}
inline void CMsgMatchmakingProgress::set_matching_worldwide_searching_players(::google::protobuf::uint32 value) {
  set_has_matching_worldwide_searching_players();
  matching_worldwide_searching_players_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.matching_worldwide_searching_players)
}

// optional uint32 matching_near_you_searching_players = 9;
inline bool CMsgMatchmakingProgress::has_matching_near_you_searching_players() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_matching_near_you_searching_players() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgMatchmakingProgress::clear_has_matching_near_you_searching_players() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgMatchmakingProgress::clear_matching_near_you_searching_players() {
  matching_near_you_searching_players_ = 0u;
  clear_has_matching_near_you_searching_players();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::matching_near_you_searching_players() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.matching_near_you_searching_players)
  return matching_near_you_searching_players_;
}
inline void CMsgMatchmakingProgress::set_matching_near_you_searching_players(::google::protobuf::uint32 value) {
  set_has_matching_near_you_searching_players();
  matching_near_you_searching_players_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.matching_near_you_searching_players)
}

// optional uint32 total_worldwide_searching_players = 13;
inline bool CMsgMatchmakingProgress::has_total_worldwide_searching_players() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_total_worldwide_searching_players() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgMatchmakingProgress::clear_has_total_worldwide_searching_players() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgMatchmakingProgress::clear_total_worldwide_searching_players() {
  total_worldwide_searching_players_ = 0u;
  clear_has_total_worldwide_searching_players();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::total_worldwide_searching_players() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.total_worldwide_searching_players)
  return total_worldwide_searching_players_;
}
inline void CMsgMatchmakingProgress::set_total_worldwide_searching_players(::google::protobuf::uint32 value) {
  set_has_total_worldwide_searching_players();
  total_worldwide_searching_players_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.total_worldwide_searching_players)
}

// optional uint32 total_near_you_searching_players = 14;
inline bool CMsgMatchmakingProgress::has_total_near_you_searching_players() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_total_near_you_searching_players() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgMatchmakingProgress::clear_has_total_near_you_searching_players() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgMatchmakingProgress::clear_total_near_you_searching_players() {
  total_near_you_searching_players_ = 0u;
  clear_has_total_near_you_searching_players();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::total_near_you_searching_players() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.total_near_you_searching_players)
  return total_near_you_searching_players_;
}
inline void CMsgMatchmakingProgress::set_total_near_you_searching_players(::google::protobuf::uint32 value) {
  set_has_total_near_you_searching_players();
  total_near_you_searching_players_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.total_near_you_searching_players)
}

// optional uint32 matching_worldwide_active_players = 15;
inline bool CMsgMatchmakingProgress::has_matching_worldwide_active_players() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_matching_worldwide_active_players() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgMatchmakingProgress::clear_has_matching_worldwide_active_players() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgMatchmakingProgress::clear_matching_worldwide_active_players() {
  matching_worldwide_active_players_ = 0u;
  clear_has_matching_worldwide_active_players();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::matching_worldwide_active_players() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.matching_worldwide_active_players)
  return matching_worldwide_active_players_;
}
inline void CMsgMatchmakingProgress::set_matching_worldwide_active_players(::google::protobuf::uint32 value) {
  set_has_matching_worldwide_active_players();
  matching_worldwide_active_players_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.matching_worldwide_active_players)
}

// optional uint32 matching_near_you_active_players = 16;
inline bool CMsgMatchmakingProgress::has_matching_near_you_active_players() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_matching_near_you_active_players() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgMatchmakingProgress::clear_has_matching_near_you_active_players() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgMatchmakingProgress::clear_matching_near_you_active_players() {
  matching_near_you_active_players_ = 0u;
  clear_has_matching_near_you_active_players();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::matching_near_you_active_players() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.matching_near_you_active_players)
  return matching_near_you_active_players_;
}
inline void CMsgMatchmakingProgress::set_matching_near_you_active_players(::google::protobuf::uint32 value) {
  set_has_matching_near_you_active_players();
  matching_near_you_active_players_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.matching_near_you_active_players)
}

// optional uint32 total_worldwide_active_players = 17;
inline bool CMsgMatchmakingProgress::has_total_worldwide_active_players() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_total_worldwide_active_players() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgMatchmakingProgress::clear_has_total_worldwide_active_players() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgMatchmakingProgress::clear_total_worldwide_active_players() {
  total_worldwide_active_players_ = 0u;
  clear_has_total_worldwide_active_players();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::total_worldwide_active_players() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.total_worldwide_active_players)
  return total_worldwide_active_players_;
}
inline void CMsgMatchmakingProgress::set_total_worldwide_active_players(::google::protobuf::uint32 value) {
  set_has_total_worldwide_active_players();
  total_worldwide_active_players_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.total_worldwide_active_players)
}

// optional uint32 total_near_you_active_players = 18;
inline bool CMsgMatchmakingProgress::has_total_near_you_active_players() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_total_near_you_active_players() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgMatchmakingProgress::clear_has_total_near_you_active_players() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgMatchmakingProgress::clear_total_near_you_active_players() {
  total_near_you_active_players_ = 0u;
  clear_has_total_near_you_active_players();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::total_near_you_active_players() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.total_near_you_active_players)
  return total_near_you_active_players_;
}
inline void CMsgMatchmakingProgress::set_total_near_you_active_players(::google::protobuf::uint32 value) {
  set_has_total_near_you_active_players();
  total_near_you_active_players_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.total_near_you_active_players)
}

// optional uint32 matching_worldwide_empty_gameservers = 19;
inline bool CMsgMatchmakingProgress::has_matching_worldwide_empty_gameservers() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_matching_worldwide_empty_gameservers() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgMatchmakingProgress::clear_has_matching_worldwide_empty_gameservers() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgMatchmakingProgress::clear_matching_worldwide_empty_gameservers() {
  matching_worldwide_empty_gameservers_ = 0u;
  clear_has_matching_worldwide_empty_gameservers();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::matching_worldwide_empty_gameservers() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.matching_worldwide_empty_gameservers)
  return matching_worldwide_empty_gameservers_;
}
inline void CMsgMatchmakingProgress::set_matching_worldwide_empty_gameservers(::google::protobuf::uint32 value) {
  set_has_matching_worldwide_empty_gameservers();
  matching_worldwide_empty_gameservers_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.matching_worldwide_empty_gameservers)
}

// optional uint32 matching_near_you_empty_gameservers = 20;
inline bool CMsgMatchmakingProgress::has_matching_near_you_empty_gameservers() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_matching_near_you_empty_gameservers() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgMatchmakingProgress::clear_has_matching_near_you_empty_gameservers() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgMatchmakingProgress::clear_matching_near_you_empty_gameservers() {
  matching_near_you_empty_gameservers_ = 0u;
  clear_has_matching_near_you_empty_gameservers();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::matching_near_you_empty_gameservers() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.matching_near_you_empty_gameservers)
  return matching_near_you_empty_gameservers_;
}
inline void CMsgMatchmakingProgress::set_matching_near_you_empty_gameservers(::google::protobuf::uint32 value) {
  set_has_matching_near_you_empty_gameservers();
  matching_near_you_empty_gameservers_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.matching_near_you_empty_gameservers)
}

// optional uint32 total_worldwide_empty_gameservers = 21;
inline bool CMsgMatchmakingProgress::has_total_worldwide_empty_gameservers() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_total_worldwide_empty_gameservers() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgMatchmakingProgress::clear_has_total_worldwide_empty_gameservers() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgMatchmakingProgress::clear_total_worldwide_empty_gameservers() {
  total_worldwide_empty_gameservers_ = 0u;
  clear_has_total_worldwide_empty_gameservers();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::total_worldwide_empty_gameservers() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.total_worldwide_empty_gameservers)
  return total_worldwide_empty_gameservers_;
}
inline void CMsgMatchmakingProgress::set_total_worldwide_empty_gameservers(::google::protobuf::uint32 value) {
  set_has_total_worldwide_empty_gameservers();
  total_worldwide_empty_gameservers_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.total_worldwide_empty_gameservers)
}

// optional uint32 total_near_you_empty_gameservers = 22;
inline bool CMsgMatchmakingProgress::has_total_near_you_empty_gameservers() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_total_near_you_empty_gameservers() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgMatchmakingProgress::clear_has_total_near_you_empty_gameservers() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgMatchmakingProgress::clear_total_near_you_empty_gameservers() {
  total_near_you_empty_gameservers_ = 0u;
  clear_has_total_near_you_empty_gameservers();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::total_near_you_empty_gameservers() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.total_near_you_empty_gameservers)
  return total_near_you_empty_gameservers_;
}
inline void CMsgMatchmakingProgress::set_total_near_you_empty_gameservers(::google::protobuf::uint32 value) {
  set_has_total_near_you_empty_gameservers();
  total_near_you_empty_gameservers_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.total_near_you_empty_gameservers)
}

// optional uint32 urgency_pct = 1;
inline bool CMsgMatchmakingProgress::has_urgency_pct() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgMatchmakingProgress::set_has_urgency_pct() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMsgMatchmakingProgress::clear_has_urgency_pct() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMsgMatchmakingProgress::clear_urgency_pct() {
  urgency_pct_ = 0u;
  clear_has_urgency_pct();
}
inline ::google::protobuf::uint32 CMsgMatchmakingProgress::urgency_pct() const {
  // @@protoc_insertion_point(field_get:CMsgMatchmakingProgress.urgency_pct)
  return urgency_pct_;
}
inline void CMsgMatchmakingProgress::set_urgency_pct(::google::protobuf::uint32 value) {
  set_has_urgency_pct();
  urgency_pct_ = value;
  // @@protoc_insertion_point(field_set:CMsgMatchmakingProgress.urgency_pct)
}

// -------------------------------------------------------------------

// CMsgMvMVictoryInfo_Item

// optional .CMsgMvMVictoryInfo.GrantReason grant_reason = 1 [default = INVALID];
inline bool CMsgMvMVictoryInfo_Item::has_grant_reason() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgMvMVictoryInfo_Item::set_has_grant_reason() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgMvMVictoryInfo_Item::clear_has_grant_reason() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgMvMVictoryInfo_Item::clear_grant_reason() {
  grant_reason_ = 0;
  clear_has_grant_reason();
}
inline ::CMsgMvMVictoryInfo_GrantReason CMsgMvMVictoryInfo_Item::grant_reason() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictoryInfo.Item.grant_reason)
  return static_cast< ::CMsgMvMVictoryInfo_GrantReason >(grant_reason_);
}
inline void CMsgMvMVictoryInfo_Item::set_grant_reason(::CMsgMvMVictoryInfo_GrantReason value) {
  assert(::CMsgMvMVictoryInfo_GrantReason_IsValid(value));
  set_has_grant_reason();
  grant_reason_ = value;
  // @@protoc_insertion_point(field_set:CMsgMvMVictoryInfo.Item.grant_reason)
}

// optional bytes item_data = 2;
inline bool CMsgMvMVictoryInfo_Item::has_item_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgMvMVictoryInfo_Item::set_has_item_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgMvMVictoryInfo_Item::clear_has_item_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgMvMVictoryInfo_Item::clear_item_data() {
  if (item_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_data_->clear();
  }
  clear_has_item_data();
}
inline const ::std::string& CMsgMvMVictoryInfo_Item::item_data() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictoryInfo.Item.item_data)
  return *item_data_;
}
inline void CMsgMvMVictoryInfo_Item::set_item_data(const ::std::string& value) {
  set_has_item_data();
  if (item_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_data_ = new ::std::string;
  }
  item_data_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgMvMVictoryInfo.Item.item_data)
}
inline void CMsgMvMVictoryInfo_Item::set_item_data(const char* value) {
  set_has_item_data();
  if (item_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_data_ = new ::std::string;
  }
  item_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgMvMVictoryInfo.Item.item_data)
}
inline void CMsgMvMVictoryInfo_Item::set_item_data(const void* value, size_t size) {
  set_has_item_data();
  if (item_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_data_ = new ::std::string;
  }
  item_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgMvMVictoryInfo.Item.item_data)
}
inline ::std::string* CMsgMvMVictoryInfo_Item::mutable_item_data() {
  set_has_item_data();
  if (item_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    item_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgMvMVictoryInfo.Item.item_data)
  return item_data_;
}
inline ::std::string* CMsgMvMVictoryInfo_Item::release_item_data() {
  clear_has_item_data();
  if (item_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = item_data_;
    item_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgMvMVictoryInfo_Item::set_allocated_item_data(::std::string* item_data) {
  if (item_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete item_data_;
  }
  if (item_data) {
    set_has_item_data();
    item_data_ = item_data;
  } else {
    clear_has_item_data();
    item_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgMvMVictoryInfo.Item.item_data)
}

// optional fixed64 squad_surplus_claimer_steam_id = 3;
inline bool CMsgMvMVictoryInfo_Item::has_squad_surplus_claimer_steam_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgMvMVictoryInfo_Item::set_has_squad_surplus_claimer_steam_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgMvMVictoryInfo_Item::clear_has_squad_surplus_claimer_steam_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgMvMVictoryInfo_Item::clear_squad_surplus_claimer_steam_id() {
  squad_surplus_claimer_steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_squad_surplus_claimer_steam_id();
}
inline ::google::protobuf::uint64 CMsgMvMVictoryInfo_Item::squad_surplus_claimer_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictoryInfo.Item.squad_surplus_claimer_steam_id)
  return squad_surplus_claimer_steam_id_;
}
inline void CMsgMvMVictoryInfo_Item::set_squad_surplus_claimer_steam_id(::google::protobuf::uint64 value) {
  set_has_squad_surplus_claimer_steam_id();
  squad_surplus_claimer_steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgMvMVictoryInfo.Item.squad_surplus_claimer_steam_id)
}

// -------------------------------------------------------------------

// CMsgMvMVictoryInfo_Player

// optional fixed64 steam_id = 1;
inline bool CMsgMvMVictoryInfo_Player::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgMvMVictoryInfo_Player::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgMvMVictoryInfo_Player::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgMvMVictoryInfo_Player::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgMvMVictoryInfo_Player::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictoryInfo.Player.steam_id)
  return steam_id_;
}
inline void CMsgMvMVictoryInfo_Player::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgMvMVictoryInfo.Player.steam_id)
}

// optional bool badge_granted = 3;
inline bool CMsgMvMVictoryInfo_Player::has_badge_granted() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgMvMVictoryInfo_Player::set_has_badge_granted() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgMvMVictoryInfo_Player::clear_has_badge_granted() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgMvMVictoryInfo_Player::clear_badge_granted() {
  badge_granted_ = false;
  clear_has_badge_granted();
}
inline bool CMsgMvMVictoryInfo_Player::badge_granted() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictoryInfo.Player.badge_granted)
  return badge_granted_;
}
inline void CMsgMvMVictoryInfo_Player::set_badge_granted(bool value) {
  set_has_badge_granted();
  badge_granted_ = value;
  // @@protoc_insertion_point(field_set:CMsgMvMVictoryInfo.Player.badge_granted)
}

// optional bool badge_progress_updated = 4;
inline bool CMsgMvMVictoryInfo_Player::has_badge_progress_updated() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgMvMVictoryInfo_Player::set_has_badge_progress_updated() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgMvMVictoryInfo_Player::clear_has_badge_progress_updated() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgMvMVictoryInfo_Player::clear_badge_progress_updated() {
  badge_progress_updated_ = false;
  clear_has_badge_progress_updated();
}
inline bool CMsgMvMVictoryInfo_Player::badge_progress_updated() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictoryInfo.Player.badge_progress_updated)
  return badge_progress_updated_;
}
inline void CMsgMvMVictoryInfo_Player::set_badge_progress_updated(bool value) {
  set_has_badge_progress_updated();
  badge_progress_updated_ = value;
  // @@protoc_insertion_point(field_set:CMsgMvMVictoryInfo.Player.badge_progress_updated)
}

// optional bool badge_leveled = 5;
inline bool CMsgMvMVictoryInfo_Player::has_badge_leveled() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgMvMVictoryInfo_Player::set_has_badge_leveled() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgMvMVictoryInfo_Player::clear_has_badge_leveled() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgMvMVictoryInfo_Player::clear_badge_leveled() {
  badge_leveled_ = false;
  clear_has_badge_leveled();
}
inline bool CMsgMvMVictoryInfo_Player::badge_leveled() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictoryInfo.Player.badge_leveled)
  return badge_leveled_;
}
inline void CMsgMvMVictoryInfo_Player::set_badge_leveled(bool value) {
  set_has_badge_leveled();
  badge_leveled_ = value;
  // @@protoc_insertion_point(field_set:CMsgMvMVictoryInfo.Player.badge_leveled)
}

// optional uint32 badge_level = 6;
inline bool CMsgMvMVictoryInfo_Player::has_badge_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgMvMVictoryInfo_Player::set_has_badge_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgMvMVictoryInfo_Player::clear_has_badge_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgMvMVictoryInfo_Player::clear_badge_level() {
  badge_level_ = 0u;
  clear_has_badge_level();
}
inline ::google::protobuf::uint32 CMsgMvMVictoryInfo_Player::badge_level() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictoryInfo.Player.badge_level)
  return badge_level_;
}
inline void CMsgMvMVictoryInfo_Player::set_badge_level(::google::protobuf::uint32 value) {
  set_has_badge_level();
  badge_level_ = value;
  // @@protoc_insertion_point(field_set:CMsgMvMVictoryInfo.Player.badge_level)
}

// optional uint32 badge_progress_bits = 7;
inline bool CMsgMvMVictoryInfo_Player::has_badge_progress_bits() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgMvMVictoryInfo_Player::set_has_badge_progress_bits() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgMvMVictoryInfo_Player::clear_has_badge_progress_bits() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgMvMVictoryInfo_Player::clear_badge_progress_bits() {
  badge_progress_bits_ = 0u;
  clear_has_badge_progress_bits();
}
inline ::google::protobuf::uint32 CMsgMvMVictoryInfo_Player::badge_progress_bits() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictoryInfo.Player.badge_progress_bits)
  return badge_progress_bits_;
}
inline void CMsgMvMVictoryInfo_Player::set_badge_progress_bits(::google::protobuf::uint32 value) {
  set_has_badge_progress_bits();
  badge_progress_bits_ = value;
  // @@protoc_insertion_point(field_set:CMsgMvMVictoryInfo.Player.badge_progress_bits)
}

// repeated .CMsgMvMVictoryInfo.Item items = 8;
inline int CMsgMvMVictoryInfo_Player::items_size() const {
  return items_.size();
}
inline void CMsgMvMVictoryInfo_Player::clear_items() {
  items_.Clear();
}
inline const ::CMsgMvMVictoryInfo_Item& CMsgMvMVictoryInfo_Player::items(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictoryInfo.Player.items)
  return items_.Get(index);
}
inline ::CMsgMvMVictoryInfo_Item* CMsgMvMVictoryInfo_Player::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgMvMVictoryInfo.Player.items)
  return items_.Mutable(index);
}
inline ::CMsgMvMVictoryInfo_Item* CMsgMvMVictoryInfo_Player::add_items() {
  // @@protoc_insertion_point(field_add:CMsgMvMVictoryInfo.Player.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictoryInfo_Item >&
CMsgMvMVictoryInfo_Player::items() const {
  // @@protoc_insertion_point(field_list:CMsgMvMVictoryInfo.Player.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictoryInfo_Item >*
CMsgMvMVictoryInfo_Player::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMvMVictoryInfo.Player.items)
  return &items_;
}

// optional bool voucher_missing = 9;
inline bool CMsgMvMVictoryInfo_Player::has_voucher_missing() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgMvMVictoryInfo_Player::set_has_voucher_missing() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgMvMVictoryInfo_Player::clear_has_voucher_missing() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgMvMVictoryInfo_Player::clear_voucher_missing() {
  voucher_missing_ = false;
  clear_has_voucher_missing();
}
inline bool CMsgMvMVictoryInfo_Player::voucher_missing() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictoryInfo.Player.voucher_missing)
  return voucher_missing_;
}
inline void CMsgMvMVictoryInfo_Player::set_voucher_missing(bool value) {
  set_has_voucher_missing();
  voucher_missing_ = value;
  // @@protoc_insertion_point(field_set:CMsgMvMVictoryInfo.Player.voucher_missing)
}

// -------------------------------------------------------------------

// CMsgMvMVictoryInfo

// repeated .CMsgMvMVictoryInfo.Player players = 1;
inline int CMsgMvMVictoryInfo::players_size() const {
  return players_.size();
}
inline void CMsgMvMVictoryInfo::clear_players() {
  players_.Clear();
}
inline const ::CMsgMvMVictoryInfo_Player& CMsgMvMVictoryInfo::players(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictoryInfo.players)
  return players_.Get(index);
}
inline ::CMsgMvMVictoryInfo_Player* CMsgMvMVictoryInfo::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgMvMVictoryInfo.players)
  return players_.Mutable(index);
}
inline ::CMsgMvMVictoryInfo_Player* CMsgMvMVictoryInfo::add_players() {
  // @@protoc_insertion_point(field_add:CMsgMvMVictoryInfo.players)
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictoryInfo_Player >&
CMsgMvMVictoryInfo::players() const {
  // @@protoc_insertion_point(field_list:CMsgMvMVictoryInfo.players)
  return players_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictoryInfo_Player >*
CMsgMvMVictoryInfo::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMvMVictoryInfo.players)
  return &players_;
}

// optional string tour_name = 2;
inline bool CMsgMvMVictoryInfo::has_tour_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgMvMVictoryInfo::set_has_tour_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgMvMVictoryInfo::clear_has_tour_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgMvMVictoryInfo::clear_tour_name() {
  if (tour_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tour_name_->clear();
  }
  clear_has_tour_name();
}
inline const ::std::string& CMsgMvMVictoryInfo::tour_name() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictoryInfo.tour_name)
  return *tour_name_;
}
inline void CMsgMvMVictoryInfo::set_tour_name(const ::std::string& value) {
  set_has_tour_name();
  if (tour_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tour_name_ = new ::std::string;
  }
  tour_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgMvMVictoryInfo.tour_name)
}
inline void CMsgMvMVictoryInfo::set_tour_name(const char* value) {
  set_has_tour_name();
  if (tour_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tour_name_ = new ::std::string;
  }
  tour_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgMvMVictoryInfo.tour_name)
}
inline void CMsgMvMVictoryInfo::set_tour_name(const char* value, size_t size) {
  set_has_tour_name();
  if (tour_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tour_name_ = new ::std::string;
  }
  tour_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgMvMVictoryInfo.tour_name)
}
inline ::std::string* CMsgMvMVictoryInfo::mutable_tour_name() {
  set_has_tour_name();
  if (tour_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tour_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgMvMVictoryInfo.tour_name)
  return tour_name_;
}
inline ::std::string* CMsgMvMVictoryInfo::release_tour_name() {
  clear_has_tour_name();
  if (tour_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = tour_name_;
    tour_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgMvMVictoryInfo::set_allocated_tour_name(::std::string* tour_name) {
  if (tour_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tour_name_;
  }
  if (tour_name) {
    set_has_tour_name();
    tour_name_ = tour_name;
  } else {
    clear_has_tour_name();
    tour_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgMvMVictoryInfo.tour_name)
}

// optional string mission_name = 3;
inline bool CMsgMvMVictoryInfo::has_mission_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgMvMVictoryInfo::set_has_mission_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgMvMVictoryInfo::clear_has_mission_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgMvMVictoryInfo::clear_mission_name() {
  if (mission_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mission_name_->clear();
  }
  clear_has_mission_name();
}
inline const ::std::string& CMsgMvMVictoryInfo::mission_name() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictoryInfo.mission_name)
  return *mission_name_;
}
inline void CMsgMvMVictoryInfo::set_mission_name(const ::std::string& value) {
  set_has_mission_name();
  if (mission_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mission_name_ = new ::std::string;
  }
  mission_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgMvMVictoryInfo.mission_name)
}
inline void CMsgMvMVictoryInfo::set_mission_name(const char* value) {
  set_has_mission_name();
  if (mission_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mission_name_ = new ::std::string;
  }
  mission_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgMvMVictoryInfo.mission_name)
}
inline void CMsgMvMVictoryInfo::set_mission_name(const char* value, size_t size) {
  set_has_mission_name();
  if (mission_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mission_name_ = new ::std::string;
  }
  mission_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgMvMVictoryInfo.mission_name)
}
inline ::std::string* CMsgMvMVictoryInfo::mutable_mission_name() {
  set_has_mission_name();
  if (mission_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mission_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgMvMVictoryInfo.mission_name)
  return mission_name_;
}
inline ::std::string* CMsgMvMVictoryInfo::release_mission_name() {
  clear_has_mission_name();
  if (mission_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mission_name_;
    mission_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgMvMVictoryInfo::set_allocated_mission_name(::std::string* mission_name) {
  if (mission_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mission_name_;
  }
  if (mission_name) {
    set_has_mission_name();
    mission_name_ = mission_name;
  } else {
    clear_has_mission_name();
    mission_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgMvMVictoryInfo.mission_name)
}

// -------------------------------------------------------------------

// CGCMsgTFHelloResponse

// optional uint32 version_check = 1;
inline bool CGCMsgTFHelloResponse::has_version_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCMsgTFHelloResponse::set_has_version_check() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCMsgTFHelloResponse::clear_has_version_check() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCMsgTFHelloResponse::clear_version_check() {
  version_check_ = 0u;
  clear_has_version_check();
}
inline ::google::protobuf::uint32 CGCMsgTFHelloResponse::version_check() const {
  // @@protoc_insertion_point(field_get:CGCMsgTFHelloResponse.version_check)
  return version_check_;
}
inline void CGCMsgTFHelloResponse::set_version_check(::google::protobuf::uint32 value) {
  set_has_version_check();
  version_check_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgTFHelloResponse.version_check)
}

// repeated uint64 version_checksum = 2;
inline int CGCMsgTFHelloResponse::version_checksum_size() const {
  return version_checksum_.size();
}
inline void CGCMsgTFHelloResponse::clear_version_checksum() {
  version_checksum_.Clear();
}
inline ::google::protobuf::uint64 CGCMsgTFHelloResponse::version_checksum(int index) const {
  // @@protoc_insertion_point(field_get:CGCMsgTFHelloResponse.version_checksum)
  return version_checksum_.Get(index);
}
inline void CGCMsgTFHelloResponse::set_version_checksum(int index, ::google::protobuf::uint64 value) {
  version_checksum_.Set(index, value);
  // @@protoc_insertion_point(field_set:CGCMsgTFHelloResponse.version_checksum)
}
inline void CGCMsgTFHelloResponse::add_version_checksum(::google::protobuf::uint64 value) {
  version_checksum_.Add(value);
  // @@protoc_insertion_point(field_add:CGCMsgTFHelloResponse.version_checksum)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CGCMsgTFHelloResponse::version_checksum() const {
  // @@protoc_insertion_point(field_list:CGCMsgTFHelloResponse.version_checksum)
  return version_checksum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CGCMsgTFHelloResponse::mutable_version_checksum() {
  // @@protoc_insertion_point(field_mutable_list:CGCMsgTFHelloResponse.version_checksum)
  return &version_checksum_;
}

// optional uint32 version_verbose = 3;
inline bool CGCMsgTFHelloResponse::has_version_verbose() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGCMsgTFHelloResponse::set_has_version_verbose() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGCMsgTFHelloResponse::clear_has_version_verbose() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGCMsgTFHelloResponse::clear_version_verbose() {
  version_verbose_ = 0u;
  clear_has_version_verbose();
}
inline ::google::protobuf::uint32 CGCMsgTFHelloResponse::version_verbose() const {
  // @@protoc_insertion_point(field_get:CGCMsgTFHelloResponse.version_verbose)
  return version_verbose_;
}
inline void CGCMsgTFHelloResponse::set_version_verbose(::google::protobuf::uint32 value) {
  set_has_version_verbose();
  version_verbose_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgTFHelloResponse.version_verbose)
}

// -------------------------------------------------------------------

// CGCMsgTFSync

// optional bytes version_checksum = 1;
inline bool CGCMsgTFSync::has_version_checksum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCMsgTFSync::set_has_version_checksum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCMsgTFSync::clear_has_version_checksum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCMsgTFSync::clear_version_checksum() {
  if (version_checksum_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_checksum_->clear();
  }
  clear_has_version_checksum();
}
inline const ::std::string& CGCMsgTFSync::version_checksum() const {
  // @@protoc_insertion_point(field_get:CGCMsgTFSync.version_checksum)
  return *version_checksum_;
}
inline void CGCMsgTFSync::set_version_checksum(const ::std::string& value) {
  set_has_version_checksum();
  if (version_checksum_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_checksum_ = new ::std::string;
  }
  version_checksum_->assign(value);
  // @@protoc_insertion_point(field_set:CGCMsgTFSync.version_checksum)
}
inline void CGCMsgTFSync::set_version_checksum(const char* value) {
  set_has_version_checksum();
  if (version_checksum_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_checksum_ = new ::std::string;
  }
  version_checksum_->assign(value);
  // @@protoc_insertion_point(field_set_char:CGCMsgTFSync.version_checksum)
}
inline void CGCMsgTFSync::set_version_checksum(const void* value, size_t size) {
  set_has_version_checksum();
  if (version_checksum_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_checksum_ = new ::std::string;
  }
  version_checksum_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CGCMsgTFSync.version_checksum)
}
inline ::std::string* CGCMsgTFSync::mutable_version_checksum() {
  set_has_version_checksum();
  if (version_checksum_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_checksum_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CGCMsgTFSync.version_checksum)
  return version_checksum_;
}
inline ::std::string* CGCMsgTFSync::release_version_checksum() {
  clear_has_version_checksum();
  if (version_checksum_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = version_checksum_;
    version_checksum_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CGCMsgTFSync::set_allocated_version_checksum(::std::string* version_checksum) {
  if (version_checksum_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete version_checksum_;
  }
  if (version_checksum) {
    set_has_version_checksum();
    version_checksum_ = version_checksum;
  } else {
    clear_has_version_checksum();
    version_checksum_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CGCMsgTFSync.version_checksum)
}

// optional uint32 version_check = 2;
inline bool CGCMsgTFSync::has_version_check() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCMsgTFSync::set_has_version_check() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGCMsgTFSync::clear_has_version_check() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGCMsgTFSync::clear_version_check() {
  version_check_ = 0u;
  clear_has_version_check();
}
inline ::google::protobuf::uint32 CGCMsgTFSync::version_check() const {
  // @@protoc_insertion_point(field_get:CGCMsgTFSync.version_check)
  return version_check_;
}
inline void CGCMsgTFSync::set_version_check(::google::protobuf::uint32 value) {
  set_has_version_check();
  version_check_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgTFSync.version_check)
}

// optional uint32 version_check_ex = 3;
inline bool CGCMsgTFSync::has_version_check_ex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGCMsgTFSync::set_has_version_check_ex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGCMsgTFSync::clear_has_version_check_ex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGCMsgTFSync::clear_version_check_ex() {
  version_check_ex_ = 0u;
  clear_has_version_check_ex();
}
inline ::google::protobuf::uint32 CGCMsgTFSync::version_check_ex() const {
  // @@protoc_insertion_point(field_get:CGCMsgTFSync.version_check_ex)
  return version_check_ex_;
}
inline void CGCMsgTFSync::set_version_check_ex(::google::protobuf::uint32 value) {
  set_has_version_check_ex();
  version_check_ex_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgTFSync.version_check_ex)
}

// optional uint32 version_check_ex2 = 4;
inline bool CGCMsgTFSync::has_version_check_ex2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CGCMsgTFSync::set_has_version_check_ex2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CGCMsgTFSync::clear_has_version_check_ex2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CGCMsgTFSync::clear_version_check_ex2() {
  version_check_ex2_ = 0u;
  clear_has_version_check_ex2();
}
inline ::google::protobuf::uint32 CGCMsgTFSync::version_check_ex2() const {
  // @@protoc_insertion_point(field_get:CGCMsgTFSync.version_check_ex2)
  return version_check_ex2_;
}
inline void CGCMsgTFSync::set_version_check_ex2(::google::protobuf::uint32 value) {
  set_has_version_check_ex2();
  version_check_ex2_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgTFSync.version_check_ex2)
}

// optional bytes version_checksum_ex = 5;
inline bool CGCMsgTFSync::has_version_checksum_ex() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CGCMsgTFSync::set_has_version_checksum_ex() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CGCMsgTFSync::clear_has_version_checksum_ex() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CGCMsgTFSync::clear_version_checksum_ex() {
  if (version_checksum_ex_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_checksum_ex_->clear();
  }
  clear_has_version_checksum_ex();
}
inline const ::std::string& CGCMsgTFSync::version_checksum_ex() const {
  // @@protoc_insertion_point(field_get:CGCMsgTFSync.version_checksum_ex)
  return *version_checksum_ex_;
}
inline void CGCMsgTFSync::set_version_checksum_ex(const ::std::string& value) {
  set_has_version_checksum_ex();
  if (version_checksum_ex_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_checksum_ex_ = new ::std::string;
  }
  version_checksum_ex_->assign(value);
  // @@protoc_insertion_point(field_set:CGCMsgTFSync.version_checksum_ex)
}
inline void CGCMsgTFSync::set_version_checksum_ex(const char* value) {
  set_has_version_checksum_ex();
  if (version_checksum_ex_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_checksum_ex_ = new ::std::string;
  }
  version_checksum_ex_->assign(value);
  // @@protoc_insertion_point(field_set_char:CGCMsgTFSync.version_checksum_ex)
}
inline void CGCMsgTFSync::set_version_checksum_ex(const void* value, size_t size) {
  set_has_version_checksum_ex();
  if (version_checksum_ex_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_checksum_ex_ = new ::std::string;
  }
  version_checksum_ex_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CGCMsgTFSync.version_checksum_ex)
}
inline ::std::string* CGCMsgTFSync::mutable_version_checksum_ex() {
  set_has_version_checksum_ex();
  if (version_checksum_ex_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_checksum_ex_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CGCMsgTFSync.version_checksum_ex)
  return version_checksum_ex_;
}
inline ::std::string* CGCMsgTFSync::release_version_checksum_ex() {
  clear_has_version_checksum_ex();
  if (version_checksum_ex_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = version_checksum_ex_;
    version_checksum_ex_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CGCMsgTFSync::set_allocated_version_checksum_ex(::std::string* version_checksum_ex) {
  if (version_checksum_ex_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete version_checksum_ex_;
  }
  if (version_checksum_ex) {
    set_has_version_checksum_ex();
    version_checksum_ex_ = version_checksum_ex;
  } else {
    clear_has_version_checksum_ex();
    version_checksum_ex_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CGCMsgTFSync.version_checksum_ex)
}

// -------------------------------------------------------------------

// CGCMsgTFSyncEx

// optional string version_checksum = 1;
inline bool CGCMsgTFSyncEx::has_version_checksum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCMsgTFSyncEx::set_has_version_checksum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCMsgTFSyncEx::clear_has_version_checksum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCMsgTFSyncEx::clear_version_checksum() {
  if (version_checksum_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_checksum_->clear();
  }
  clear_has_version_checksum();
}
inline const ::std::string& CGCMsgTFSyncEx::version_checksum() const {
  // @@protoc_insertion_point(field_get:CGCMsgTFSyncEx.version_checksum)
  return *version_checksum_;
}
inline void CGCMsgTFSyncEx::set_version_checksum(const ::std::string& value) {
  set_has_version_checksum();
  if (version_checksum_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_checksum_ = new ::std::string;
  }
  version_checksum_->assign(value);
  // @@protoc_insertion_point(field_set:CGCMsgTFSyncEx.version_checksum)
}
inline void CGCMsgTFSyncEx::set_version_checksum(const char* value) {
  set_has_version_checksum();
  if (version_checksum_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_checksum_ = new ::std::string;
  }
  version_checksum_->assign(value);
  // @@protoc_insertion_point(field_set_char:CGCMsgTFSyncEx.version_checksum)
}
inline void CGCMsgTFSyncEx::set_version_checksum(const char* value, size_t size) {
  set_has_version_checksum();
  if (version_checksum_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_checksum_ = new ::std::string;
  }
  version_checksum_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CGCMsgTFSyncEx.version_checksum)
}
inline ::std::string* CGCMsgTFSyncEx::mutable_version_checksum() {
  set_has_version_checksum();
  if (version_checksum_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_checksum_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CGCMsgTFSyncEx.version_checksum)
  return version_checksum_;
}
inline ::std::string* CGCMsgTFSyncEx::release_version_checksum() {
  clear_has_version_checksum();
  if (version_checksum_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = version_checksum_;
    version_checksum_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CGCMsgTFSyncEx::set_allocated_version_checksum(::std::string* version_checksum) {
  if (version_checksum_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete version_checksum_;
  }
  if (version_checksum) {
    set_has_version_checksum();
    version_checksum_ = version_checksum;
  } else {
    clear_has_version_checksum();
    version_checksum_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CGCMsgTFSyncEx.version_checksum)
}

// optional bytes version_checksum_ex = 2;
inline bool CGCMsgTFSyncEx::has_version_checksum_ex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCMsgTFSyncEx::set_has_version_checksum_ex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGCMsgTFSyncEx::clear_has_version_checksum_ex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGCMsgTFSyncEx::clear_version_checksum_ex() {
  if (version_checksum_ex_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_checksum_ex_->clear();
  }
  clear_has_version_checksum_ex();
}
inline const ::std::string& CGCMsgTFSyncEx::version_checksum_ex() const {
  // @@protoc_insertion_point(field_get:CGCMsgTFSyncEx.version_checksum_ex)
  return *version_checksum_ex_;
}
inline void CGCMsgTFSyncEx::set_version_checksum_ex(const ::std::string& value) {
  set_has_version_checksum_ex();
  if (version_checksum_ex_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_checksum_ex_ = new ::std::string;
  }
  version_checksum_ex_->assign(value);
  // @@protoc_insertion_point(field_set:CGCMsgTFSyncEx.version_checksum_ex)
}
inline void CGCMsgTFSyncEx::set_version_checksum_ex(const char* value) {
  set_has_version_checksum_ex();
  if (version_checksum_ex_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_checksum_ex_ = new ::std::string;
  }
  version_checksum_ex_->assign(value);
  // @@protoc_insertion_point(field_set_char:CGCMsgTFSyncEx.version_checksum_ex)
}
inline void CGCMsgTFSyncEx::set_version_checksum_ex(const void* value, size_t size) {
  set_has_version_checksum_ex();
  if (version_checksum_ex_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_checksum_ex_ = new ::std::string;
  }
  version_checksum_ex_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CGCMsgTFSyncEx.version_checksum_ex)
}
inline ::std::string* CGCMsgTFSyncEx::mutable_version_checksum_ex() {
  set_has_version_checksum_ex();
  if (version_checksum_ex_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_checksum_ex_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CGCMsgTFSyncEx.version_checksum_ex)
  return version_checksum_ex_;
}
inline ::std::string* CGCMsgTFSyncEx::release_version_checksum_ex() {
  clear_has_version_checksum_ex();
  if (version_checksum_ex_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = version_checksum_ex_;
    version_checksum_ex_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CGCMsgTFSyncEx::set_allocated_version_checksum_ex(::std::string* version_checksum_ex) {
  if (version_checksum_ex_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete version_checksum_ex_;
  }
  if (version_checksum_ex) {
    set_has_version_checksum_ex();
    version_checksum_ex_ = version_checksum_ex;
  } else {
    clear_has_version_checksum_ex();
    version_checksum_ex_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CGCMsgTFSyncEx.version_checksum_ex)
}

// optional uint32 version_check = 3;
inline bool CGCMsgTFSyncEx::has_version_check() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGCMsgTFSyncEx::set_has_version_check() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGCMsgTFSyncEx::clear_has_version_check() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGCMsgTFSyncEx::clear_version_check() {
  version_check_ = 0u;
  clear_has_version_check();
}
inline ::google::protobuf::uint32 CGCMsgTFSyncEx::version_check() const {
  // @@protoc_insertion_point(field_get:CGCMsgTFSyncEx.version_check)
  return version_check_;
}
inline void CGCMsgTFSyncEx::set_version_check(::google::protobuf::uint32 value) {
  set_has_version_check();
  version_check_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgTFSyncEx.version_check)
}

// -------------------------------------------------------------------

// CMsgMvMVictory_Player

// optional fixed64 steam_id = 1;
inline bool CMsgMvMVictory_Player::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgMvMVictory_Player::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgMvMVictory_Player::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgMvMVictory_Player::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgMvMVictory_Player::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictory.Player.steam_id)
  return steam_id_;
}
inline void CMsgMvMVictory_Player::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgMvMVictory.Player.steam_id)
}

// optional bool squad_surplus = 2;
inline bool CMsgMvMVictory_Player::has_squad_surplus() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgMvMVictory_Player::set_has_squad_surplus() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgMvMVictory_Player::clear_has_squad_surplus() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgMvMVictory_Player::clear_squad_surplus() {
  squad_surplus_ = false;
  clear_has_squad_surplus();
}
inline bool CMsgMvMVictory_Player::squad_surplus() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictory.Player.squad_surplus)
  return squad_surplus_;
}
inline void CMsgMvMVictory_Player::set_squad_surplus(bool value) {
  set_has_squad_surplus();
  squad_surplus_ = value;
  // @@protoc_insertion_point(field_set:CMsgMvMVictory.Player.squad_surplus)
}

// -------------------------------------------------------------------

// CMsgMvMVictory

// optional uint32 legacy_mission_index = 1;
inline bool CMsgMvMVictory::has_legacy_mission_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgMvMVictory::set_has_legacy_mission_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgMvMVictory::clear_has_legacy_mission_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgMvMVictory::clear_legacy_mission_index() {
  legacy_mission_index_ = 0u;
  clear_has_legacy_mission_index();
}
inline ::google::protobuf::uint32 CMsgMvMVictory::legacy_mission_index() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictory.legacy_mission_index)
  return legacy_mission_index_;
}
inline void CMsgMvMVictory::set_legacy_mission_index(::google::protobuf::uint32 value) {
  set_has_legacy_mission_index();
  legacy_mission_index_ = value;
  // @@protoc_insertion_point(field_set:CMsgMvMVictory.legacy_mission_index)
}

// optional string tour_name_mannup = 5;
inline bool CMsgMvMVictory::has_tour_name_mannup() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgMvMVictory::set_has_tour_name_mannup() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgMvMVictory::clear_has_tour_name_mannup() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgMvMVictory::clear_tour_name_mannup() {
  if (tour_name_mannup_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tour_name_mannup_->clear();
  }
  clear_has_tour_name_mannup();
}
inline const ::std::string& CMsgMvMVictory::tour_name_mannup() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictory.tour_name_mannup)
  return *tour_name_mannup_;
}
inline void CMsgMvMVictory::set_tour_name_mannup(const ::std::string& value) {
  set_has_tour_name_mannup();
  if (tour_name_mannup_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tour_name_mannup_ = new ::std::string;
  }
  tour_name_mannup_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgMvMVictory.tour_name_mannup)
}
inline void CMsgMvMVictory::set_tour_name_mannup(const char* value) {
  set_has_tour_name_mannup();
  if (tour_name_mannup_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tour_name_mannup_ = new ::std::string;
  }
  tour_name_mannup_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgMvMVictory.tour_name_mannup)
}
inline void CMsgMvMVictory::set_tour_name_mannup(const char* value, size_t size) {
  set_has_tour_name_mannup();
  if (tour_name_mannup_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tour_name_mannup_ = new ::std::string;
  }
  tour_name_mannup_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgMvMVictory.tour_name_mannup)
}
inline ::std::string* CMsgMvMVictory::mutable_tour_name_mannup() {
  set_has_tour_name_mannup();
  if (tour_name_mannup_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tour_name_mannup_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgMvMVictory.tour_name_mannup)
  return tour_name_mannup_;
}
inline ::std::string* CMsgMvMVictory::release_tour_name_mannup() {
  clear_has_tour_name_mannup();
  if (tour_name_mannup_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = tour_name_mannup_;
    tour_name_mannup_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgMvMVictory::set_allocated_tour_name_mannup(::std::string* tour_name_mannup) {
  if (tour_name_mannup_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tour_name_mannup_;
  }
  if (tour_name_mannup) {
    set_has_tour_name_mannup();
    tour_name_mannup_ = tour_name_mannup;
  } else {
    clear_has_tour_name_mannup();
    tour_name_mannup_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgMvMVictory.tour_name_mannup)
}

// optional string mission_name = 6;
inline bool CMsgMvMVictory::has_mission_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgMvMVictory::set_has_mission_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgMvMVictory::clear_has_mission_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgMvMVictory::clear_mission_name() {
  if (mission_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mission_name_->clear();
  }
  clear_has_mission_name();
}
inline const ::std::string& CMsgMvMVictory::mission_name() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictory.mission_name)
  return *mission_name_;
}
inline void CMsgMvMVictory::set_mission_name(const ::std::string& value) {
  set_has_mission_name();
  if (mission_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mission_name_ = new ::std::string;
  }
  mission_name_->assign(value);
  // @@protoc_insertion_point(field_set:CMsgMvMVictory.mission_name)
}
inline void CMsgMvMVictory::set_mission_name(const char* value) {
  set_has_mission_name();
  if (mission_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mission_name_ = new ::std::string;
  }
  mission_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgMvMVictory.mission_name)
}
inline void CMsgMvMVictory::set_mission_name(const char* value, size_t size) {
  set_has_mission_name();
  if (mission_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mission_name_ = new ::std::string;
  }
  mission_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgMvMVictory.mission_name)
}
inline ::std::string* CMsgMvMVictory::mutable_mission_name() {
  set_has_mission_name();
  if (mission_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mission_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CMsgMvMVictory.mission_name)
  return mission_name_;
}
inline ::std::string* CMsgMvMVictory::release_mission_name() {
  clear_has_mission_name();
  if (mission_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mission_name_;
    mission_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CMsgMvMVictory::set_allocated_mission_name(::std::string* mission_name) {
  if (mission_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mission_name_;
  }
  if (mission_name) {
    set_has_mission_name();
    mission_name_ = mission_name;
  } else {
    clear_has_mission_name();
    mission_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CMsgMvMVictory.mission_name)
}

// repeated .CMsgMvMVictory.Player players = 2;
inline int CMsgMvMVictory::players_size() const {
  return players_.size();
}
inline void CMsgMvMVictory::clear_players() {
  players_.Clear();
}
inline const ::CMsgMvMVictory_Player& CMsgMvMVictory::players(int index) const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictory.players)
  return players_.Get(index);
}
inline ::CMsgMvMVictory_Player* CMsgMvMVictory::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgMvMVictory.players)
  return players_.Mutable(index);
}
inline ::CMsgMvMVictory_Player* CMsgMvMVictory::add_players() {
  // @@protoc_insertion_point(field_add:CMsgMvMVictory.players)
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictory_Player >&
CMsgMvMVictory::players() const {
  // @@protoc_insertion_point(field_list:CMsgMvMVictory.players)
  return players_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgMvMVictory_Player >*
CMsgMvMVictory::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:CMsgMvMVictory.players)
  return &players_;
}

// optional uint64 lobby_id = 3;
inline bool CMsgMvMVictory::has_lobby_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgMvMVictory::set_has_lobby_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgMvMVictory::clear_has_lobby_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgMvMVictory::clear_lobby_id() {
  lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_lobby_id();
}
inline ::google::protobuf::uint64 CMsgMvMVictory::lobby_id() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictory.lobby_id)
  return lobby_id_;
}
inline void CMsgMvMVictory::set_lobby_id(::google::protobuf::uint64 value) {
  set_has_lobby_id();
  lobby_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgMvMVictory.lobby_id)
}

// optional fixed32 event_time = 4;
inline bool CMsgMvMVictory::has_event_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgMvMVictory::set_has_event_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgMvMVictory::clear_has_event_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgMvMVictory::clear_event_time() {
  event_time_ = 0u;
  clear_has_event_time();
}
inline ::google::protobuf::uint32 CMsgMvMVictory::event_time() const {
  // @@protoc_insertion_point(field_get:CMsgMvMVictory.event_time)
  return event_time_;
}
inline void CMsgMvMVictory::set_event_time(::google::protobuf::uint32 value) {
  set_has_event_time();
  event_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgMvMVictory.event_time)
}

// -------------------------------------------------------------------

// CMsgMvMMannUpVictoryReply

// optional uint32 result = 1;
inline bool CMsgMvMMannUpVictoryReply::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgMvMMannUpVictoryReply::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgMvMMannUpVictoryReply::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgMvMMannUpVictoryReply::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CMsgMvMMannUpVictoryReply::result() const {
  // @@protoc_insertion_point(field_get:CMsgMvMMannUpVictoryReply.result)
  return result_;
}
inline void CMsgMvMMannUpVictoryReply::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CMsgMvMMannUpVictoryReply.result)
}

// -------------------------------------------------------------------

// CMsgGameServerKickingLobby

// repeated fixed64 connected_players = 1;
inline int CMsgGameServerKickingLobby::connected_players_size() const {
  return connected_players_.size();
}
inline void CMsgGameServerKickingLobby::clear_connected_players() {
  connected_players_.Clear();
}
inline ::google::protobuf::uint64 CMsgGameServerKickingLobby::connected_players(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGameServerKickingLobby.connected_players)
  return connected_players_.Get(index);
}
inline void CMsgGameServerKickingLobby::set_connected_players(int index, ::google::protobuf::uint64 value) {
  connected_players_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGameServerKickingLobby.connected_players)
}
inline void CMsgGameServerKickingLobby::add_connected_players(::google::protobuf::uint64 value) {
  connected_players_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgGameServerKickingLobby.connected_players)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgGameServerKickingLobby::connected_players() const {
  // @@protoc_insertion_point(field_list:CMsgGameServerKickingLobby.connected_players)
  return connected_players_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgGameServerKickingLobby::mutable_connected_players() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGameServerKickingLobby.connected_players)
  return &connected_players_;
}

// -------------------------------------------------------------------

// CMsgLeaveGameAndPrepareToJoinParty

// optional fixed64 party_id = 1;
inline bool CMsgLeaveGameAndPrepareToJoinParty::has_party_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgLeaveGameAndPrepareToJoinParty::set_has_party_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgLeaveGameAndPrepareToJoinParty::clear_has_party_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgLeaveGameAndPrepareToJoinParty::clear_party_id() {
  party_id_ = GOOGLE_ULONGLONG(0);
  clear_has_party_id();
}
inline ::google::protobuf::uint64 CMsgLeaveGameAndPrepareToJoinParty::party_id() const {
  // @@protoc_insertion_point(field_get:CMsgLeaveGameAndPrepareToJoinParty.party_id)
  return party_id_;
}
inline void CMsgLeaveGameAndPrepareToJoinParty::set_party_id(::google::protobuf::uint64 value) {
  set_has_party_id();
  party_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgLeaveGameAndPrepareToJoinParty.party_id)
}

// -------------------------------------------------------------------

// CMsgRemovePlayerFromLobby

// optional fixed64 steam_id = 1;
inline bool CMsgRemovePlayerFromLobby::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgRemovePlayerFromLobby::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgRemovePlayerFromLobby::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgRemovePlayerFromLobby::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgRemovePlayerFromLobby::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgRemovePlayerFromLobby.steam_id)
  return steam_id_;
}
inline void CMsgRemovePlayerFromLobby::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgRemovePlayerFromLobby.steam_id)
}

// optional .CMsgRemovePlayerFromLobby.RemoveReason remove_reason = 2 [default = VOTE_KICK];
inline bool CMsgRemovePlayerFromLobby::has_remove_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgRemovePlayerFromLobby::set_has_remove_reason() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgRemovePlayerFromLobby::clear_has_remove_reason() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgRemovePlayerFromLobby::clear_remove_reason() {
  remove_reason_ = 0;
  clear_has_remove_reason();
}
inline ::CMsgRemovePlayerFromLobby_RemoveReason CMsgRemovePlayerFromLobby::remove_reason() const {
  // @@protoc_insertion_point(field_get:CMsgRemovePlayerFromLobby.remove_reason)
  return static_cast< ::CMsgRemovePlayerFromLobby_RemoveReason >(remove_reason_);
}
inline void CMsgRemovePlayerFromLobby::set_remove_reason(::CMsgRemovePlayerFromLobby_RemoveReason value) {
  assert(::CMsgRemovePlayerFromLobby_RemoveReason_IsValid(value));
  set_has_remove_reason();
  remove_reason_ = value;
  // @@protoc_insertion_point(field_set:CMsgRemovePlayerFromLobby.remove_reason)
}

// -------------------------------------------------------------------

// CMsgSetLobbySafeToLeave

// optional fixed64 lobby_id = 1;
inline bool CMsgSetLobbySafeToLeave::has_lobby_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSetLobbySafeToLeave::set_has_lobby_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSetLobbySafeToLeave::clear_has_lobby_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSetLobbySafeToLeave::clear_lobby_id() {
  lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_lobby_id();
}
inline ::google::protobuf::uint64 CMsgSetLobbySafeToLeave::lobby_id() const {
  // @@protoc_insertion_point(field_get:CMsgSetLobbySafeToLeave.lobby_id)
  return lobby_id_;
}
inline void CMsgSetLobbySafeToLeave::set_lobby_id(::google::protobuf::uint64 value) {
  set_has_lobby_id();
  lobby_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSetLobbySafeToLeave.lobby_id)
}

// -------------------------------------------------------------------

// CMsgHalloween_ServerBossEvent

// optional uint32 event_counter = 1;
inline bool CMsgHalloween_ServerBossEvent::has_event_counter() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgHalloween_ServerBossEvent::set_has_event_counter() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgHalloween_ServerBossEvent::clear_has_event_counter() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgHalloween_ServerBossEvent::clear_event_counter() {
  event_counter_ = 0u;
  clear_has_event_counter();
}
inline ::google::protobuf::uint32 CMsgHalloween_ServerBossEvent::event_counter() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_ServerBossEvent.event_counter)
  return event_counter_;
}
inline void CMsgHalloween_ServerBossEvent::set_event_counter(::google::protobuf::uint32 value) {
  set_has_event_counter();
  event_counter_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_ServerBossEvent.event_counter)
}

// optional uint32 timestamp = 2;
inline bool CMsgHalloween_ServerBossEvent::has_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgHalloween_ServerBossEvent::set_has_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgHalloween_ServerBossEvent::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgHalloween_ServerBossEvent::clear_timestamp() {
  timestamp_ = 0u;
  clear_has_timestamp();
}
inline ::google::protobuf::uint32 CMsgHalloween_ServerBossEvent::timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_ServerBossEvent.timestamp)
  return timestamp_;
}
inline void CMsgHalloween_ServerBossEvent::set_timestamp(::google::protobuf::uint32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_ServerBossEvent.timestamp)
}

// optional uint32 boss_type = 3;
inline bool CMsgHalloween_ServerBossEvent::has_boss_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgHalloween_ServerBossEvent::set_has_boss_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgHalloween_ServerBossEvent::clear_has_boss_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgHalloween_ServerBossEvent::clear_boss_type() {
  boss_type_ = 0u;
  clear_has_boss_type();
}
inline ::google::protobuf::uint32 CMsgHalloween_ServerBossEvent::boss_type() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_ServerBossEvent.boss_type)
  return boss_type_;
}
inline void CMsgHalloween_ServerBossEvent::set_boss_type(::google::protobuf::uint32 value) {
  set_has_boss_type();
  boss_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_ServerBossEvent.boss_type)
}

// optional uint32 boss_level = 4;
inline bool CMsgHalloween_ServerBossEvent::has_boss_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgHalloween_ServerBossEvent::set_has_boss_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgHalloween_ServerBossEvent::clear_has_boss_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgHalloween_ServerBossEvent::clear_boss_level() {
  boss_level_ = 0u;
  clear_has_boss_level();
}
inline ::google::protobuf::uint32 CMsgHalloween_ServerBossEvent::boss_level() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_ServerBossEvent.boss_level)
  return boss_level_;
}
inline void CMsgHalloween_ServerBossEvent::set_boss_level(::google::protobuf::uint32 value) {
  set_has_boss_level();
  boss_level_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_ServerBossEvent.boss_level)
}

// optional uint32 event_type = 5;
inline bool CMsgHalloween_ServerBossEvent::has_event_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgHalloween_ServerBossEvent::set_has_event_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgHalloween_ServerBossEvent::clear_has_event_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgHalloween_ServerBossEvent::clear_event_type() {
  event_type_ = 0u;
  clear_has_event_type();
}
inline ::google::protobuf::uint32 CMsgHalloween_ServerBossEvent::event_type() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_ServerBossEvent.event_type)
  return event_type_;
}
inline void CMsgHalloween_ServerBossEvent::set_event_type(::google::protobuf::uint32 value) {
  set_has_event_type();
  event_type_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_ServerBossEvent.event_type)
}

// optional uint32 players_involved = 6;
inline bool CMsgHalloween_ServerBossEvent::has_players_involved() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgHalloween_ServerBossEvent::set_has_players_involved() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgHalloween_ServerBossEvent::clear_has_players_involved() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgHalloween_ServerBossEvent::clear_players_involved() {
  players_involved_ = 0u;
  clear_has_players_involved();
}
inline ::google::protobuf::uint32 CMsgHalloween_ServerBossEvent::players_involved() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_ServerBossEvent.players_involved)
  return players_involved_;
}
inline void CMsgHalloween_ServerBossEvent::set_players_involved(::google::protobuf::uint32 value) {
  set_has_players_involved();
  players_involved_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_ServerBossEvent.players_involved)
}

// optional float elapsed_time = 7;
inline bool CMsgHalloween_ServerBossEvent::has_elapsed_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgHalloween_ServerBossEvent::set_has_elapsed_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgHalloween_ServerBossEvent::clear_has_elapsed_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgHalloween_ServerBossEvent::clear_elapsed_time() {
  elapsed_time_ = 0;
  clear_has_elapsed_time();
}
inline float CMsgHalloween_ServerBossEvent::elapsed_time() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_ServerBossEvent.elapsed_time)
  return elapsed_time_;
}
inline void CMsgHalloween_ServerBossEvent::set_elapsed_time(float value) {
  set_has_elapsed_time();
  elapsed_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_ServerBossEvent.elapsed_time)
}

// -------------------------------------------------------------------

// CMsgHalloween_Merasmus2012

// optional uint32 event_counter = 1;
inline bool CMsgHalloween_Merasmus2012::has_event_counter() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_event_counter() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_event_counter() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgHalloween_Merasmus2012::clear_event_counter() {
  event_counter_ = 0u;
  clear_has_event_counter();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::event_counter() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.event_counter)
  return event_counter_;
}
inline void CMsgHalloween_Merasmus2012::set_event_counter(::google::protobuf::uint32 value) {
  set_has_event_counter();
  event_counter_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.event_counter)
}

// optional fixed32 time_submitted = 2;
inline bool CMsgHalloween_Merasmus2012::has_time_submitted() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_time_submitted() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_time_submitted() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgHalloween_Merasmus2012::clear_time_submitted() {
  time_submitted_ = 0u;
  clear_has_time_submitted();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::time_submitted() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.time_submitted)
  return time_submitted_;
}
inline void CMsgHalloween_Merasmus2012::set_time_submitted(::google::protobuf::uint32 value) {
  set_has_time_submitted();
  time_submitted_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.time_submitted)
}

// optional bool is_valve_server = 3;
inline bool CMsgHalloween_Merasmus2012::has_is_valve_server() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_is_valve_server() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_is_valve_server() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgHalloween_Merasmus2012::clear_is_valve_server() {
  is_valve_server_ = false;
  clear_has_is_valve_server();
}
inline bool CMsgHalloween_Merasmus2012::is_valve_server() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.is_valve_server)
  return is_valve_server_;
}
inline void CMsgHalloween_Merasmus2012::set_is_valve_server(bool value) {
  set_has_is_valve_server();
  is_valve_server_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.is_valve_server)
}

// optional uint32 boss_level = 4;
inline bool CMsgHalloween_Merasmus2012::has_boss_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_boss_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_boss_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgHalloween_Merasmus2012::clear_boss_level() {
  boss_level_ = 0u;
  clear_has_boss_level();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::boss_level() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.boss_level)
  return boss_level_;
}
inline void CMsgHalloween_Merasmus2012::set_boss_level(::google::protobuf::uint32 value) {
  set_has_boss_level();
  boss_level_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.boss_level)
}

// optional uint32 spawned_health = 5;
inline bool CMsgHalloween_Merasmus2012::has_spawned_health() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_spawned_health() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_spawned_health() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgHalloween_Merasmus2012::clear_spawned_health() {
  spawned_health_ = 0u;
  clear_has_spawned_health();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::spawned_health() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.spawned_health)
  return spawned_health_;
}
inline void CMsgHalloween_Merasmus2012::set_spawned_health(::google::protobuf::uint32 value) {
  set_has_spawned_health();
  spawned_health_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.spawned_health)
}

// optional uint32 remaining_health = 6;
inline bool CMsgHalloween_Merasmus2012::has_remaining_health() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_remaining_health() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_remaining_health() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgHalloween_Merasmus2012::clear_remaining_health() {
  remaining_health_ = 0u;
  clear_has_remaining_health();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::remaining_health() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.remaining_health)
  return remaining_health_;
}
inline void CMsgHalloween_Merasmus2012::set_remaining_health(::google::protobuf::uint32 value) {
  set_has_remaining_health();
  remaining_health_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.remaining_health)
}

// optional uint32 life_time = 7;
inline bool CMsgHalloween_Merasmus2012::has_life_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_life_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_life_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgHalloween_Merasmus2012::clear_life_time() {
  life_time_ = 0u;
  clear_has_life_time();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::life_time() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.life_time)
  return life_time_;
}
inline void CMsgHalloween_Merasmus2012::set_life_time(::google::protobuf::uint32 value) {
  set_has_life_time();
  life_time_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.life_time)
}

// optional uint32 bomb_kills = 8;
inline bool CMsgHalloween_Merasmus2012::has_bomb_kills() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_bomb_kills() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_bomb_kills() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgHalloween_Merasmus2012::clear_bomb_kills() {
  bomb_kills_ = 0u;
  clear_has_bomb_kills();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::bomb_kills() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.bomb_kills)
  return bomb_kills_;
}
inline void CMsgHalloween_Merasmus2012::set_bomb_kills(::google::protobuf::uint32 value) {
  set_has_bomb_kills();
  bomb_kills_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.bomb_kills)
}

// optional uint32 staff_kills = 9;
inline bool CMsgHalloween_Merasmus2012::has_staff_kills() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_staff_kills() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_staff_kills() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgHalloween_Merasmus2012::clear_staff_kills() {
  staff_kills_ = 0u;
  clear_has_staff_kills();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::staff_kills() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.staff_kills)
  return staff_kills_;
}
inline void CMsgHalloween_Merasmus2012::set_staff_kills(::google::protobuf::uint32 value) {
  set_has_staff_kills();
  staff_kills_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.staff_kills)
}

// optional uint32 pvp_kills = 10;
inline bool CMsgHalloween_Merasmus2012::has_pvp_kills() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_pvp_kills() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_pvp_kills() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgHalloween_Merasmus2012::clear_pvp_kills() {
  pvp_kills_ = 0u;
  clear_has_pvp_kills();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::pvp_kills() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.pvp_kills)
  return pvp_kills_;
}
inline void CMsgHalloween_Merasmus2012::set_pvp_kills(::google::protobuf::uint32 value) {
  set_has_pvp_kills();
  pvp_kills_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.pvp_kills)
}

// optional uint32 prophunt_time1 = 11;
inline bool CMsgHalloween_Merasmus2012::has_prophunt_time1() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_prophunt_time1() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_prophunt_time1() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgHalloween_Merasmus2012::clear_prophunt_time1() {
  prophunt_time1_ = 0u;
  clear_has_prophunt_time1();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::prophunt_time1() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.prophunt_time1)
  return prophunt_time1_;
}
inline void CMsgHalloween_Merasmus2012::set_prophunt_time1(::google::protobuf::uint32 value) {
  set_has_prophunt_time1();
  prophunt_time1_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.prophunt_time1)
}

// optional uint32 prophunt_time2 = 12;
inline bool CMsgHalloween_Merasmus2012::has_prophunt_time2() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_prophunt_time2() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_prophunt_time2() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgHalloween_Merasmus2012::clear_prophunt_time2() {
  prophunt_time2_ = 0u;
  clear_has_prophunt_time2();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::prophunt_time2() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.prophunt_time2)
  return prophunt_time2_;
}
inline void CMsgHalloween_Merasmus2012::set_prophunt_time2(::google::protobuf::uint32 value) {
  set_has_prophunt_time2();
  prophunt_time2_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.prophunt_time2)
}

// optional uint32 dmg_scout = 13;
inline bool CMsgHalloween_Merasmus2012::has_dmg_scout() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_dmg_scout() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_dmg_scout() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgHalloween_Merasmus2012::clear_dmg_scout() {
  dmg_scout_ = 0u;
  clear_has_dmg_scout();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::dmg_scout() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.dmg_scout)
  return dmg_scout_;
}
inline void CMsgHalloween_Merasmus2012::set_dmg_scout(::google::protobuf::uint32 value) {
  set_has_dmg_scout();
  dmg_scout_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.dmg_scout)
}

// optional uint32 dmg_sniper = 14;
inline bool CMsgHalloween_Merasmus2012::has_dmg_sniper() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_dmg_sniper() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_dmg_sniper() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgHalloween_Merasmus2012::clear_dmg_sniper() {
  dmg_sniper_ = 0u;
  clear_has_dmg_sniper();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::dmg_sniper() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.dmg_sniper)
  return dmg_sniper_;
}
inline void CMsgHalloween_Merasmus2012::set_dmg_sniper(::google::protobuf::uint32 value) {
  set_has_dmg_sniper();
  dmg_sniper_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.dmg_sniper)
}

// optional uint32 dmg_soldier = 15;
inline bool CMsgHalloween_Merasmus2012::has_dmg_soldier() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_dmg_soldier() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_dmg_soldier() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgHalloween_Merasmus2012::clear_dmg_soldier() {
  dmg_soldier_ = 0u;
  clear_has_dmg_soldier();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::dmg_soldier() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.dmg_soldier)
  return dmg_soldier_;
}
inline void CMsgHalloween_Merasmus2012::set_dmg_soldier(::google::protobuf::uint32 value) {
  set_has_dmg_soldier();
  dmg_soldier_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.dmg_soldier)
}

// optional uint32 dmg_demo = 16;
inline bool CMsgHalloween_Merasmus2012::has_dmg_demo() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_dmg_demo() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_dmg_demo() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMsgHalloween_Merasmus2012::clear_dmg_demo() {
  dmg_demo_ = 0u;
  clear_has_dmg_demo();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::dmg_demo() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.dmg_demo)
  return dmg_demo_;
}
inline void CMsgHalloween_Merasmus2012::set_dmg_demo(::google::protobuf::uint32 value) {
  set_has_dmg_demo();
  dmg_demo_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.dmg_demo)
}

// optional uint32 dmg_medic = 17;
inline bool CMsgHalloween_Merasmus2012::has_dmg_medic() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_dmg_medic() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_dmg_medic() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CMsgHalloween_Merasmus2012::clear_dmg_medic() {
  dmg_medic_ = 0u;
  clear_has_dmg_medic();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::dmg_medic() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.dmg_medic)
  return dmg_medic_;
}
inline void CMsgHalloween_Merasmus2012::set_dmg_medic(::google::protobuf::uint32 value) {
  set_has_dmg_medic();
  dmg_medic_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.dmg_medic)
}

// optional uint32 dmg_heavy = 18;
inline bool CMsgHalloween_Merasmus2012::has_dmg_heavy() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_dmg_heavy() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_dmg_heavy() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CMsgHalloween_Merasmus2012::clear_dmg_heavy() {
  dmg_heavy_ = 0u;
  clear_has_dmg_heavy();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::dmg_heavy() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.dmg_heavy)
  return dmg_heavy_;
}
inline void CMsgHalloween_Merasmus2012::set_dmg_heavy(::google::protobuf::uint32 value) {
  set_has_dmg_heavy();
  dmg_heavy_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.dmg_heavy)
}

// optional uint32 dmg_pyro = 19;
inline bool CMsgHalloween_Merasmus2012::has_dmg_pyro() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_dmg_pyro() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_dmg_pyro() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CMsgHalloween_Merasmus2012::clear_dmg_pyro() {
  dmg_pyro_ = 0u;
  clear_has_dmg_pyro();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::dmg_pyro() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.dmg_pyro)
  return dmg_pyro_;
}
inline void CMsgHalloween_Merasmus2012::set_dmg_pyro(::google::protobuf::uint32 value) {
  set_has_dmg_pyro();
  dmg_pyro_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.dmg_pyro)
}

// optional uint32 dmg_spy = 20;
inline bool CMsgHalloween_Merasmus2012::has_dmg_spy() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_dmg_spy() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_dmg_spy() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CMsgHalloween_Merasmus2012::clear_dmg_spy() {
  dmg_spy_ = 0u;
  clear_has_dmg_spy();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::dmg_spy() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.dmg_spy)
  return dmg_spy_;
}
inline void CMsgHalloween_Merasmus2012::set_dmg_spy(::google::protobuf::uint32 value) {
  set_has_dmg_spy();
  dmg_spy_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.dmg_spy)
}

// optional uint32 dmg_engineer = 21;
inline bool CMsgHalloween_Merasmus2012::has_dmg_engineer() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_dmg_engineer() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_dmg_engineer() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CMsgHalloween_Merasmus2012::clear_dmg_engineer() {
  dmg_engineer_ = 0u;
  clear_has_dmg_engineer();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::dmg_engineer() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.dmg_engineer)
  return dmg_engineer_;
}
inline void CMsgHalloween_Merasmus2012::set_dmg_engineer(::google::protobuf::uint32 value) {
  set_has_dmg_engineer();
  dmg_engineer_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.dmg_engineer)
}

// optional uint32 scout_count = 22;
inline bool CMsgHalloween_Merasmus2012::has_scout_count() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_scout_count() {
  _has_bits_[0] |= 0x00200000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_scout_count() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void CMsgHalloween_Merasmus2012::clear_scout_count() {
  scout_count_ = 0u;
  clear_has_scout_count();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::scout_count() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.scout_count)
  return scout_count_;
}
inline void CMsgHalloween_Merasmus2012::set_scout_count(::google::protobuf::uint32 value) {
  set_has_scout_count();
  scout_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.scout_count)
}

// optional uint32 sniper_count = 23;
inline bool CMsgHalloween_Merasmus2012::has_sniper_count() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_sniper_count() {
  _has_bits_[0] |= 0x00400000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_sniper_count() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void CMsgHalloween_Merasmus2012::clear_sniper_count() {
  sniper_count_ = 0u;
  clear_has_sniper_count();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::sniper_count() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.sniper_count)
  return sniper_count_;
}
inline void CMsgHalloween_Merasmus2012::set_sniper_count(::google::protobuf::uint32 value) {
  set_has_sniper_count();
  sniper_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.sniper_count)
}

// optional uint32 solider_count = 24;
inline bool CMsgHalloween_Merasmus2012::has_solider_count() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_solider_count() {
  _has_bits_[0] |= 0x00800000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_solider_count() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void CMsgHalloween_Merasmus2012::clear_solider_count() {
  solider_count_ = 0u;
  clear_has_solider_count();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::solider_count() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.solider_count)
  return solider_count_;
}
inline void CMsgHalloween_Merasmus2012::set_solider_count(::google::protobuf::uint32 value) {
  set_has_solider_count();
  solider_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.solider_count)
}

// optional uint32 demo_count = 25;
inline bool CMsgHalloween_Merasmus2012::has_demo_count() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_demo_count() {
  _has_bits_[0] |= 0x01000000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_demo_count() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void CMsgHalloween_Merasmus2012::clear_demo_count() {
  demo_count_ = 0u;
  clear_has_demo_count();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::demo_count() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.demo_count)
  return demo_count_;
}
inline void CMsgHalloween_Merasmus2012::set_demo_count(::google::protobuf::uint32 value) {
  set_has_demo_count();
  demo_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.demo_count)
}

// optional uint32 medic_count = 26;
inline bool CMsgHalloween_Merasmus2012::has_medic_count() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_medic_count() {
  _has_bits_[0] |= 0x02000000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_medic_count() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void CMsgHalloween_Merasmus2012::clear_medic_count() {
  medic_count_ = 0u;
  clear_has_medic_count();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::medic_count() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.medic_count)
  return medic_count_;
}
inline void CMsgHalloween_Merasmus2012::set_medic_count(::google::protobuf::uint32 value) {
  set_has_medic_count();
  medic_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.medic_count)
}

// optional uint32 heavy_count = 27;
inline bool CMsgHalloween_Merasmus2012::has_heavy_count() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_heavy_count() {
  _has_bits_[0] |= 0x04000000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_heavy_count() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void CMsgHalloween_Merasmus2012::clear_heavy_count() {
  heavy_count_ = 0u;
  clear_has_heavy_count();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::heavy_count() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.heavy_count)
  return heavy_count_;
}
inline void CMsgHalloween_Merasmus2012::set_heavy_count(::google::protobuf::uint32 value) {
  set_has_heavy_count();
  heavy_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.heavy_count)
}

// optional uint32 pyro_count = 28;
inline bool CMsgHalloween_Merasmus2012::has_pyro_count() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_pyro_count() {
  _has_bits_[0] |= 0x08000000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_pyro_count() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void CMsgHalloween_Merasmus2012::clear_pyro_count() {
  pyro_count_ = 0u;
  clear_has_pyro_count();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::pyro_count() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.pyro_count)
  return pyro_count_;
}
inline void CMsgHalloween_Merasmus2012::set_pyro_count(::google::protobuf::uint32 value) {
  set_has_pyro_count();
  pyro_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.pyro_count)
}

// optional uint32 spy_count = 29;
inline bool CMsgHalloween_Merasmus2012::has_spy_count() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_spy_count() {
  _has_bits_[0] |= 0x10000000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_spy_count() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void CMsgHalloween_Merasmus2012::clear_spy_count() {
  spy_count_ = 0u;
  clear_has_spy_count();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::spy_count() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.spy_count)
  return spy_count_;
}
inline void CMsgHalloween_Merasmus2012::set_spy_count(::google::protobuf::uint32 value) {
  set_has_spy_count();
  spy_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.spy_count)
}

// optional uint32 engineer_count = 30;
inline bool CMsgHalloween_Merasmus2012::has_engineer_count() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void CMsgHalloween_Merasmus2012::set_has_engineer_count() {
  _has_bits_[0] |= 0x20000000u;
}
inline void CMsgHalloween_Merasmus2012::clear_has_engineer_count() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void CMsgHalloween_Merasmus2012::clear_engineer_count() {
  engineer_count_ = 0u;
  clear_has_engineer_count();
}
inline ::google::protobuf::uint32 CMsgHalloween_Merasmus2012::engineer_count() const {
  // @@protoc_insertion_point(field_get:CMsgHalloween_Merasmus2012.engineer_count)
  return engineer_count_;
}
inline void CMsgHalloween_Merasmus2012::set_engineer_count(::google::protobuf::uint32 value) {
  set_has_engineer_count();
  engineer_count_ = value;
  // @@protoc_insertion_point(field_set:CMsgHalloween_Merasmus2012.engineer_count)
}

// -------------------------------------------------------------------

// CMsgUpdateHalloweenMerasmusLootLevel_Player

// optional fixed64 steam_id = 1;
inline bool CMsgUpdateHalloweenMerasmusLootLevel_Player::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgUpdateHalloweenMerasmusLootLevel_Player::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgUpdateHalloweenMerasmusLootLevel_Player::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgUpdateHalloweenMerasmusLootLevel_Player::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgUpdateHalloweenMerasmusLootLevel_Player::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgUpdateHalloweenMerasmusLootLevel.Player.steam_id)
  return steam_id_;
}
inline void CMsgUpdateHalloweenMerasmusLootLevel_Player::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgUpdateHalloweenMerasmusLootLevel.Player.steam_id)
}

// -------------------------------------------------------------------

// CMsgUpdateHalloweenMerasmusLootLevel

// repeated .CMsgUpdateHalloweenMerasmusLootLevel.Player players = 1;
inline int CMsgUpdateHalloweenMerasmusLootLevel::players_size() const {
  return players_.size();
}
inline void CMsgUpdateHalloweenMerasmusLootLevel::clear_players() {
  players_.Clear();
}
inline const ::CMsgUpdateHalloweenMerasmusLootLevel_Player& CMsgUpdateHalloweenMerasmusLootLevel::players(int index) const {
  // @@protoc_insertion_point(field_get:CMsgUpdateHalloweenMerasmusLootLevel.players)
  return players_.Get(index);
}
inline ::CMsgUpdateHalloweenMerasmusLootLevel_Player* CMsgUpdateHalloweenMerasmusLootLevel::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgUpdateHalloweenMerasmusLootLevel.players)
  return players_.Mutable(index);
}
inline ::CMsgUpdateHalloweenMerasmusLootLevel_Player* CMsgUpdateHalloweenMerasmusLootLevel::add_players() {
  // @@protoc_insertion_point(field_add:CMsgUpdateHalloweenMerasmusLootLevel.players)
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgUpdateHalloweenMerasmusLootLevel_Player >&
CMsgUpdateHalloweenMerasmusLootLevel::players() const {
  // @@protoc_insertion_point(field_list:CMsgUpdateHalloweenMerasmusLootLevel.players)
  return players_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgUpdateHalloweenMerasmusLootLevel_Player >*
CMsgUpdateHalloweenMerasmusLootLevel::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:CMsgUpdateHalloweenMerasmusLootLevel.players)
  return &players_;
}

// optional uint32 merasmus_level = 2;
inline bool CMsgUpdateHalloweenMerasmusLootLevel::has_merasmus_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgUpdateHalloweenMerasmusLootLevel::set_has_merasmus_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgUpdateHalloweenMerasmusLootLevel::clear_has_merasmus_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgUpdateHalloweenMerasmusLootLevel::clear_merasmus_level() {
  merasmus_level_ = 0u;
  clear_has_merasmus_level();
}
inline ::google::protobuf::uint32 CMsgUpdateHalloweenMerasmusLootLevel::merasmus_level() const {
  // @@protoc_insertion_point(field_get:CMsgUpdateHalloweenMerasmusLootLevel.merasmus_level)
  return merasmus_level_;
}
inline void CMsgUpdateHalloweenMerasmusLootLevel::set_merasmus_level(::google::protobuf::uint32 value) {
  set_has_merasmus_level();
  merasmus_level_ = value;
  // @@protoc_insertion_point(field_set:CMsgUpdateHalloweenMerasmusLootLevel.merasmus_level)
}

// -------------------------------------------------------------------

// CAttribute_String

// optional string value = 1;
inline bool CAttribute_String::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CAttribute_String::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CAttribute_String::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CAttribute_String::clear_value() {
  if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_->clear();
  }
  clear_has_value();
}
inline const ::std::string& CAttribute_String::value() const {
  // @@protoc_insertion_point(field_get:CAttribute_String.value)
  return *value_;
}
inline void CAttribute_String::set_value(const ::std::string& value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  value_->assign(value);
  // @@protoc_insertion_point(field_set:CAttribute_String.value)
}
inline void CAttribute_String::set_value(const char* value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  value_->assign(value);
  // @@protoc_insertion_point(field_set_char:CAttribute_String.value)
}
inline void CAttribute_String::set_value(const char* value, size_t size) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CAttribute_String.value)
}
inline ::std::string* CAttribute_String::mutable_value() {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CAttribute_String.value)
  return value_;
}
inline ::std::string* CAttribute_String::release_value() {
  clear_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = value_;
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CAttribute_String::set_allocated_value(::std::string* value) {
  if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete value_;
  }
  if (value) {
    set_has_value();
    value_ = value;
  } else {
    clear_has_value();
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CAttribute_String.value)
}

// -------------------------------------------------------------------

// CAttribute_DynamicRecipeComponent

// optional uint32 def_index = 1;
inline bool CAttribute_DynamicRecipeComponent::has_def_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CAttribute_DynamicRecipeComponent::set_has_def_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CAttribute_DynamicRecipeComponent::clear_has_def_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CAttribute_DynamicRecipeComponent::clear_def_index() {
  def_index_ = 0u;
  clear_has_def_index();
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent::def_index() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent.def_index)
  return def_index_;
}
inline void CAttribute_DynamicRecipeComponent::set_def_index(::google::protobuf::uint32 value) {
  set_has_def_index();
  def_index_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent.def_index)
}

// optional uint32 item_quality = 2;
inline bool CAttribute_DynamicRecipeComponent::has_item_quality() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CAttribute_DynamicRecipeComponent::set_has_item_quality() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CAttribute_DynamicRecipeComponent::clear_has_item_quality() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CAttribute_DynamicRecipeComponent::clear_item_quality() {
  item_quality_ = 0u;
  clear_has_item_quality();
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent::item_quality() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent.item_quality)
  return item_quality_;
}
inline void CAttribute_DynamicRecipeComponent::set_item_quality(::google::protobuf::uint32 value) {
  set_has_item_quality();
  item_quality_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent.item_quality)
}

// optional uint32 component_flags = 3;
inline bool CAttribute_DynamicRecipeComponent::has_component_flags() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CAttribute_DynamicRecipeComponent::set_has_component_flags() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CAttribute_DynamicRecipeComponent::clear_has_component_flags() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CAttribute_DynamicRecipeComponent::clear_component_flags() {
  component_flags_ = 0u;
  clear_has_component_flags();
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent::component_flags() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent.component_flags)
  return component_flags_;
}
inline void CAttribute_DynamicRecipeComponent::set_component_flags(::google::protobuf::uint32 value) {
  set_has_component_flags();
  component_flags_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent.component_flags)
}

// optional string attributes_string = 4;
inline bool CAttribute_DynamicRecipeComponent::has_attributes_string() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CAttribute_DynamicRecipeComponent::set_has_attributes_string() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CAttribute_DynamicRecipeComponent::clear_has_attributes_string() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CAttribute_DynamicRecipeComponent::clear_attributes_string() {
  if (attributes_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attributes_string_->clear();
  }
  clear_has_attributes_string();
}
inline const ::std::string& CAttribute_DynamicRecipeComponent::attributes_string() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent.attributes_string)
  return *attributes_string_;
}
inline void CAttribute_DynamicRecipeComponent::set_attributes_string(const ::std::string& value) {
  set_has_attributes_string();
  if (attributes_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attributes_string_ = new ::std::string;
  }
  attributes_string_->assign(value);
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent.attributes_string)
}
inline void CAttribute_DynamicRecipeComponent::set_attributes_string(const char* value) {
  set_has_attributes_string();
  if (attributes_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attributes_string_ = new ::std::string;
  }
  attributes_string_->assign(value);
  // @@protoc_insertion_point(field_set_char:CAttribute_DynamicRecipeComponent.attributes_string)
}
inline void CAttribute_DynamicRecipeComponent::set_attributes_string(const char* value, size_t size) {
  set_has_attributes_string();
  if (attributes_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attributes_string_ = new ::std::string;
  }
  attributes_string_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CAttribute_DynamicRecipeComponent.attributes_string)
}
inline ::std::string* CAttribute_DynamicRecipeComponent::mutable_attributes_string() {
  set_has_attributes_string();
  if (attributes_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attributes_string_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CAttribute_DynamicRecipeComponent.attributes_string)
  return attributes_string_;
}
inline ::std::string* CAttribute_DynamicRecipeComponent::release_attributes_string() {
  clear_has_attributes_string();
  if (attributes_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attributes_string_;
    attributes_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CAttribute_DynamicRecipeComponent::set_allocated_attributes_string(::std::string* attributes_string) {
  if (attributes_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attributes_string_;
  }
  if (attributes_string) {
    set_has_attributes_string();
    attributes_string_ = attributes_string;
  } else {
    clear_has_attributes_string();
    attributes_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CAttribute_DynamicRecipeComponent.attributes_string)
}

// optional uint32 num_required = 5;
inline bool CAttribute_DynamicRecipeComponent::has_num_required() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CAttribute_DynamicRecipeComponent::set_has_num_required() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CAttribute_DynamicRecipeComponent::clear_has_num_required() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CAttribute_DynamicRecipeComponent::clear_num_required() {
  num_required_ = 0u;
  clear_has_num_required();
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent::num_required() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent.num_required)
  return num_required_;
}
inline void CAttribute_DynamicRecipeComponent::set_num_required(::google::protobuf::uint32 value) {
  set_has_num_required();
  num_required_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent.num_required)
}

// optional uint32 num_fulfilled = 6;
inline bool CAttribute_DynamicRecipeComponent::has_num_fulfilled() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CAttribute_DynamicRecipeComponent::set_has_num_fulfilled() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CAttribute_DynamicRecipeComponent::clear_has_num_fulfilled() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CAttribute_DynamicRecipeComponent::clear_num_fulfilled() {
  num_fulfilled_ = 0u;
  clear_has_num_fulfilled();
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent::num_fulfilled() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent.num_fulfilled)
  return num_fulfilled_;
}
inline void CAttribute_DynamicRecipeComponent::set_num_fulfilled(::google::protobuf::uint32 value) {
  set_has_num_fulfilled();
  num_fulfilled_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent.num_fulfilled)
}

// -------------------------------------------------------------------

// CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT

// optional uint32 def_index = 1;
inline bool CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::has_def_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_has_def_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_has_def_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_def_index() {
  def_index_ = 0u;
  clear_has_def_index();
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::def_index() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.def_index)
  return def_index_;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_def_index(::google::protobuf::uint32 value) {
  set_has_def_index();
  def_index_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.def_index)
}

// optional uint32 item_def = 2;
inline bool CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::has_item_def() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_has_item_def() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_has_item_def() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_item_def() {
  item_def_ = 0u;
  clear_has_item_def();
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::item_def() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.item_def)
  return item_def_;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_item_def(::google::protobuf::uint32 value) {
  set_has_item_def();
  item_def_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.item_def)
}

// optional uint32 item_quality = 3;
inline bool CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::has_item_quality() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_has_item_quality() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_has_item_quality() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_item_quality() {
  item_quality_ = 0u;
  clear_has_item_quality();
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::item_quality() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.item_quality)
  return item_quality_;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_item_quality(::google::protobuf::uint32 value) {
  set_has_item_quality();
  item_quality_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.item_quality)
}

// optional uint32 component_flags = 4;
inline bool CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::has_component_flags() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_has_component_flags() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_has_component_flags() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_component_flags() {
  component_flags_ = 0u;
  clear_has_component_flags();
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::component_flags() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.component_flags)
  return component_flags_;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_component_flags(::google::protobuf::uint32 value) {
  set_has_component_flags();
  component_flags_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.component_flags)
}

// optional uint32 item_flags = 5;
inline bool CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::has_item_flags() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_has_item_flags() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_has_item_flags() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_item_flags() {
  item_flags_ = 0u;
  clear_has_item_flags();
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::item_flags() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.item_flags)
  return item_flags_;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_item_flags(::google::protobuf::uint32 value) {
  set_has_item_flags();
  item_flags_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.item_flags)
}

// optional string attributes_string = 6;
inline bool CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::has_attributes_string() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_has_attributes_string() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_has_attributes_string() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_attributes_string() {
  if (attributes_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attributes_string_->clear();
  }
  clear_has_attributes_string();
}
inline const ::std::string& CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::attributes_string() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.attributes_string)
  return *attributes_string_;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_attributes_string(const ::std::string& value) {
  set_has_attributes_string();
  if (attributes_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attributes_string_ = new ::std::string;
  }
  attributes_string_->assign(value);
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.attributes_string)
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_attributes_string(const char* value) {
  set_has_attributes_string();
  if (attributes_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attributes_string_ = new ::std::string;
  }
  attributes_string_->assign(value);
  // @@protoc_insertion_point(field_set_char:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.attributes_string)
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_attributes_string(const char* value, size_t size) {
  set_has_attributes_string();
  if (attributes_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attributes_string_ = new ::std::string;
  }
  attributes_string_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.attributes_string)
}
inline ::std::string* CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::mutable_attributes_string() {
  set_has_attributes_string();
  if (attributes_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attributes_string_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.attributes_string)
  return attributes_string_;
}
inline ::std::string* CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::release_attributes_string() {
  clear_has_attributes_string();
  if (attributes_string_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attributes_string_;
    attributes_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_allocated_attributes_string(::std::string* attributes_string) {
  if (attributes_string_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attributes_string_;
  }
  if (attributes_string) {
    set_has_attributes_string();
    attributes_string_ = attributes_string;
  } else {
    clear_has_attributes_string();
    attributes_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.attributes_string)
}

// optional uint32 num_required = 7;
inline bool CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::has_num_required() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_has_num_required() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_has_num_required() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_num_required() {
  num_required_ = 0u;
  clear_has_num_required();
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::num_required() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.num_required)
  return num_required_;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_num_required(::google::protobuf::uint32 value) {
  set_has_num_required();
  num_required_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.num_required)
}

// optional uint32 item_count = 8;
inline bool CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::has_item_count() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_has_item_count() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_has_item_count() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_item_count() {
  item_count_ = 0u;
  clear_has_item_count();
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::item_count() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.item_count)
  return item_count_;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_item_count(::google::protobuf::uint32 value) {
  set_has_item_count();
  item_count_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.item_count)
}

// optional uint32 num_fulfilled = 9;
inline bool CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::has_num_fulfilled() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_has_num_fulfilled() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_has_num_fulfilled() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_num_fulfilled() {
  num_fulfilled_ = 0u;
  clear_has_num_fulfilled();
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::num_fulfilled() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.num_fulfilled)
  return num_fulfilled_;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_num_fulfilled(::google::protobuf::uint32 value) {
  set_has_num_fulfilled();
  num_fulfilled_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.num_fulfilled)
}

// optional uint32 items_fulfilled = 10;
inline bool CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::has_items_fulfilled() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_has_items_fulfilled() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_has_items_fulfilled() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::clear_items_fulfilled() {
  items_fulfilled_ = 0u;
  clear_has_items_fulfilled();
}
inline ::google::protobuf::uint32 CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::items_fulfilled() const {
  // @@protoc_insertion_point(field_get:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.items_fulfilled)
  return items_fulfilled_;
}
inline void CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT::set_items_fulfilled(::google::protobuf::uint32 value) {
  set_has_items_fulfilled();
  items_fulfilled_ = value;
  // @@protoc_insertion_point(field_set:CAttribute_DynamicRecipeComponent_COMPAT_NEVER_SERIALIZE_THIS_OUT.items_fulfilled)
}

// -------------------------------------------------------------------

// CAttribute_ItemSlotCriteria

// optional string tags = 1;
inline bool CAttribute_ItemSlotCriteria::has_tags() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CAttribute_ItemSlotCriteria::set_has_tags() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CAttribute_ItemSlotCriteria::clear_has_tags() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CAttribute_ItemSlotCriteria::clear_tags() {
  if (tags_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tags_->clear();
  }
  clear_has_tags();
}
inline const ::std::string& CAttribute_ItemSlotCriteria::tags() const {
  // @@protoc_insertion_point(field_get:CAttribute_ItemSlotCriteria.tags)
  return *tags_;
}
inline void CAttribute_ItemSlotCriteria::set_tags(const ::std::string& value) {
  set_has_tags();
  if (tags_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tags_ = new ::std::string;
  }
  tags_->assign(value);
  // @@protoc_insertion_point(field_set:CAttribute_ItemSlotCriteria.tags)
}
inline void CAttribute_ItemSlotCriteria::set_tags(const char* value) {
  set_has_tags();
  if (tags_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tags_ = new ::std::string;
  }
  tags_->assign(value);
  // @@protoc_insertion_point(field_set_char:CAttribute_ItemSlotCriteria.tags)
}
inline void CAttribute_ItemSlotCriteria::set_tags(const char* value, size_t size) {
  set_has_tags();
  if (tags_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tags_ = new ::std::string;
  }
  tags_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CAttribute_ItemSlotCriteria.tags)
}
inline ::std::string* CAttribute_ItemSlotCriteria::mutable_tags() {
  set_has_tags();
  if (tags_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tags_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CAttribute_ItemSlotCriteria.tags)
  return tags_;
}
inline ::std::string* CAttribute_ItemSlotCriteria::release_tags() {
  clear_has_tags();
  if (tags_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = tags_;
    tags_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CAttribute_ItemSlotCriteria::set_allocated_tags(::std::string* tags) {
  if (tags_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tags_;
  }
  if (tags) {
    set_has_tags();
    tags_ = tags;
  } else {
    clear_has_tags();
    tags_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CAttribute_ItemSlotCriteria.tags)
}

// -------------------------------------------------------------------

// CMsgSetItemSlotAttribute

// optional uint64 item_id = 1;
inline bool CMsgSetItemSlotAttribute::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSetItemSlotAttribute::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSetItemSlotAttribute::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSetItemSlotAttribute::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::uint64 CMsgSetItemSlotAttribute::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgSetItemSlotAttribute.item_id)
  return item_id_;
}
inline void CMsgSetItemSlotAttribute::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSetItemSlotAttribute.item_id)
}

// optional uint64 slot_item_original_id = 2;
inline bool CMsgSetItemSlotAttribute::has_slot_item_original_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSetItemSlotAttribute::set_has_slot_item_original_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSetItemSlotAttribute::clear_has_slot_item_original_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSetItemSlotAttribute::clear_slot_item_original_id() {
  slot_item_original_id_ = GOOGLE_ULONGLONG(0);
  clear_has_slot_item_original_id();
}
inline ::google::protobuf::uint64 CMsgSetItemSlotAttribute::slot_item_original_id() const {
  // @@protoc_insertion_point(field_get:CMsgSetItemSlotAttribute.slot_item_original_id)
  return slot_item_original_id_;
}
inline void CMsgSetItemSlotAttribute::set_slot_item_original_id(::google::protobuf::uint64 value) {
  set_has_slot_item_original_id();
  slot_item_original_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSetItemSlotAttribute.slot_item_original_id)
}

// optional uint32 slot_index = 3;
inline bool CMsgSetItemSlotAttribute::has_slot_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSetItemSlotAttribute::set_has_slot_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSetItemSlotAttribute::clear_has_slot_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSetItemSlotAttribute::clear_slot_index() {
  slot_index_ = 0u;
  clear_has_slot_index();
}
inline ::google::protobuf::uint32 CMsgSetItemSlotAttribute::slot_index() const {
  // @@protoc_insertion_point(field_get:CMsgSetItemSlotAttribute.slot_index)
  return slot_index_;
}
inline void CMsgSetItemSlotAttribute::set_slot_index(::google::protobuf::uint32 value) {
  set_has_slot_index();
  slot_index_ = value;
  // @@protoc_insertion_point(field_set:CMsgSetItemSlotAttribute.slot_index)
}

// -------------------------------------------------------------------

// CGCMsgTFPlayerSkillRatingAdjustment_Player

// optional fixed64 steam_id = 1;
inline bool CGCMsgTFPlayerSkillRatingAdjustment_Player::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCMsgTFPlayerSkillRatingAdjustment_Player::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCMsgTFPlayerSkillRatingAdjustment_Player::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCMsgTFPlayerSkillRatingAdjustment_Player::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CGCMsgTFPlayerSkillRatingAdjustment_Player::steam_id() const {
  // @@protoc_insertion_point(field_get:CGCMsgTFPlayerSkillRatingAdjustment.Player.steam_id)
  return steam_id_;
}
inline void CGCMsgTFPlayerSkillRatingAdjustment_Player::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgTFPlayerSkillRatingAdjustment.Player.steam_id)
}

// optional int32 adjustment = 3;
inline bool CGCMsgTFPlayerSkillRatingAdjustment_Player::has_adjustment() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCMsgTFPlayerSkillRatingAdjustment_Player::set_has_adjustment() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGCMsgTFPlayerSkillRatingAdjustment_Player::clear_has_adjustment() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGCMsgTFPlayerSkillRatingAdjustment_Player::clear_adjustment() {
  adjustment_ = 0;
  clear_has_adjustment();
}
inline ::google::protobuf::int32 CGCMsgTFPlayerSkillRatingAdjustment_Player::adjustment() const {
  // @@protoc_insertion_point(field_get:CGCMsgTFPlayerSkillRatingAdjustment.Player.adjustment)
  return adjustment_;
}
inline void CGCMsgTFPlayerSkillRatingAdjustment_Player::set_adjustment(::google::protobuf::int32 value) {
  set_has_adjustment();
  adjustment_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgTFPlayerSkillRatingAdjustment.Player.adjustment)
}

// -------------------------------------------------------------------

// CGCMsgTFPlayerSkillRatingAdjustment

// repeated .CGCMsgTFPlayerSkillRatingAdjustment.Player players = 1;
inline int CGCMsgTFPlayerSkillRatingAdjustment::players_size() const {
  return players_.size();
}
inline void CGCMsgTFPlayerSkillRatingAdjustment::clear_players() {
  players_.Clear();
}
inline const ::CGCMsgTFPlayerSkillRatingAdjustment_Player& CGCMsgTFPlayerSkillRatingAdjustment::players(int index) const {
  // @@protoc_insertion_point(field_get:CGCMsgTFPlayerSkillRatingAdjustment.players)
  return players_.Get(index);
}
inline ::CGCMsgTFPlayerSkillRatingAdjustment_Player* CGCMsgTFPlayerSkillRatingAdjustment::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:CGCMsgTFPlayerSkillRatingAdjustment.players)
  return players_.Mutable(index);
}
inline ::CGCMsgTFPlayerSkillRatingAdjustment_Player* CGCMsgTFPlayerSkillRatingAdjustment::add_players() {
  // @@protoc_insertion_point(field_add:CGCMsgTFPlayerSkillRatingAdjustment.players)
  return players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CGCMsgTFPlayerSkillRatingAdjustment_Player >&
CGCMsgTFPlayerSkillRatingAdjustment::players() const {
  // @@protoc_insertion_point(field_list:CGCMsgTFPlayerSkillRatingAdjustment.players)
  return players_;
}
inline ::google::protobuf::RepeatedPtrField< ::CGCMsgTFPlayerSkillRatingAdjustment_Player >*
CGCMsgTFPlayerSkillRatingAdjustment::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:CGCMsgTFPlayerSkillRatingAdjustment.players)
  return &players_;
}

// optional .CGCMsgTFPlayerSkillRatingAdjustment.MatchType match_type = 2 [default = PUBLIC];
inline bool CGCMsgTFPlayerSkillRatingAdjustment::has_match_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCMsgTFPlayerSkillRatingAdjustment::set_has_match_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGCMsgTFPlayerSkillRatingAdjustment::clear_has_match_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGCMsgTFPlayerSkillRatingAdjustment::clear_match_type() {
  match_type_ = 0;
  clear_has_match_type();
}
inline ::CGCMsgTFPlayerSkillRatingAdjustment_MatchType CGCMsgTFPlayerSkillRatingAdjustment::match_type() const {
  // @@protoc_insertion_point(field_get:CGCMsgTFPlayerSkillRatingAdjustment.match_type)
  return static_cast< ::CGCMsgTFPlayerSkillRatingAdjustment_MatchType >(match_type_);
}
inline void CGCMsgTFPlayerSkillRatingAdjustment::set_match_type(::CGCMsgTFPlayerSkillRatingAdjustment_MatchType value) {
  assert(::CGCMsgTFPlayerSkillRatingAdjustment_MatchType_IsValid(value));
  set_has_match_type();
  match_type_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgTFPlayerSkillRatingAdjustment.match_type)
}

// -------------------------------------------------------------------

// CSOTFSpyVsEngyWarData

// optional uint32 account_id = 1;
inline bool CSOTFSpyVsEngyWarData::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOTFSpyVsEngyWarData::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOTFSpyVsEngyWarData::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOTFSpyVsEngyWarData::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CSOTFSpyVsEngyWarData::account_id() const {
  // @@protoc_insertion_point(field_get:CSOTFSpyVsEngyWarData.account_id)
  return account_id_;
}
inline void CSOTFSpyVsEngyWarData::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:CSOTFSpyVsEngyWarData.account_id)
}

// optional uint32 affiliation = 2;
inline bool CSOTFSpyVsEngyWarData::has_affiliation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOTFSpyVsEngyWarData::set_has_affiliation() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOTFSpyVsEngyWarData::clear_has_affiliation() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOTFSpyVsEngyWarData::clear_affiliation() {
  affiliation_ = 0u;
  clear_has_affiliation();
}
inline ::google::protobuf::uint32 CSOTFSpyVsEngyWarData::affiliation() const {
  // @@protoc_insertion_point(field_get:CSOTFSpyVsEngyWarData.affiliation)
  return affiliation_;
}
inline void CSOTFSpyVsEngyWarData::set_affiliation(::google::protobuf::uint32 value) {
  set_has_affiliation();
  affiliation_ = value;
  // @@protoc_insertion_point(field_set:CSOTFSpyVsEngyWarData.affiliation)
}

// optional uint32 points_for_engy = 3;
inline bool CSOTFSpyVsEngyWarData::has_points_for_engy() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSOTFSpyVsEngyWarData::set_has_points_for_engy() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSOTFSpyVsEngyWarData::clear_has_points_for_engy() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSOTFSpyVsEngyWarData::clear_points_for_engy() {
  points_for_engy_ = 0u;
  clear_has_points_for_engy();
}
inline ::google::protobuf::uint32 CSOTFSpyVsEngyWarData::points_for_engy() const {
  // @@protoc_insertion_point(field_get:CSOTFSpyVsEngyWarData.points_for_engy)
  return points_for_engy_;
}
inline void CSOTFSpyVsEngyWarData::set_points_for_engy(::google::protobuf::uint32 value) {
  set_has_points_for_engy();
  points_for_engy_ = value;
  // @@protoc_insertion_point(field_set:CSOTFSpyVsEngyWarData.points_for_engy)
}

// optional uint32 points_for_spy = 4;
inline bool CSOTFSpyVsEngyWarData::has_points_for_spy() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSOTFSpyVsEngyWarData::set_has_points_for_spy() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSOTFSpyVsEngyWarData::clear_has_points_for_spy() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSOTFSpyVsEngyWarData::clear_points_for_spy() {
  points_for_spy_ = 0u;
  clear_has_points_for_spy();
}
inline ::google::protobuf::uint32 CSOTFSpyVsEngyWarData::points_for_spy() const {
  // @@protoc_insertion_point(field_get:CSOTFSpyVsEngyWarData.points_for_spy)
  return points_for_spy_;
}
inline void CSOTFSpyVsEngyWarData::set_points_for_spy(::google::protobuf::uint32 value) {
  set_has_points_for_spy();
  points_for_spy_ = value;
  // @@protoc_insertion_point(field_set:CSOTFSpyVsEngyWarData.points_for_spy)
}

// optional uint32 kills_for_engy = 5;
inline bool CSOTFSpyVsEngyWarData::has_kills_for_engy() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSOTFSpyVsEngyWarData::set_has_kills_for_engy() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSOTFSpyVsEngyWarData::clear_has_kills_for_engy() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSOTFSpyVsEngyWarData::clear_kills_for_engy() {
  kills_for_engy_ = 0u;
  clear_has_kills_for_engy();
}
inline ::google::protobuf::uint32 CSOTFSpyVsEngyWarData::kills_for_engy() const {
  // @@protoc_insertion_point(field_get:CSOTFSpyVsEngyWarData.kills_for_engy)
  return kills_for_engy_;
}
inline void CSOTFSpyVsEngyWarData::set_kills_for_engy(::google::protobuf::uint32 value) {
  set_has_kills_for_engy();
  kills_for_engy_ = value;
  // @@protoc_insertion_point(field_set:CSOTFSpyVsEngyWarData.kills_for_engy)
}

// optional uint32 kills_for_spy = 6;
inline bool CSOTFSpyVsEngyWarData::has_kills_for_spy() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSOTFSpyVsEngyWarData::set_has_kills_for_spy() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSOTFSpyVsEngyWarData::clear_has_kills_for_spy() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSOTFSpyVsEngyWarData::clear_kills_for_spy() {
  kills_for_spy_ = 0u;
  clear_has_kills_for_spy();
}
inline ::google::protobuf::uint32 CSOTFSpyVsEngyWarData::kills_for_spy() const {
  // @@protoc_insertion_point(field_get:CSOTFSpyVsEngyWarData.kills_for_spy)
  return kills_for_spy_;
}
inline void CSOTFSpyVsEngyWarData::set_kills_for_spy(::google::protobuf::uint32 value) {
  set_has_kills_for_spy();
  kills_for_spy_ = value;
  // @@protoc_insertion_point(field_set:CSOTFSpyVsEngyWarData.kills_for_spy)
}

// optional string killcam_message = 7;
inline bool CSOTFSpyVsEngyWarData::has_killcam_message() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSOTFSpyVsEngyWarData::set_has_killcam_message() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSOTFSpyVsEngyWarData::clear_has_killcam_message() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSOTFSpyVsEngyWarData::clear_killcam_message() {
  if (killcam_message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    killcam_message_->clear();
  }
  clear_has_killcam_message();
}
inline const ::std::string& CSOTFSpyVsEngyWarData::killcam_message() const {
  // @@protoc_insertion_point(field_get:CSOTFSpyVsEngyWarData.killcam_message)
  return *killcam_message_;
}
inline void CSOTFSpyVsEngyWarData::set_killcam_message(const ::std::string& value) {
  set_has_killcam_message();
  if (killcam_message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    killcam_message_ = new ::std::string;
  }
  killcam_message_->assign(value);
  // @@protoc_insertion_point(field_set:CSOTFSpyVsEngyWarData.killcam_message)
}
inline void CSOTFSpyVsEngyWarData::set_killcam_message(const char* value) {
  set_has_killcam_message();
  if (killcam_message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    killcam_message_ = new ::std::string;
  }
  killcam_message_->assign(value);
  // @@protoc_insertion_point(field_set_char:CSOTFSpyVsEngyWarData.killcam_message)
}
inline void CSOTFSpyVsEngyWarData::set_killcam_message(const char* value, size_t size) {
  set_has_killcam_message();
  if (killcam_message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    killcam_message_ = new ::std::string;
  }
  killcam_message_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSOTFSpyVsEngyWarData.killcam_message)
}
inline ::std::string* CSOTFSpyVsEngyWarData::mutable_killcam_message() {
  set_has_killcam_message();
  if (killcam_message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    killcam_message_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CSOTFSpyVsEngyWarData.killcam_message)
  return killcam_message_;
}
inline ::std::string* CSOTFSpyVsEngyWarData::release_killcam_message() {
  clear_has_killcam_message();
  if (killcam_message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = killcam_message_;
    killcam_message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CSOTFSpyVsEngyWarData::set_allocated_killcam_message(::std::string* killcam_message) {
  if (killcam_message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete killcam_message_;
  }
  if (killcam_message) {
    set_has_killcam_message();
    killcam_message_ = killcam_message;
  } else {
    clear_has_killcam_message();
    killcam_message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CSOTFSpyVsEngyWarData.killcam_message)
}

// -------------------------------------------------------------------

// CGCMsgGC_SpyVsEngyWar_IndividualUpdate

// optional fixed64 steam_id = 1;
inline bool CGCMsgGC_SpyVsEngyWar_IndividualUpdate::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCMsgGC_SpyVsEngyWar_IndividualUpdate::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCMsgGC_SpyVsEngyWar_IndividualUpdate::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCMsgGC_SpyVsEngyWar_IndividualUpdate::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CGCMsgGC_SpyVsEngyWar_IndividualUpdate::steam_id() const {
  // @@protoc_insertion_point(field_get:CGCMsgGC_SpyVsEngyWar_IndividualUpdate.steam_id)
  return steam_id_;
}
inline void CGCMsgGC_SpyVsEngyWar_IndividualUpdate::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGC_SpyVsEngyWar_IndividualUpdate.steam_id)
}

// optional uint32 engy_points_scored = 2;
inline bool CGCMsgGC_SpyVsEngyWar_IndividualUpdate::has_engy_points_scored() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCMsgGC_SpyVsEngyWar_IndividualUpdate::set_has_engy_points_scored() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGCMsgGC_SpyVsEngyWar_IndividualUpdate::clear_has_engy_points_scored() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGCMsgGC_SpyVsEngyWar_IndividualUpdate::clear_engy_points_scored() {
  engy_points_scored_ = 0u;
  clear_has_engy_points_scored();
}
inline ::google::protobuf::uint32 CGCMsgGC_SpyVsEngyWar_IndividualUpdate::engy_points_scored() const {
  // @@protoc_insertion_point(field_get:CGCMsgGC_SpyVsEngyWar_IndividualUpdate.engy_points_scored)
  return engy_points_scored_;
}
inline void CGCMsgGC_SpyVsEngyWar_IndividualUpdate::set_engy_points_scored(::google::protobuf::uint32 value) {
  set_has_engy_points_scored();
  engy_points_scored_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGC_SpyVsEngyWar_IndividualUpdate.engy_points_scored)
}

// optional uint32 spy_points_scored = 3;
inline bool CGCMsgGC_SpyVsEngyWar_IndividualUpdate::has_spy_points_scored() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGCMsgGC_SpyVsEngyWar_IndividualUpdate::set_has_spy_points_scored() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGCMsgGC_SpyVsEngyWar_IndividualUpdate::clear_has_spy_points_scored() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGCMsgGC_SpyVsEngyWar_IndividualUpdate::clear_spy_points_scored() {
  spy_points_scored_ = 0u;
  clear_has_spy_points_scored();
}
inline ::google::protobuf::uint32 CGCMsgGC_SpyVsEngyWar_IndividualUpdate::spy_points_scored() const {
  // @@protoc_insertion_point(field_get:CGCMsgGC_SpyVsEngyWar_IndividualUpdate.spy_points_scored)
  return spy_points_scored_;
}
inline void CGCMsgGC_SpyVsEngyWar_IndividualUpdate::set_spy_points_scored(::google::protobuf::uint32 value) {
  set_has_spy_points_scored();
  spy_points_scored_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGC_SpyVsEngyWar_IndividualUpdate.spy_points_scored)
}

// optional uint32 engy_kills_scored = 4;
inline bool CGCMsgGC_SpyVsEngyWar_IndividualUpdate::has_engy_kills_scored() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CGCMsgGC_SpyVsEngyWar_IndividualUpdate::set_has_engy_kills_scored() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CGCMsgGC_SpyVsEngyWar_IndividualUpdate::clear_has_engy_kills_scored() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CGCMsgGC_SpyVsEngyWar_IndividualUpdate::clear_engy_kills_scored() {
  engy_kills_scored_ = 0u;
  clear_has_engy_kills_scored();
}
inline ::google::protobuf::uint32 CGCMsgGC_SpyVsEngyWar_IndividualUpdate::engy_kills_scored() const {
  // @@protoc_insertion_point(field_get:CGCMsgGC_SpyVsEngyWar_IndividualUpdate.engy_kills_scored)
  return engy_kills_scored_;
}
inline void CGCMsgGC_SpyVsEngyWar_IndividualUpdate::set_engy_kills_scored(::google::protobuf::uint32 value) {
  set_has_engy_kills_scored();
  engy_kills_scored_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGC_SpyVsEngyWar_IndividualUpdate.engy_kills_scored)
}

// optional uint32 spy_kills_scored = 5;
inline bool CGCMsgGC_SpyVsEngyWar_IndividualUpdate::has_spy_kills_scored() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CGCMsgGC_SpyVsEngyWar_IndividualUpdate::set_has_spy_kills_scored() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CGCMsgGC_SpyVsEngyWar_IndividualUpdate::clear_has_spy_kills_scored() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CGCMsgGC_SpyVsEngyWar_IndividualUpdate::clear_spy_kills_scored() {
  spy_kills_scored_ = 0u;
  clear_has_spy_kills_scored();
}
inline ::google::protobuf::uint32 CGCMsgGC_SpyVsEngyWar_IndividualUpdate::spy_kills_scored() const {
  // @@protoc_insertion_point(field_get:CGCMsgGC_SpyVsEngyWar_IndividualUpdate.spy_kills_scored)
  return spy_kills_scored_;
}
inline void CGCMsgGC_SpyVsEngyWar_IndividualUpdate::set_spy_kills_scored(::google::protobuf::uint32 value) {
  set_has_spy_kills_scored();
  spy_kills_scored_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGC_SpyVsEngyWar_IndividualUpdate.spy_kills_scored)
}

// -------------------------------------------------------------------

// CGCMsgGC_SpyVsEngyWar_JoinWar

// optional uint32 affiliation = 1;
inline bool CGCMsgGC_SpyVsEngyWar_JoinWar::has_affiliation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCMsgGC_SpyVsEngyWar_JoinWar::set_has_affiliation() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCMsgGC_SpyVsEngyWar_JoinWar::clear_has_affiliation() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCMsgGC_SpyVsEngyWar_JoinWar::clear_affiliation() {
  affiliation_ = 0u;
  clear_has_affiliation();
}
inline ::google::protobuf::uint32 CGCMsgGC_SpyVsEngyWar_JoinWar::affiliation() const {
  // @@protoc_insertion_point(field_get:CGCMsgGC_SpyVsEngyWar_JoinWar.affiliation)
  return affiliation_;
}
inline void CGCMsgGC_SpyVsEngyWar_JoinWar::set_affiliation(::google::protobuf::uint32 value) {
  set_has_affiliation();
  affiliation_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGC_SpyVsEngyWar_JoinWar.affiliation)
}

// -------------------------------------------------------------------

// CGCMsgGC_SpyVsEngyWar_SetKillCamMessage

// optional string killcam_message = 1;
inline bool CGCMsgGC_SpyVsEngyWar_SetKillCamMessage::has_killcam_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCMsgGC_SpyVsEngyWar_SetKillCamMessage::set_has_killcam_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCMsgGC_SpyVsEngyWar_SetKillCamMessage::clear_has_killcam_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCMsgGC_SpyVsEngyWar_SetKillCamMessage::clear_killcam_message() {
  if (killcam_message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    killcam_message_->clear();
  }
  clear_has_killcam_message();
}
inline const ::std::string& CGCMsgGC_SpyVsEngyWar_SetKillCamMessage::killcam_message() const {
  // @@protoc_insertion_point(field_get:CGCMsgGC_SpyVsEngyWar_SetKillCamMessage.killcam_message)
  return *killcam_message_;
}
inline void CGCMsgGC_SpyVsEngyWar_SetKillCamMessage::set_killcam_message(const ::std::string& value) {
  set_has_killcam_message();
  if (killcam_message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    killcam_message_ = new ::std::string;
  }
  killcam_message_->assign(value);
  // @@protoc_insertion_point(field_set:CGCMsgGC_SpyVsEngyWar_SetKillCamMessage.killcam_message)
}
inline void CGCMsgGC_SpyVsEngyWar_SetKillCamMessage::set_killcam_message(const char* value) {
  set_has_killcam_message();
  if (killcam_message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    killcam_message_ = new ::std::string;
  }
  killcam_message_->assign(value);
  // @@protoc_insertion_point(field_set_char:CGCMsgGC_SpyVsEngyWar_SetKillCamMessage.killcam_message)
}
inline void CGCMsgGC_SpyVsEngyWar_SetKillCamMessage::set_killcam_message(const char* value, size_t size) {
  set_has_killcam_message();
  if (killcam_message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    killcam_message_ = new ::std::string;
  }
  killcam_message_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CGCMsgGC_SpyVsEngyWar_SetKillCamMessage.killcam_message)
}
inline ::std::string* CGCMsgGC_SpyVsEngyWar_SetKillCamMessage::mutable_killcam_message() {
  set_has_killcam_message();
  if (killcam_message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    killcam_message_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CGCMsgGC_SpyVsEngyWar_SetKillCamMessage.killcam_message)
  return killcam_message_;
}
inline ::std::string* CGCMsgGC_SpyVsEngyWar_SetKillCamMessage::release_killcam_message() {
  clear_has_killcam_message();
  if (killcam_message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = killcam_message_;
    killcam_message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CGCMsgGC_SpyVsEngyWar_SetKillCamMessage::set_allocated_killcam_message(::std::string* killcam_message) {
  if (killcam_message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete killcam_message_;
  }
  if (killcam_message) {
    set_has_killcam_message();
    killcam_message_ = killcam_message;
  } else {
    clear_has_killcam_message();
    killcam_message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CGCMsgGC_SpyVsEngyWar_SetKillCamMessage.killcam_message)
}

// -------------------------------------------------------------------

// CGCMsgGC_SpyVsEngyWar_RequestGlobalStats

// -------------------------------------------------------------------

// CGCMsgGC_SpyVsEngyWar_GlobalStatsResponse

// optional uint64 spy_score = 1;
inline bool CGCMsgGC_SpyVsEngyWar_GlobalStatsResponse::has_spy_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCMsgGC_SpyVsEngyWar_GlobalStatsResponse::set_has_spy_score() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCMsgGC_SpyVsEngyWar_GlobalStatsResponse::clear_has_spy_score() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCMsgGC_SpyVsEngyWar_GlobalStatsResponse::clear_spy_score() {
  spy_score_ = GOOGLE_ULONGLONG(0);
  clear_has_spy_score();
}
inline ::google::protobuf::uint64 CGCMsgGC_SpyVsEngyWar_GlobalStatsResponse::spy_score() const {
  // @@protoc_insertion_point(field_get:CGCMsgGC_SpyVsEngyWar_GlobalStatsResponse.spy_score)
  return spy_score_;
}
inline void CGCMsgGC_SpyVsEngyWar_GlobalStatsResponse::set_spy_score(::google::protobuf::uint64 value) {
  set_has_spy_score();
  spy_score_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGC_SpyVsEngyWar_GlobalStatsResponse.spy_score)
}

// optional uint64 engy_score = 2;
inline bool CGCMsgGC_SpyVsEngyWar_GlobalStatsResponse::has_engy_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCMsgGC_SpyVsEngyWar_GlobalStatsResponse::set_has_engy_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGCMsgGC_SpyVsEngyWar_GlobalStatsResponse::clear_has_engy_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGCMsgGC_SpyVsEngyWar_GlobalStatsResponse::clear_engy_score() {
  engy_score_ = GOOGLE_ULONGLONG(0);
  clear_has_engy_score();
}
inline ::google::protobuf::uint64 CGCMsgGC_SpyVsEngyWar_GlobalStatsResponse::engy_score() const {
  // @@protoc_insertion_point(field_get:CGCMsgGC_SpyVsEngyWar_GlobalStatsResponse.engy_score)
  return engy_score_;
}
inline void CGCMsgGC_SpyVsEngyWar_GlobalStatsResponse::set_engy_score(::google::protobuf::uint64 value) {
  set_has_engy_score();
  engy_score_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGC_SpyVsEngyWar_GlobalStatsResponse.engy_score)
}

// -------------------------------------------------------------------

// CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate

// optional uint32 score = 2;
inline bool CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::has_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::set_has_score() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::clear_has_score() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::score() const {
  // @@protoc_insertion_point(field_get:CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate.score)
  return score_;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate.score)
}

// optional uint32 type = 3;
inline bool CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::type() const {
  // @@protoc_insertion_point(field_get:CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate.type)
  return type_;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate.type)
}

// optional bytes score_id = 4;
inline bool CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::has_score_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::set_has_score_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::clear_has_score_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::clear_score_id() {
  if (score_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    score_id_->clear();
  }
  clear_has_score_id();
}
inline const ::std::string& CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::score_id() const {
  // @@protoc_insertion_point(field_get:CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate.score_id)
  return *score_id_;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::set_score_id(const ::std::string& value) {
  set_has_score_id();
  if (score_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    score_id_ = new ::std::string;
  }
  score_id_->assign(value);
  // @@protoc_insertion_point(field_set:CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate.score_id)
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::set_score_id(const char* value) {
  set_has_score_id();
  if (score_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    score_id_ = new ::std::string;
  }
  score_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate.score_id)
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::set_score_id(const void* value, size_t size) {
  set_has_score_id();
  if (score_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    score_id_ = new ::std::string;
  }
  score_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate.score_id)
}
inline ::std::string* CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::mutable_score_id() {
  set_has_score_id();
  if (score_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    score_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate.score_id)
  return score_id_;
}
inline ::std::string* CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::release_score_id() {
  clear_has_score_id();
  if (score_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = score_id_;
    score_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::set_allocated_score_id(::std::string* score_id) {
  if (score_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete score_id_;
  }
  if (score_id) {
    set_has_score_id();
    score_id_ = score_id;
  } else {
    clear_has_score_id();
    score_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate.score_id)
}

// optional uint32 score_check = 5;
inline bool CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::has_score_check() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::set_has_score_check() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::clear_has_score_check() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::clear_score_check() {
  score_check_ = 0u;
  clear_has_score_check();
}
inline ::google::protobuf::uint32 CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::score_check() const {
  // @@protoc_insertion_point(field_get:CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate.score_check)
  return score_check_;
}
inline void CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate::set_score_check(::google::protobuf::uint32 value) {
  set_has_score_check();
  score_check_ = value;
  // @@protoc_insertion_point(field_set:CGCMsgGC_PlayerDuckLeaderboard_IndividualUpdate.score_check)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::CMsgGC_GameServer_CreateIdentityResponse_EStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGC_GameServer_CreateIdentityResponse_EStatus>() {
  return ::CMsgGC_GameServer_CreateIdentityResponse_EStatus_descriptor();
}
template <> struct is_proto_enum< ::CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse>() {
  return ::CMsgGC_Client_UseServerModificationItem_Response_EServerModificationItemResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse>() {
  return ::CMsgGC_GameServer_UseServerModificationItem_Response_EServerModificationItemServerResponse_descriptor();
}
template <> struct is_proto_enum< ::CSOTFParty_State> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CSOTFParty_State>() {
  return ::CSOTFParty_State_descriptor();
}
template <> struct is_proto_enum< ::CTFLobbyMember_ConnectState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CTFLobbyMember_ConnectState>() {
  return ::CTFLobbyMember_ConnectState_descriptor();
}
template <> struct is_proto_enum< ::CSOTFLobby_State> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CSOTFLobby_State>() {
  return ::CSOTFLobby_State_descriptor();
}
template <> struct is_proto_enum< ::CSOTFLobby_LobbyType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CSOTFLobby_LobbyType>() {
  return ::CSOTFLobby_LobbyType_descriptor();
}
template <> struct is_proto_enum< ::CMsgGameServerMatchmakingStatus_PlayerConnectState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGameServerMatchmakingStatus_PlayerConnectState>() {
  return ::CMsgGameServerMatchmakingStatus_PlayerConnectState_descriptor();
}
template <> struct is_proto_enum< ::CMsgGameServerMatchmakingStatus_Event> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGameServerMatchmakingStatus_Event>() {
  return ::CMsgGameServerMatchmakingStatus_Event_descriptor();
}
template <> struct is_proto_enum< ::CMsgMvMVictoryInfo_GrantReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgMvMVictoryInfo_GrantReason>() {
  return ::CMsgMvMVictoryInfo_GrantReason_descriptor();
}
template <> struct is_proto_enum< ::CMsgRemovePlayerFromLobby_RemoveReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgRemovePlayerFromLobby_RemoveReason>() {
  return ::CMsgRemovePlayerFromLobby_RemoveReason_descriptor();
}
template <> struct is_proto_enum< ::CGCMsgTFPlayerSkillRatingAdjustment_MatchType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CGCMsgTFPlayerSkillRatingAdjustment_MatchType>() {
  return ::CGCMsgTFPlayerSkillRatingAdjustment_MatchType_descriptor();
}
template <> struct is_proto_enum< ::ETFGCMsg> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ETFGCMsg>() {
  return ::ETFGCMsg_descriptor();
}
template <> struct is_proto_enum< ::EServerModificationItemType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EServerModificationItemType>() {
  return ::EServerModificationItemType_descriptor();
}
template <> struct is_proto_enum< ::TF_MatchmakingMode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TF_MatchmakingMode>() {
  return ::TF_MatchmakingMode_descriptor();
}
template <> struct is_proto_enum< ::TF_Matchmaking_WizardStep> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TF_Matchmaking_WizardStep>() {
  return ::TF_Matchmaking_WizardStep_descriptor();
}
template <> struct is_proto_enum< ::TF_GC_GameState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TF_GC_GameState>() {
  return ::TF_GC_GameState_descriptor();
}
template <> struct is_proto_enum< ::TF_GC_TEAM> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TF_GC_TEAM>() {
  return ::TF_GC_TEAM_descriptor();
}
template <> struct is_proto_enum< ::TFLobbyReadyState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TFLobbyReadyState>() {
  return ::TFLobbyReadyState_descriptor();
}
template <> struct is_proto_enum< ::ChatChannelType_t> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ChatChannelType_t>() {
  return ::ChatChannelType_t_descriptor();
}
template <> struct is_proto_enum< ::ServerMatchmakingState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ServerMatchmakingState>() {
  return ::ServerMatchmakingState_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_tf_5fgcmessages_2eproto__INCLUDED
