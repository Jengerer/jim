// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages.proto

#include "steammessages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class CMsgProtoBufHeaderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgProtoBufHeader>
      _instance;
} _CMsgProtoBufHeader_default_instance_;
class CMsgWebAPIKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgWebAPIKey>
      _instance;
} _CMsgWebAPIKey_default_instance_;
class CMsgHttpRequest_RequestHeaderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgHttpRequest_RequestHeader>
      _instance;
} _CMsgHttpRequest_RequestHeader_default_instance_;
class CMsgHttpRequest_QueryParamDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgHttpRequest_QueryParam>
      _instance;
} _CMsgHttpRequest_QueryParam_default_instance_;
class CMsgHttpRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgHttpRequest>
      _instance;
} _CMsgHttpRequest_default_instance_;
class CMsgWebAPIRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgWebAPIRequest>
      _instance;
} _CMsgWebAPIRequest_default_instance_;
class CMsgHttpResponse_ResponseHeaderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgHttpResponse_ResponseHeader>
      _instance;
} _CMsgHttpResponse_ResponseHeader_default_instance_;
class CMsgHttpResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgHttpResponse>
      _instance;
} _CMsgHttpResponse_default_instance_;
class CMsgAMFindAccountsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgAMFindAccounts>
      _instance;
} _CMsgAMFindAccounts_default_instance_;
class CMsgAMFindAccountsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgAMFindAccountsResponse>
      _instance;
} _CMsgAMFindAccountsResponse_default_instance_;
class CMsgNotifyWatchdogDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgNotifyWatchdog>
      _instance;
} _CMsgNotifyWatchdog_default_instance_;
class CMsgAMGetLicensesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgAMGetLicenses>
      _instance;
} _CMsgAMGetLicenses_default_instance_;
class CMsgPackageLicenseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgPackageLicense>
      _instance;
} _CMsgPackageLicense_default_instance_;
class CMsgAMGetLicensesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgAMGetLicensesResponse>
      _instance;
} _CMsgAMGetLicensesResponse_default_instance_;
class CMsgAMGetUserGameStatsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgAMGetUserGameStats>
      _instance;
} _CMsgAMGetUserGameStats_default_instance_;
class CMsgAMGetUserGameStatsResponse_StatsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgAMGetUserGameStatsResponse_Stats>
      _instance;
} _CMsgAMGetUserGameStatsResponse_Stats_default_instance_;
class CMsgAMGetUserGameStatsResponse_Achievement_BlocksDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgAMGetUserGameStatsResponse_Achievement_Blocks>
      _instance;
} _CMsgAMGetUserGameStatsResponse_Achievement_Blocks_default_instance_;
class CMsgAMGetUserGameStatsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgAMGetUserGameStatsResponse>
      _instance;
} _CMsgAMGetUserGameStatsResponse_default_instance_;
class CMsgGCGetCommandListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCGetCommandList>
      _instance;
} _CMsgGCGetCommandList_default_instance_;
class CMsgGCGetCommandListResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCGetCommandListResponse>
      _instance;
} _CMsgGCGetCommandListResponse_default_instance_;
class CGCMsgMemCachedGetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CGCMsgMemCachedGet>
      _instance;
} _CGCMsgMemCachedGet_default_instance_;
class CGCMsgMemCachedGetResponse_ValueTagDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CGCMsgMemCachedGetResponse_ValueTag>
      _instance;
} _CGCMsgMemCachedGetResponse_ValueTag_default_instance_;
class CGCMsgMemCachedGetResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CGCMsgMemCachedGetResponse>
      _instance;
} _CGCMsgMemCachedGetResponse_default_instance_;
class CGCMsgMemCachedSet_KeyPairDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CGCMsgMemCachedSet_KeyPair>
      _instance;
} _CGCMsgMemCachedSet_KeyPair_default_instance_;
class CGCMsgMemCachedSetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CGCMsgMemCachedSet>
      _instance;
} _CGCMsgMemCachedSet_default_instance_;
class CGCMsgMemCachedDeleteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CGCMsgMemCachedDelete>
      _instance;
} _CGCMsgMemCachedDelete_default_instance_;
class CGCMsgMemCachedStatsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CGCMsgMemCachedStats>
      _instance;
} _CGCMsgMemCachedStats_default_instance_;
class CGCMsgMemCachedStatsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CGCMsgMemCachedStatsResponse>
      _instance;
} _CGCMsgMemCachedStatsResponse_default_instance_;
class CGCMsgSQLStatsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CGCMsgSQLStats>
      _instance;
} _CGCMsgSQLStats_default_instance_;
class CGCMsgSQLStatsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CGCMsgSQLStatsResponse>
      _instance;
} _CGCMsgSQLStatsResponse_default_instance_;
class CMsgAMAddFreeLicenseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgAMAddFreeLicense>
      _instance;
} _CMsgAMAddFreeLicense_default_instance_;
class CMsgAMAddFreeLicenseResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgAMAddFreeLicenseResponse>
      _instance;
} _CMsgAMAddFreeLicenseResponse_default_instance_;
class CGCMsgGetIPLocationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CGCMsgGetIPLocation>
      _instance;
} _CGCMsgGetIPLocation_default_instance_;
class CIPLocationInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CIPLocationInfo>
      _instance;
} _CIPLocationInfo_default_instance_;
class CGCMsgGetIPLocationResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CGCMsgGetIPLocationResponse>
      _instance;
} _CGCMsgGetIPLocationResponse_default_instance_;
class CGCMsgSystemStatsSchemaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CGCMsgSystemStatsSchema>
      _instance;
} _CGCMsgSystemStatsSchema_default_instance_;
class CGCMsgGetSystemStatsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CGCMsgGetSystemStats>
      _instance;
} _CGCMsgGetSystemStats_default_instance_;
class CGCMsgGetSystemStatsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CGCMsgGetSystemStatsResponse>
      _instance;
} _CGCMsgGetSystemStatsResponse_default_instance_;
class CMsgAMSendEmail_ReplacementTokenDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgAMSendEmail_ReplacementToken>
      _instance;
} _CMsgAMSendEmail_ReplacementToken_default_instance_;
class CMsgAMSendEmail_PersonaNameReplacementTokenDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgAMSendEmail_PersonaNameReplacementToken>
      _instance;
} _CMsgAMSendEmail_PersonaNameReplacementToken_default_instance_;
class CMsgAMSendEmailDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgAMSendEmail>
      _instance;
} _CMsgAMSendEmail_default_instance_;
class CMsgAMSendEmailResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgAMSendEmailResponse>
      _instance;
} _CMsgAMSendEmailResponse_default_instance_;
class CMsgGCGetEmailTemplateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCGetEmailTemplate>
      _instance;
} _CMsgGCGetEmailTemplate_default_instance_;
class CMsgGCGetEmailTemplateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCGetEmailTemplateResponse>
      _instance;
} _CMsgGCGetEmailTemplateResponse_default_instance_;
class CMsgAMGrantGuestPasses2DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgAMGrantGuestPasses2>
      _instance;
} _CMsgAMGrantGuestPasses2_default_instance_;
class CMsgAMGrantGuestPasses2ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgAMGrantGuestPasses2Response>
      _instance;
} _CMsgAMGrantGuestPasses2Response_default_instance_;
class CGCSystemMsg_GetAccountDetailsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CGCSystemMsg_GetAccountDetails>
      _instance;
} _CGCSystemMsg_GetAccountDetails_default_instance_;
class CGCSystemMsg_GetAccountDetails_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CGCSystemMsg_GetAccountDetails_Response>
      _instance;
} _CGCSystemMsg_GetAccountDetails_Response_default_instance_;
class CMsgGCCheckClanMembershipDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCCheckClanMembership>
      _instance;
} _CMsgGCCheckClanMembership_default_instance_;
class CMsgGCCheckClanMembership_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCCheckClanMembership_Response>
      _instance;
} _CMsgGCCheckClanMembership_Response_default_instance_;
class CMsgGCGetPersonaNamesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCGetPersonaNames>
      _instance;
} _CMsgGCGetPersonaNames_default_instance_;
class CMsgGCGetPersonaNames_Response_PersonaNameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCGetPersonaNames_Response_PersonaName>
      _instance;
} _CMsgGCGetPersonaNames_Response_PersonaName_default_instance_;
class CMsgGCGetPersonaNames_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCGetPersonaNames_Response>
      _instance;
} _CMsgGCGetPersonaNames_Response_default_instance_;
class CMsgGCCheckFriendshipDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCCheckFriendship>
      _instance;
} _CMsgGCCheckFriendship_default_instance_;
class CMsgGCCheckFriendship_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCCheckFriendship_Response>
      _instance;
} _CMsgGCCheckFriendship_Response_default_instance_;
class CMsgGCMsgMasterSetDirectory_SubGCDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCMsgMasterSetDirectory_SubGC>
      _instance;
} _CMsgGCMsgMasterSetDirectory_SubGC_default_instance_;
class CMsgGCMsgMasterSetDirectoryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCMsgMasterSetDirectory>
      _instance;
} _CMsgGCMsgMasterSetDirectory_default_instance_;
class CMsgGCMsgMasterSetDirectory_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCMsgMasterSetDirectory_Response>
      _instance;
} _CMsgGCMsgMasterSetDirectory_Response_default_instance_;
class CMsgGCMsgWebAPIJobRequestForwardResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCMsgWebAPIJobRequestForwardResponse>
      _instance;
} _CMsgGCMsgWebAPIJobRequestForwardResponse_default_instance_;
class CGCSystemMsg_GetPurchaseTrust_RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CGCSystemMsg_GetPurchaseTrust_Request>
      _instance;
} _CGCSystemMsg_GetPurchaseTrust_Request_default_instance_;
class CGCSystemMsg_GetPurchaseTrust_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CGCSystemMsg_GetPurchaseTrust_Response>
      _instance;
} _CGCSystemMsg_GetPurchaseTrust_Response_default_instance_;
class CMsgGCHAccountVacStatusChangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCHAccountVacStatusChange>
      _instance;
} _CMsgGCHAccountVacStatusChange_default_instance_;
class CMsgGCHAccountTradeBanStatusChangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCHAccountTradeBanStatusChange>
      _instance;
} _CMsgGCHAccountTradeBanStatusChange_default_instance_;
class CMsgGCHAccountLockStatusChangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCHAccountLockStatusChange>
      _instance;
} _CMsgGCHAccountLockStatusChange_default_instance_;
class CMsgGCHVacVerificationChangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCHVacVerificationChange>
      _instance;
} _CMsgGCHVacVerificationChange_default_instance_;
class CMsgGCHAccountPhoneNumberChangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCHAccountPhoneNumberChange>
      _instance;
} _CMsgGCHAccountPhoneNumberChange_default_instance_;
class CMsgGCHAccountTwoFactorChangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCHAccountTwoFactorChange>
      _instance;
} _CMsgGCHAccountTwoFactorChange_default_instance_;
class CMsgGCGetPartnerAccountLinkDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCGetPartnerAccountLink>
      _instance;
} _CMsgGCGetPartnerAccountLink_default_instance_;
class CMsgGCGetPartnerAccountLink_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCGetPartnerAccountLink_Response>
      _instance;
} _CMsgGCGetPartnerAccountLink_Response_default_instance_;
class CMsgGCRoutingInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCRoutingInfo>
      _instance;
} _CMsgGCRoutingInfo_default_instance_;
class CMsgGCMsgMasterSetWebAPIRouting_EntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCMsgMasterSetWebAPIRouting_Entry>
      _instance;
} _CMsgGCMsgMasterSetWebAPIRouting_Entry_default_instance_;
class CMsgGCMsgMasterSetWebAPIRoutingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCMsgMasterSetWebAPIRouting>
      _instance;
} _CMsgGCMsgMasterSetWebAPIRouting_default_instance_;
class CMsgGCMsgMasterSetClientMsgRouting_EntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCMsgMasterSetClientMsgRouting_Entry>
      _instance;
} _CMsgGCMsgMasterSetClientMsgRouting_Entry_default_instance_;
class CMsgGCMsgMasterSetClientMsgRoutingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCMsgMasterSetClientMsgRouting>
      _instance;
} _CMsgGCMsgMasterSetClientMsgRouting_default_instance_;
class CMsgGCMsgMasterSetWebAPIRouting_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCMsgMasterSetWebAPIRouting_Response>
      _instance;
} _CMsgGCMsgMasterSetWebAPIRouting_Response_default_instance_;
class CMsgGCMsgMasterSetClientMsgRouting_ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCMsgMasterSetClientMsgRouting_Response>
      _instance;
} _CMsgGCMsgMasterSetClientMsgRouting_Response_default_instance_;
class CMsgGCMsgSetOptions_MessageRangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCMsgSetOptions_MessageRange>
      _instance;
} _CMsgGCMsgSetOptions_MessageRange_default_instance_;
class CMsgGCMsgSetOptionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCMsgSetOptions>
      _instance;
} _CMsgGCMsgSetOptions_default_instance_;
class CMsgGCHUpdateSession_ExtraFieldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCHUpdateSession_ExtraField>
      _instance;
} _CMsgGCHUpdateSession_ExtraField_default_instance_;
class CMsgGCHUpdateSessionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCHUpdateSession>
      _instance;
} _CMsgGCHUpdateSession_default_instance_;
class CMsgNotificationOfSuspiciousActivity_MultipleGameInstancesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgNotificationOfSuspiciousActivity_MultipleGameInstances>
      _instance;
} _CMsgNotificationOfSuspiciousActivity_MultipleGameInstances_default_instance_;
class CMsgNotificationOfSuspiciousActivityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CMsgNotificationOfSuspiciousActivity>
      _instance;
} _CMsgNotificationOfSuspiciousActivity_default_instance_;
namespace protobuf_steammessages_2eproto {
void InitDefaultsCMsgProtoBufHeaderImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgProtoBufHeader_default_instance_;
    new (ptr) ::CMsgProtoBufHeader();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgProtoBufHeader::InitAsDefaultInstance();
}

void InitDefaultsCMsgProtoBufHeader() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgProtoBufHeaderImpl);
}

void InitDefaultsCMsgWebAPIKeyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgWebAPIKey_default_instance_;
    new (ptr) ::CMsgWebAPIKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgWebAPIKey::InitAsDefaultInstance();
}

void InitDefaultsCMsgWebAPIKey() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgWebAPIKeyImpl);
}

void InitDefaultsCMsgHttpRequest_RequestHeaderImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgHttpRequest_RequestHeader_default_instance_;
    new (ptr) ::CMsgHttpRequest_RequestHeader();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgHttpRequest_RequestHeader::InitAsDefaultInstance();
}

void InitDefaultsCMsgHttpRequest_RequestHeader() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgHttpRequest_RequestHeaderImpl);
}

void InitDefaultsCMsgHttpRequest_QueryParamImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgHttpRequest_QueryParam_default_instance_;
    new (ptr) ::CMsgHttpRequest_QueryParam();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgHttpRequest_QueryParam::InitAsDefaultInstance();
}

void InitDefaultsCMsgHttpRequest_QueryParam() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgHttpRequest_QueryParamImpl);
}

void InitDefaultsCMsgHttpRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_steammessages_2eproto::InitDefaultsCMsgHttpRequest_RequestHeader();
  protobuf_steammessages_2eproto::InitDefaultsCMsgHttpRequest_QueryParam();
  {
    void* ptr = &::_CMsgHttpRequest_default_instance_;
    new (ptr) ::CMsgHttpRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgHttpRequest::InitAsDefaultInstance();
}

void InitDefaultsCMsgHttpRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgHttpRequestImpl);
}

void InitDefaultsCMsgWebAPIRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_steammessages_2eproto::InitDefaultsCMsgWebAPIKey();
  protobuf_steammessages_2eproto::InitDefaultsCMsgHttpRequest();
  {
    void* ptr = &::_CMsgWebAPIRequest_default_instance_;
    new (ptr) ::CMsgWebAPIRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgWebAPIRequest::InitAsDefaultInstance();
}

void InitDefaultsCMsgWebAPIRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgWebAPIRequestImpl);
}

void InitDefaultsCMsgHttpResponse_ResponseHeaderImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgHttpResponse_ResponseHeader_default_instance_;
    new (ptr) ::CMsgHttpResponse_ResponseHeader();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgHttpResponse_ResponseHeader::InitAsDefaultInstance();
}

void InitDefaultsCMsgHttpResponse_ResponseHeader() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgHttpResponse_ResponseHeaderImpl);
}

void InitDefaultsCMsgHttpResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_steammessages_2eproto::InitDefaultsCMsgHttpResponse_ResponseHeader();
  {
    void* ptr = &::_CMsgHttpResponse_default_instance_;
    new (ptr) ::CMsgHttpResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgHttpResponse::InitAsDefaultInstance();
}

void InitDefaultsCMsgHttpResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgHttpResponseImpl);
}

void InitDefaultsCMsgAMFindAccountsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgAMFindAccounts_default_instance_;
    new (ptr) ::CMsgAMFindAccounts();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgAMFindAccounts::InitAsDefaultInstance();
}

void InitDefaultsCMsgAMFindAccounts() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgAMFindAccountsImpl);
}

void InitDefaultsCMsgAMFindAccountsResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgAMFindAccountsResponse_default_instance_;
    new (ptr) ::CMsgAMFindAccountsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgAMFindAccountsResponse::InitAsDefaultInstance();
}

void InitDefaultsCMsgAMFindAccountsResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgAMFindAccountsResponseImpl);
}

void InitDefaultsCMsgNotifyWatchdogImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgNotifyWatchdog_default_instance_;
    new (ptr) ::CMsgNotifyWatchdog();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgNotifyWatchdog::InitAsDefaultInstance();
}

void InitDefaultsCMsgNotifyWatchdog() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgNotifyWatchdogImpl);
}

void InitDefaultsCMsgAMGetLicensesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgAMGetLicenses_default_instance_;
    new (ptr) ::CMsgAMGetLicenses();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgAMGetLicenses::InitAsDefaultInstance();
}

void InitDefaultsCMsgAMGetLicenses() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgAMGetLicensesImpl);
}

void InitDefaultsCMsgPackageLicenseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgPackageLicense_default_instance_;
    new (ptr) ::CMsgPackageLicense();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgPackageLicense::InitAsDefaultInstance();
}

void InitDefaultsCMsgPackageLicense() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgPackageLicenseImpl);
}

void InitDefaultsCMsgAMGetLicensesResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_steammessages_2eproto::InitDefaultsCMsgPackageLicense();
  {
    void* ptr = &::_CMsgAMGetLicensesResponse_default_instance_;
    new (ptr) ::CMsgAMGetLicensesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgAMGetLicensesResponse::InitAsDefaultInstance();
}

void InitDefaultsCMsgAMGetLicensesResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgAMGetLicensesResponseImpl);
}

void InitDefaultsCMsgAMGetUserGameStatsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgAMGetUserGameStats_default_instance_;
    new (ptr) ::CMsgAMGetUserGameStats();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgAMGetUserGameStats::InitAsDefaultInstance();
}

void InitDefaultsCMsgAMGetUserGameStats() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgAMGetUserGameStatsImpl);
}

void InitDefaultsCMsgAMGetUserGameStatsResponse_StatsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgAMGetUserGameStatsResponse_Stats_default_instance_;
    new (ptr) ::CMsgAMGetUserGameStatsResponse_Stats();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgAMGetUserGameStatsResponse_Stats::InitAsDefaultInstance();
}

void InitDefaultsCMsgAMGetUserGameStatsResponse_Stats() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgAMGetUserGameStatsResponse_StatsImpl);
}

void InitDefaultsCMsgAMGetUserGameStatsResponse_Achievement_BlocksImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgAMGetUserGameStatsResponse_Achievement_Blocks_default_instance_;
    new (ptr) ::CMsgAMGetUserGameStatsResponse_Achievement_Blocks();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgAMGetUserGameStatsResponse_Achievement_Blocks::InitAsDefaultInstance();
}

void InitDefaultsCMsgAMGetUserGameStatsResponse_Achievement_Blocks() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgAMGetUserGameStatsResponse_Achievement_BlocksImpl);
}

void InitDefaultsCMsgAMGetUserGameStatsResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_steammessages_2eproto::InitDefaultsCMsgAMGetUserGameStatsResponse_Stats();
  protobuf_steammessages_2eproto::InitDefaultsCMsgAMGetUserGameStatsResponse_Achievement_Blocks();
  {
    void* ptr = &::_CMsgAMGetUserGameStatsResponse_default_instance_;
    new (ptr) ::CMsgAMGetUserGameStatsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgAMGetUserGameStatsResponse::InitAsDefaultInstance();
}

void InitDefaultsCMsgAMGetUserGameStatsResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgAMGetUserGameStatsResponseImpl);
}

void InitDefaultsCMsgGCGetCommandListImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCGetCommandList_default_instance_;
    new (ptr) ::CMsgGCGetCommandList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCGetCommandList::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCGetCommandList() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCGetCommandListImpl);
}

void InitDefaultsCMsgGCGetCommandListResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCGetCommandListResponse_default_instance_;
    new (ptr) ::CMsgGCGetCommandListResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCGetCommandListResponse::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCGetCommandListResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCGetCommandListResponseImpl);
}

void InitDefaultsCGCMsgMemCachedGetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CGCMsgMemCachedGet_default_instance_;
    new (ptr) ::CGCMsgMemCachedGet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CGCMsgMemCachedGet::InitAsDefaultInstance();
}

void InitDefaultsCGCMsgMemCachedGet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCGCMsgMemCachedGetImpl);
}

void InitDefaultsCGCMsgMemCachedGetResponse_ValueTagImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CGCMsgMemCachedGetResponse_ValueTag_default_instance_;
    new (ptr) ::CGCMsgMemCachedGetResponse_ValueTag();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CGCMsgMemCachedGetResponse_ValueTag::InitAsDefaultInstance();
}

void InitDefaultsCGCMsgMemCachedGetResponse_ValueTag() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCGCMsgMemCachedGetResponse_ValueTagImpl);
}

void InitDefaultsCGCMsgMemCachedGetResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_steammessages_2eproto::InitDefaultsCGCMsgMemCachedGetResponse_ValueTag();
  {
    void* ptr = &::_CGCMsgMemCachedGetResponse_default_instance_;
    new (ptr) ::CGCMsgMemCachedGetResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CGCMsgMemCachedGetResponse::InitAsDefaultInstance();
}

void InitDefaultsCGCMsgMemCachedGetResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCGCMsgMemCachedGetResponseImpl);
}

void InitDefaultsCGCMsgMemCachedSet_KeyPairImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CGCMsgMemCachedSet_KeyPair_default_instance_;
    new (ptr) ::CGCMsgMemCachedSet_KeyPair();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CGCMsgMemCachedSet_KeyPair::InitAsDefaultInstance();
}

void InitDefaultsCGCMsgMemCachedSet_KeyPair() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCGCMsgMemCachedSet_KeyPairImpl);
}

void InitDefaultsCGCMsgMemCachedSetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_steammessages_2eproto::InitDefaultsCGCMsgMemCachedSet_KeyPair();
  {
    void* ptr = &::_CGCMsgMemCachedSet_default_instance_;
    new (ptr) ::CGCMsgMemCachedSet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CGCMsgMemCachedSet::InitAsDefaultInstance();
}

void InitDefaultsCGCMsgMemCachedSet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCGCMsgMemCachedSetImpl);
}

void InitDefaultsCGCMsgMemCachedDeleteImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CGCMsgMemCachedDelete_default_instance_;
    new (ptr) ::CGCMsgMemCachedDelete();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CGCMsgMemCachedDelete::InitAsDefaultInstance();
}

void InitDefaultsCGCMsgMemCachedDelete() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCGCMsgMemCachedDeleteImpl);
}

void InitDefaultsCGCMsgMemCachedStatsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CGCMsgMemCachedStats_default_instance_;
    new (ptr) ::CGCMsgMemCachedStats();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CGCMsgMemCachedStats::InitAsDefaultInstance();
}

void InitDefaultsCGCMsgMemCachedStats() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCGCMsgMemCachedStatsImpl);
}

void InitDefaultsCGCMsgMemCachedStatsResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CGCMsgMemCachedStatsResponse_default_instance_;
    new (ptr) ::CGCMsgMemCachedStatsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CGCMsgMemCachedStatsResponse::InitAsDefaultInstance();
}

void InitDefaultsCGCMsgMemCachedStatsResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCGCMsgMemCachedStatsResponseImpl);
}

void InitDefaultsCGCMsgSQLStatsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CGCMsgSQLStats_default_instance_;
    new (ptr) ::CGCMsgSQLStats();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CGCMsgSQLStats::InitAsDefaultInstance();
}

void InitDefaultsCGCMsgSQLStats() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCGCMsgSQLStatsImpl);
}

void InitDefaultsCGCMsgSQLStatsResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CGCMsgSQLStatsResponse_default_instance_;
    new (ptr) ::CGCMsgSQLStatsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CGCMsgSQLStatsResponse::InitAsDefaultInstance();
}

void InitDefaultsCGCMsgSQLStatsResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCGCMsgSQLStatsResponseImpl);
}

void InitDefaultsCMsgAMAddFreeLicenseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgAMAddFreeLicense_default_instance_;
    new (ptr) ::CMsgAMAddFreeLicense();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgAMAddFreeLicense::InitAsDefaultInstance();
}

void InitDefaultsCMsgAMAddFreeLicense() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgAMAddFreeLicenseImpl);
}

void InitDefaultsCMsgAMAddFreeLicenseResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgAMAddFreeLicenseResponse_default_instance_;
    new (ptr) ::CMsgAMAddFreeLicenseResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgAMAddFreeLicenseResponse::InitAsDefaultInstance();
}

void InitDefaultsCMsgAMAddFreeLicenseResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgAMAddFreeLicenseResponseImpl);
}

void InitDefaultsCGCMsgGetIPLocationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CGCMsgGetIPLocation_default_instance_;
    new (ptr) ::CGCMsgGetIPLocation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CGCMsgGetIPLocation::InitAsDefaultInstance();
}

void InitDefaultsCGCMsgGetIPLocation() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCGCMsgGetIPLocationImpl);
}

void InitDefaultsCIPLocationInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CIPLocationInfo_default_instance_;
    new (ptr) ::CIPLocationInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CIPLocationInfo::InitAsDefaultInstance();
}

void InitDefaultsCIPLocationInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCIPLocationInfoImpl);
}

void InitDefaultsCGCMsgGetIPLocationResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_steammessages_2eproto::InitDefaultsCIPLocationInfo();
  {
    void* ptr = &::_CGCMsgGetIPLocationResponse_default_instance_;
    new (ptr) ::CGCMsgGetIPLocationResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CGCMsgGetIPLocationResponse::InitAsDefaultInstance();
}

void InitDefaultsCGCMsgGetIPLocationResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCGCMsgGetIPLocationResponseImpl);
}

void InitDefaultsCGCMsgSystemStatsSchemaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CGCMsgSystemStatsSchema_default_instance_;
    new (ptr) ::CGCMsgSystemStatsSchema();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CGCMsgSystemStatsSchema::InitAsDefaultInstance();
}

void InitDefaultsCGCMsgSystemStatsSchema() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCGCMsgSystemStatsSchemaImpl);
}

void InitDefaultsCGCMsgGetSystemStatsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CGCMsgGetSystemStats_default_instance_;
    new (ptr) ::CGCMsgGetSystemStats();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CGCMsgGetSystemStats::InitAsDefaultInstance();
}

void InitDefaultsCGCMsgGetSystemStats() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCGCMsgGetSystemStatsImpl);
}

void InitDefaultsCGCMsgGetSystemStatsResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CGCMsgGetSystemStatsResponse_default_instance_;
    new (ptr) ::CGCMsgGetSystemStatsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CGCMsgGetSystemStatsResponse::InitAsDefaultInstance();
}

void InitDefaultsCGCMsgGetSystemStatsResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCGCMsgGetSystemStatsResponseImpl);
}

void InitDefaultsCMsgAMSendEmail_ReplacementTokenImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgAMSendEmail_ReplacementToken_default_instance_;
    new (ptr) ::CMsgAMSendEmail_ReplacementToken();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgAMSendEmail_ReplacementToken::InitAsDefaultInstance();
}

void InitDefaultsCMsgAMSendEmail_ReplacementToken() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgAMSendEmail_ReplacementTokenImpl);
}

void InitDefaultsCMsgAMSendEmail_PersonaNameReplacementTokenImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgAMSendEmail_PersonaNameReplacementToken_default_instance_;
    new (ptr) ::CMsgAMSendEmail_PersonaNameReplacementToken();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgAMSendEmail_PersonaNameReplacementToken::InitAsDefaultInstance();
}

void InitDefaultsCMsgAMSendEmail_PersonaNameReplacementToken() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgAMSendEmail_PersonaNameReplacementTokenImpl);
}

void InitDefaultsCMsgAMSendEmailImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_steammessages_2eproto::InitDefaultsCMsgAMSendEmail_PersonaNameReplacementToken();
  protobuf_steammessages_2eproto::InitDefaultsCMsgAMSendEmail_ReplacementToken();
  {
    void* ptr = &::_CMsgAMSendEmail_default_instance_;
    new (ptr) ::CMsgAMSendEmail();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgAMSendEmail::InitAsDefaultInstance();
}

void InitDefaultsCMsgAMSendEmail() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgAMSendEmailImpl);
}

void InitDefaultsCMsgAMSendEmailResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgAMSendEmailResponse_default_instance_;
    new (ptr) ::CMsgAMSendEmailResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgAMSendEmailResponse::InitAsDefaultInstance();
}

void InitDefaultsCMsgAMSendEmailResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgAMSendEmailResponseImpl);
}

void InitDefaultsCMsgGCGetEmailTemplateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCGetEmailTemplate_default_instance_;
    new (ptr) ::CMsgGCGetEmailTemplate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCGetEmailTemplate::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCGetEmailTemplate() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCGetEmailTemplateImpl);
}

void InitDefaultsCMsgGCGetEmailTemplateResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCGetEmailTemplateResponse_default_instance_;
    new (ptr) ::CMsgGCGetEmailTemplateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCGetEmailTemplateResponse::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCGetEmailTemplateResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCGetEmailTemplateResponseImpl);
}

void InitDefaultsCMsgAMGrantGuestPasses2Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgAMGrantGuestPasses2_default_instance_;
    new (ptr) ::CMsgAMGrantGuestPasses2();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgAMGrantGuestPasses2::InitAsDefaultInstance();
}

void InitDefaultsCMsgAMGrantGuestPasses2() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgAMGrantGuestPasses2Impl);
}

void InitDefaultsCMsgAMGrantGuestPasses2ResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgAMGrantGuestPasses2Response_default_instance_;
    new (ptr) ::CMsgAMGrantGuestPasses2Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgAMGrantGuestPasses2Response::InitAsDefaultInstance();
}

void InitDefaultsCMsgAMGrantGuestPasses2Response() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgAMGrantGuestPasses2ResponseImpl);
}

void InitDefaultsCGCSystemMsg_GetAccountDetailsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CGCSystemMsg_GetAccountDetails_default_instance_;
    new (ptr) ::CGCSystemMsg_GetAccountDetails();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CGCSystemMsg_GetAccountDetails::InitAsDefaultInstance();
}

void InitDefaultsCGCSystemMsg_GetAccountDetails() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCGCSystemMsg_GetAccountDetailsImpl);
}

void InitDefaultsCGCSystemMsg_GetAccountDetails_ResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CGCSystemMsg_GetAccountDetails_Response_default_instance_;
    new (ptr) ::CGCSystemMsg_GetAccountDetails_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CGCSystemMsg_GetAccountDetails_Response::InitAsDefaultInstance();
}

void InitDefaultsCGCSystemMsg_GetAccountDetails_Response() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCGCSystemMsg_GetAccountDetails_ResponseImpl);
}

void InitDefaultsCMsgGCCheckClanMembershipImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCCheckClanMembership_default_instance_;
    new (ptr) ::CMsgGCCheckClanMembership();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCCheckClanMembership::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCCheckClanMembership() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCCheckClanMembershipImpl);
}

void InitDefaultsCMsgGCCheckClanMembership_ResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCCheckClanMembership_Response_default_instance_;
    new (ptr) ::CMsgGCCheckClanMembership_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCCheckClanMembership_Response::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCCheckClanMembership_Response() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCCheckClanMembership_ResponseImpl);
}

void InitDefaultsCMsgGCGetPersonaNamesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCGetPersonaNames_default_instance_;
    new (ptr) ::CMsgGCGetPersonaNames();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCGetPersonaNames::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCGetPersonaNames() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCGetPersonaNamesImpl);
}

void InitDefaultsCMsgGCGetPersonaNames_Response_PersonaNameImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCGetPersonaNames_Response_PersonaName_default_instance_;
    new (ptr) ::CMsgGCGetPersonaNames_Response_PersonaName();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCGetPersonaNames_Response_PersonaName::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCGetPersonaNames_Response_PersonaName() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCGetPersonaNames_Response_PersonaNameImpl);
}

void InitDefaultsCMsgGCGetPersonaNames_ResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_steammessages_2eproto::InitDefaultsCMsgGCGetPersonaNames_Response_PersonaName();
  {
    void* ptr = &::_CMsgGCGetPersonaNames_Response_default_instance_;
    new (ptr) ::CMsgGCGetPersonaNames_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCGetPersonaNames_Response::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCGetPersonaNames_Response() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCGetPersonaNames_ResponseImpl);
}

void InitDefaultsCMsgGCCheckFriendshipImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCCheckFriendship_default_instance_;
    new (ptr) ::CMsgGCCheckFriendship();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCCheckFriendship::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCCheckFriendship() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCCheckFriendshipImpl);
}

void InitDefaultsCMsgGCCheckFriendship_ResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCCheckFriendship_Response_default_instance_;
    new (ptr) ::CMsgGCCheckFriendship_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCCheckFriendship_Response::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCCheckFriendship_Response() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCCheckFriendship_ResponseImpl);
}

void InitDefaultsCMsgGCMsgMasterSetDirectory_SubGCImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCMsgMasterSetDirectory_SubGC_default_instance_;
    new (ptr) ::CMsgGCMsgMasterSetDirectory_SubGC();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCMsgMasterSetDirectory_SubGC::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCMsgMasterSetDirectory_SubGC() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCMsgMasterSetDirectory_SubGCImpl);
}

void InitDefaultsCMsgGCMsgMasterSetDirectoryImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_steammessages_2eproto::InitDefaultsCMsgGCMsgMasterSetDirectory_SubGC();
  {
    void* ptr = &::_CMsgGCMsgMasterSetDirectory_default_instance_;
    new (ptr) ::CMsgGCMsgMasterSetDirectory();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCMsgMasterSetDirectory::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCMsgMasterSetDirectory() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCMsgMasterSetDirectoryImpl);
}

void InitDefaultsCMsgGCMsgMasterSetDirectory_ResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCMsgMasterSetDirectory_Response_default_instance_;
    new (ptr) ::CMsgGCMsgMasterSetDirectory_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCMsgMasterSetDirectory_Response::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCMsgMasterSetDirectory_Response() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCMsgMasterSetDirectory_ResponseImpl);
}

void InitDefaultsCMsgGCMsgWebAPIJobRequestForwardResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCMsgWebAPIJobRequestForwardResponse_default_instance_;
    new (ptr) ::CMsgGCMsgWebAPIJobRequestForwardResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCMsgWebAPIJobRequestForwardResponse::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCMsgWebAPIJobRequestForwardResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCMsgWebAPIJobRequestForwardResponseImpl);
}

void InitDefaultsCGCSystemMsg_GetPurchaseTrust_RequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CGCSystemMsg_GetPurchaseTrust_Request_default_instance_;
    new (ptr) ::CGCSystemMsg_GetPurchaseTrust_Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CGCSystemMsg_GetPurchaseTrust_Request::InitAsDefaultInstance();
}

void InitDefaultsCGCSystemMsg_GetPurchaseTrust_Request() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCGCSystemMsg_GetPurchaseTrust_RequestImpl);
}

void InitDefaultsCGCSystemMsg_GetPurchaseTrust_ResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CGCSystemMsg_GetPurchaseTrust_Response_default_instance_;
    new (ptr) ::CGCSystemMsg_GetPurchaseTrust_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CGCSystemMsg_GetPurchaseTrust_Response::InitAsDefaultInstance();
}

void InitDefaultsCGCSystemMsg_GetPurchaseTrust_Response() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCGCSystemMsg_GetPurchaseTrust_ResponseImpl);
}

void InitDefaultsCMsgGCHAccountVacStatusChangeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCHAccountVacStatusChange_default_instance_;
    new (ptr) ::CMsgGCHAccountVacStatusChange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCHAccountVacStatusChange::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCHAccountVacStatusChange() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCHAccountVacStatusChangeImpl);
}

void InitDefaultsCMsgGCHAccountTradeBanStatusChangeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCHAccountTradeBanStatusChange_default_instance_;
    new (ptr) ::CMsgGCHAccountTradeBanStatusChange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCHAccountTradeBanStatusChange::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCHAccountTradeBanStatusChange() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCHAccountTradeBanStatusChangeImpl);
}

void InitDefaultsCMsgGCHAccountLockStatusChangeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCHAccountLockStatusChange_default_instance_;
    new (ptr) ::CMsgGCHAccountLockStatusChange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCHAccountLockStatusChange::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCHAccountLockStatusChange() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCHAccountLockStatusChangeImpl);
}

void InitDefaultsCMsgGCHVacVerificationChangeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCHVacVerificationChange_default_instance_;
    new (ptr) ::CMsgGCHVacVerificationChange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCHVacVerificationChange::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCHVacVerificationChange() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCHVacVerificationChangeImpl);
}

void InitDefaultsCMsgGCHAccountPhoneNumberChangeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCHAccountPhoneNumberChange_default_instance_;
    new (ptr) ::CMsgGCHAccountPhoneNumberChange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCHAccountPhoneNumberChange::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCHAccountPhoneNumberChange() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCHAccountPhoneNumberChangeImpl);
}

void InitDefaultsCMsgGCHAccountTwoFactorChangeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCHAccountTwoFactorChange_default_instance_;
    new (ptr) ::CMsgGCHAccountTwoFactorChange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCHAccountTwoFactorChange::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCHAccountTwoFactorChange() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCHAccountTwoFactorChangeImpl);
}

void InitDefaultsCMsgGCGetPartnerAccountLinkImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCGetPartnerAccountLink_default_instance_;
    new (ptr) ::CMsgGCGetPartnerAccountLink();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCGetPartnerAccountLink::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCGetPartnerAccountLink() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCGetPartnerAccountLinkImpl);
}

void InitDefaultsCMsgGCGetPartnerAccountLink_ResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCGetPartnerAccountLink_Response_default_instance_;
    new (ptr) ::CMsgGCGetPartnerAccountLink_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCGetPartnerAccountLink_Response::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCGetPartnerAccountLink_Response() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCGetPartnerAccountLink_ResponseImpl);
}

void InitDefaultsCMsgGCRoutingInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCRoutingInfo_default_instance_;
    new (ptr) ::CMsgGCRoutingInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCRoutingInfo::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCRoutingInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCRoutingInfoImpl);
}

void InitDefaultsCMsgGCMsgMasterSetWebAPIRouting_EntryImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_steammessages_2eproto::InitDefaultsCMsgGCRoutingInfo();
  {
    void* ptr = &::_CMsgGCMsgMasterSetWebAPIRouting_Entry_default_instance_;
    new (ptr) ::CMsgGCMsgMasterSetWebAPIRouting_Entry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCMsgMasterSetWebAPIRouting_Entry::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCMsgMasterSetWebAPIRouting_Entry() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCMsgMasterSetWebAPIRouting_EntryImpl);
}

void InitDefaultsCMsgGCMsgMasterSetWebAPIRoutingImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_steammessages_2eproto::InitDefaultsCMsgGCMsgMasterSetWebAPIRouting_Entry();
  {
    void* ptr = &::_CMsgGCMsgMasterSetWebAPIRouting_default_instance_;
    new (ptr) ::CMsgGCMsgMasterSetWebAPIRouting();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCMsgMasterSetWebAPIRouting::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCMsgMasterSetWebAPIRouting() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCMsgMasterSetWebAPIRoutingImpl);
}

void InitDefaultsCMsgGCMsgMasterSetClientMsgRouting_EntryImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_steammessages_2eproto::InitDefaultsCMsgGCRoutingInfo();
  {
    void* ptr = &::_CMsgGCMsgMasterSetClientMsgRouting_Entry_default_instance_;
    new (ptr) ::CMsgGCMsgMasterSetClientMsgRouting_Entry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCMsgMasterSetClientMsgRouting_Entry::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCMsgMasterSetClientMsgRouting_Entry() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCMsgMasterSetClientMsgRouting_EntryImpl);
}

void InitDefaultsCMsgGCMsgMasterSetClientMsgRoutingImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_steammessages_2eproto::InitDefaultsCMsgGCMsgMasterSetClientMsgRouting_Entry();
  {
    void* ptr = &::_CMsgGCMsgMasterSetClientMsgRouting_default_instance_;
    new (ptr) ::CMsgGCMsgMasterSetClientMsgRouting();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCMsgMasterSetClientMsgRouting::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCMsgMasterSetClientMsgRouting() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCMsgMasterSetClientMsgRoutingImpl);
}

void InitDefaultsCMsgGCMsgMasterSetWebAPIRouting_ResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCMsgMasterSetWebAPIRouting_Response_default_instance_;
    new (ptr) ::CMsgGCMsgMasterSetWebAPIRouting_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCMsgMasterSetWebAPIRouting_Response::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCMsgMasterSetWebAPIRouting_Response() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCMsgMasterSetWebAPIRouting_ResponseImpl);
}

void InitDefaultsCMsgGCMsgMasterSetClientMsgRouting_ResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCMsgMasterSetClientMsgRouting_Response_default_instance_;
    new (ptr) ::CMsgGCMsgMasterSetClientMsgRouting_Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCMsgMasterSetClientMsgRouting_Response::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCMsgMasterSetClientMsgRouting_Response() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCMsgMasterSetClientMsgRouting_ResponseImpl);
}

void InitDefaultsCMsgGCMsgSetOptions_MessageRangeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCMsgSetOptions_MessageRange_default_instance_;
    new (ptr) ::CMsgGCMsgSetOptions_MessageRange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCMsgSetOptions_MessageRange::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCMsgSetOptions_MessageRange() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCMsgSetOptions_MessageRangeImpl);
}

void InitDefaultsCMsgGCMsgSetOptionsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_steammessages_2eproto::InitDefaultsCMsgGCMsgSetOptions_MessageRange();
  {
    void* ptr = &::_CMsgGCMsgSetOptions_default_instance_;
    new (ptr) ::CMsgGCMsgSetOptions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCMsgSetOptions::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCMsgSetOptions() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCMsgSetOptionsImpl);
}

void InitDefaultsCMsgGCHUpdateSession_ExtraFieldImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgGCHUpdateSession_ExtraField_default_instance_;
    new (ptr) ::CMsgGCHUpdateSession_ExtraField();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCHUpdateSession_ExtraField::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCHUpdateSession_ExtraField() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCHUpdateSession_ExtraFieldImpl);
}

void InitDefaultsCMsgGCHUpdateSessionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_steammessages_2eproto::InitDefaultsCMsgGCHUpdateSession_ExtraField();
  {
    void* ptr = &::_CMsgGCHUpdateSession_default_instance_;
    new (ptr) ::CMsgGCHUpdateSession();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgGCHUpdateSession::InitAsDefaultInstance();
}

void InitDefaultsCMsgGCHUpdateSession() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgGCHUpdateSessionImpl);
}

void InitDefaultsCMsgNotificationOfSuspiciousActivity_MultipleGameInstancesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CMsgNotificationOfSuspiciousActivity_MultipleGameInstances_default_instance_;
    new (ptr) ::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::InitAsDefaultInstance();
}

void InitDefaultsCMsgNotificationOfSuspiciousActivity_MultipleGameInstances() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgNotificationOfSuspiciousActivity_MultipleGameInstancesImpl);
}

void InitDefaultsCMsgNotificationOfSuspiciousActivityImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_steammessages_2eproto::InitDefaultsCMsgNotificationOfSuspiciousActivity_MultipleGameInstances();
  {
    void* ptr = &::_CMsgNotificationOfSuspiciousActivity_default_instance_;
    new (ptr) ::CMsgNotificationOfSuspiciousActivity();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CMsgNotificationOfSuspiciousActivity::InitAsDefaultInstance();
}

void InitDefaultsCMsgNotificationOfSuspiciousActivity() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCMsgNotificationOfSuspiciousActivityImpl);
}

::google::protobuf::Metadata file_level_metadata[82];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgProtoBufHeader, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgProtoBufHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgProtoBufHeader, client_steam_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgProtoBufHeader, client_session_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgProtoBufHeader, source_app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgProtoBufHeader, job_id_source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgProtoBufHeader, job_id_target_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgProtoBufHeader, target_job_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgProtoBufHeader, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgProtoBufHeader, error_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgProtoBufHeader, gc_msg_src_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgProtoBufHeader, gc_dir_index_source_),
  2,
  3,
  4,
  8,
  9,
  0,
  7,
  1,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgWebAPIKey, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgWebAPIKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgWebAPIKey, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgWebAPIKey, account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgWebAPIKey, publisher_group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgWebAPIKey, key_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgWebAPIKey, domain_),
  4,
  1,
  2,
  3,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHttpRequest_RequestHeader, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHttpRequest_RequestHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHttpRequest_RequestHeader, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHttpRequest_RequestHeader, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHttpRequest_QueryParam, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHttpRequest_QueryParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHttpRequest_QueryParam, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHttpRequest_QueryParam, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHttpRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHttpRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHttpRequest, request_method_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHttpRequest, hostname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHttpRequest, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHttpRequest, headers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHttpRequest, get_params_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHttpRequest, post_params_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHttpRequest, body_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHttpRequest, absolute_timeout_),
  3,
  0,
  1,
  ~0u,
  ~0u,
  ~0u,
  2,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgWebAPIRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgWebAPIRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgWebAPIRequest, unused_job_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgWebAPIRequest, interface_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgWebAPIRequest, method_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgWebAPIRequest, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgWebAPIRequest, api_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgWebAPIRequest, request_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgWebAPIRequest, routing_app_id_),
  0,
  1,
  2,
  5,
  3,
  4,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHttpResponse_ResponseHeader, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHttpResponse_ResponseHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHttpResponse_ResponseHeader, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHttpResponse_ResponseHeader, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHttpResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHttpResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHttpResponse, status_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHttpResponse, headers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgHttpResponse, body_),
  1,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMFindAccounts, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMFindAccounts, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMFindAccounts, search_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMFindAccounts, search_string_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMFindAccountsResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMFindAccountsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMFindAccountsResponse, steam_id_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgNotifyWatchdog, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgNotifyWatchdog, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgNotifyWatchdog, source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgNotifyWatchdog, alert_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgNotifyWatchdog, alert_destination_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgNotifyWatchdog, critical_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgNotifyWatchdog, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgNotifyWatchdog, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgNotifyWatchdog, text_),
  1,
  2,
  3,
  4,
  5,
  6,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMGetLicenses, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMGetLicenses, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMGetLicenses, steamid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPackageLicense, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPackageLicense, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPackageLicense, package_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPackageLicense, time_created_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgPackageLicense, owner_id_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMGetLicensesResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMGetLicensesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMGetLicensesResponse, license_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMGetLicensesResponse, result_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMGetUserGameStats, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMGetUserGameStats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMGetUserGameStats, steam_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMGetUserGameStats, game_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMGetUserGameStats, stats_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMGetUserGameStatsResponse_Stats, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMGetUserGameStatsResponse_Stats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMGetUserGameStatsResponse_Stats, stat_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMGetUserGameStatsResponse_Stats, stat_value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMGetUserGameStatsResponse_Achievement_Blocks, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMGetUserGameStatsResponse_Achievement_Blocks, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMGetUserGameStatsResponse_Achievement_Blocks, achievement_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMGetUserGameStatsResponse_Achievement_Blocks, achievement_bit_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMGetUserGameStatsResponse_Achievement_Blocks, unlock_time_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMGetUserGameStatsResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMGetUserGameStatsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMGetUserGameStatsResponse, steam_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMGetUserGameStatsResponse, game_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMGetUserGameStatsResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMGetUserGameStatsResponse, stats_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMGetUserGameStatsResponse, achievement_blocks_),
  0,
  1,
  2,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCGetCommandList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCGetCommandList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCGetCommandList, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCGetCommandList, command_prefix_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCGetCommandListResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCGetCommandListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCGetCommandListResponse, command_name_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgMemCachedGet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgMemCachedGet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgMemCachedGet, keys_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgMemCachedGetResponse_ValueTag, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgMemCachedGetResponse_ValueTag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgMemCachedGetResponse_ValueTag, found_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgMemCachedGetResponse_ValueTag, value_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgMemCachedGetResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgMemCachedGetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgMemCachedGetResponse, values_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgMemCachedSet_KeyPair, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgMemCachedSet_KeyPair, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgMemCachedSet_KeyPair, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgMemCachedSet_KeyPair, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgMemCachedSet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgMemCachedSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgMemCachedSet, keys_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgMemCachedDelete, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgMemCachedDelete, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgMemCachedDelete, keys_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgMemCachedStats, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgMemCachedStats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgMemCachedStatsResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgMemCachedStatsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgMemCachedStatsResponse, curr_connections_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgMemCachedStatsResponse, cmd_get_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgMemCachedStatsResponse, cmd_set_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgMemCachedStatsResponse, cmd_flush_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgMemCachedStatsResponse, get_hits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgMemCachedStatsResponse, get_misses_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgMemCachedStatsResponse, delete_hits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgMemCachedStatsResponse, delete_misses_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgMemCachedStatsResponse, bytes_read_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgMemCachedStatsResponse, bytes_written_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgMemCachedStatsResponse, limit_maxbytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgMemCachedStatsResponse, curr_items_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgMemCachedStatsResponse, evictions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgMemCachedStatsResponse, bytes_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgSQLStats, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgSQLStats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgSQLStats, schema_catalog_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgSQLStatsResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgSQLStatsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgSQLStatsResponse, threads_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgSQLStatsResponse, threads_connected_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgSQLStatsResponse, threads_active_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgSQLStatsResponse, operations_submitted_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgSQLStatsResponse, prepared_statements_executed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgSQLStatsResponse, non_prepared_statements_executed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgSQLStatsResponse, deadlock_retries_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgSQLStatsResponse, operations_timed_out_in_queue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgSQLStatsResponse, errors_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMAddFreeLicense, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMAddFreeLicense, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMAddFreeLicense, steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMAddFreeLicense, ip_public_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMAddFreeLicense, packageid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMAddFreeLicense, store_country_code_),
  1,
  2,
  3,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMAddFreeLicenseResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMAddFreeLicenseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMAddFreeLicenseResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMAddFreeLicenseResponse, purchase_result_detail_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMAddFreeLicenseResponse, transid_),
  2,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgGetIPLocation, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgGetIPLocation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgGetIPLocation, ips_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CIPLocationInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CIPLocationInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CIPLocationInfo, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CIPLocationInfo, latitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CIPLocationInfo, longitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CIPLocationInfo, country_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CIPLocationInfo, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CIPLocationInfo, city_),
  3,
  4,
  5,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgGetIPLocationResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgGetIPLocationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgGetIPLocationResponse, infos_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgSystemStatsSchema, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgSystemStatsSchema, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgSystemStatsSchema, gc_app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgSystemStatsSchema, schema_kv_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgGetSystemStats, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgGetSystemStats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgGetSystemStatsResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgGetSystemStatsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgGetSystemStatsResponse, gc_app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgGetSystemStatsResponse, stats_kv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgGetSystemStatsResponse, active_jobs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgGetSystemStatsResponse, yielding_jobs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgGetSystemStatsResponse, user_sessions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgGetSystemStatsResponse, game_server_sessions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgGetSystemStatsResponse, socaches_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgGetSystemStatsResponse, socaches_to_unload_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgGetSystemStatsResponse, socaches_loading_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgGetSystemStatsResponse, writeback_queue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgGetSystemStatsResponse, steamid_locks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgGetSystemStatsResponse, logon_queue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCMsgGetSystemStatsResponse, logon_jobs_),
  1,
  0,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMSendEmail_ReplacementToken, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMSendEmail_ReplacementToken, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMSendEmail_ReplacementToken, token_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMSendEmail_ReplacementToken, token_value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMSendEmail_PersonaNameReplacementToken, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMSendEmail_PersonaNameReplacementToken, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMSendEmail_PersonaNameReplacementToken, steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMSendEmail_PersonaNameReplacementToken, token_name_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMSendEmail, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMSendEmail, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMSendEmail, steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMSendEmail, email_msg_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMSendEmail, email_format_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMSendEmail, persona_name_tokens_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMSendEmail, source_gc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMSendEmail, tokens_),
  0,
  1,
  2,
  ~0u,
  3,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMSendEmailResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMSendEmailResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMSendEmailResponse, eresult_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCGetEmailTemplate, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCGetEmailTemplate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCGetEmailTemplate, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCGetEmailTemplate, email_msg_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCGetEmailTemplate, email_lang_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCGetEmailTemplate, email_format_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCGetEmailTemplateResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCGetEmailTemplateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCGetEmailTemplateResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCGetEmailTemplateResponse, template_exists_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCGetEmailTemplateResponse, template__),
  2,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMGrantGuestPasses2, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMGrantGuestPasses2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMGrantGuestPasses2, steam_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMGrantGuestPasses2, package_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMGrantGuestPasses2, passes_to_grant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMGrantGuestPasses2, days_to_expiration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMGrantGuestPasses2, action_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMGrantGuestPasses2Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMGrantGuestPasses2Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMGrantGuestPasses2Response, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgAMGrantGuestPasses2Response, passes_granted_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails, steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails, appid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, eresult_deprecated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, account_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, persona_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, is_profile_public_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, is_inventory_public_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, is_vac_banned_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, is_cyber_cafe_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, is_school_account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, is_limited_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, is_subscribed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, package_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, is_free_trial_account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, free_trial_expiration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, is_low_violence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, is_account_locked_down_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, is_community_banned_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, is_trade_banned_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, trade_ban_expiration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, suspension_end_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, currency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, steam_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, friend_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, account_creation_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, is_steamguard_enabled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, is_phone_verified_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, is_two_factor_auth_enabled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, two_factor_enabled_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, phone_verification_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, phone_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetAccountDetails_Response, is_phone_identifying_),
  30,
  0,
  1,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  11,
  10,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  2,
  20,
  21,
  22,
  23,
  24,
  25,
  27,
  28,
  29,
  26,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCCheckClanMembership, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCCheckClanMembership, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCCheckClanMembership, steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCCheckClanMembership, clanid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCCheckClanMembership_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCCheckClanMembership_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCCheckClanMembership_Response, ismember_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCGetPersonaNames, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCGetPersonaNames, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCGetPersonaNames, steamids_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCGetPersonaNames_Response_PersonaName, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCGetPersonaNames_Response_PersonaName, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCGetPersonaNames_Response_PersonaName, steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCGetPersonaNames_Response_PersonaName, persona_name_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCGetPersonaNames_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCGetPersonaNames_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCGetPersonaNames_Response, succeeded_lookups_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCGetPersonaNames_Response, failed_lookup_steamids_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCCheckFriendship, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCCheckFriendship, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCCheckFriendship, steamid_left_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCCheckFriendship, steamid_right_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCCheckFriendship_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCCheckFriendship_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCCheckFriendship_Response, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCCheckFriendship_Response, found_friendship_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgMasterSetDirectory_SubGC, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgMasterSetDirectory_SubGC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgMasterSetDirectory_SubGC, dir_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgMasterSetDirectory_SubGC, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgMasterSetDirectory_SubGC, box_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgMasterSetDirectory_SubGC, command_line_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgMasterSetDirectory_SubGC, gc_binary_),
  4,
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgMasterSetDirectory, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgMasterSetDirectory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgMasterSetDirectory, master_dir_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgMasterSetDirectory, dir_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgMasterSetDirectory_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgMasterSetDirectory_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgMasterSetDirectory_Response, eresult_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgWebAPIJobRequestForwardResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgWebAPIJobRequestForwardResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgWebAPIJobRequestForwardResponse, dir_index_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetPurchaseTrust_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetPurchaseTrust_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetPurchaseTrust_Request, steamid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetPurchaseTrust_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetPurchaseTrust_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetPurchaseTrust_Response, has_prior_purchase_history_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetPurchaseTrust_Response, has_no_recent_password_resets_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetPurchaseTrust_Response, is_wallet_cash_trusted_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CGCSystemMsg_GetPurchaseTrust_Response, time_all_trusted_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHAccountVacStatusChange, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHAccountVacStatusChange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHAccountVacStatusChange, steam_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHAccountVacStatusChange, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHAccountVacStatusChange, rtime_vacban_starts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHAccountVacStatusChange, is_banned_now_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHAccountVacStatusChange, is_banned_future_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHAccountTradeBanStatusChange, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHAccountTradeBanStatusChange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHAccountTradeBanStatusChange, steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHAccountTradeBanStatusChange, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHAccountTradeBanStatusChange, is_banned_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHAccountTradeBanStatusChange, time_banned_until_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHAccountLockStatusChange, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHAccountLockStatusChange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHAccountLockStatusChange, steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHAccountLockStatusChange, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHAccountLockStatusChange, is_locked_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHVacVerificationChange, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHVacVerificationChange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHVacVerificationChange, steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHVacVerificationChange, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHVacVerificationChange, is_verified_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHAccountPhoneNumberChange, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHAccountPhoneNumberChange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHAccountPhoneNumberChange, steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHAccountPhoneNumberChange, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHAccountPhoneNumberChange, phone_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHAccountPhoneNumberChange, is_verified_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHAccountPhoneNumberChange, is_identifying_),
  0,
  2,
  1,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHAccountTwoFactorChange, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHAccountTwoFactorChange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHAccountTwoFactorChange, steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHAccountTwoFactorChange, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHAccountTwoFactorChange, twofactor_enabled_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCGetPartnerAccountLink, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCGetPartnerAccountLink, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCGetPartnerAccountLink, steamid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCGetPartnerAccountLink_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCGetPartnerAccountLink_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCGetPartnerAccountLink_Response, pwid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCGetPartnerAccountLink_Response, nexonid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCRoutingInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCRoutingInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCRoutingInfo, dir_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCRoutingInfo, method_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCRoutingInfo, fallback_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCRoutingInfo, protobuf_field_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCRoutingInfo, webapi_param_),
  ~0u,
  1,
  3,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgMasterSetWebAPIRouting_Entry, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgMasterSetWebAPIRouting_Entry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgMasterSetWebAPIRouting_Entry, interface_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgMasterSetWebAPIRouting_Entry, method_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgMasterSetWebAPIRouting_Entry, routing_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgMasterSetWebAPIRouting, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgMasterSetWebAPIRouting, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgMasterSetWebAPIRouting, entries_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgMasterSetClientMsgRouting_Entry, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgMasterSetClientMsgRouting_Entry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgMasterSetClientMsgRouting_Entry, msg_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgMasterSetClientMsgRouting_Entry, routing_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgMasterSetClientMsgRouting, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgMasterSetClientMsgRouting, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgMasterSetClientMsgRouting, entries_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgMasterSetWebAPIRouting_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgMasterSetWebAPIRouting_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgMasterSetWebAPIRouting_Response, eresult_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgMasterSetClientMsgRouting_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgMasterSetClientMsgRouting_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgMasterSetClientMsgRouting_Response, eresult_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgSetOptions_MessageRange, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgSetOptions_MessageRange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgSetOptions_MessageRange, low_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgSetOptions_MessageRange, high_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgSetOptions, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgSetOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgSetOptions, options_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgSetOptions, client_msg_ranges_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCMsgSetOptions, gcsql_version_),
  ~0u,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHUpdateSession_ExtraField, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHUpdateSession_ExtraField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHUpdateSession_ExtraField, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHUpdateSession_ExtraField, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHUpdateSession, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHUpdateSession, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHUpdateSession, steam_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHUpdateSession, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHUpdateSession, online_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHUpdateSession, server_steam_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHUpdateSession, server_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHUpdateSession, server_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHUpdateSession, os_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHUpdateSession, client_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgGCHUpdateSession, extra_fields_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances, app_instance_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances, other_steamids_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgNotificationOfSuspiciousActivity, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgNotificationOfSuspiciousActivity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgNotificationOfSuspiciousActivity, steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgNotificationOfSuspiciousActivity, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CMsgNotificationOfSuspiciousActivity, multiple_instances_),
  1,
  2,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 15, sizeof(::CMsgProtoBufHeader)},
  { 25, 35, sizeof(::CMsgWebAPIKey)},
  { 40, 47, sizeof(::CMsgHttpRequest_RequestHeader)},
  { 49, 56, sizeof(::CMsgHttpRequest_QueryParam)},
  { 58, 71, sizeof(::CMsgHttpRequest)},
  { 79, 91, sizeof(::CMsgWebAPIRequest)},
  { 98, 105, sizeof(::CMsgHttpResponse_ResponseHeader)},
  { 107, 115, sizeof(::CMsgHttpResponse)},
  { 118, 125, sizeof(::CMsgAMFindAccounts)},
  { 127, 133, sizeof(::CMsgAMFindAccountsResponse)},
  { 134, 146, sizeof(::CMsgNotifyWatchdog)},
  { 153, 159, sizeof(::CMsgAMGetLicenses)},
  { 160, 168, sizeof(::CMsgPackageLicense)},
  { 171, 178, sizeof(::CMsgAMGetLicensesResponse)},
  { 180, 188, sizeof(::CMsgAMGetUserGameStats)},
  { 191, 198, sizeof(::CMsgAMGetUserGameStatsResponse_Stats)},
  { 200, 208, sizeof(::CMsgAMGetUserGameStatsResponse_Achievement_Blocks)},
  { 211, 221, sizeof(::CMsgAMGetUserGameStatsResponse)},
  { 226, 233, sizeof(::CMsgGCGetCommandList)},
  { 235, 241, sizeof(::CMsgGCGetCommandListResponse)},
  { 242, 248, sizeof(::CGCMsgMemCachedGet)},
  { 249, 256, sizeof(::CGCMsgMemCachedGetResponse_ValueTag)},
  { 258, 264, sizeof(::CGCMsgMemCachedGetResponse)},
  { 265, 272, sizeof(::CGCMsgMemCachedSet_KeyPair)},
  { 274, 280, sizeof(::CGCMsgMemCachedSet)},
  { 281, 287, sizeof(::CGCMsgMemCachedDelete)},
  { 288, 293, sizeof(::CGCMsgMemCachedStats)},
  { 293, 312, sizeof(::CGCMsgMemCachedStatsResponse)},
  { 326, 332, sizeof(::CGCMsgSQLStats)},
  { 333, 347, sizeof(::CGCMsgSQLStatsResponse)},
  { 356, 365, sizeof(::CMsgAMAddFreeLicense)},
  { 369, 377, sizeof(::CMsgAMAddFreeLicenseResponse)},
  { 380, 386, sizeof(::CGCMsgGetIPLocation)},
  { 387, 398, sizeof(::CIPLocationInfo)},
  { 404, 410, sizeof(::CGCMsgGetIPLocationResponse)},
  { 411, 418, sizeof(::CGCMsgSystemStatsSchema)},
  { 420, 425, sizeof(::CGCMsgGetSystemStats)},
  { 425, 443, sizeof(::CGCMsgGetSystemStatsResponse)},
  { 456, 463, sizeof(::CMsgAMSendEmail_ReplacementToken)},
  { 465, 472, sizeof(::CMsgAMSendEmail_PersonaNameReplacementToken)},
  { 474, 485, sizeof(::CMsgAMSendEmail)},
  { 491, 497, sizeof(::CMsgAMSendEmailResponse)},
  { 498, 507, sizeof(::CMsgGCGetEmailTemplate)},
  { 511, 519, sizeof(::CMsgGCGetEmailTemplateResponse)},
  { 522, 532, sizeof(::CMsgAMGrantGuestPasses2)},
  { 537, 544, sizeof(::CMsgAMGrantGuestPasses2Response)},
  { 546, 553, sizeof(::CGCSystemMsg_GetAccountDetails)},
  { 555, 591, sizeof(::CGCSystemMsg_GetAccountDetails_Response)},
  { 622, 629, sizeof(::CMsgGCCheckClanMembership)},
  { 631, 637, sizeof(::CMsgGCCheckClanMembership_Response)},
  { 638, 644, sizeof(::CMsgGCGetPersonaNames)},
  { 645, 652, sizeof(::CMsgGCGetPersonaNames_Response_PersonaName)},
  { 654, 661, sizeof(::CMsgGCGetPersonaNames_Response)},
  { 663, 670, sizeof(::CMsgGCCheckFriendship)},
  { 672, 679, sizeof(::CMsgGCCheckFriendship_Response)},
  { 681, 691, sizeof(::CMsgGCMsgMasterSetDirectory_SubGC)},
  { 696, 703, sizeof(::CMsgGCMsgMasterSetDirectory)},
  { 705, 711, sizeof(::CMsgGCMsgMasterSetDirectory_Response)},
  { 712, 718, sizeof(::CMsgGCMsgWebAPIJobRequestForwardResponse)},
  { 719, 725, sizeof(::CGCSystemMsg_GetPurchaseTrust_Request)},
  { 726, 735, sizeof(::CGCSystemMsg_GetPurchaseTrust_Response)},
  { 739, 749, sizeof(::CMsgGCHAccountVacStatusChange)},
  { 754, 763, sizeof(::CMsgGCHAccountTradeBanStatusChange)},
  { 767, 775, sizeof(::CMsgGCHAccountLockStatusChange)},
  { 778, 786, sizeof(::CMsgGCHVacVerificationChange)},
  { 789, 799, sizeof(::CMsgGCHAccountPhoneNumberChange)},
  { 804, 812, sizeof(::CMsgGCHAccountTwoFactorChange)},
  { 815, 821, sizeof(::CMsgGCGetPartnerAccountLink)},
  { 822, 829, sizeof(::CMsgGCGetPartnerAccountLink_Response)},
  { 831, 841, sizeof(::CMsgGCRoutingInfo)},
  { 846, 854, sizeof(::CMsgGCMsgMasterSetWebAPIRouting_Entry)},
  { 857, 863, sizeof(::CMsgGCMsgMasterSetWebAPIRouting)},
  { 864, 871, sizeof(::CMsgGCMsgMasterSetClientMsgRouting_Entry)},
  { 873, 879, sizeof(::CMsgGCMsgMasterSetClientMsgRouting)},
  { 880, 886, sizeof(::CMsgGCMsgMasterSetWebAPIRouting_Response)},
  { 887, 893, sizeof(::CMsgGCMsgMasterSetClientMsgRouting_Response)},
  { 894, 901, sizeof(::CMsgGCMsgSetOptions_MessageRange)},
  { 903, 911, sizeof(::CMsgGCMsgSetOptions)},
  { 914, 921, sizeof(::CMsgGCHUpdateSession_ExtraField)},
  { 923, 937, sizeof(::CMsgGCHUpdateSession)},
  { 946, 953, sizeof(::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances)},
  { 955, 963, sizeof(::CMsgNotificationOfSuspiciousActivity)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgProtoBufHeader_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgWebAPIKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgHttpRequest_RequestHeader_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgHttpRequest_QueryParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgHttpRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgWebAPIRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgHttpResponse_ResponseHeader_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgHttpResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgAMFindAccounts_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgAMFindAccountsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgNotifyWatchdog_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgAMGetLicenses_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgPackageLicense_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgAMGetLicensesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgAMGetUserGameStats_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgAMGetUserGameStatsResponse_Stats_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgAMGetUserGameStatsResponse_Achievement_Blocks_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgAMGetUserGameStatsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCGetCommandList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCGetCommandListResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CGCMsgMemCachedGet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CGCMsgMemCachedGetResponse_ValueTag_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CGCMsgMemCachedGetResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CGCMsgMemCachedSet_KeyPair_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CGCMsgMemCachedSet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CGCMsgMemCachedDelete_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CGCMsgMemCachedStats_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CGCMsgMemCachedStatsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CGCMsgSQLStats_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CGCMsgSQLStatsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgAMAddFreeLicense_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgAMAddFreeLicenseResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CGCMsgGetIPLocation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CIPLocationInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CGCMsgGetIPLocationResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CGCMsgSystemStatsSchema_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CGCMsgGetSystemStats_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CGCMsgGetSystemStatsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgAMSendEmail_ReplacementToken_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgAMSendEmail_PersonaNameReplacementToken_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgAMSendEmail_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgAMSendEmailResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCGetEmailTemplate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCGetEmailTemplateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgAMGrantGuestPasses2_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgAMGrantGuestPasses2Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CGCSystemMsg_GetAccountDetails_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CGCSystemMsg_GetAccountDetails_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCCheckClanMembership_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCCheckClanMembership_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCGetPersonaNames_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCGetPersonaNames_Response_PersonaName_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCGetPersonaNames_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCCheckFriendship_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCCheckFriendship_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCMsgMasterSetDirectory_SubGC_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCMsgMasterSetDirectory_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCMsgMasterSetDirectory_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCMsgWebAPIJobRequestForwardResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CGCSystemMsg_GetPurchaseTrust_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CGCSystemMsg_GetPurchaseTrust_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCHAccountVacStatusChange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCHAccountTradeBanStatusChange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCHAccountLockStatusChange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCHVacVerificationChange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCHAccountPhoneNumberChange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCHAccountTwoFactorChange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCGetPartnerAccountLink_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCGetPartnerAccountLink_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCRoutingInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCMsgMasterSetWebAPIRouting_Entry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCMsgMasterSetWebAPIRouting_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCMsgMasterSetClientMsgRouting_Entry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCMsgMasterSetClientMsgRouting_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCMsgMasterSetWebAPIRouting_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCMsgMasterSetClientMsgRouting_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCMsgSetOptions_MessageRange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCMsgSetOptions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCHUpdateSession_ExtraField_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgGCHUpdateSession_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgNotificationOfSuspiciousActivity_MultipleGameInstances_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CMsgNotificationOfSuspiciousActivity_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "steammessages.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 82);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023steammessages.proto\032 google/protobuf/d"
      "escriptor.proto\"\355\002\n\022CMsgProtoBufHeader\022\027"
      "\n\017client_steam_id\030\001 \001(\006\022\031\n\021client_sessio"
      "n_id\030\002 \001(\005\022\025\n\rsource_app_id\030\003 \001(\r\022+\n\rjob"
      "_id_source\030\n \001(\006:\02418446744073709551615\022+"
      "\n\rjob_id_target\030\013 \001(\006:\02418446744073709551"
      "615\022\027\n\017target_job_name\030\014 \001(\t\022\022\n\007eresult\030"
      "\r \001(\005:\0012\022\025\n\rerror_message\030\016 \001(\t\022D\n\ngc_ms"
      "g_src\030\310\001 \001(\0162\021.GCProtoBufMsgSrc:\034GCProto"
      "BufMsgSrc_Unspecified\022\034\n\023gc_dir_index_so"
      "urce\030\311\001 \001(\r:\n\200\246\035\200\002\210\246\035\200\010\"z\n\rCMsgWebAPIKey"
      "\022\023\n\006status\030\001 \001(\r:\003255\022\025\n\naccount_id\030\002 \001("
      "\r:\0010\022\035\n\022publisher_group_id\030\003 \001(\r:\0010\022\016\n\006k"
      "ey_id\030\004 \001(\r\022\016\n\006domain\030\005 \001(\t\"\335\002\n\017CMsgHttp"
      "Request\022\026\n\016request_method\030\001 \001(\r\022\020\n\010hostn"
      "ame\030\002 \001(\t\022\013\n\003url\030\003 \001(\t\022/\n\007headers\030\004 \003(\0132"
      "\036.CMsgHttpRequest.RequestHeader\022/\n\nget_p"
      "arams\030\005 \003(\0132\033.CMsgHttpRequest.QueryParam"
      "\0220\n\013post_params\030\006 \003(\0132\033.CMsgHttpRequest."
      "QueryParam\022\014\n\004body\030\007 \001(\014\022\030\n\020absolute_tim"
      "eout\030\010 \001(\r\032,\n\rRequestHeader\022\014\n\004name\030\001 \001("
      "\t\022\r\n\005value\030\002 \001(\t\032)\n\nQueryParam\022\014\n\004name\030\001"
      " \001(\t\022\r\n\005value\030\002 \001(\014\"\306\001\n\021CMsgWebAPIReques"
      "t\022\027\n\017UNUSED_job_name\030\001 \001(\t\022\026\n\016interface_"
      "name\030\002 \001(\t\022\023\n\013method_name\030\003 \001(\t\022\017\n\007versi"
      "on\030\004 \001(\r\022\037\n\007api_key\030\005 \001(\0132\016.CMsgWebAPIKe"
      "y\022!\n\007request\030\006 \001(\0132\020.CMsgHttpRequest\022\026\n\016"
      "routing_app_id\030\007 \001(\r\"\227\001\n\020CMsgHttpRespons"
      "e\022\023\n\013status_code\030\001 \001(\r\0221\n\007headers\030\002 \003(\0132"
      " .CMsgHttpResponse.ResponseHeader\022\014\n\004bod"
      "y\030\003 \001(\014\032-\n\016ResponseHeader\022\014\n\004name\030\001 \001(\t\022"
      "\r\n\005value\030\002 \001(\t\"@\n\022CMsgAMFindAccounts\022\023\n\013"
      "search_type\030\001 \001(\r\022\025\n\rsearch_string\030\002 \001(\t"
      "\".\n\032CMsgAMFindAccountsResponse\022\020\n\010steam_"
      "id\030\001 \003(\006\"\220\001\n\022CMsgNotifyWatchdog\022\016\n\006sourc"
      "e\030\001 \001(\r\022\022\n\nalert_type\030\002 \001(\r\022\031\n\021alert_des"
      "tination\030\003 \001(\r\022\020\n\010critical\030\004 \001(\010\022\014\n\004time"
      "\030\005 \001(\r\022\r\n\005appid\030\006 \001(\r\022\014\n\004text\030\007 \001(\t\"$\n\021C"
      "MsgAMGetLicenses\022\017\n\007steamid\030\001 \001(\006\"P\n\022CMs"
      "gPackageLicense\022\022\n\npackage_id\030\001 \001(\r\022\024\n\014t"
      "ime_created\030\002 \001(\r\022\020\n\010owner_id\030\003 \001(\r\"Q\n\031C"
      "MsgAMGetLicensesResponse\022$\n\007license\030\001 \003("
      "\0132\023.CMsgPackageLicense\022\016\n\006result\030\002 \001(\r\"J"
      "\n\026CMsgAMGetUserGameStats\022\020\n\010steam_id\030\001 \001"
      "(\006\022\017\n\007game_id\030\002 \001(\006\022\r\n\005stats\030\003 \003(\r\"\352\002\n\036C"
      "MsgAMGetUserGameStatsResponse\022\020\n\010steam_i"
      "d\030\001 \001(\006\022\017\n\007game_id\030\002 \001(\006\022\022\n\007eresult\030\003 \001("
      "\005:\0012\0224\n\005stats\030\004 \003(\0132%.CMsgAMGetUserGameS"
      "tatsResponse.Stats\022N\n\022achievement_blocks"
      "\030\005 \003(\01322.CMsgAMGetUserGameStatsResponse."
      "Achievement_Blocks\032,\n\005Stats\022\017\n\007stat_id\030\001"
      " \001(\r\022\022\n\nstat_value\030\002 \001(\r\032]\n\022Achievement_"
      "Blocks\022\026\n\016achievement_id\030\001 \001(\r\022\032\n\022achiev"
      "ement_bit_id\030\002 \001(\r\022\023\n\013unlock_time\030\003 \001(\007\""
      ">\n\024CMsgGCGetCommandList\022\016\n\006app_id\030\001 \001(\r\022"
      "\026\n\016command_prefix\030\002 \001(\t\"4\n\034CMsgGCGetComm"
      "andListResponse\022\024\n\014command_name\030\001 \003(\t\"\"\n"
      "\022CGCMsgMemCachedGet\022\014\n\004keys\030\001 \003(\t\"|\n\032CGC"
      "MsgMemCachedGetResponse\0224\n\006values\030\001 \003(\0132"
      "$.CGCMsgMemCachedGetResponse.ValueTag\032(\n"
      "\010ValueTag\022\r\n\005found\030\001 \001(\010\022\r\n\005value\030\002 \001(\014\""
      "g\n\022CGCMsgMemCachedSet\022)\n\004keys\030\001 \003(\0132\033.CG"
      "CMsgMemCachedSet.KeyPair\032&\n\007KeyPair\022\014\n\004n"
      "ame\030\001 \001(\t\022\r\n\005value\030\002 \001(\014\"%\n\025CGCMsgMemCac"
      "hedDelete\022\014\n\004keys\030\001 \003(\t\"\026\n\024CGCMsgMemCach"
      "edStats\"\270\002\n\034CGCMsgMemCachedStatsResponse"
      "\022\030\n\020curr_connections\030\001 \001(\004\022\017\n\007cmd_get\030\002 "
      "\001(\004\022\017\n\007cmd_set\030\003 \001(\004\022\021\n\tcmd_flush\030\004 \001(\004\022"
      "\020\n\010get_hits\030\005 \001(\004\022\022\n\nget_misses\030\006 \001(\004\022\023\n"
      "\013delete_hits\030\007 \001(\004\022\025\n\rdelete_misses\030\010 \001("
      "\004\022\022\n\nbytes_read\030\t \001(\004\022\025\n\rbytes_written\030\n"
      " \001(\004\022\026\n\016limit_maxbytes\030\013 \001(\004\022\022\n\ncurr_ite"
      "ms\030\014 \001(\004\022\021\n\tevictions\030\r \001(\004\022\r\n\005bytes\030\016 \001"
      "(\004\"(\n\016CGCMsgSQLStats\022\026\n\016schema_catalog\030\001"
      " \001(\r\"\233\002\n\026CGCMsgSQLStatsResponse\022\017\n\007threa"
      "ds\030\001 \001(\r\022\031\n\021threads_connected\030\002 \001(\r\022\026\n\016t"
      "hreads_active\030\003 \001(\r\022\034\n\024operations_submit"
      "ted\030\004 \001(\r\022$\n\034prepared_statements_execute"
      "d\030\005 \001(\r\022(\n non_prepared_statements_execu"
      "ted\030\006 \001(\r\022\030\n\020deadlock_retries\030\007 \001(\r\022%\n\035o"
      "perations_timed_out_in_queue\030\010 \001(\r\022\016\n\006er"
      "rors\030\t \001(\r\"i\n\024CMsgAMAddFreeLicense\022\017\n\007st"
      "eamid\030\001 \001(\006\022\021\n\tip_public\030\002 \001(\r\022\021\n\tpackag"
      "eid\030\003 \001(\r\022\032\n\022store_country_code\030\004 \001(\t\"c\n"
      "\034CMsgAMAddFreeLicenseResponse\022\022\n\007eresult"
      "\030\001 \001(\005:\0012\022\036\n\026purchase_result_detail\030\002 \001("
      "\005\022\017\n\007transid\030\003 \001(\006\"\"\n\023CGCMsgGetIPLocatio"
      "n\022\013\n\003ips\030\001 \003(\007\"p\n\017CIPLocationInfo\022\n\n\002ip\030"
      "\001 \001(\r\022\020\n\010latitude\030\002 \001(\002\022\021\n\tlongitude\030\003 \001"
      "(\002\022\017\n\007country\030\004 \001(\t\022\r\n\005state\030\005 \001(\t\022\014\n\004ci"
      "ty\030\006 \001(\t\">\n\033CGCMsgGetIPLocationResponse\022"
      "\037\n\005infos\030\001 \003(\0132\020.CIPLocationInfo\"\?\n\027CGCM"
      "sgSystemStatsSchema\022\021\n\tgc_app_id\030\001 \001(\r\022\021"
      "\n\tschema_kv\030\002 \001(\014\"\026\n\024CGCMsgGetSystemStat"
      "s\"\305\002\n\034CGCMsgGetSystemStatsResponse\022\021\n\tgc"
      "_app_id\030\001 \001(\r\022\020\n\010stats_kv\030\002 \001(\014\022\023\n\013activ"
      "e_jobs\030\003 \001(\r\022\025\n\ryielding_jobs\030\004 \001(\r\022\025\n\ru"
      "ser_sessions\030\005 \001(\r\022\034\n\024game_server_sessio"
      "ns\030\006 \001(\r\022\020\n\010socaches\030\007 \001(\r\022\032\n\022socaches_t"
      "o_unload\030\010 \001(\r\022\030\n\020socaches_loading\030\t \001(\r"
      "\022\027\n\017writeback_queue\030\n \001(\r\022\025\n\rsteamid_loc"
      "ks\030\013 \001(\r\022\023\n\013logon_queue\030\014 \001(\r\022\022\n\nlogon_j"
      "obs\030\r \001(\r\"\342\002\n\017CMsgAMSendEmail\022\017\n\007steamid"
      "\030\001 \001(\006\022\026\n\016email_msg_type\030\002 \001(\r\022\024\n\014email_"
      "format\030\003 \001(\r\022I\n\023persona_name_tokens\030\005 \003("
      "\0132,.CMsgAMSendEmail.PersonaNameReplaceme"
      "ntToken\022\021\n\tsource_gc\030\006 \001(\r\0221\n\006tokens\030\007 \003"
      "(\0132!.CMsgAMSendEmail.ReplacementToken\032;\n"
      "\020ReplacementToken\022\022\n\ntoken_name\030\001 \001(\t\022\023\n"
      "\013token_value\030\002 \001(\t\032B\n\033PersonaNameReplace"
      "mentToken\022\017\n\007steamid\030\001 \001(\006\022\022\n\ntoken_name"
      "\030\002 \001(\t\"-\n\027CMsgAMSendEmailResponse\022\022\n\007ere"
      "sult\030\001 \001(\r:\0012\"j\n\026CMsgGCGetEmailTemplate\022"
      "\016\n\006app_id\030\001 \001(\r\022\026\n\016email_msg_type\030\002 \001(\r\022"
      "\022\n\nemail_lang\030\003 \001(\005\022\024\n\014email_format\030\004 \001("
      "\005\"_\n\036CMsgGCGetEmailTemplateResponse\022\022\n\007e"
      "result\030\001 \001(\r:\0012\022\027\n\017template_exists\030\002 \001(\010"
      "\022\020\n\010template\030\003 \001(\t\"\204\001\n\027CMsgAMGrantGuestP"
      "asses2\022\020\n\010steam_id\030\001 \001(\006\022\022\n\npackage_id\030\002"
      " \001(\r\022\027\n\017passes_to_grant\030\003 \001(\005\022\032\n\022days_to"
      "_expiration\030\004 \001(\005\022\016\n\006action\030\005 \001(\005\"P\n\037CMs"
      "gAMGrantGuestPasses2Response\022\022\n\007eresult\030"
      "\001 \001(\005:\0012\022\031\n\016passes_granted\030\002 \001(\005:\0010\"L\n\036C"
      "GCSystemMsg_GetAccountDetails\022\017\n\007steamid"
      "\030\001 \001(\006\022\r\n\005appid\030\002 \001(\r:\n\200\246\035\200\001\210\246\035\200\004\"\344\006\n\'CG"
      "CSystemMsg_GetAccountDetails_Response\022\035\n"
      "\022eresult_deprecated\030\001 \001(\r:\0012\022\024\n\014account_"
      "name\030\002 \001(\t\022\024\n\014persona_name\030\003 \001(\t\022\031\n\021is_p"
      "rofile_public\030\004 \001(\010\022\033\n\023is_inventory_publ"
      "ic\030\005 \001(\010\022\025\n\ris_vac_banned\030\007 \001(\010\022\025\n\ris_cy"
      "ber_cafe\030\010 \001(\010\022\031\n\021is_school_account\030\t \001("
      "\010\022\022\n\nis_limited\030\n \001(\010\022\025\n\ris_subscribed\030\013"
      " \001(\010\022\017\n\007package\030\014 \001(\r\022\035\n\025is_free_trial_a"
      "ccount\030\r \001(\010\022\035\n\025free_trial_expiration\030\016 "
      "\001(\r\022\027\n\017is_low_violence\030\017 \001(\010\022\036\n\026is_accou"
      "nt_locked_down\030\020 \001(\010\022\033\n\023is_community_ban"
      "ned\030\021 \001(\010\022\027\n\017is_trade_banned\030\022 \001(\010\022\034\n\024tr"
      "ade_ban_expiration\030\023 \001(\r\022\021\n\taccountid\030\024 "
      "\001(\r\022\033\n\023suspension_end_time\030\025 \001(\r\022\020\n\010curr"
      "ency\030\026 \001(\t\022\023\n\013steam_level\030\027 \001(\r\022\024\n\014frien"
      "d_count\030\030 \001(\r\022\035\n\025account_creation_time\030\031"
      " \001(\r\022\035\n\025is_steamguard_enabled\030\033 \001(\010\022\031\n\021i"
      "s_phone_verified\030\034 \001(\010\022\"\n\032is_two_factor_"
      "auth_enabled\030\035 \001(\010\022\037\n\027two_factor_enabled"
      "_time\030\036 \001(\r\022\037\n\027phone_verification_time\030\037"
      " \001(\r\022\020\n\010phone_id\030! \001(\004\022\034\n\024is_phone_ident"
      "ifying\030\" \001(\010:\n\200\246\035\200\001\210\246\035\200\004\"<\n\031CMsgGCCheckC"
      "lanMembership\022\017\n\007steamid\030\001 \001(\006\022\016\n\006clanid"
      "\030\002 \001(\r\"6\n\"CMsgGCCheckClanMembership_Resp"
      "onse\022\020\n\010ismember\030\001 \001(\010\")\n\025CMsgGCGetPerso"
      "naNames\022\020\n\010steamids\030\001 \003(\006\"\276\001\n\036CMsgGCGetP"
      "ersonaNames_Response\022F\n\021succeeded_lookup"
      "s\030\001 \003(\0132+.CMsgGCGetPersonaNames_Response"
      ".PersonaName\022\036\n\026failed_lookup_steamids\030\002"
      " \003(\006\0324\n\013PersonaName\022\017\n\007steamid\030\001 \001(\006\022\024\n\014"
      "persona_name\030\002 \001(\t\"D\n\025CMsgGCCheckFriends"
      "hip\022\024\n\014steamid_left\030\001 \001(\006\022\025\n\rsteamid_rig"
      "ht\030\002 \001(\006\"K\n\036CMsgGCCheckFriendship_Respon"
      "se\022\017\n\007success\030\001 \001(\010\022\030\n\020found_friendship\030"
      "\002 \001(\010\"\310\001\n\033CMsgGCMsgMasterSetDirectory\022\030\n"
      "\020master_dir_index\030\001 \001(\r\022/\n\003dir\030\002 \003(\0132\".C"
      "MsgGCMsgMasterSetDirectory.SubGC\032^\n\005SubG"
      "C\022\021\n\tdir_index\030\001 \001(\r\022\014\n\004name\030\002 \001(\t\022\013\n\003bo"
      "x\030\003 \001(\t\022\024\n\014command_line\030\004 \001(\t\022\021\n\tgc_bina"
      "ry\030\005 \001(\t\":\n$CMsgGCMsgMasterSetDirectory_"
      "Response\022\022\n\007eresult\030\001 \001(\005:\0012\"=\n(CMsgGCMs"
      "gWebAPIJobRequestForwardResponse\022\021\n\tdir_"
      "index\030\001 \001(\r\"8\n%CGCSystemMsg_GetPurchaseT"
      "rust_Request\022\017\n\007steamid\030\001 \001(\006\"\255\001\n&CGCSys"
      "temMsg_GetPurchaseTrust_Response\022\"\n\032has_"
      "prior_purchase_history\030\001 \001(\010\022%\n\035has_no_r"
      "ecent_password_resets\030\002 \001(\010\022\036\n\026is_wallet"
      "_cash_trusted\030\003 \001(\010\022\030\n\020time_all_trusted\030"
      "\004 \001(\r\"\217\001\n\035CMsgGCHAccountVacStatusChange\022"
      "\020\n\010steam_id\030\001 \001(\006\022\016\n\006app_id\030\002 \001(\r\022\033\n\023rti"
      "me_vacban_starts\030\003 \001(\r\022\025\n\ris_banned_now\030"
      "\004 \001(\010\022\030\n\020is_banned_future\030\005 \001(\010\"r\n\"CMsgG"
      "CHAccountTradeBanStatusChange\022\017\n\007steamid"
      "\030\001 \001(\006\022\r\n\005appid\030\002 \001(\r\022\021\n\tis_banned\030\003 \001(\010"
      "\022\031\n\021time_banned_until\030\004 \001(\r\"S\n\036CMsgGCHAc"
      "countLockStatusChange\022\017\n\007steamid\030\001 \001(\006\022\r"
      "\n\005appid\030\002 \001(\r\022\021\n\tis_locked\030\003 \001(\010\"S\n\034CMsg"
      "GCHVacVerificationChange\022\017\n\007steamid\030\001 \001("
      "\006\022\r\n\005appid\030\002 \001(\r\022\023\n\013is_verified\030\003 \001(\010\"\200\001"
      "\n\037CMsgGCHAccountPhoneNumberChange\022\017\n\007ste"
      "amid\030\001 \001(\006\022\r\n\005appid\030\002 \001(\r\022\020\n\010phone_id\030\003 "
      "\001(\004\022\023\n\013is_verified\030\004 \001(\010\022\026\n\016is_identifyi"
      "ng\030\005 \001(\010\"Z\n\035CMsgGCHAccountTwoFactorChang"
      "e\022\017\n\007steamid\030\001 \001(\006\022\r\n\005appid\030\002 \001(\r\022\031\n\021two"
      "factor_enabled\030\003 \001(\010\".\n\033CMsgGCGetPartner"
      "AccountLink\022\017\n\007steamid\030\001 \001(\006\"E\n$CMsgGCGe"
      "tPartnerAccountLink_Response\022\014\n\004pwid\030\001 \001"
      "(\r\022\017\n\007nexonid\030\002 \001(\r\"\275\002\n\021CMsgGCRoutingInf"
      "o\022\021\n\tdir_index\030\001 \003(\r\0228\n\006method\030\002 \001(\0162 .C"
      "MsgGCRoutingInfo.RoutingMethod:\006RANDOM\022;"
      "\n\010fallback\030\003 \001(\0162 .CMsgGCRoutingInfo.Rou"
      "tingMethod:\007DISCARD\022\026\n\016protobuf_field\030\004 "
      "\001(\r\022\024\n\014webapi_param\030\005 \001(\t\"p\n\rRoutingMeth"
      "od\022\n\n\006RANDOM\020\000\022\013\n\007DISCARD\020\001\022\022\n\016CLIENT_ST"
      "EAMID\020\002\022\031\n\025PROTOBUF_FIELD_UINT64\020\003\022\027\n\023WE"
      "BAPI_PARAM_UINT64\020\004\"\265\001\n\037CMsgGCMsgMasterS"
      "etWebAPIRouting\0227\n\007entries\030\001 \003(\0132&.CMsgG"
      "CMsgMasterSetWebAPIRouting.Entry\032Y\n\005Entr"
      "y\022\026\n\016interface_name\030\001 \001(\t\022\023\n\013method_name"
      "\030\002 \001(\t\022#\n\007routing\030\003 \001(\0132\022.CMsgGCRoutingI"
      "nfo\"\240\001\n\"CMsgGCMsgMasterSetClientMsgRouti"
      "ng\022:\n\007entries\030\001 \003(\0132).CMsgGCMsgMasterSet"
      "ClientMsgRouting.Entry\032>\n\005Entry\022\020\n\010msg_t"
      "ype\030\001 \001(\r\022#\n\007routing\030\002 \001(\0132\022.CMsgGCRouti"
      "ngInfo\">\n(CMsgGCMsgMasterSetWebAPIRoutin"
      "g_Response\022\022\n\007eresult\030\001 \001(\005:\0012\"A\n+CMsgGC"
      "MsgMasterSetClientMsgRouting_Response\022\022\n"
      "\007eresult\030\001 \001(\005:\0012\"\266\003\n\023CMsgGCMsgSetOption"
      "s\022,\n\007options\030\001 \003(\0162\033.CMsgGCMsgSetOptions"
      ".Option\022<\n\021client_msg_ranges\030\002 \003(\0132!.CMs"
      "gGCMsgSetOptions.MessageRange\022P\n\rgcsql_v"
      "ersion\030\003 \001(\0162!.CMsgGCMsgSetOptions.GCSQL"
      "Version:\026GCSQL_VERSION_BASELINE\032)\n\014Messa"
      "geRange\022\013\n\003low\030\001 \002(\r\022\014\n\004high\030\002 \002(\r\"n\n\006Op"
      "tion\022\030\n\024NOTIFY_USER_SESSIONS\020\000\022\032\n\026NOTIFY"
      "_SERVER_SESSIONS\020\001\022\027\n\023NOTIFY_ACHIEVEMENT"
      "S\020\002\022\025\n\021NOTIFY_VAC_ACTION\020\003\"F\n\014GCSQLVersi"
      "on\022\032\n\026GCSQL_VERSION_BASELINE\020\001\022\032\n\026GCSQL_"
      "VERSION_BOOLTYPE\020\002\"\224\002\n\024CMsgGCHUpdateSess"
      "ion\022\020\n\010steam_id\030\001 \001(\006\022\016\n\006app_id\030\002 \001(\r\022\016\n"
      "\006online\030\003 \001(\010\022\027\n\017server_steam_id\030\004 \001(\006\022\023"
      "\n\013server_addr\030\005 \001(\r\022\023\n\013server_port\030\006 \001(\r"
      "\022\017\n\007os_type\030\007 \001(\r\022\023\n\013client_addr\030\010 \001(\r\0226"
      "\n\014extra_fields\030\t \003(\0132 .CMsgGCHUpdateSess"
      "ion.ExtraField\032)\n\nExtraField\022\014\n\004name\030\001 \001"
      "(\t\022\r\n\005value\030\002 \001(\t\"\354\001\n$CMsgNotificationOf"
      "SuspiciousActivity\022\017\n\007steamid\030\001 \001(\006\022\r\n\005a"
      "ppid\030\002 \001(\r\022W\n\022multiple_instances\030\003 \001(\0132;"
      ".CMsgNotificationOfSuspiciousActivity.Mu"
      "ltipleGameInstances\032K\n\025MultipleGameInsta"
      "nces\022\032\n\022app_instance_count\030\001 \001(\r\022\026\n\016othe"
      "r_steamids\030\002 \003(\006*\266\001\n\020GCProtoBufMsgSrc\022 \n"
      "\034GCProtoBufMsgSrc_Unspecified\020\000\022\037\n\033GCPro"
      "toBufMsgSrc_FromSystem\020\001\022 \n\034GCProtoBufMs"
      "gSrc_FromSteamID\020\002\022\033\n\027GCProtoBufMsgSrc_F"
      "romGC\020\003\022 \n\034GCProtoBufMsgSrc_ReplySystem\020"
      "\004:9\n\tkey_field\022\035.google.protobuf.FieldOp"
      "tions\030\340\324\003 \001(\010:\005false:A\n\022msgpool_soft_lim"
      "it\022\037.google.protobuf.MessageOptions\030\340\324\003 "
      "\001(\005:\00232:B\n\022msgpool_hard_limit\022\037.google.p"
      "rotobuf.MessageOptions\030\341\324\003 \001(\005:\003384B\005H\001\200"
      "\001\000"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 9842);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "steammessages.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fdescriptor_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_steammessages_2eproto
const ::google::protobuf::EnumDescriptor* CMsgGCRoutingInfo_RoutingMethod_descriptor() {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_2eproto::file_level_enum_descriptors[0];
}
bool CMsgGCRoutingInfo_RoutingMethod_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CMsgGCRoutingInfo_RoutingMethod CMsgGCRoutingInfo::RANDOM;
const CMsgGCRoutingInfo_RoutingMethod CMsgGCRoutingInfo::DISCARD;
const CMsgGCRoutingInfo_RoutingMethod CMsgGCRoutingInfo::CLIENT_STEAMID;
const CMsgGCRoutingInfo_RoutingMethod CMsgGCRoutingInfo::PROTOBUF_FIELD_UINT64;
const CMsgGCRoutingInfo_RoutingMethod CMsgGCRoutingInfo::WEBAPI_PARAM_UINT64;
const CMsgGCRoutingInfo_RoutingMethod CMsgGCRoutingInfo::RoutingMethod_MIN;
const CMsgGCRoutingInfo_RoutingMethod CMsgGCRoutingInfo::RoutingMethod_MAX;
const int CMsgGCRoutingInfo::RoutingMethod_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CMsgGCMsgSetOptions_Option_descriptor() {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_2eproto::file_level_enum_descriptors[1];
}
bool CMsgGCMsgSetOptions_Option_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CMsgGCMsgSetOptions_Option CMsgGCMsgSetOptions::NOTIFY_USER_SESSIONS;
const CMsgGCMsgSetOptions_Option CMsgGCMsgSetOptions::NOTIFY_SERVER_SESSIONS;
const CMsgGCMsgSetOptions_Option CMsgGCMsgSetOptions::NOTIFY_ACHIEVEMENTS;
const CMsgGCMsgSetOptions_Option CMsgGCMsgSetOptions::NOTIFY_VAC_ACTION;
const CMsgGCMsgSetOptions_Option CMsgGCMsgSetOptions::Option_MIN;
const CMsgGCMsgSetOptions_Option CMsgGCMsgSetOptions::Option_MAX;
const int CMsgGCMsgSetOptions::Option_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CMsgGCMsgSetOptions_GCSQLVersion_descriptor() {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_2eproto::file_level_enum_descriptors[2];
}
bool CMsgGCMsgSetOptions_GCSQLVersion_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CMsgGCMsgSetOptions_GCSQLVersion CMsgGCMsgSetOptions::GCSQL_VERSION_BASELINE;
const CMsgGCMsgSetOptions_GCSQLVersion CMsgGCMsgSetOptions::GCSQL_VERSION_BOOLTYPE;
const CMsgGCMsgSetOptions_GCSQLVersion CMsgGCMsgSetOptions::GCSQLVersion_MIN;
const CMsgGCMsgSetOptions_GCSQLVersion CMsgGCMsgSetOptions::GCSQLVersion_MAX;
const int CMsgGCMsgSetOptions::GCSQLVersion_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GCProtoBufMsgSrc_descriptor() {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_2eproto::file_level_enum_descriptors[3];
}
bool GCProtoBufMsgSrc_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void CMsgProtoBufHeader::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgProtoBufHeader::kClientSteamIdFieldNumber;
const int CMsgProtoBufHeader::kClientSessionIdFieldNumber;
const int CMsgProtoBufHeader::kSourceAppIdFieldNumber;
const int CMsgProtoBufHeader::kJobIdSourceFieldNumber;
const int CMsgProtoBufHeader::kJobIdTargetFieldNumber;
const int CMsgProtoBufHeader::kTargetJobNameFieldNumber;
const int CMsgProtoBufHeader::kEresultFieldNumber;
const int CMsgProtoBufHeader::kErrorMessageFieldNumber;
const int CMsgProtoBufHeader::kGcMsgSrcFieldNumber;
const int CMsgProtoBufHeader::kGcDirIndexSourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgProtoBufHeader::CMsgProtoBufHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgProtoBufHeader();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgProtoBufHeader)
}
CMsgProtoBufHeader::CMsgProtoBufHeader(const CMsgProtoBufHeader& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_job_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_target_job_name()) {
    target_job_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_job_name_);
  }
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_error_message()) {
    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  ::memcpy(&client_steam_id_, &from.client_steam_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&job_id_target_) -
    reinterpret_cast<char*>(&client_steam_id_)) + sizeof(job_id_target_));
  // @@protoc_insertion_point(copy_constructor:CMsgProtoBufHeader)
}

void CMsgProtoBufHeader::SharedCtor() {
  _cached_size_ = 0;
  target_job_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&client_steam_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gc_dir_index_source_) -
      reinterpret_cast<char*>(&client_steam_id_)) + sizeof(gc_dir_index_source_));
  eresult_ = 2;
  job_id_source_ = GOOGLE_ULONGLONG(18446744073709551615);
  job_id_target_ = GOOGLE_ULONGLONG(18446744073709551615);
}

CMsgProtoBufHeader::~CMsgProtoBufHeader() {
  // @@protoc_insertion_point(destructor:CMsgProtoBufHeader)
  SharedDtor();
}

void CMsgProtoBufHeader::SharedDtor() {
  target_job_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgProtoBufHeader::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgProtoBufHeader::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgProtoBufHeader& CMsgProtoBufHeader::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgProtoBufHeader();
  return *internal_default_instance();
}

CMsgProtoBufHeader* CMsgProtoBufHeader::New(::google::protobuf::Arena* arena) const {
  CMsgProtoBufHeader* n = new CMsgProtoBufHeader;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgProtoBufHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgProtoBufHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!target_job_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*target_job_name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!error_message_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*error_message_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 252u) {
    ::memset(&client_steam_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&gc_dir_index_source_) -
        reinterpret_cast<char*>(&client_steam_id_)) + sizeof(gc_dir_index_source_));
    eresult_ = 2;
  }
  if (cached_has_bits & 768u) {
    job_id_source_ = GOOGLE_ULONGLONG(18446744073709551615);
    job_id_target_ = GOOGLE_ULONGLONG(18446744073709551615);
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgProtoBufHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgProtoBufHeader)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 client_steam_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_client_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &client_steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 client_session_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_client_session_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_session_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 source_app_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_source_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &source_app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 job_id_source = 10 [default = 18446744073709551615];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {
          set_has_job_id_source();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &job_id_source_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 job_id_target = 11 [default = 18446744073709551615];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {
          set_has_job_id_target();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &job_id_target_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string target_job_name = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target_job_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->target_job_name().data(), static_cast<int>(this->target_job_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgProtoBufHeader.target_job_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 eresult = 13 [default = 2];
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string error_message = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error_message().data(), static_cast<int>(this->error_message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgProtoBufHeader.error_message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .GCProtoBufMsgSrc gc_msg_src = 200 [default = GCProtoBufMsgSrc_Unspecified];
      case 200: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 1600 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::GCProtoBufMsgSrc_IsValid(value)) {
            set_gc_msg_src(static_cast< ::GCProtoBufMsgSrc >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                200, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 gc_dir_index_source = 201;
      case 201: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 1608 & 0xFF */)) {
          set_has_gc_dir_index_source();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gc_dir_index_source_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgProtoBufHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgProtoBufHeader)
  return false;
#undef DO_
}

void CMsgProtoBufHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgProtoBufHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 client_steam_id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->client_steam_id(), output);
  }

  // optional int32 client_session_id = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->client_session_id(), output);
  }

  // optional uint32 source_app_id = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->source_app_id(), output);
  }

  // optional fixed64 job_id_source = 10 [default = 18446744073709551615];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(10, this->job_id_source(), output);
  }

  // optional fixed64 job_id_target = 11 [default = 18446744073709551615];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(11, this->job_id_target(), output);
  }

  // optional string target_job_name = 12;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->target_job_name().data(), static_cast<int>(this->target_job_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgProtoBufHeader.target_job_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->target_job_name(), output);
  }

  // optional int32 eresult = 13 [default = 2];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->eresult(), output);
  }

  // optional string error_message = 14;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgProtoBufHeader.error_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->error_message(), output);
  }

  // optional .GCProtoBufMsgSrc gc_msg_src = 200 [default = GCProtoBufMsgSrc_Unspecified];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      200, this->gc_msg_src(), output);
  }

  // optional uint32 gc_dir_index_source = 201;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(201, this->gc_dir_index_source(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgProtoBufHeader)
}

::google::protobuf::uint8* CMsgProtoBufHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgProtoBufHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 client_steam_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->client_steam_id(), target);
  }

  // optional int32 client_session_id = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->client_session_id(), target);
  }

  // optional uint32 source_app_id = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->source_app_id(), target);
  }

  // optional fixed64 job_id_source = 10 [default = 18446744073709551615];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(10, this->job_id_source(), target);
  }

  // optional fixed64 job_id_target = 11 [default = 18446744073709551615];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(11, this->job_id_target(), target);
  }

  // optional string target_job_name = 12;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->target_job_name().data(), static_cast<int>(this->target_job_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgProtoBufHeader.target_job_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->target_job_name(), target);
  }

  // optional int32 eresult = 13 [default = 2];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->eresult(), target);
  }

  // optional string error_message = 14;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error_message().data(), static_cast<int>(this->error_message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgProtoBufHeader.error_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->error_message(), target);
  }

  // optional .GCProtoBufMsgSrc gc_msg_src = 200 [default = GCProtoBufMsgSrc_Unspecified];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      200, this->gc_msg_src(), target);
  }

  // optional uint32 gc_dir_index_source = 201;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(201, this->gc_dir_index_source(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgProtoBufHeader)
  return target;
}

size_t CMsgProtoBufHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgProtoBufHeader)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string target_job_name = 12;
    if (has_target_job_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->target_job_name());
    }

    // optional string error_message = 14;
    if (has_error_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->error_message());
    }

    // optional fixed64 client_steam_id = 1;
    if (has_client_steam_id()) {
      total_size += 1 + 8;
    }

    // optional int32 client_session_id = 2;
    if (has_client_session_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->client_session_id());
    }

    // optional uint32 source_app_id = 3;
    if (has_source_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->source_app_id());
    }

    // optional .GCProtoBufMsgSrc gc_msg_src = 200 [default = GCProtoBufMsgSrc_Unspecified];
    if (has_gc_msg_src()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->gc_msg_src());
    }

    // optional uint32 gc_dir_index_source = 201;
    if (has_gc_dir_index_source()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gc_dir_index_source());
    }

    // optional int32 eresult = 13 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional fixed64 job_id_source = 10 [default = 18446744073709551615];
    if (has_job_id_source()) {
      total_size += 1 + 8;
    }

    // optional fixed64 job_id_target = 11 [default = 18446744073709551615];
    if (has_job_id_target()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgProtoBufHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgProtoBufHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgProtoBufHeader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgProtoBufHeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgProtoBufHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgProtoBufHeader)
    MergeFrom(*source);
  }
}

void CMsgProtoBufHeader::MergeFrom(const CMsgProtoBufHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgProtoBufHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_target_job_name();
      target_job_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_job_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_error_message();
      error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
    }
    if (cached_has_bits & 0x00000004u) {
      client_steam_id_ = from.client_steam_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      client_session_id_ = from.client_session_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      source_app_id_ = from.source_app_id_;
    }
    if (cached_has_bits & 0x00000020u) {
      gc_msg_src_ = from.gc_msg_src_;
    }
    if (cached_has_bits & 0x00000040u) {
      gc_dir_index_source_ = from.gc_dir_index_source_;
    }
    if (cached_has_bits & 0x00000080u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      job_id_source_ = from.job_id_source_;
    }
    if (cached_has_bits & 0x00000200u) {
      job_id_target_ = from.job_id_target_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgProtoBufHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgProtoBufHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgProtoBufHeader::CopyFrom(const CMsgProtoBufHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgProtoBufHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgProtoBufHeader::IsInitialized() const {
  return true;
}

void CMsgProtoBufHeader::Swap(CMsgProtoBufHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgProtoBufHeader::InternalSwap(CMsgProtoBufHeader* other) {
  using std::swap;
  target_job_name_.Swap(&other->target_job_name_);
  error_message_.Swap(&other->error_message_);
  swap(client_steam_id_, other->client_steam_id_);
  swap(client_session_id_, other->client_session_id_);
  swap(source_app_id_, other->source_app_id_);
  swap(gc_msg_src_, other->gc_msg_src_);
  swap(gc_dir_index_source_, other->gc_dir_index_source_);
  swap(eresult_, other->eresult_);
  swap(job_id_source_, other->job_id_source_);
  swap(job_id_target_, other->job_id_target_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgProtoBufHeader::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgWebAPIKey::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgWebAPIKey::kStatusFieldNumber;
const int CMsgWebAPIKey::kAccountIdFieldNumber;
const int CMsgWebAPIKey::kPublisherGroupIdFieldNumber;
const int CMsgWebAPIKey::kKeyIdFieldNumber;
const int CMsgWebAPIKey::kDomainFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgWebAPIKey::CMsgWebAPIKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgWebAPIKey();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgWebAPIKey)
}
CMsgWebAPIKey::CMsgWebAPIKey(const CMsgWebAPIKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_domain()) {
    domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
  }
  ::memcpy(&account_id_, &from.account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&account_id_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:CMsgWebAPIKey)
}

void CMsgWebAPIKey::SharedCtor() {
  _cached_size_ = 0;
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&account_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&key_id_) -
      reinterpret_cast<char*>(&account_id_)) + sizeof(key_id_));
  status_ = 255u;
}

CMsgWebAPIKey::~CMsgWebAPIKey() {
  // @@protoc_insertion_point(destructor:CMsgWebAPIKey)
  SharedDtor();
}

void CMsgWebAPIKey::SharedDtor() {
  domain_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgWebAPIKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgWebAPIKey::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgWebAPIKey& CMsgWebAPIKey::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgWebAPIKey();
  return *internal_default_instance();
}

CMsgWebAPIKey* CMsgWebAPIKey::New(::google::protobuf::Arena* arena) const {
  CMsgWebAPIKey* n = new CMsgWebAPIKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgWebAPIKey::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgWebAPIKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!domain_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*domain_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 30u) {
    ::memset(&account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&key_id_) -
        reinterpret_cast<char*>(&account_id_)) + sizeof(key_id_));
    status_ = 255u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgWebAPIKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgWebAPIKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 status = 1 [default = 255];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 account_id = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 publisher_group_id = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_publisher_group_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &publisher_group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 key_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_key_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &key_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string domain = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_domain()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->domain().data(), static_cast<int>(this->domain().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgWebAPIKey.domain");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgWebAPIKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgWebAPIKey)
  return false;
#undef DO_
}

void CMsgWebAPIKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgWebAPIKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 status = 1 [default = 255];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->status(), output);
  }

  // optional uint32 account_id = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->account_id(), output);
  }

  // optional uint32 publisher_group_id = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->publisher_group_id(), output);
  }

  // optional uint32 key_id = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->key_id(), output);
  }

  // optional string domain = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->domain().data(), static_cast<int>(this->domain().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgWebAPIKey.domain");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->domain(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgWebAPIKey)
}

::google::protobuf::uint8* CMsgWebAPIKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgWebAPIKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 status = 1 [default = 255];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->status(), target);
  }

  // optional uint32 account_id = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->account_id(), target);
  }

  // optional uint32 publisher_group_id = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->publisher_group_id(), target);
  }

  // optional uint32 key_id = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->key_id(), target);
  }

  // optional string domain = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->domain().data(), static_cast<int>(this->domain().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgWebAPIKey.domain");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->domain(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgWebAPIKey)
  return target;
}

size_t CMsgWebAPIKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgWebAPIKey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string domain = 5;
    if (has_domain()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->domain());
    }

    // optional uint32 account_id = 2 [default = 0];
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional uint32 publisher_group_id = 3 [default = 0];
    if (has_publisher_group_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->publisher_group_id());
    }

    // optional uint32 key_id = 4;
    if (has_key_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->key_id());
    }

    // optional uint32 status = 1 [default = 255];
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->status());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgWebAPIKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgWebAPIKey)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgWebAPIKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgWebAPIKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgWebAPIKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgWebAPIKey)
    MergeFrom(*source);
  }
}

void CMsgWebAPIKey::MergeFrom(const CMsgWebAPIKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgWebAPIKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_domain();
      domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
    }
    if (cached_has_bits & 0x00000002u) {
      account_id_ = from.account_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      publisher_group_id_ = from.publisher_group_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      key_id_ = from.key_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      status_ = from.status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgWebAPIKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgWebAPIKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgWebAPIKey::CopyFrom(const CMsgWebAPIKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgWebAPIKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgWebAPIKey::IsInitialized() const {
  return true;
}

void CMsgWebAPIKey::Swap(CMsgWebAPIKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgWebAPIKey::InternalSwap(CMsgWebAPIKey* other) {
  using std::swap;
  domain_.Swap(&other->domain_);
  swap(account_id_, other->account_id_);
  swap(publisher_group_id_, other->publisher_group_id_);
  swap(key_id_, other->key_id_);
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgWebAPIKey::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgHttpRequest_RequestHeader::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgHttpRequest_RequestHeader::kNameFieldNumber;
const int CMsgHttpRequest_RequestHeader::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgHttpRequest_RequestHeader::CMsgHttpRequest_RequestHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgHttpRequest_RequestHeader();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgHttpRequest.RequestHeader)
}
CMsgHttpRequest_RequestHeader::CMsgHttpRequest_RequestHeader(const CMsgHttpRequest_RequestHeader& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgHttpRequest.RequestHeader)
}

void CMsgHttpRequest_RequestHeader::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgHttpRequest_RequestHeader::~CMsgHttpRequest_RequestHeader() {
  // @@protoc_insertion_point(destructor:CMsgHttpRequest.RequestHeader)
  SharedDtor();
}

void CMsgHttpRequest_RequestHeader::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgHttpRequest_RequestHeader::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgHttpRequest_RequestHeader::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgHttpRequest_RequestHeader& CMsgHttpRequest_RequestHeader::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgHttpRequest_RequestHeader();
  return *internal_default_instance();
}

CMsgHttpRequest_RequestHeader* CMsgHttpRequest_RequestHeader::New(::google::protobuf::Arena* arena) const {
  CMsgHttpRequest_RequestHeader* n = new CMsgHttpRequest_RequestHeader;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgHttpRequest_RequestHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgHttpRequest.RequestHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*value_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgHttpRequest_RequestHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgHttpRequest.RequestHeader)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgHttpRequest.RequestHeader.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgHttpRequest.RequestHeader.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgHttpRequest.RequestHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgHttpRequest.RequestHeader)
  return false;
#undef DO_
}

void CMsgHttpRequest_RequestHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgHttpRequest.RequestHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgHttpRequest.RequestHeader.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgHttpRequest.RequestHeader.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgHttpRequest.RequestHeader)
}

::google::protobuf::uint8* CMsgHttpRequest_RequestHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgHttpRequest.RequestHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgHttpRequest.RequestHeader.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgHttpRequest.RequestHeader.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgHttpRequest.RequestHeader)
  return target;
}

size_t CMsgHttpRequest_RequestHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgHttpRequest.RequestHeader)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgHttpRequest_RequestHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgHttpRequest.RequestHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgHttpRequest_RequestHeader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgHttpRequest_RequestHeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgHttpRequest.RequestHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgHttpRequest.RequestHeader)
    MergeFrom(*source);
  }
}

void CMsgHttpRequest_RequestHeader::MergeFrom(const CMsgHttpRequest_RequestHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgHttpRequest.RequestHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void CMsgHttpRequest_RequestHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgHttpRequest.RequestHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgHttpRequest_RequestHeader::CopyFrom(const CMsgHttpRequest_RequestHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgHttpRequest.RequestHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgHttpRequest_RequestHeader::IsInitialized() const {
  return true;
}

void CMsgHttpRequest_RequestHeader::Swap(CMsgHttpRequest_RequestHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgHttpRequest_RequestHeader::InternalSwap(CMsgHttpRequest_RequestHeader* other) {
  using std::swap;
  name_.Swap(&other->name_);
  value_.Swap(&other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgHttpRequest_RequestHeader::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgHttpRequest_QueryParam::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgHttpRequest_QueryParam::kNameFieldNumber;
const int CMsgHttpRequest_QueryParam::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgHttpRequest_QueryParam::CMsgHttpRequest_QueryParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgHttpRequest_QueryParam();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgHttpRequest.QueryParam)
}
CMsgHttpRequest_QueryParam::CMsgHttpRequest_QueryParam(const CMsgHttpRequest_QueryParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgHttpRequest.QueryParam)
}

void CMsgHttpRequest_QueryParam::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgHttpRequest_QueryParam::~CMsgHttpRequest_QueryParam() {
  // @@protoc_insertion_point(destructor:CMsgHttpRequest.QueryParam)
  SharedDtor();
}

void CMsgHttpRequest_QueryParam::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgHttpRequest_QueryParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgHttpRequest_QueryParam::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgHttpRequest_QueryParam& CMsgHttpRequest_QueryParam::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgHttpRequest_QueryParam();
  return *internal_default_instance();
}

CMsgHttpRequest_QueryParam* CMsgHttpRequest_QueryParam::New(::google::protobuf::Arena* arena) const {
  CMsgHttpRequest_QueryParam* n = new CMsgHttpRequest_QueryParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgHttpRequest_QueryParam::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgHttpRequest.QueryParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*value_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgHttpRequest_QueryParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgHttpRequest.QueryParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgHttpRequest.QueryParam.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgHttpRequest.QueryParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgHttpRequest.QueryParam)
  return false;
#undef DO_
}

void CMsgHttpRequest_QueryParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgHttpRequest.QueryParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgHttpRequest.QueryParam.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional bytes value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgHttpRequest.QueryParam)
}

::google::protobuf::uint8* CMsgHttpRequest_QueryParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgHttpRequest.QueryParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgHttpRequest.QueryParam.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional bytes value = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgHttpRequest.QueryParam)
  return target;
}

size_t CMsgHttpRequest_QueryParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgHttpRequest.QueryParam)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional bytes value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgHttpRequest_QueryParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgHttpRequest.QueryParam)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgHttpRequest_QueryParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgHttpRequest_QueryParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgHttpRequest.QueryParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgHttpRequest.QueryParam)
    MergeFrom(*source);
  }
}

void CMsgHttpRequest_QueryParam::MergeFrom(const CMsgHttpRequest_QueryParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgHttpRequest.QueryParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void CMsgHttpRequest_QueryParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgHttpRequest.QueryParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgHttpRequest_QueryParam::CopyFrom(const CMsgHttpRequest_QueryParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgHttpRequest.QueryParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgHttpRequest_QueryParam::IsInitialized() const {
  return true;
}

void CMsgHttpRequest_QueryParam::Swap(CMsgHttpRequest_QueryParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgHttpRequest_QueryParam::InternalSwap(CMsgHttpRequest_QueryParam* other) {
  using std::swap;
  name_.Swap(&other->name_);
  value_.Swap(&other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgHttpRequest_QueryParam::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgHttpRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgHttpRequest::kRequestMethodFieldNumber;
const int CMsgHttpRequest::kHostnameFieldNumber;
const int CMsgHttpRequest::kUrlFieldNumber;
const int CMsgHttpRequest::kHeadersFieldNumber;
const int CMsgHttpRequest::kGetParamsFieldNumber;
const int CMsgHttpRequest::kPostParamsFieldNumber;
const int CMsgHttpRequest::kBodyFieldNumber;
const int CMsgHttpRequest::kAbsoluteTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgHttpRequest::CMsgHttpRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgHttpRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgHttpRequest)
}
CMsgHttpRequest::CMsgHttpRequest(const CMsgHttpRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      headers_(from.headers_),
      get_params_(from.get_params_),
      post_params_(from.post_params_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hostname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_hostname()) {
    hostname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hostname_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_body()) {
    body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
  }
  ::memcpy(&request_method_, &from.request_method_,
    static_cast<size_t>(reinterpret_cast<char*>(&absolute_timeout_) -
    reinterpret_cast<char*>(&request_method_)) + sizeof(absolute_timeout_));
  // @@protoc_insertion_point(copy_constructor:CMsgHttpRequest)
}

void CMsgHttpRequest::SharedCtor() {
  _cached_size_ = 0;
  hostname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&request_method_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&absolute_timeout_) -
      reinterpret_cast<char*>(&request_method_)) + sizeof(absolute_timeout_));
}

CMsgHttpRequest::~CMsgHttpRequest() {
  // @@protoc_insertion_point(destructor:CMsgHttpRequest)
  SharedDtor();
}

void CMsgHttpRequest::SharedDtor() {
  hostname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgHttpRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgHttpRequest::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgHttpRequest& CMsgHttpRequest::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgHttpRequest();
  return *internal_default_instance();
}

CMsgHttpRequest* CMsgHttpRequest::New(::google::protobuf::Arena* arena) const {
  CMsgHttpRequest* n = new CMsgHttpRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgHttpRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgHttpRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  headers_.Clear();
  get_params_.Clear();
  post_params_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!hostname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*hostname_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*url_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!body_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*body_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 24u) {
    ::memset(&request_method_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&absolute_timeout_) -
        reinterpret_cast<char*>(&request_method_)) + sizeof(absolute_timeout_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgHttpRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgHttpRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 request_method = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_request_method();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &request_method_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string hostname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hostname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->hostname().data(), static_cast<int>(this->hostname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgHttpRequest.hostname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string url = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgHttpRequest.url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgHttpRequest.RequestHeader headers = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_headers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgHttpRequest.QueryParam get_params = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_get_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgHttpRequest.QueryParam post_params = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_post_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes body = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_body()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 absolute_timeout = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_absolute_timeout();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &absolute_timeout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgHttpRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgHttpRequest)
  return false;
#undef DO_
}

void CMsgHttpRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgHttpRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 request_method = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->request_method(), output);
  }

  // optional string hostname = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hostname().data(), static_cast<int>(this->hostname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgHttpRequest.hostname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->hostname(), output);
  }

  // optional string url = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgHttpRequest.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->url(), output);
  }

  // repeated .CMsgHttpRequest.RequestHeader headers = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->headers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->headers(static_cast<int>(i)), output);
  }

  // repeated .CMsgHttpRequest.QueryParam get_params = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->get_params_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->get_params(static_cast<int>(i)), output);
  }

  // repeated .CMsgHttpRequest.QueryParam post_params = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->post_params_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->post_params(static_cast<int>(i)), output);
  }

  // optional bytes body = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->body(), output);
  }

  // optional uint32 absolute_timeout = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->absolute_timeout(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgHttpRequest)
}

::google::protobuf::uint8* CMsgHttpRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgHttpRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 request_method = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->request_method(), target);
  }

  // optional string hostname = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hostname().data(), static_cast<int>(this->hostname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgHttpRequest.hostname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->hostname(), target);
  }

  // optional string url = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgHttpRequest.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->url(), target);
  }

  // repeated .CMsgHttpRequest.RequestHeader headers = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->headers_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->headers(static_cast<int>(i)), deterministic, target);
  }

  // repeated .CMsgHttpRequest.QueryParam get_params = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->get_params_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->get_params(static_cast<int>(i)), deterministic, target);
  }

  // repeated .CMsgHttpRequest.QueryParam post_params = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->post_params_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->post_params(static_cast<int>(i)), deterministic, target);
  }

  // optional bytes body = 7;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->body(), target);
  }

  // optional uint32 absolute_timeout = 8;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->absolute_timeout(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgHttpRequest)
  return target;
}

size_t CMsgHttpRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgHttpRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgHttpRequest.RequestHeader headers = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->headers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->headers(static_cast<int>(i)));
    }
  }

  // repeated .CMsgHttpRequest.QueryParam get_params = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->get_params_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->get_params(static_cast<int>(i)));
    }
  }

  // repeated .CMsgHttpRequest.QueryParam post_params = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->post_params_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->post_params(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 31u) {
    // optional string hostname = 2;
    if (has_hostname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hostname());
    }

    // optional string url = 3;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional bytes body = 7;
    if (has_body()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->body());
    }

    // optional uint32 request_method = 1;
    if (has_request_method()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->request_method());
    }

    // optional uint32 absolute_timeout = 8;
    if (has_absolute_timeout()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->absolute_timeout());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgHttpRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgHttpRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgHttpRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgHttpRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgHttpRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgHttpRequest)
    MergeFrom(*source);
  }
}

void CMsgHttpRequest::MergeFrom(const CMsgHttpRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgHttpRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  headers_.MergeFrom(from.headers_);
  get_params_.MergeFrom(from.get_params_);
  post_params_.MergeFrom(from.post_params_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_hostname();
      hostname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hostname_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_body();
      body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
    }
    if (cached_has_bits & 0x00000008u) {
      request_method_ = from.request_method_;
    }
    if (cached_has_bits & 0x00000010u) {
      absolute_timeout_ = from.absolute_timeout_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgHttpRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgHttpRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgHttpRequest::CopyFrom(const CMsgHttpRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgHttpRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgHttpRequest::IsInitialized() const {
  return true;
}

void CMsgHttpRequest::Swap(CMsgHttpRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgHttpRequest::InternalSwap(CMsgHttpRequest* other) {
  using std::swap;
  headers_.InternalSwap(&other->headers_);
  get_params_.InternalSwap(&other->get_params_);
  post_params_.InternalSwap(&other->post_params_);
  hostname_.Swap(&other->hostname_);
  url_.Swap(&other->url_);
  body_.Swap(&other->body_);
  swap(request_method_, other->request_method_);
  swap(absolute_timeout_, other->absolute_timeout_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgHttpRequest::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgWebAPIRequest::InitAsDefaultInstance() {
  ::_CMsgWebAPIRequest_default_instance_._instance.get_mutable()->api_key_ = const_cast< ::CMsgWebAPIKey*>(
      ::CMsgWebAPIKey::internal_default_instance());
  ::_CMsgWebAPIRequest_default_instance_._instance.get_mutable()->request_ = const_cast< ::CMsgHttpRequest*>(
      ::CMsgHttpRequest::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgWebAPIRequest::kUNUSEDJobNameFieldNumber;
const int CMsgWebAPIRequest::kInterfaceNameFieldNumber;
const int CMsgWebAPIRequest::kMethodNameFieldNumber;
const int CMsgWebAPIRequest::kVersionFieldNumber;
const int CMsgWebAPIRequest::kApiKeyFieldNumber;
const int CMsgWebAPIRequest::kRequestFieldNumber;
const int CMsgWebAPIRequest::kRoutingAppIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgWebAPIRequest::CMsgWebAPIRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgWebAPIRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgWebAPIRequest)
}
CMsgWebAPIRequest::CMsgWebAPIRequest(const CMsgWebAPIRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  unused_job_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_unused_job_name()) {
    unused_job_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unused_job_name_);
  }
  interface_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_interface_name()) {
    interface_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.interface_name_);
  }
  method_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_method_name()) {
    method_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_name_);
  }
  if (from.has_api_key()) {
    api_key_ = new ::CMsgWebAPIKey(*from.api_key_);
  } else {
    api_key_ = NULL;
  }
  if (from.has_request()) {
    request_ = new ::CMsgHttpRequest(*from.request_);
  } else {
    request_ = NULL;
  }
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&routing_app_id_) -
    reinterpret_cast<char*>(&version_)) + sizeof(routing_app_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgWebAPIRequest)
}

void CMsgWebAPIRequest::SharedCtor() {
  _cached_size_ = 0;
  unused_job_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  interface_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&api_key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&routing_app_id_) -
      reinterpret_cast<char*>(&api_key_)) + sizeof(routing_app_id_));
}

CMsgWebAPIRequest::~CMsgWebAPIRequest() {
  // @@protoc_insertion_point(destructor:CMsgWebAPIRequest)
  SharedDtor();
}

void CMsgWebAPIRequest::SharedDtor() {
  unused_job_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  interface_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete api_key_;
  if (this != internal_default_instance()) delete request_;
}

void CMsgWebAPIRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgWebAPIRequest::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgWebAPIRequest& CMsgWebAPIRequest::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgWebAPIRequest();
  return *internal_default_instance();
}

CMsgWebAPIRequest* CMsgWebAPIRequest::New(::google::protobuf::Arena* arena) const {
  CMsgWebAPIRequest* n = new CMsgWebAPIRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgWebAPIRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgWebAPIRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!unused_job_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*unused_job_name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!interface_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*interface_name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!method_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*method_name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(api_key_ != NULL);
      api_key_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(request_ != NULL);
      request_->Clear();
    }
  }
  if (cached_has_bits & 96u) {
    ::memset(&version_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&routing_app_id_) -
        reinterpret_cast<char*>(&version_)) + sizeof(routing_app_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgWebAPIRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgWebAPIRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string UNUSED_job_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unused_job_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->unused_job_name().data(), static_cast<int>(this->unused_job_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgWebAPIRequest.UNUSED_job_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string interface_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_interface_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->interface_name().data(), static_cast<int>(this->interface_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgWebAPIRequest.interface_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string method_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_method_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->method_name().data(), static_cast<int>(this->method_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgWebAPIRequest.method_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 version = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgWebAPIKey api_key = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_api_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgHttpRequest request = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 routing_app_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_routing_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &routing_app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgWebAPIRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgWebAPIRequest)
  return false;
#undef DO_
}

void CMsgWebAPIRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgWebAPIRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string UNUSED_job_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->unused_job_name().data(), static_cast<int>(this->unused_job_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgWebAPIRequest.UNUSED_job_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->unused_job_name(), output);
  }

  // optional string interface_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->interface_name().data(), static_cast<int>(this->interface_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgWebAPIRequest.interface_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->interface_name(), output);
  }

  // optional string method_name = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->method_name().data(), static_cast<int>(this->method_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgWebAPIRequest.method_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->method_name(), output);
  }

  // optional uint32 version = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->version(), output);
  }

  // optional .CMsgWebAPIKey api_key = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->api_key_, output);
  }

  // optional .CMsgHttpRequest request = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->request_, output);
  }

  // optional uint32 routing_app_id = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->routing_app_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgWebAPIRequest)
}

::google::protobuf::uint8* CMsgWebAPIRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgWebAPIRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string UNUSED_job_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->unused_job_name().data(), static_cast<int>(this->unused_job_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgWebAPIRequest.UNUSED_job_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->unused_job_name(), target);
  }

  // optional string interface_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->interface_name().data(), static_cast<int>(this->interface_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgWebAPIRequest.interface_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->interface_name(), target);
  }

  // optional string method_name = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->method_name().data(), static_cast<int>(this->method_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgWebAPIRequest.method_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->method_name(), target);
  }

  // optional uint32 version = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->version(), target);
  }

  // optional .CMsgWebAPIKey api_key = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->api_key_, deterministic, target);
  }

  // optional .CMsgHttpRequest request = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->request_, deterministic, target);
  }

  // optional uint32 routing_app_id = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->routing_app_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgWebAPIRequest)
  return target;
}

size_t CMsgWebAPIRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgWebAPIRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string UNUSED_job_name = 1;
    if (has_unused_job_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->unused_job_name());
    }

    // optional string interface_name = 2;
    if (has_interface_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->interface_name());
    }

    // optional string method_name = 3;
    if (has_method_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->method_name());
    }

    // optional .CMsgWebAPIKey api_key = 5;
    if (has_api_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->api_key_);
    }

    // optional .CMsgHttpRequest request = 6;
    if (has_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->request_);
    }

    // optional uint32 version = 4;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version());
    }

    // optional uint32 routing_app_id = 7;
    if (has_routing_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->routing_app_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgWebAPIRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgWebAPIRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgWebAPIRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgWebAPIRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgWebAPIRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgWebAPIRequest)
    MergeFrom(*source);
  }
}

void CMsgWebAPIRequest::MergeFrom(const CMsgWebAPIRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgWebAPIRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_unused_job_name();
      unused_job_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unused_job_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_interface_name();
      interface_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.interface_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_method_name();
      method_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_name_);
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_api_key()->::CMsgWebAPIKey::MergeFrom(from.api_key());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_request()->::CMsgHttpRequest::MergeFrom(from.request());
    }
    if (cached_has_bits & 0x00000020u) {
      version_ = from.version_;
    }
    if (cached_has_bits & 0x00000040u) {
      routing_app_id_ = from.routing_app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgWebAPIRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgWebAPIRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgWebAPIRequest::CopyFrom(const CMsgWebAPIRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgWebAPIRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgWebAPIRequest::IsInitialized() const {
  return true;
}

void CMsgWebAPIRequest::Swap(CMsgWebAPIRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgWebAPIRequest::InternalSwap(CMsgWebAPIRequest* other) {
  using std::swap;
  unused_job_name_.Swap(&other->unused_job_name_);
  interface_name_.Swap(&other->interface_name_);
  method_name_.Swap(&other->method_name_);
  swap(api_key_, other->api_key_);
  swap(request_, other->request_);
  swap(version_, other->version_);
  swap(routing_app_id_, other->routing_app_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgWebAPIRequest::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgHttpResponse_ResponseHeader::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgHttpResponse_ResponseHeader::kNameFieldNumber;
const int CMsgHttpResponse_ResponseHeader::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgHttpResponse_ResponseHeader::CMsgHttpResponse_ResponseHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgHttpResponse_ResponseHeader();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgHttpResponse.ResponseHeader)
}
CMsgHttpResponse_ResponseHeader::CMsgHttpResponse_ResponseHeader(const CMsgHttpResponse_ResponseHeader& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgHttpResponse.ResponseHeader)
}

void CMsgHttpResponse_ResponseHeader::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgHttpResponse_ResponseHeader::~CMsgHttpResponse_ResponseHeader() {
  // @@protoc_insertion_point(destructor:CMsgHttpResponse.ResponseHeader)
  SharedDtor();
}

void CMsgHttpResponse_ResponseHeader::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgHttpResponse_ResponseHeader::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgHttpResponse_ResponseHeader::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgHttpResponse_ResponseHeader& CMsgHttpResponse_ResponseHeader::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgHttpResponse_ResponseHeader();
  return *internal_default_instance();
}

CMsgHttpResponse_ResponseHeader* CMsgHttpResponse_ResponseHeader::New(::google::protobuf::Arena* arena) const {
  CMsgHttpResponse_ResponseHeader* n = new CMsgHttpResponse_ResponseHeader;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgHttpResponse_ResponseHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgHttpResponse.ResponseHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*value_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgHttpResponse_ResponseHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgHttpResponse.ResponseHeader)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgHttpResponse.ResponseHeader.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgHttpResponse.ResponseHeader.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgHttpResponse.ResponseHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgHttpResponse.ResponseHeader)
  return false;
#undef DO_
}

void CMsgHttpResponse_ResponseHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgHttpResponse.ResponseHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgHttpResponse.ResponseHeader.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgHttpResponse.ResponseHeader.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgHttpResponse.ResponseHeader)
}

::google::protobuf::uint8* CMsgHttpResponse_ResponseHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgHttpResponse.ResponseHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgHttpResponse.ResponseHeader.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgHttpResponse.ResponseHeader.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgHttpResponse.ResponseHeader)
  return target;
}

size_t CMsgHttpResponse_ResponseHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgHttpResponse.ResponseHeader)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgHttpResponse_ResponseHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgHttpResponse.ResponseHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgHttpResponse_ResponseHeader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgHttpResponse_ResponseHeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgHttpResponse.ResponseHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgHttpResponse.ResponseHeader)
    MergeFrom(*source);
  }
}

void CMsgHttpResponse_ResponseHeader::MergeFrom(const CMsgHttpResponse_ResponseHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgHttpResponse.ResponseHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void CMsgHttpResponse_ResponseHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgHttpResponse.ResponseHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgHttpResponse_ResponseHeader::CopyFrom(const CMsgHttpResponse_ResponseHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgHttpResponse.ResponseHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgHttpResponse_ResponseHeader::IsInitialized() const {
  return true;
}

void CMsgHttpResponse_ResponseHeader::Swap(CMsgHttpResponse_ResponseHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgHttpResponse_ResponseHeader::InternalSwap(CMsgHttpResponse_ResponseHeader* other) {
  using std::swap;
  name_.Swap(&other->name_);
  value_.Swap(&other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgHttpResponse_ResponseHeader::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgHttpResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgHttpResponse::kStatusCodeFieldNumber;
const int CMsgHttpResponse::kHeadersFieldNumber;
const int CMsgHttpResponse::kBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgHttpResponse::CMsgHttpResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgHttpResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgHttpResponse)
}
CMsgHttpResponse::CMsgHttpResponse(const CMsgHttpResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      headers_(from.headers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_body()) {
    body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
  }
  status_code_ = from.status_code_;
  // @@protoc_insertion_point(copy_constructor:CMsgHttpResponse)
}

void CMsgHttpResponse::SharedCtor() {
  _cached_size_ = 0;
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_code_ = 0u;
}

CMsgHttpResponse::~CMsgHttpResponse() {
  // @@protoc_insertion_point(destructor:CMsgHttpResponse)
  SharedDtor();
}

void CMsgHttpResponse::SharedDtor() {
  body_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgHttpResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgHttpResponse::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgHttpResponse& CMsgHttpResponse::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgHttpResponse();
  return *internal_default_instance();
}

CMsgHttpResponse* CMsgHttpResponse::New(::google::protobuf::Arena* arena) const {
  CMsgHttpResponse* n = new CMsgHttpResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgHttpResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgHttpResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  headers_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!body_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*body_.UnsafeRawStringPointer())->clear();
  }
  status_code_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgHttpResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgHttpResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 status_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_status_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgHttpResponse.ResponseHeader headers = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_headers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes body = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_body()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgHttpResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgHttpResponse)
  return false;
#undef DO_
}

void CMsgHttpResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgHttpResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 status_code = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->status_code(), output);
  }

  // repeated .CMsgHttpResponse.ResponseHeader headers = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->headers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->headers(static_cast<int>(i)), output);
  }

  // optional bytes body = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->body(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgHttpResponse)
}

::google::protobuf::uint8* CMsgHttpResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgHttpResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 status_code = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->status_code(), target);
  }

  // repeated .CMsgHttpResponse.ResponseHeader headers = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->headers_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->headers(static_cast<int>(i)), deterministic, target);
  }

  // optional bytes body = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->body(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgHttpResponse)
  return target;
}

size_t CMsgHttpResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgHttpResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgHttpResponse.ResponseHeader headers = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->headers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->headers(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes body = 3;
    if (has_body()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->body());
    }

    // optional uint32 status_code = 1;
    if (has_status_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->status_code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgHttpResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgHttpResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgHttpResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgHttpResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgHttpResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgHttpResponse)
    MergeFrom(*source);
  }
}

void CMsgHttpResponse::MergeFrom(const CMsgHttpResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgHttpResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  headers_.MergeFrom(from.headers_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_body();
      body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
    }
    if (cached_has_bits & 0x00000002u) {
      status_code_ = from.status_code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgHttpResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgHttpResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgHttpResponse::CopyFrom(const CMsgHttpResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgHttpResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgHttpResponse::IsInitialized() const {
  return true;
}

void CMsgHttpResponse::Swap(CMsgHttpResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgHttpResponse::InternalSwap(CMsgHttpResponse* other) {
  using std::swap;
  headers_.InternalSwap(&other->headers_);
  body_.Swap(&other->body_);
  swap(status_code_, other->status_code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgHttpResponse::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgAMFindAccounts::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgAMFindAccounts::kSearchTypeFieldNumber;
const int CMsgAMFindAccounts::kSearchStringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgAMFindAccounts::CMsgAMFindAccounts()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgAMFindAccounts();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgAMFindAccounts)
}
CMsgAMFindAccounts::CMsgAMFindAccounts(const CMsgAMFindAccounts& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  search_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_search_string()) {
    search_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.search_string_);
  }
  search_type_ = from.search_type_;
  // @@protoc_insertion_point(copy_constructor:CMsgAMFindAccounts)
}

void CMsgAMFindAccounts::SharedCtor() {
  _cached_size_ = 0;
  search_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  search_type_ = 0u;
}

CMsgAMFindAccounts::~CMsgAMFindAccounts() {
  // @@protoc_insertion_point(destructor:CMsgAMFindAccounts)
  SharedDtor();
}

void CMsgAMFindAccounts::SharedDtor() {
  search_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgAMFindAccounts::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgAMFindAccounts::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgAMFindAccounts& CMsgAMFindAccounts::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgAMFindAccounts();
  return *internal_default_instance();
}

CMsgAMFindAccounts* CMsgAMFindAccounts::New(::google::protobuf::Arena* arena) const {
  CMsgAMFindAccounts* n = new CMsgAMFindAccounts;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgAMFindAccounts::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAMFindAccounts)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!search_string_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*search_string_.UnsafeRawStringPointer())->clear();
  }
  search_type_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgAMFindAccounts::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgAMFindAccounts)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 search_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_search_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &search_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string search_string = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_search_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->search_string().data(), static_cast<int>(this->search_string().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgAMFindAccounts.search_string");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgAMFindAccounts)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgAMFindAccounts)
  return false;
#undef DO_
}

void CMsgAMFindAccounts::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgAMFindAccounts)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 search_type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->search_type(), output);
  }

  // optional string search_string = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->search_string().data(), static_cast<int>(this->search_string().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgAMFindAccounts.search_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->search_string(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgAMFindAccounts)
}

::google::protobuf::uint8* CMsgAMFindAccounts::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMFindAccounts)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 search_type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->search_type(), target);
  }

  // optional string search_string = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->search_string().data(), static_cast<int>(this->search_string().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgAMFindAccounts.search_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->search_string(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMFindAccounts)
  return target;
}

size_t CMsgAMFindAccounts::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAMFindAccounts)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string search_string = 2;
    if (has_search_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->search_string());
    }

    // optional uint32 search_type = 1;
    if (has_search_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->search_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgAMFindAccounts::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgAMFindAccounts)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgAMFindAccounts* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAMFindAccounts>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgAMFindAccounts)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgAMFindAccounts)
    MergeFrom(*source);
  }
}

void CMsgAMFindAccounts::MergeFrom(const CMsgAMFindAccounts& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgAMFindAccounts)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_search_string();
      search_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.search_string_);
    }
    if (cached_has_bits & 0x00000002u) {
      search_type_ = from.search_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgAMFindAccounts::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgAMFindAccounts)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAMFindAccounts::CopyFrom(const CMsgAMFindAccounts& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAMFindAccounts)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAMFindAccounts::IsInitialized() const {
  return true;
}

void CMsgAMFindAccounts::Swap(CMsgAMFindAccounts* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAMFindAccounts::InternalSwap(CMsgAMFindAccounts* other) {
  using std::swap;
  search_string_.Swap(&other->search_string_);
  swap(search_type_, other->search_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgAMFindAccounts::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgAMFindAccountsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgAMFindAccountsResponse::kSteamIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgAMFindAccountsResponse::CMsgAMFindAccountsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgAMFindAccountsResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgAMFindAccountsResponse)
}
CMsgAMFindAccountsResponse::CMsgAMFindAccountsResponse(const CMsgAMFindAccountsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      steam_id_(from.steam_id_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgAMFindAccountsResponse)
}

void CMsgAMFindAccountsResponse::SharedCtor() {
  _cached_size_ = 0;
}

CMsgAMFindAccountsResponse::~CMsgAMFindAccountsResponse() {
  // @@protoc_insertion_point(destructor:CMsgAMFindAccountsResponse)
  SharedDtor();
}

void CMsgAMFindAccountsResponse::SharedDtor() {
}

void CMsgAMFindAccountsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgAMFindAccountsResponse::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgAMFindAccountsResponse& CMsgAMFindAccountsResponse::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgAMFindAccountsResponse();
  return *internal_default_instance();
}

CMsgAMFindAccountsResponse* CMsgAMFindAccountsResponse::New(::google::protobuf::Arena* arena) const {
  CMsgAMFindAccountsResponse* n = new CMsgAMFindAccountsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgAMFindAccountsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAMFindAccountsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  steam_id_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgAMFindAccountsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgAMFindAccountsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed64 steam_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 9u, input, this->mutable_steam_id())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_steam_id())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgAMFindAccountsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgAMFindAccountsResponse)
  return false;
#undef DO_
}

void CMsgAMFindAccountsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgAMFindAccountsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 steam_id = 1;
  for (int i = 0, n = this->steam_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      1, this->steam_id(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgAMFindAccountsResponse)
}

::google::protobuf::uint8* CMsgAMFindAccountsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMFindAccountsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 steam_id = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFixed64ToArray(1, this->steam_id_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMFindAccountsResponse)
  return target;
}

size_t CMsgAMFindAccountsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAMFindAccountsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated fixed64 steam_id = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->steam_id_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->steam_id_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgAMFindAccountsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgAMFindAccountsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgAMFindAccountsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAMFindAccountsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgAMFindAccountsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgAMFindAccountsResponse)
    MergeFrom(*source);
  }
}

void CMsgAMFindAccountsResponse::MergeFrom(const CMsgAMFindAccountsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgAMFindAccountsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  steam_id_.MergeFrom(from.steam_id_);
}

void CMsgAMFindAccountsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgAMFindAccountsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAMFindAccountsResponse::CopyFrom(const CMsgAMFindAccountsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAMFindAccountsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAMFindAccountsResponse::IsInitialized() const {
  return true;
}

void CMsgAMFindAccountsResponse::Swap(CMsgAMFindAccountsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAMFindAccountsResponse::InternalSwap(CMsgAMFindAccountsResponse* other) {
  using std::swap;
  steam_id_.InternalSwap(&other->steam_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgAMFindAccountsResponse::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgNotifyWatchdog::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgNotifyWatchdog::kSourceFieldNumber;
const int CMsgNotifyWatchdog::kAlertTypeFieldNumber;
const int CMsgNotifyWatchdog::kAlertDestinationFieldNumber;
const int CMsgNotifyWatchdog::kCriticalFieldNumber;
const int CMsgNotifyWatchdog::kTimeFieldNumber;
const int CMsgNotifyWatchdog::kAppidFieldNumber;
const int CMsgNotifyWatchdog::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgNotifyWatchdog::CMsgNotifyWatchdog()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgNotifyWatchdog();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgNotifyWatchdog)
}
CMsgNotifyWatchdog::CMsgNotifyWatchdog(const CMsgNotifyWatchdog& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  ::memcpy(&source_, &from.source_,
    static_cast<size_t>(reinterpret_cast<char*>(&appid_) -
    reinterpret_cast<char*>(&source_)) + sizeof(appid_));
  // @@protoc_insertion_point(copy_constructor:CMsgNotifyWatchdog)
}

void CMsgNotifyWatchdog::SharedCtor() {
  _cached_size_ = 0;
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&source_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&appid_) -
      reinterpret_cast<char*>(&source_)) + sizeof(appid_));
}

CMsgNotifyWatchdog::~CMsgNotifyWatchdog() {
  // @@protoc_insertion_point(destructor:CMsgNotifyWatchdog)
  SharedDtor();
}

void CMsgNotifyWatchdog::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgNotifyWatchdog::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgNotifyWatchdog::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgNotifyWatchdog& CMsgNotifyWatchdog::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgNotifyWatchdog();
  return *internal_default_instance();
}

CMsgNotifyWatchdog* CMsgNotifyWatchdog::New(::google::protobuf::Arena* arena) const {
  CMsgNotifyWatchdog* n = new CMsgNotifyWatchdog;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgNotifyWatchdog::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgNotifyWatchdog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!text_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*text_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 126u) {
    ::memset(&source_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&appid_) -
        reinterpret_cast<char*>(&source_)) + sizeof(appid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgNotifyWatchdog::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgNotifyWatchdog)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 source = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_source();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &source_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 alert_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_alert_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &alert_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 alert_destination = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_alert_destination();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &alert_destination_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool critical = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_critical();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &critical_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 appid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string text = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgNotifyWatchdog.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgNotifyWatchdog)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgNotifyWatchdog)
  return false;
#undef DO_
}

void CMsgNotifyWatchdog::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgNotifyWatchdog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 source = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->source(), output);
  }

  // optional uint32 alert_type = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->alert_type(), output);
  }

  // optional uint32 alert_destination = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->alert_destination(), output);
  }

  // optional bool critical = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->critical(), output);
  }

  // optional uint32 time = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->time(), output);
  }

  // optional uint32 appid = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->appid(), output);
  }

  // optional string text = 7;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgNotifyWatchdog.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgNotifyWatchdog)
}

::google::protobuf::uint8* CMsgNotifyWatchdog::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgNotifyWatchdog)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 source = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->source(), target);
  }

  // optional uint32 alert_type = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->alert_type(), target);
  }

  // optional uint32 alert_destination = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->alert_destination(), target);
  }

  // optional bool critical = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->critical(), target);
  }

  // optional uint32 time = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->time(), target);
  }

  // optional uint32 appid = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->appid(), target);
  }

  // optional string text = 7;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgNotifyWatchdog.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgNotifyWatchdog)
  return target;
}

size_t CMsgNotifyWatchdog::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgNotifyWatchdog)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string text = 7;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

    // optional uint32 source = 1;
    if (has_source()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->source());
    }

    // optional uint32 alert_type = 2;
    if (has_alert_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->alert_type());
    }

    // optional uint32 alert_destination = 3;
    if (has_alert_destination()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->alert_destination());
    }

    // optional bool critical = 4;
    if (has_critical()) {
      total_size += 1 + 1;
    }

    // optional uint32 time = 5;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time());
    }

    // optional uint32 appid = 6;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgNotifyWatchdog::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgNotifyWatchdog)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgNotifyWatchdog* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgNotifyWatchdog>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgNotifyWatchdog)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgNotifyWatchdog)
    MergeFrom(*source);
  }
}

void CMsgNotifyWatchdog::MergeFrom(const CMsgNotifyWatchdog& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgNotifyWatchdog)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (cached_has_bits & 0x00000002u) {
      source_ = from.source_;
    }
    if (cached_has_bits & 0x00000004u) {
      alert_type_ = from.alert_type_;
    }
    if (cached_has_bits & 0x00000008u) {
      alert_destination_ = from.alert_destination_;
    }
    if (cached_has_bits & 0x00000010u) {
      critical_ = from.critical_;
    }
    if (cached_has_bits & 0x00000020u) {
      time_ = from.time_;
    }
    if (cached_has_bits & 0x00000040u) {
      appid_ = from.appid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgNotifyWatchdog::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgNotifyWatchdog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgNotifyWatchdog::CopyFrom(const CMsgNotifyWatchdog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgNotifyWatchdog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgNotifyWatchdog::IsInitialized() const {
  return true;
}

void CMsgNotifyWatchdog::Swap(CMsgNotifyWatchdog* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgNotifyWatchdog::InternalSwap(CMsgNotifyWatchdog* other) {
  using std::swap;
  text_.Swap(&other->text_);
  swap(source_, other->source_);
  swap(alert_type_, other->alert_type_);
  swap(alert_destination_, other->alert_destination_);
  swap(critical_, other->critical_);
  swap(time_, other->time_);
  swap(appid_, other->appid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgNotifyWatchdog::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgAMGetLicenses::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgAMGetLicenses::kSteamidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgAMGetLicenses::CMsgAMGetLicenses()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgAMGetLicenses();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgAMGetLicenses)
}
CMsgAMGetLicenses::CMsgAMGetLicenses(const CMsgAMGetLicenses& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  steamid_ = from.steamid_;
  // @@protoc_insertion_point(copy_constructor:CMsgAMGetLicenses)
}

void CMsgAMGetLicenses::SharedCtor() {
  _cached_size_ = 0;
  steamid_ = GOOGLE_ULONGLONG(0);
}

CMsgAMGetLicenses::~CMsgAMGetLicenses() {
  // @@protoc_insertion_point(destructor:CMsgAMGetLicenses)
  SharedDtor();
}

void CMsgAMGetLicenses::SharedDtor() {
}

void CMsgAMGetLicenses::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgAMGetLicenses::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgAMGetLicenses& CMsgAMGetLicenses::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgAMGetLicenses();
  return *internal_default_instance();
}

CMsgAMGetLicenses* CMsgAMGetLicenses::New(::google::protobuf::Arena* arena) const {
  CMsgAMGetLicenses* n = new CMsgAMGetLicenses;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgAMGetLicenses::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAMGetLicenses)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  steamid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgAMGetLicenses::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgAMGetLicenses)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgAMGetLicenses)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgAMGetLicenses)
  return false;
#undef DO_
}

void CMsgAMGetLicenses::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgAMGetLicenses)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgAMGetLicenses)
}

::google::protobuf::uint8* CMsgAMGetLicenses::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMGetLicenses)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMGetLicenses)
  return target;
}

size_t CMsgAMGetLicenses::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAMGetLicenses)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional fixed64 steamid = 1;
  if (has_steamid()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgAMGetLicenses::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgAMGetLicenses)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgAMGetLicenses* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAMGetLicenses>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgAMGetLicenses)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgAMGetLicenses)
    MergeFrom(*source);
  }
}

void CMsgAMGetLicenses::MergeFrom(const CMsgAMGetLicenses& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgAMGetLicenses)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_steamid()) {
    set_steamid(from.steamid());
  }
}

void CMsgAMGetLicenses::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgAMGetLicenses)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAMGetLicenses::CopyFrom(const CMsgAMGetLicenses& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAMGetLicenses)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAMGetLicenses::IsInitialized() const {
  return true;
}

void CMsgAMGetLicenses::Swap(CMsgAMGetLicenses* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAMGetLicenses::InternalSwap(CMsgAMGetLicenses* other) {
  using std::swap;
  swap(steamid_, other->steamid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgAMGetLicenses::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgPackageLicense::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgPackageLicense::kPackageIdFieldNumber;
const int CMsgPackageLicense::kTimeCreatedFieldNumber;
const int CMsgPackageLicense::kOwnerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgPackageLicense::CMsgPackageLicense()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgPackageLicense();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgPackageLicense)
}
CMsgPackageLicense::CMsgPackageLicense(const CMsgPackageLicense& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&package_id_, &from.package_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&owner_id_) -
    reinterpret_cast<char*>(&package_id_)) + sizeof(owner_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgPackageLicense)
}

void CMsgPackageLicense::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&package_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&owner_id_) -
      reinterpret_cast<char*>(&package_id_)) + sizeof(owner_id_));
}

CMsgPackageLicense::~CMsgPackageLicense() {
  // @@protoc_insertion_point(destructor:CMsgPackageLicense)
  SharedDtor();
}

void CMsgPackageLicense::SharedDtor() {
}

void CMsgPackageLicense::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgPackageLicense::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgPackageLicense& CMsgPackageLicense::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgPackageLicense();
  return *internal_default_instance();
}

CMsgPackageLicense* CMsgPackageLicense::New(::google::protobuf::Arena* arena) const {
  CMsgPackageLicense* n = new CMsgPackageLicense;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgPackageLicense::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgPackageLicense)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&package_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&owner_id_) -
        reinterpret_cast<char*>(&package_id_)) + sizeof(owner_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgPackageLicense::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgPackageLicense)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 package_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_package_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &package_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 time_created = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_time_created();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_created_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 owner_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_owner_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &owner_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgPackageLicense)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgPackageLicense)
  return false;
#undef DO_
}

void CMsgPackageLicense::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgPackageLicense)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 package_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->package_id(), output);
  }

  // optional uint32 time_created = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->time_created(), output);
  }

  // optional uint32 owner_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->owner_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgPackageLicense)
}

::google::protobuf::uint8* CMsgPackageLicense::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgPackageLicense)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 package_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->package_id(), target);
  }

  // optional uint32 time_created = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->time_created(), target);
  }

  // optional uint32 owner_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->owner_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgPackageLicense)
  return target;
}

size_t CMsgPackageLicense::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgPackageLicense)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 package_id = 1;
    if (has_package_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->package_id());
    }

    // optional uint32 time_created = 2;
    if (has_time_created()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time_created());
    }

    // optional uint32 owner_id = 3;
    if (has_owner_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->owner_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgPackageLicense::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgPackageLicense)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgPackageLicense* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgPackageLicense>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgPackageLicense)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgPackageLicense)
    MergeFrom(*source);
  }
}

void CMsgPackageLicense::MergeFrom(const CMsgPackageLicense& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgPackageLicense)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      package_id_ = from.package_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      time_created_ = from.time_created_;
    }
    if (cached_has_bits & 0x00000004u) {
      owner_id_ = from.owner_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgPackageLicense::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgPackageLicense)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgPackageLicense::CopyFrom(const CMsgPackageLicense& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgPackageLicense)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgPackageLicense::IsInitialized() const {
  return true;
}

void CMsgPackageLicense::Swap(CMsgPackageLicense* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgPackageLicense::InternalSwap(CMsgPackageLicense* other) {
  using std::swap;
  swap(package_id_, other->package_id_);
  swap(time_created_, other->time_created_);
  swap(owner_id_, other->owner_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgPackageLicense::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgAMGetLicensesResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgAMGetLicensesResponse::kLicenseFieldNumber;
const int CMsgAMGetLicensesResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgAMGetLicensesResponse::CMsgAMGetLicensesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgAMGetLicensesResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgAMGetLicensesResponse)
}
CMsgAMGetLicensesResponse::CMsgAMGetLicensesResponse(const CMsgAMGetLicensesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      license_(from.license_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgAMGetLicensesResponse)
}

void CMsgAMGetLicensesResponse::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0u;
}

CMsgAMGetLicensesResponse::~CMsgAMGetLicensesResponse() {
  // @@protoc_insertion_point(destructor:CMsgAMGetLicensesResponse)
  SharedDtor();
}

void CMsgAMGetLicensesResponse::SharedDtor() {
}

void CMsgAMGetLicensesResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgAMGetLicensesResponse::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgAMGetLicensesResponse& CMsgAMGetLicensesResponse::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgAMGetLicensesResponse();
  return *internal_default_instance();
}

CMsgAMGetLicensesResponse* CMsgAMGetLicensesResponse::New(::google::protobuf::Arena* arena) const {
  CMsgAMGetLicensesResponse* n = new CMsgAMGetLicensesResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgAMGetLicensesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAMGetLicensesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  license_.Clear();
  result_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgAMGetLicensesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgAMGetLicensesResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgPackageLicense license = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_license()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 result = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgAMGetLicensesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgAMGetLicensesResponse)
  return false;
#undef DO_
}

void CMsgAMGetLicensesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgAMGetLicensesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgPackageLicense license = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->license_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->license(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 result = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgAMGetLicensesResponse)
}

::google::protobuf::uint8* CMsgAMGetLicensesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMGetLicensesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgPackageLicense license = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->license_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->license(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 result = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMGetLicensesResponse)
  return target;
}

size_t CMsgAMGetLicensesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAMGetLicensesResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgPackageLicense license = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->license_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->license(static_cast<int>(i)));
    }
  }

  // optional uint32 result = 2;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgAMGetLicensesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgAMGetLicensesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgAMGetLicensesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAMGetLicensesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgAMGetLicensesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgAMGetLicensesResponse)
    MergeFrom(*source);
  }
}

void CMsgAMGetLicensesResponse::MergeFrom(const CMsgAMGetLicensesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgAMGetLicensesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  license_.MergeFrom(from.license_);
  if (from.has_result()) {
    set_result(from.result());
  }
}

void CMsgAMGetLicensesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgAMGetLicensesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAMGetLicensesResponse::CopyFrom(const CMsgAMGetLicensesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAMGetLicensesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAMGetLicensesResponse::IsInitialized() const {
  return true;
}

void CMsgAMGetLicensesResponse::Swap(CMsgAMGetLicensesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAMGetLicensesResponse::InternalSwap(CMsgAMGetLicensesResponse* other) {
  using std::swap;
  license_.InternalSwap(&other->license_);
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgAMGetLicensesResponse::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgAMGetUserGameStats::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgAMGetUserGameStats::kSteamIdFieldNumber;
const int CMsgAMGetUserGameStats::kGameIdFieldNumber;
const int CMsgAMGetUserGameStats::kStatsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgAMGetUserGameStats::CMsgAMGetUserGameStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgAMGetUserGameStats();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgAMGetUserGameStats)
}
CMsgAMGetUserGameStats::CMsgAMGetUserGameStats(const CMsgAMGetUserGameStats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      stats_(from.stats_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steam_id_, &from.steam_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&game_id_) -
    reinterpret_cast<char*>(&steam_id_)) + sizeof(game_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgAMGetUserGameStats)
}

void CMsgAMGetUserGameStats::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&steam_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&game_id_) -
      reinterpret_cast<char*>(&steam_id_)) + sizeof(game_id_));
}

CMsgAMGetUserGameStats::~CMsgAMGetUserGameStats() {
  // @@protoc_insertion_point(destructor:CMsgAMGetUserGameStats)
  SharedDtor();
}

void CMsgAMGetUserGameStats::SharedDtor() {
}

void CMsgAMGetUserGameStats::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgAMGetUserGameStats::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgAMGetUserGameStats& CMsgAMGetUserGameStats::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgAMGetUserGameStats();
  return *internal_default_instance();
}

CMsgAMGetUserGameStats* CMsgAMGetUserGameStats::New(::google::protobuf::Arena* arena) const {
  CMsgAMGetUserGameStats* n = new CMsgAMGetUserGameStats;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgAMGetUserGameStats::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAMGetUserGameStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stats_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&steam_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&game_id_) -
        reinterpret_cast<char*>(&steam_id_)) + sizeof(game_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgAMGetUserGameStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgAMGetUserGameStats)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 game_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_game_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &game_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 stats = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24u, input, this->mutable_stats())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_stats())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgAMGetUserGameStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgAMGetUserGameStats)
  return false;
#undef DO_
}

void CMsgAMGetUserGameStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgAMGetUserGameStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id(), output);
  }

  // optional fixed64 game_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->game_id(), output);
  }

  // repeated uint32 stats = 3;
  for (int i = 0, n = this->stats_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->stats(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgAMGetUserGameStats)
}

::google::protobuf::uint8* CMsgAMGetUserGameStats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMGetUserGameStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id(), target);
  }

  // optional fixed64 game_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->game_id(), target);
  }

  // repeated uint32 stats = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(3, this->stats_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMGetUserGameStats)
  return target;
}

size_t CMsgAMGetUserGameStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAMGetUserGameStats)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 stats = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->stats_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->stats_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 steam_id = 1;
    if (has_steam_id()) {
      total_size += 1 + 8;
    }

    // optional fixed64 game_id = 2;
    if (has_game_id()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgAMGetUserGameStats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgAMGetUserGameStats)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgAMGetUserGameStats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAMGetUserGameStats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgAMGetUserGameStats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgAMGetUserGameStats)
    MergeFrom(*source);
  }
}

void CMsgAMGetUserGameStats::MergeFrom(const CMsgAMGetUserGameStats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgAMGetUserGameStats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stats_.MergeFrom(from.stats_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      steam_id_ = from.steam_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      game_id_ = from.game_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgAMGetUserGameStats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgAMGetUserGameStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAMGetUserGameStats::CopyFrom(const CMsgAMGetUserGameStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAMGetUserGameStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAMGetUserGameStats::IsInitialized() const {
  return true;
}

void CMsgAMGetUserGameStats::Swap(CMsgAMGetUserGameStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAMGetUserGameStats::InternalSwap(CMsgAMGetUserGameStats* other) {
  using std::swap;
  stats_.InternalSwap(&other->stats_);
  swap(steam_id_, other->steam_id_);
  swap(game_id_, other->game_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgAMGetUserGameStats::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgAMGetUserGameStatsResponse_Stats::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgAMGetUserGameStatsResponse_Stats::kStatIdFieldNumber;
const int CMsgAMGetUserGameStatsResponse_Stats::kStatValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgAMGetUserGameStatsResponse_Stats::CMsgAMGetUserGameStatsResponse_Stats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgAMGetUserGameStatsResponse_Stats();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgAMGetUserGameStatsResponse.Stats)
}
CMsgAMGetUserGameStatsResponse_Stats::CMsgAMGetUserGameStatsResponse_Stats(const CMsgAMGetUserGameStatsResponse_Stats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&stat_id_, &from.stat_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&stat_value_) -
    reinterpret_cast<char*>(&stat_id_)) + sizeof(stat_value_));
  // @@protoc_insertion_point(copy_constructor:CMsgAMGetUserGameStatsResponse.Stats)
}

void CMsgAMGetUserGameStatsResponse_Stats::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&stat_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stat_value_) -
      reinterpret_cast<char*>(&stat_id_)) + sizeof(stat_value_));
}

CMsgAMGetUserGameStatsResponse_Stats::~CMsgAMGetUserGameStatsResponse_Stats() {
  // @@protoc_insertion_point(destructor:CMsgAMGetUserGameStatsResponse.Stats)
  SharedDtor();
}

void CMsgAMGetUserGameStatsResponse_Stats::SharedDtor() {
}

void CMsgAMGetUserGameStatsResponse_Stats::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgAMGetUserGameStatsResponse_Stats::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgAMGetUserGameStatsResponse_Stats& CMsgAMGetUserGameStatsResponse_Stats::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgAMGetUserGameStatsResponse_Stats();
  return *internal_default_instance();
}

CMsgAMGetUserGameStatsResponse_Stats* CMsgAMGetUserGameStatsResponse_Stats::New(::google::protobuf::Arena* arena) const {
  CMsgAMGetUserGameStatsResponse_Stats* n = new CMsgAMGetUserGameStatsResponse_Stats;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgAMGetUserGameStatsResponse_Stats::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAMGetUserGameStatsResponse.Stats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&stat_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&stat_value_) -
        reinterpret_cast<char*>(&stat_id_)) + sizeof(stat_value_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgAMGetUserGameStatsResponse_Stats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgAMGetUserGameStatsResponse.Stats)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 stat_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_stat_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stat_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 stat_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_stat_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stat_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgAMGetUserGameStatsResponse.Stats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgAMGetUserGameStatsResponse.Stats)
  return false;
#undef DO_
}

void CMsgAMGetUserGameStatsResponse_Stats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgAMGetUserGameStatsResponse.Stats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 stat_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->stat_id(), output);
  }

  // optional uint32 stat_value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->stat_value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgAMGetUserGameStatsResponse.Stats)
}

::google::protobuf::uint8* CMsgAMGetUserGameStatsResponse_Stats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMGetUserGameStatsResponse.Stats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 stat_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->stat_id(), target);
  }

  // optional uint32 stat_value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->stat_value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMGetUserGameStatsResponse.Stats)
  return target;
}

size_t CMsgAMGetUserGameStatsResponse_Stats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAMGetUserGameStatsResponse.Stats)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 stat_id = 1;
    if (has_stat_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->stat_id());
    }

    // optional uint32 stat_value = 2;
    if (has_stat_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->stat_value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgAMGetUserGameStatsResponse_Stats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgAMGetUserGameStatsResponse.Stats)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgAMGetUserGameStatsResponse_Stats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAMGetUserGameStatsResponse_Stats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgAMGetUserGameStatsResponse.Stats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgAMGetUserGameStatsResponse.Stats)
    MergeFrom(*source);
  }
}

void CMsgAMGetUserGameStatsResponse_Stats::MergeFrom(const CMsgAMGetUserGameStatsResponse_Stats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgAMGetUserGameStatsResponse.Stats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      stat_id_ = from.stat_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      stat_value_ = from.stat_value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgAMGetUserGameStatsResponse_Stats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgAMGetUserGameStatsResponse.Stats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAMGetUserGameStatsResponse_Stats::CopyFrom(const CMsgAMGetUserGameStatsResponse_Stats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAMGetUserGameStatsResponse.Stats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAMGetUserGameStatsResponse_Stats::IsInitialized() const {
  return true;
}

void CMsgAMGetUserGameStatsResponse_Stats::Swap(CMsgAMGetUserGameStatsResponse_Stats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAMGetUserGameStatsResponse_Stats::InternalSwap(CMsgAMGetUserGameStatsResponse_Stats* other) {
  using std::swap;
  swap(stat_id_, other->stat_id_);
  swap(stat_value_, other->stat_value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgAMGetUserGameStatsResponse_Stats::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgAMGetUserGameStatsResponse_Achievement_Blocks::kAchievementIdFieldNumber;
const int CMsgAMGetUserGameStatsResponse_Achievement_Blocks::kAchievementBitIdFieldNumber;
const int CMsgAMGetUserGameStatsResponse_Achievement_Blocks::kUnlockTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgAMGetUserGameStatsResponse_Achievement_Blocks::CMsgAMGetUserGameStatsResponse_Achievement_Blocks()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgAMGetUserGameStatsResponse_Achievement_Blocks();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgAMGetUserGameStatsResponse.Achievement_Blocks)
}
CMsgAMGetUserGameStatsResponse_Achievement_Blocks::CMsgAMGetUserGameStatsResponse_Achievement_Blocks(const CMsgAMGetUserGameStatsResponse_Achievement_Blocks& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&achievement_id_, &from.achievement_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&unlock_time_) -
    reinterpret_cast<char*>(&achievement_id_)) + sizeof(unlock_time_));
  // @@protoc_insertion_point(copy_constructor:CMsgAMGetUserGameStatsResponse.Achievement_Blocks)
}

void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&achievement_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unlock_time_) -
      reinterpret_cast<char*>(&achievement_id_)) + sizeof(unlock_time_));
}

CMsgAMGetUserGameStatsResponse_Achievement_Blocks::~CMsgAMGetUserGameStatsResponse_Achievement_Blocks() {
  // @@protoc_insertion_point(destructor:CMsgAMGetUserGameStatsResponse.Achievement_Blocks)
  SharedDtor();
}

void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::SharedDtor() {
}

void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgAMGetUserGameStatsResponse_Achievement_Blocks::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgAMGetUserGameStatsResponse_Achievement_Blocks& CMsgAMGetUserGameStatsResponse_Achievement_Blocks::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgAMGetUserGameStatsResponse_Achievement_Blocks();
  return *internal_default_instance();
}

CMsgAMGetUserGameStatsResponse_Achievement_Blocks* CMsgAMGetUserGameStatsResponse_Achievement_Blocks::New(::google::protobuf::Arena* arena) const {
  CMsgAMGetUserGameStatsResponse_Achievement_Blocks* n = new CMsgAMGetUserGameStatsResponse_Achievement_Blocks;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAMGetUserGameStatsResponse.Achievement_Blocks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&achievement_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&unlock_time_) -
        reinterpret_cast<char*>(&achievement_id_)) + sizeof(unlock_time_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgAMGetUserGameStatsResponse_Achievement_Blocks::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgAMGetUserGameStatsResponse.Achievement_Blocks)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 achievement_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_achievement_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &achievement_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 achievement_bit_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_achievement_bit_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &achievement_bit_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 unlock_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_unlock_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &unlock_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgAMGetUserGameStatsResponse.Achievement_Blocks)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgAMGetUserGameStatsResponse.Achievement_Blocks)
  return false;
#undef DO_
}

void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgAMGetUserGameStatsResponse.Achievement_Blocks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 achievement_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->achievement_id(), output);
  }

  // optional uint32 achievement_bit_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->achievement_bit_id(), output);
  }

  // optional fixed32 unlock_time = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(3, this->unlock_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgAMGetUserGameStatsResponse.Achievement_Blocks)
}

::google::protobuf::uint8* CMsgAMGetUserGameStatsResponse_Achievement_Blocks::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMGetUserGameStatsResponse.Achievement_Blocks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 achievement_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->achievement_id(), target);
  }

  // optional uint32 achievement_bit_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->achievement_bit_id(), target);
  }

  // optional fixed32 unlock_time = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(3, this->unlock_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMGetUserGameStatsResponse.Achievement_Blocks)
  return target;
}

size_t CMsgAMGetUserGameStatsResponse_Achievement_Blocks::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAMGetUserGameStatsResponse.Achievement_Blocks)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 achievement_id = 1;
    if (has_achievement_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->achievement_id());
    }

    // optional uint32 achievement_bit_id = 2;
    if (has_achievement_bit_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->achievement_bit_id());
    }

    // optional fixed32 unlock_time = 3;
    if (has_unlock_time()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgAMGetUserGameStatsResponse.Achievement_Blocks)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgAMGetUserGameStatsResponse_Achievement_Blocks* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAMGetUserGameStatsResponse_Achievement_Blocks>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgAMGetUserGameStatsResponse.Achievement_Blocks)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgAMGetUserGameStatsResponse.Achievement_Blocks)
    MergeFrom(*source);
  }
}

void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::MergeFrom(const CMsgAMGetUserGameStatsResponse_Achievement_Blocks& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgAMGetUserGameStatsResponse.Achievement_Blocks)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      achievement_id_ = from.achievement_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      achievement_bit_id_ = from.achievement_bit_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      unlock_time_ = from.unlock_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgAMGetUserGameStatsResponse.Achievement_Blocks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::CopyFrom(const CMsgAMGetUserGameStatsResponse_Achievement_Blocks& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAMGetUserGameStatsResponse.Achievement_Blocks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAMGetUserGameStatsResponse_Achievement_Blocks::IsInitialized() const {
  return true;
}

void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::Swap(CMsgAMGetUserGameStatsResponse_Achievement_Blocks* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAMGetUserGameStatsResponse_Achievement_Blocks::InternalSwap(CMsgAMGetUserGameStatsResponse_Achievement_Blocks* other) {
  using std::swap;
  swap(achievement_id_, other->achievement_id_);
  swap(achievement_bit_id_, other->achievement_bit_id_);
  swap(unlock_time_, other->unlock_time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgAMGetUserGameStatsResponse_Achievement_Blocks::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgAMGetUserGameStatsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgAMGetUserGameStatsResponse::kSteamIdFieldNumber;
const int CMsgAMGetUserGameStatsResponse::kGameIdFieldNumber;
const int CMsgAMGetUserGameStatsResponse::kEresultFieldNumber;
const int CMsgAMGetUserGameStatsResponse::kStatsFieldNumber;
const int CMsgAMGetUserGameStatsResponse::kAchievementBlocksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgAMGetUserGameStatsResponse::CMsgAMGetUserGameStatsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgAMGetUserGameStatsResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgAMGetUserGameStatsResponse)
}
CMsgAMGetUserGameStatsResponse::CMsgAMGetUserGameStatsResponse(const CMsgAMGetUserGameStatsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      stats_(from.stats_),
      achievement_blocks_(from.achievement_blocks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steam_id_, &from.steam_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&steam_id_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgAMGetUserGameStatsResponse)
}

void CMsgAMGetUserGameStatsResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&steam_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&game_id_) -
      reinterpret_cast<char*>(&steam_id_)) + sizeof(game_id_));
  eresult_ = 2;
}

CMsgAMGetUserGameStatsResponse::~CMsgAMGetUserGameStatsResponse() {
  // @@protoc_insertion_point(destructor:CMsgAMGetUserGameStatsResponse)
  SharedDtor();
}

void CMsgAMGetUserGameStatsResponse::SharedDtor() {
}

void CMsgAMGetUserGameStatsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgAMGetUserGameStatsResponse::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgAMGetUserGameStatsResponse& CMsgAMGetUserGameStatsResponse::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgAMGetUserGameStatsResponse();
  return *internal_default_instance();
}

CMsgAMGetUserGameStatsResponse* CMsgAMGetUserGameStatsResponse::New(::google::protobuf::Arena* arena) const {
  CMsgAMGetUserGameStatsResponse* n = new CMsgAMGetUserGameStatsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgAMGetUserGameStatsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAMGetUserGameStatsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stats_.Clear();
  achievement_blocks_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&steam_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&game_id_) -
        reinterpret_cast<char*>(&steam_id_)) + sizeof(game_id_));
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgAMGetUserGameStatsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgAMGetUserGameStatsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 game_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_game_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &game_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 eresult = 3 [default = 2];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgAMGetUserGameStatsResponse.Stats stats = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_stats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgAMGetUserGameStatsResponse.Achievement_Blocks achievement_blocks = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_achievement_blocks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgAMGetUserGameStatsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgAMGetUserGameStatsResponse)
  return false;
#undef DO_
}

void CMsgAMGetUserGameStatsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgAMGetUserGameStatsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id(), output);
  }

  // optional fixed64 game_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->game_id(), output);
  }

  // optional int32 eresult = 3 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->eresult(), output);
  }

  // repeated .CMsgAMGetUserGameStatsResponse.Stats stats = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stats_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->stats(static_cast<int>(i)), output);
  }

  // repeated .CMsgAMGetUserGameStatsResponse.Achievement_Blocks achievement_blocks = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->achievement_blocks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->achievement_blocks(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgAMGetUserGameStatsResponse)
}

::google::protobuf::uint8* CMsgAMGetUserGameStatsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMGetUserGameStatsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id(), target);
  }

  // optional fixed64 game_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->game_id(), target);
  }

  // optional int32 eresult = 3 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->eresult(), target);
  }

  // repeated .CMsgAMGetUserGameStatsResponse.Stats stats = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stats_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->stats(static_cast<int>(i)), deterministic, target);
  }

  // repeated .CMsgAMGetUserGameStatsResponse.Achievement_Blocks achievement_blocks = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->achievement_blocks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->achievement_blocks(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMGetUserGameStatsResponse)
  return target;
}

size_t CMsgAMGetUserGameStatsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAMGetUserGameStatsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgAMGetUserGameStatsResponse.Stats stats = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->stats_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stats(static_cast<int>(i)));
    }
  }

  // repeated .CMsgAMGetUserGameStatsResponse.Achievement_Blocks achievement_blocks = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->achievement_blocks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->achievement_blocks(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional fixed64 steam_id = 1;
    if (has_steam_id()) {
      total_size += 1 + 8;
    }

    // optional fixed64 game_id = 2;
    if (has_game_id()) {
      total_size += 1 + 8;
    }

    // optional int32 eresult = 3 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgAMGetUserGameStatsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgAMGetUserGameStatsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgAMGetUserGameStatsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAMGetUserGameStatsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgAMGetUserGameStatsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgAMGetUserGameStatsResponse)
    MergeFrom(*source);
  }
}

void CMsgAMGetUserGameStatsResponse::MergeFrom(const CMsgAMGetUserGameStatsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgAMGetUserGameStatsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stats_.MergeFrom(from.stats_);
  achievement_blocks_.MergeFrom(from.achievement_blocks_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      steam_id_ = from.steam_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      game_id_ = from.game_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgAMGetUserGameStatsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgAMGetUserGameStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAMGetUserGameStatsResponse::CopyFrom(const CMsgAMGetUserGameStatsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAMGetUserGameStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAMGetUserGameStatsResponse::IsInitialized() const {
  return true;
}

void CMsgAMGetUserGameStatsResponse::Swap(CMsgAMGetUserGameStatsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAMGetUserGameStatsResponse::InternalSwap(CMsgAMGetUserGameStatsResponse* other) {
  using std::swap;
  stats_.InternalSwap(&other->stats_);
  achievement_blocks_.InternalSwap(&other->achievement_blocks_);
  swap(steam_id_, other->steam_id_);
  swap(game_id_, other->game_id_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgAMGetUserGameStatsResponse::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCGetCommandList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCGetCommandList::kAppIdFieldNumber;
const int CMsgGCGetCommandList::kCommandPrefixFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCGetCommandList::CMsgGCGetCommandList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCGetCommandList();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCGetCommandList)
}
CMsgGCGetCommandList::CMsgGCGetCommandList(const CMsgGCGetCommandList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  command_prefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_command_prefix()) {
    command_prefix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_prefix_);
  }
  app_id_ = from.app_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCGetCommandList)
}

void CMsgGCGetCommandList::SharedCtor() {
  _cached_size_ = 0;
  command_prefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_id_ = 0u;
}

CMsgGCGetCommandList::~CMsgGCGetCommandList() {
  // @@protoc_insertion_point(destructor:CMsgGCGetCommandList)
  SharedDtor();
}

void CMsgGCGetCommandList::SharedDtor() {
  command_prefix_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGCGetCommandList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCGetCommandList::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCGetCommandList& CMsgGCGetCommandList::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCGetCommandList();
  return *internal_default_instance();
}

CMsgGCGetCommandList* CMsgGCGetCommandList::New(::google::protobuf::Arena* arena) const {
  CMsgGCGetCommandList* n = new CMsgGCGetCommandList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCGetCommandList::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCGetCommandList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!command_prefix_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*command_prefix_.UnsafeRawStringPointer())->clear();
  }
  app_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCGetCommandList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCGetCommandList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string command_prefix = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_command_prefix()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->command_prefix().data(), static_cast<int>(this->command_prefix().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGCGetCommandList.command_prefix");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCGetCommandList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCGetCommandList)
  return false;
#undef DO_
}

void CMsgGCGetCommandList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCGetCommandList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional string command_prefix = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->command_prefix().data(), static_cast<int>(this->command_prefix().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCGetCommandList.command_prefix");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->command_prefix(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCGetCommandList)
}

::google::protobuf::uint8* CMsgGCGetCommandList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCGetCommandList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional string command_prefix = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->command_prefix().data(), static_cast<int>(this->command_prefix().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCGetCommandList.command_prefix");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->command_prefix(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCGetCommandList)
  return target;
}

size_t CMsgGCGetCommandList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCGetCommandList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string command_prefix = 2;
    if (has_command_prefix()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->command_prefix());
    }

    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCGetCommandList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCGetCommandList)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCGetCommandList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCGetCommandList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCGetCommandList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCGetCommandList)
    MergeFrom(*source);
  }
}

void CMsgGCGetCommandList::MergeFrom(const CMsgGCGetCommandList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCGetCommandList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_command_prefix();
      command_prefix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_prefix_);
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCGetCommandList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCGetCommandList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCGetCommandList::CopyFrom(const CMsgGCGetCommandList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCGetCommandList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCGetCommandList::IsInitialized() const {
  return true;
}

void CMsgGCGetCommandList::Swap(CMsgGCGetCommandList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCGetCommandList::InternalSwap(CMsgGCGetCommandList* other) {
  using std::swap;
  command_prefix_.Swap(&other->command_prefix_);
  swap(app_id_, other->app_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCGetCommandList::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCGetCommandListResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCGetCommandListResponse::kCommandNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCGetCommandListResponse::CMsgGCGetCommandListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCGetCommandListResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCGetCommandListResponse)
}
CMsgGCGetCommandListResponse::CMsgGCGetCommandListResponse(const CMsgGCGetCommandListResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      command_name_(from.command_name_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgGCGetCommandListResponse)
}

void CMsgGCGetCommandListResponse::SharedCtor() {
  _cached_size_ = 0;
}

CMsgGCGetCommandListResponse::~CMsgGCGetCommandListResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCGetCommandListResponse)
  SharedDtor();
}

void CMsgGCGetCommandListResponse::SharedDtor() {
}

void CMsgGCGetCommandListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCGetCommandListResponse::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCGetCommandListResponse& CMsgGCGetCommandListResponse::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCGetCommandListResponse();
  return *internal_default_instance();
}

CMsgGCGetCommandListResponse* CMsgGCGetCommandListResponse::New(::google::protobuf::Arena* arena) const {
  CMsgGCGetCommandListResponse* n = new CMsgGCGetCommandListResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCGetCommandListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCGetCommandListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_name_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCGetCommandListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCGetCommandListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string command_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_command_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->command_name(this->command_name_size() - 1).data(),
            static_cast<int>(this->command_name(this->command_name_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGCGetCommandListResponse.command_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCGetCommandListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCGetCommandListResponse)
  return false;
#undef DO_
}

void CMsgGCGetCommandListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCGetCommandListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string command_name = 1;
  for (int i = 0, n = this->command_name_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->command_name(i).data(), static_cast<int>(this->command_name(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCGetCommandListResponse.command_name");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->command_name(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCGetCommandListResponse)
}

::google::protobuf::uint8* CMsgGCGetCommandListResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCGetCommandListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string command_name = 1;
  for (int i = 0, n = this->command_name_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->command_name(i).data(), static_cast<int>(this->command_name(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCGetCommandListResponse.command_name");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->command_name(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCGetCommandListResponse)
  return target;
}

size_t CMsgGCGetCommandListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCGetCommandListResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string command_name = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->command_name_size());
  for (int i = 0, n = this->command_name_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->command_name(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCGetCommandListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCGetCommandListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCGetCommandListResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCGetCommandListResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCGetCommandListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCGetCommandListResponse)
    MergeFrom(*source);
  }
}

void CMsgGCGetCommandListResponse::MergeFrom(const CMsgGCGetCommandListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCGetCommandListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  command_name_.MergeFrom(from.command_name_);
}

void CMsgGCGetCommandListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCGetCommandListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCGetCommandListResponse::CopyFrom(const CMsgGCGetCommandListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCGetCommandListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCGetCommandListResponse::IsInitialized() const {
  return true;
}

void CMsgGCGetCommandListResponse::Swap(CMsgGCGetCommandListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCGetCommandListResponse::InternalSwap(CMsgGCGetCommandListResponse* other) {
  using std::swap;
  command_name_.InternalSwap(&other->command_name_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCGetCommandListResponse::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CGCMsgMemCachedGet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCMsgMemCachedGet::kKeysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCMsgMemCachedGet::CGCMsgMemCachedGet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCGCMsgMemCachedGet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCMsgMemCachedGet)
}
CGCMsgMemCachedGet::CGCMsgMemCachedGet(const CGCMsgMemCachedGet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      keys_(from.keys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CGCMsgMemCachedGet)
}

void CGCMsgMemCachedGet::SharedCtor() {
  _cached_size_ = 0;
}

CGCMsgMemCachedGet::~CGCMsgMemCachedGet() {
  // @@protoc_insertion_point(destructor:CGCMsgMemCachedGet)
  SharedDtor();
}

void CGCMsgMemCachedGet::SharedDtor() {
}

void CGCMsgMemCachedGet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCMsgMemCachedGet::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CGCMsgMemCachedGet& CGCMsgMemCachedGet::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCGCMsgMemCachedGet();
  return *internal_default_instance();
}

CGCMsgMemCachedGet* CGCMsgMemCachedGet::New(::google::protobuf::Arena* arena) const {
  CGCMsgMemCachedGet* n = new CGCMsgMemCachedGet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCMsgMemCachedGet::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCMsgMemCachedGet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CGCMsgMemCachedGet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCMsgMemCachedGet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string keys = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_keys()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->keys(this->keys_size() - 1).data(),
            static_cast<int>(this->keys(this->keys_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CGCMsgMemCachedGet.keys");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCMsgMemCachedGet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCMsgMemCachedGet)
  return false;
#undef DO_
}

void CGCMsgMemCachedGet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCMsgMemCachedGet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string keys = 1;
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->keys(i).data(), static_cast<int>(this->keys(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CGCMsgMemCachedGet.keys");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->keys(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCMsgMemCachedGet)
}

::google::protobuf::uint8* CGCMsgMemCachedGet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CGCMsgMemCachedGet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string keys = 1;
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->keys(i).data(), static_cast<int>(this->keys(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CGCMsgMemCachedGet.keys");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->keys(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCMsgMemCachedGet)
  return target;
}

size_t CGCMsgMemCachedGet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCMsgMemCachedGet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string keys = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->keys_size());
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->keys(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCMsgMemCachedGet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CGCMsgMemCachedGet)
  GOOGLE_DCHECK_NE(&from, this);
  const CGCMsgMemCachedGet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCMsgMemCachedGet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CGCMsgMemCachedGet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CGCMsgMemCachedGet)
    MergeFrom(*source);
  }
}

void CGCMsgMemCachedGet::MergeFrom(const CGCMsgMemCachedGet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CGCMsgMemCachedGet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
}

void CGCMsgMemCachedGet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CGCMsgMemCachedGet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCMsgMemCachedGet::CopyFrom(const CGCMsgMemCachedGet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCMsgMemCachedGet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCMsgMemCachedGet::IsInitialized() const {
  return true;
}

void CGCMsgMemCachedGet::Swap(CGCMsgMemCachedGet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCMsgMemCachedGet::InternalSwap(CGCMsgMemCachedGet* other) {
  using std::swap;
  keys_.InternalSwap(&other->keys_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCMsgMemCachedGet::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CGCMsgMemCachedGetResponse_ValueTag::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCMsgMemCachedGetResponse_ValueTag::kFoundFieldNumber;
const int CGCMsgMemCachedGetResponse_ValueTag::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCMsgMemCachedGetResponse_ValueTag::CGCMsgMemCachedGetResponse_ValueTag()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCGCMsgMemCachedGetResponse_ValueTag();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCMsgMemCachedGetResponse.ValueTag)
}
CGCMsgMemCachedGetResponse_ValueTag::CGCMsgMemCachedGetResponse_ValueTag(const CGCMsgMemCachedGetResponse_ValueTag& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  found_ = from.found_;
  // @@protoc_insertion_point(copy_constructor:CGCMsgMemCachedGetResponse.ValueTag)
}

void CGCMsgMemCachedGetResponse_ValueTag::SharedCtor() {
  _cached_size_ = 0;
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  found_ = false;
}

CGCMsgMemCachedGetResponse_ValueTag::~CGCMsgMemCachedGetResponse_ValueTag() {
  // @@protoc_insertion_point(destructor:CGCMsgMemCachedGetResponse.ValueTag)
  SharedDtor();
}

void CGCMsgMemCachedGetResponse_ValueTag::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CGCMsgMemCachedGetResponse_ValueTag::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCMsgMemCachedGetResponse_ValueTag::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CGCMsgMemCachedGetResponse_ValueTag& CGCMsgMemCachedGetResponse_ValueTag::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCGCMsgMemCachedGetResponse_ValueTag();
  return *internal_default_instance();
}

CGCMsgMemCachedGetResponse_ValueTag* CGCMsgMemCachedGetResponse_ValueTag::New(::google::protobuf::Arena* arena) const {
  CGCMsgMemCachedGetResponse_ValueTag* n = new CGCMsgMemCachedGetResponse_ValueTag;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCMsgMemCachedGetResponse_ValueTag::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCMsgMemCachedGetResponse.ValueTag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*value_.UnsafeRawStringPointer())->clear();
  }
  found_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CGCMsgMemCachedGetResponse_ValueTag::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCMsgMemCachedGetResponse.ValueTag)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool found = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_found();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &found_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCMsgMemCachedGetResponse.ValueTag)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCMsgMemCachedGetResponse.ValueTag)
  return false;
#undef DO_
}

void CGCMsgMemCachedGetResponse_ValueTag::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCMsgMemCachedGetResponse.ValueTag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool found = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->found(), output);
  }

  // optional bytes value = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCMsgMemCachedGetResponse.ValueTag)
}

::google::protobuf::uint8* CGCMsgMemCachedGetResponse_ValueTag::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CGCMsgMemCachedGetResponse.ValueTag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool found = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->found(), target);
  }

  // optional bytes value = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCMsgMemCachedGetResponse.ValueTag)
  return target;
}

size_t CGCMsgMemCachedGetResponse_ValueTag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCMsgMemCachedGetResponse.ValueTag)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->value());
    }

    // optional bool found = 1;
    if (has_found()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCMsgMemCachedGetResponse_ValueTag::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CGCMsgMemCachedGetResponse.ValueTag)
  GOOGLE_DCHECK_NE(&from, this);
  const CGCMsgMemCachedGetResponse_ValueTag* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCMsgMemCachedGetResponse_ValueTag>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CGCMsgMemCachedGetResponse.ValueTag)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CGCMsgMemCachedGetResponse.ValueTag)
    MergeFrom(*source);
  }
}

void CGCMsgMemCachedGetResponse_ValueTag::MergeFrom(const CGCMsgMemCachedGetResponse_ValueTag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CGCMsgMemCachedGetResponse.ValueTag)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
    if (cached_has_bits & 0x00000002u) {
      found_ = from.found_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CGCMsgMemCachedGetResponse_ValueTag::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CGCMsgMemCachedGetResponse.ValueTag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCMsgMemCachedGetResponse_ValueTag::CopyFrom(const CGCMsgMemCachedGetResponse_ValueTag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCMsgMemCachedGetResponse.ValueTag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCMsgMemCachedGetResponse_ValueTag::IsInitialized() const {
  return true;
}

void CGCMsgMemCachedGetResponse_ValueTag::Swap(CGCMsgMemCachedGetResponse_ValueTag* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCMsgMemCachedGetResponse_ValueTag::InternalSwap(CGCMsgMemCachedGetResponse_ValueTag* other) {
  using std::swap;
  value_.Swap(&other->value_);
  swap(found_, other->found_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCMsgMemCachedGetResponse_ValueTag::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CGCMsgMemCachedGetResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCMsgMemCachedGetResponse::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCMsgMemCachedGetResponse::CGCMsgMemCachedGetResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCGCMsgMemCachedGetResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCMsgMemCachedGetResponse)
}
CGCMsgMemCachedGetResponse::CGCMsgMemCachedGetResponse(const CGCMsgMemCachedGetResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CGCMsgMemCachedGetResponse)
}

void CGCMsgMemCachedGetResponse::SharedCtor() {
  _cached_size_ = 0;
}

CGCMsgMemCachedGetResponse::~CGCMsgMemCachedGetResponse() {
  // @@protoc_insertion_point(destructor:CGCMsgMemCachedGetResponse)
  SharedDtor();
}

void CGCMsgMemCachedGetResponse::SharedDtor() {
}

void CGCMsgMemCachedGetResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCMsgMemCachedGetResponse::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CGCMsgMemCachedGetResponse& CGCMsgMemCachedGetResponse::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCGCMsgMemCachedGetResponse();
  return *internal_default_instance();
}

CGCMsgMemCachedGetResponse* CGCMsgMemCachedGetResponse::New(::google::protobuf::Arena* arena) const {
  CGCMsgMemCachedGetResponse* n = new CGCMsgMemCachedGetResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCMsgMemCachedGetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCMsgMemCachedGetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CGCMsgMemCachedGetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCMsgMemCachedGetResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CGCMsgMemCachedGetResponse.ValueTag values = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_values()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCMsgMemCachedGetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCMsgMemCachedGetResponse)
  return false;
#undef DO_
}

void CGCMsgMemCachedGetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCMsgMemCachedGetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CGCMsgMemCachedGetResponse.ValueTag values = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->values_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->values(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCMsgMemCachedGetResponse)
}

::google::protobuf::uint8* CGCMsgMemCachedGetResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CGCMsgMemCachedGetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CGCMsgMemCachedGetResponse.ValueTag values = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->values_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->values(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCMsgMemCachedGetResponse)
  return target;
}

size_t CGCMsgMemCachedGetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCMsgMemCachedGetResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CGCMsgMemCachedGetResponse.ValueTag values = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->values_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->values(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCMsgMemCachedGetResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CGCMsgMemCachedGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CGCMsgMemCachedGetResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCMsgMemCachedGetResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CGCMsgMemCachedGetResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CGCMsgMemCachedGetResponse)
    MergeFrom(*source);
  }
}

void CGCMsgMemCachedGetResponse::MergeFrom(const CGCMsgMemCachedGetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CGCMsgMemCachedGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
}

void CGCMsgMemCachedGetResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CGCMsgMemCachedGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCMsgMemCachedGetResponse::CopyFrom(const CGCMsgMemCachedGetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCMsgMemCachedGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCMsgMemCachedGetResponse::IsInitialized() const {
  return true;
}

void CGCMsgMemCachedGetResponse::Swap(CGCMsgMemCachedGetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCMsgMemCachedGetResponse::InternalSwap(CGCMsgMemCachedGetResponse* other) {
  using std::swap;
  values_.InternalSwap(&other->values_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCMsgMemCachedGetResponse::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CGCMsgMemCachedSet_KeyPair::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCMsgMemCachedSet_KeyPair::kNameFieldNumber;
const int CGCMsgMemCachedSet_KeyPair::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCMsgMemCachedSet_KeyPair::CGCMsgMemCachedSet_KeyPair()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCGCMsgMemCachedSet_KeyPair();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCMsgMemCachedSet.KeyPair)
}
CGCMsgMemCachedSet_KeyPair::CGCMsgMemCachedSet_KeyPair(const CGCMsgMemCachedSet_KeyPair& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:CGCMsgMemCachedSet.KeyPair)
}

void CGCMsgMemCachedSet_KeyPair::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CGCMsgMemCachedSet_KeyPair::~CGCMsgMemCachedSet_KeyPair() {
  // @@protoc_insertion_point(destructor:CGCMsgMemCachedSet.KeyPair)
  SharedDtor();
}

void CGCMsgMemCachedSet_KeyPair::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CGCMsgMemCachedSet_KeyPair::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCMsgMemCachedSet_KeyPair::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CGCMsgMemCachedSet_KeyPair& CGCMsgMemCachedSet_KeyPair::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCGCMsgMemCachedSet_KeyPair();
  return *internal_default_instance();
}

CGCMsgMemCachedSet_KeyPair* CGCMsgMemCachedSet_KeyPair::New(::google::protobuf::Arena* arena) const {
  CGCMsgMemCachedSet_KeyPair* n = new CGCMsgMemCachedSet_KeyPair;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCMsgMemCachedSet_KeyPair::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCMsgMemCachedSet.KeyPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*value_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CGCMsgMemCachedSet_KeyPair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCMsgMemCachedSet.KeyPair)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CGCMsgMemCachedSet.KeyPair.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCMsgMemCachedSet.KeyPair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCMsgMemCachedSet.KeyPair)
  return false;
#undef DO_
}

void CGCMsgMemCachedSet_KeyPair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCMsgMemCachedSet.KeyPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CGCMsgMemCachedSet.KeyPair.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional bytes value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCMsgMemCachedSet.KeyPair)
}

::google::protobuf::uint8* CGCMsgMemCachedSet_KeyPair::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CGCMsgMemCachedSet.KeyPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CGCMsgMemCachedSet.KeyPair.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional bytes value = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCMsgMemCachedSet.KeyPair)
  return target;
}

size_t CGCMsgMemCachedSet_KeyPair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCMsgMemCachedSet.KeyPair)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional bytes value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCMsgMemCachedSet_KeyPair::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CGCMsgMemCachedSet.KeyPair)
  GOOGLE_DCHECK_NE(&from, this);
  const CGCMsgMemCachedSet_KeyPair* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCMsgMemCachedSet_KeyPair>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CGCMsgMemCachedSet.KeyPair)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CGCMsgMemCachedSet.KeyPair)
    MergeFrom(*source);
  }
}

void CGCMsgMemCachedSet_KeyPair::MergeFrom(const CGCMsgMemCachedSet_KeyPair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CGCMsgMemCachedSet.KeyPair)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void CGCMsgMemCachedSet_KeyPair::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CGCMsgMemCachedSet.KeyPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCMsgMemCachedSet_KeyPair::CopyFrom(const CGCMsgMemCachedSet_KeyPair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCMsgMemCachedSet.KeyPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCMsgMemCachedSet_KeyPair::IsInitialized() const {
  return true;
}

void CGCMsgMemCachedSet_KeyPair::Swap(CGCMsgMemCachedSet_KeyPair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCMsgMemCachedSet_KeyPair::InternalSwap(CGCMsgMemCachedSet_KeyPair* other) {
  using std::swap;
  name_.Swap(&other->name_);
  value_.Swap(&other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCMsgMemCachedSet_KeyPair::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CGCMsgMemCachedSet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCMsgMemCachedSet::kKeysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCMsgMemCachedSet::CGCMsgMemCachedSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCGCMsgMemCachedSet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCMsgMemCachedSet)
}
CGCMsgMemCachedSet::CGCMsgMemCachedSet(const CGCMsgMemCachedSet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      keys_(from.keys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CGCMsgMemCachedSet)
}

void CGCMsgMemCachedSet::SharedCtor() {
  _cached_size_ = 0;
}

CGCMsgMemCachedSet::~CGCMsgMemCachedSet() {
  // @@protoc_insertion_point(destructor:CGCMsgMemCachedSet)
  SharedDtor();
}

void CGCMsgMemCachedSet::SharedDtor() {
}

void CGCMsgMemCachedSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCMsgMemCachedSet::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CGCMsgMemCachedSet& CGCMsgMemCachedSet::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCGCMsgMemCachedSet();
  return *internal_default_instance();
}

CGCMsgMemCachedSet* CGCMsgMemCachedSet::New(::google::protobuf::Arena* arena) const {
  CGCMsgMemCachedSet* n = new CGCMsgMemCachedSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCMsgMemCachedSet::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCMsgMemCachedSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CGCMsgMemCachedSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCMsgMemCachedSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CGCMsgMemCachedSet.KeyPair keys = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCMsgMemCachedSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCMsgMemCachedSet)
  return false;
#undef DO_
}

void CGCMsgMemCachedSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCMsgMemCachedSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CGCMsgMemCachedSet.KeyPair keys = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->keys(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCMsgMemCachedSet)
}

::google::protobuf::uint8* CGCMsgMemCachedSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CGCMsgMemCachedSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CGCMsgMemCachedSet.KeyPair keys = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->keys(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCMsgMemCachedSet)
  return target;
}

size_t CGCMsgMemCachedSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCMsgMemCachedSet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CGCMsgMemCachedSet.KeyPair keys = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->keys_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->keys(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCMsgMemCachedSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CGCMsgMemCachedSet)
  GOOGLE_DCHECK_NE(&from, this);
  const CGCMsgMemCachedSet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCMsgMemCachedSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CGCMsgMemCachedSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CGCMsgMemCachedSet)
    MergeFrom(*source);
  }
}

void CGCMsgMemCachedSet::MergeFrom(const CGCMsgMemCachedSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CGCMsgMemCachedSet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
}

void CGCMsgMemCachedSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CGCMsgMemCachedSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCMsgMemCachedSet::CopyFrom(const CGCMsgMemCachedSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCMsgMemCachedSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCMsgMemCachedSet::IsInitialized() const {
  return true;
}

void CGCMsgMemCachedSet::Swap(CGCMsgMemCachedSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCMsgMemCachedSet::InternalSwap(CGCMsgMemCachedSet* other) {
  using std::swap;
  keys_.InternalSwap(&other->keys_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCMsgMemCachedSet::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CGCMsgMemCachedDelete::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCMsgMemCachedDelete::kKeysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCMsgMemCachedDelete::CGCMsgMemCachedDelete()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCGCMsgMemCachedDelete();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCMsgMemCachedDelete)
}
CGCMsgMemCachedDelete::CGCMsgMemCachedDelete(const CGCMsgMemCachedDelete& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      keys_(from.keys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CGCMsgMemCachedDelete)
}

void CGCMsgMemCachedDelete::SharedCtor() {
  _cached_size_ = 0;
}

CGCMsgMemCachedDelete::~CGCMsgMemCachedDelete() {
  // @@protoc_insertion_point(destructor:CGCMsgMemCachedDelete)
  SharedDtor();
}

void CGCMsgMemCachedDelete::SharedDtor() {
}

void CGCMsgMemCachedDelete::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCMsgMemCachedDelete::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CGCMsgMemCachedDelete& CGCMsgMemCachedDelete::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCGCMsgMemCachedDelete();
  return *internal_default_instance();
}

CGCMsgMemCachedDelete* CGCMsgMemCachedDelete::New(::google::protobuf::Arena* arena) const {
  CGCMsgMemCachedDelete* n = new CGCMsgMemCachedDelete;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCMsgMemCachedDelete::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCMsgMemCachedDelete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CGCMsgMemCachedDelete::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCMsgMemCachedDelete)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string keys = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_keys()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->keys(this->keys_size() - 1).data(),
            static_cast<int>(this->keys(this->keys_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CGCMsgMemCachedDelete.keys");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCMsgMemCachedDelete)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCMsgMemCachedDelete)
  return false;
#undef DO_
}

void CGCMsgMemCachedDelete::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCMsgMemCachedDelete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string keys = 1;
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->keys(i).data(), static_cast<int>(this->keys(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CGCMsgMemCachedDelete.keys");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->keys(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCMsgMemCachedDelete)
}

::google::protobuf::uint8* CGCMsgMemCachedDelete::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CGCMsgMemCachedDelete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string keys = 1;
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->keys(i).data(), static_cast<int>(this->keys(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CGCMsgMemCachedDelete.keys");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->keys(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCMsgMemCachedDelete)
  return target;
}

size_t CGCMsgMemCachedDelete::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCMsgMemCachedDelete)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string keys = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->keys_size());
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->keys(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCMsgMemCachedDelete::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CGCMsgMemCachedDelete)
  GOOGLE_DCHECK_NE(&from, this);
  const CGCMsgMemCachedDelete* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCMsgMemCachedDelete>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CGCMsgMemCachedDelete)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CGCMsgMemCachedDelete)
    MergeFrom(*source);
  }
}

void CGCMsgMemCachedDelete::MergeFrom(const CGCMsgMemCachedDelete& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CGCMsgMemCachedDelete)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
}

void CGCMsgMemCachedDelete::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CGCMsgMemCachedDelete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCMsgMemCachedDelete::CopyFrom(const CGCMsgMemCachedDelete& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCMsgMemCachedDelete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCMsgMemCachedDelete::IsInitialized() const {
  return true;
}

void CGCMsgMemCachedDelete::Swap(CGCMsgMemCachedDelete* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCMsgMemCachedDelete::InternalSwap(CGCMsgMemCachedDelete* other) {
  using std::swap;
  keys_.InternalSwap(&other->keys_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCMsgMemCachedDelete::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CGCMsgMemCachedStats::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCMsgMemCachedStats::CGCMsgMemCachedStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCGCMsgMemCachedStats();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCMsgMemCachedStats)
}
CGCMsgMemCachedStats::CGCMsgMemCachedStats(const CGCMsgMemCachedStats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CGCMsgMemCachedStats)
}

void CGCMsgMemCachedStats::SharedCtor() {
  _cached_size_ = 0;
}

CGCMsgMemCachedStats::~CGCMsgMemCachedStats() {
  // @@protoc_insertion_point(destructor:CGCMsgMemCachedStats)
  SharedDtor();
}

void CGCMsgMemCachedStats::SharedDtor() {
}

void CGCMsgMemCachedStats::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCMsgMemCachedStats::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CGCMsgMemCachedStats& CGCMsgMemCachedStats::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCGCMsgMemCachedStats();
  return *internal_default_instance();
}

CGCMsgMemCachedStats* CGCMsgMemCachedStats::New(::google::protobuf::Arena* arena) const {
  CGCMsgMemCachedStats* n = new CGCMsgMemCachedStats;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCMsgMemCachedStats::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCMsgMemCachedStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CGCMsgMemCachedStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCMsgMemCachedStats)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CGCMsgMemCachedStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCMsgMemCachedStats)
  return false;
#undef DO_
}

void CGCMsgMemCachedStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCMsgMemCachedStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCMsgMemCachedStats)
}

::google::protobuf::uint8* CGCMsgMemCachedStats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CGCMsgMemCachedStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCMsgMemCachedStats)
  return target;
}

size_t CGCMsgMemCachedStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCMsgMemCachedStats)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCMsgMemCachedStats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CGCMsgMemCachedStats)
  GOOGLE_DCHECK_NE(&from, this);
  const CGCMsgMemCachedStats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCMsgMemCachedStats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CGCMsgMemCachedStats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CGCMsgMemCachedStats)
    MergeFrom(*source);
  }
}

void CGCMsgMemCachedStats::MergeFrom(const CGCMsgMemCachedStats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CGCMsgMemCachedStats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CGCMsgMemCachedStats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CGCMsgMemCachedStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCMsgMemCachedStats::CopyFrom(const CGCMsgMemCachedStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCMsgMemCachedStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCMsgMemCachedStats::IsInitialized() const {
  return true;
}

void CGCMsgMemCachedStats::Swap(CGCMsgMemCachedStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCMsgMemCachedStats::InternalSwap(CGCMsgMemCachedStats* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCMsgMemCachedStats::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CGCMsgMemCachedStatsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCMsgMemCachedStatsResponse::kCurrConnectionsFieldNumber;
const int CGCMsgMemCachedStatsResponse::kCmdGetFieldNumber;
const int CGCMsgMemCachedStatsResponse::kCmdSetFieldNumber;
const int CGCMsgMemCachedStatsResponse::kCmdFlushFieldNumber;
const int CGCMsgMemCachedStatsResponse::kGetHitsFieldNumber;
const int CGCMsgMemCachedStatsResponse::kGetMissesFieldNumber;
const int CGCMsgMemCachedStatsResponse::kDeleteHitsFieldNumber;
const int CGCMsgMemCachedStatsResponse::kDeleteMissesFieldNumber;
const int CGCMsgMemCachedStatsResponse::kBytesReadFieldNumber;
const int CGCMsgMemCachedStatsResponse::kBytesWrittenFieldNumber;
const int CGCMsgMemCachedStatsResponse::kLimitMaxbytesFieldNumber;
const int CGCMsgMemCachedStatsResponse::kCurrItemsFieldNumber;
const int CGCMsgMemCachedStatsResponse::kEvictionsFieldNumber;
const int CGCMsgMemCachedStatsResponse::kBytesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCMsgMemCachedStatsResponse::CGCMsgMemCachedStatsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCGCMsgMemCachedStatsResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCMsgMemCachedStatsResponse)
}
CGCMsgMemCachedStatsResponse::CGCMsgMemCachedStatsResponse(const CGCMsgMemCachedStatsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&curr_connections_, &from.curr_connections_,
    static_cast<size_t>(reinterpret_cast<char*>(&bytes_) -
    reinterpret_cast<char*>(&curr_connections_)) + sizeof(bytes_));
  // @@protoc_insertion_point(copy_constructor:CGCMsgMemCachedStatsResponse)
}

void CGCMsgMemCachedStatsResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&curr_connections_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bytes_) -
      reinterpret_cast<char*>(&curr_connections_)) + sizeof(bytes_));
}

CGCMsgMemCachedStatsResponse::~CGCMsgMemCachedStatsResponse() {
  // @@protoc_insertion_point(destructor:CGCMsgMemCachedStatsResponse)
  SharedDtor();
}

void CGCMsgMemCachedStatsResponse::SharedDtor() {
}

void CGCMsgMemCachedStatsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCMsgMemCachedStatsResponse::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CGCMsgMemCachedStatsResponse& CGCMsgMemCachedStatsResponse::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCGCMsgMemCachedStatsResponse();
  return *internal_default_instance();
}

CGCMsgMemCachedStatsResponse* CGCMsgMemCachedStatsResponse::New(::google::protobuf::Arena* arena) const {
  CGCMsgMemCachedStatsResponse* n = new CGCMsgMemCachedStatsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCMsgMemCachedStatsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCMsgMemCachedStatsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&curr_connections_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&delete_misses_) -
        reinterpret_cast<char*>(&curr_connections_)) + sizeof(delete_misses_));
  }
  if (cached_has_bits & 16128u) {
    ::memset(&bytes_read_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bytes_) -
        reinterpret_cast<char*>(&bytes_read_)) + sizeof(bytes_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CGCMsgMemCachedStatsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCMsgMemCachedStatsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 curr_connections = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_curr_connections();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &curr_connections_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 cmd_get = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_cmd_get();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cmd_get_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 cmd_set = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_cmd_set();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cmd_set_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 cmd_flush = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_cmd_flush();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cmd_flush_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 get_hits = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_get_hits();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &get_hits_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 get_misses = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_get_misses();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &get_misses_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 delete_hits = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_delete_hits();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &delete_hits_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 delete_misses = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_delete_misses();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &delete_misses_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 bytes_read = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_bytes_read();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bytes_read_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 bytes_written = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_bytes_written();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bytes_written_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 limit_maxbytes = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_limit_maxbytes();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &limit_maxbytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 curr_items = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_curr_items();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &curr_items_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 evictions = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_evictions();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &evictions_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 bytes = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_bytes();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCMsgMemCachedStatsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCMsgMemCachedStatsResponse)
  return false;
#undef DO_
}

void CGCMsgMemCachedStatsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCMsgMemCachedStatsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 curr_connections = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->curr_connections(), output);
  }

  // optional uint64 cmd_get = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->cmd_get(), output);
  }

  // optional uint64 cmd_set = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->cmd_set(), output);
  }

  // optional uint64 cmd_flush = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->cmd_flush(), output);
  }

  // optional uint64 get_hits = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->get_hits(), output);
  }

  // optional uint64 get_misses = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->get_misses(), output);
  }

  // optional uint64 delete_hits = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->delete_hits(), output);
  }

  // optional uint64 delete_misses = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->delete_misses(), output);
  }

  // optional uint64 bytes_read = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->bytes_read(), output);
  }

  // optional uint64 bytes_written = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->bytes_written(), output);
  }

  // optional uint64 limit_maxbytes = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->limit_maxbytes(), output);
  }

  // optional uint64 curr_items = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(12, this->curr_items(), output);
  }

  // optional uint64 evictions = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(13, this->evictions(), output);
  }

  // optional uint64 bytes = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(14, this->bytes(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCMsgMemCachedStatsResponse)
}

::google::protobuf::uint8* CGCMsgMemCachedStatsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CGCMsgMemCachedStatsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 curr_connections = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->curr_connections(), target);
  }

  // optional uint64 cmd_get = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->cmd_get(), target);
  }

  // optional uint64 cmd_set = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->cmd_set(), target);
  }

  // optional uint64 cmd_flush = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->cmd_flush(), target);
  }

  // optional uint64 get_hits = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->get_hits(), target);
  }

  // optional uint64 get_misses = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->get_misses(), target);
  }

  // optional uint64 delete_hits = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->delete_hits(), target);
  }

  // optional uint64 delete_misses = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->delete_misses(), target);
  }

  // optional uint64 bytes_read = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->bytes_read(), target);
  }

  // optional uint64 bytes_written = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->bytes_written(), target);
  }

  // optional uint64 limit_maxbytes = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(11, this->limit_maxbytes(), target);
  }

  // optional uint64 curr_items = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(12, this->curr_items(), target);
  }

  // optional uint64 evictions = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(13, this->evictions(), target);
  }

  // optional uint64 bytes = 14;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(14, this->bytes(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCMsgMemCachedStatsResponse)
  return target;
}

size_t CGCMsgMemCachedStatsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCMsgMemCachedStatsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional uint64 curr_connections = 1;
    if (has_curr_connections()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->curr_connections());
    }

    // optional uint64 cmd_get = 2;
    if (has_cmd_get()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->cmd_get());
    }

    // optional uint64 cmd_set = 3;
    if (has_cmd_set()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->cmd_set());
    }

    // optional uint64 cmd_flush = 4;
    if (has_cmd_flush()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->cmd_flush());
    }

    // optional uint64 get_hits = 5;
    if (has_get_hits()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->get_hits());
    }

    // optional uint64 get_misses = 6;
    if (has_get_misses()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->get_misses());
    }

    // optional uint64 delete_hits = 7;
    if (has_delete_hits()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->delete_hits());
    }

    // optional uint64 delete_misses = 8;
    if (has_delete_misses()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->delete_misses());
    }

  }
  if (_has_bits_[8 / 32] & 16128u) {
    // optional uint64 bytes_read = 9;
    if (has_bytes_read()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->bytes_read());
    }

    // optional uint64 bytes_written = 10;
    if (has_bytes_written()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->bytes_written());
    }

    // optional uint64 limit_maxbytes = 11;
    if (has_limit_maxbytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->limit_maxbytes());
    }

    // optional uint64 curr_items = 12;
    if (has_curr_items()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->curr_items());
    }

    // optional uint64 evictions = 13;
    if (has_evictions()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->evictions());
    }

    // optional uint64 bytes = 14;
    if (has_bytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->bytes());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCMsgMemCachedStatsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CGCMsgMemCachedStatsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CGCMsgMemCachedStatsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCMsgMemCachedStatsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CGCMsgMemCachedStatsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CGCMsgMemCachedStatsResponse)
    MergeFrom(*source);
  }
}

void CGCMsgMemCachedStatsResponse::MergeFrom(const CGCMsgMemCachedStatsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CGCMsgMemCachedStatsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      curr_connections_ = from.curr_connections_;
    }
    if (cached_has_bits & 0x00000002u) {
      cmd_get_ = from.cmd_get_;
    }
    if (cached_has_bits & 0x00000004u) {
      cmd_set_ = from.cmd_set_;
    }
    if (cached_has_bits & 0x00000008u) {
      cmd_flush_ = from.cmd_flush_;
    }
    if (cached_has_bits & 0x00000010u) {
      get_hits_ = from.get_hits_;
    }
    if (cached_has_bits & 0x00000020u) {
      get_misses_ = from.get_misses_;
    }
    if (cached_has_bits & 0x00000040u) {
      delete_hits_ = from.delete_hits_;
    }
    if (cached_has_bits & 0x00000080u) {
      delete_misses_ = from.delete_misses_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 16128u) {
    if (cached_has_bits & 0x00000100u) {
      bytes_read_ = from.bytes_read_;
    }
    if (cached_has_bits & 0x00000200u) {
      bytes_written_ = from.bytes_written_;
    }
    if (cached_has_bits & 0x00000400u) {
      limit_maxbytes_ = from.limit_maxbytes_;
    }
    if (cached_has_bits & 0x00000800u) {
      curr_items_ = from.curr_items_;
    }
    if (cached_has_bits & 0x00001000u) {
      evictions_ = from.evictions_;
    }
    if (cached_has_bits & 0x00002000u) {
      bytes_ = from.bytes_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CGCMsgMemCachedStatsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CGCMsgMemCachedStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCMsgMemCachedStatsResponse::CopyFrom(const CGCMsgMemCachedStatsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCMsgMemCachedStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCMsgMemCachedStatsResponse::IsInitialized() const {
  return true;
}

void CGCMsgMemCachedStatsResponse::Swap(CGCMsgMemCachedStatsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCMsgMemCachedStatsResponse::InternalSwap(CGCMsgMemCachedStatsResponse* other) {
  using std::swap;
  swap(curr_connections_, other->curr_connections_);
  swap(cmd_get_, other->cmd_get_);
  swap(cmd_set_, other->cmd_set_);
  swap(cmd_flush_, other->cmd_flush_);
  swap(get_hits_, other->get_hits_);
  swap(get_misses_, other->get_misses_);
  swap(delete_hits_, other->delete_hits_);
  swap(delete_misses_, other->delete_misses_);
  swap(bytes_read_, other->bytes_read_);
  swap(bytes_written_, other->bytes_written_);
  swap(limit_maxbytes_, other->limit_maxbytes_);
  swap(curr_items_, other->curr_items_);
  swap(evictions_, other->evictions_);
  swap(bytes_, other->bytes_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCMsgMemCachedStatsResponse::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CGCMsgSQLStats::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCMsgSQLStats::kSchemaCatalogFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCMsgSQLStats::CGCMsgSQLStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCGCMsgSQLStats();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCMsgSQLStats)
}
CGCMsgSQLStats::CGCMsgSQLStats(const CGCMsgSQLStats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  schema_catalog_ = from.schema_catalog_;
  // @@protoc_insertion_point(copy_constructor:CGCMsgSQLStats)
}

void CGCMsgSQLStats::SharedCtor() {
  _cached_size_ = 0;
  schema_catalog_ = 0u;
}

CGCMsgSQLStats::~CGCMsgSQLStats() {
  // @@protoc_insertion_point(destructor:CGCMsgSQLStats)
  SharedDtor();
}

void CGCMsgSQLStats::SharedDtor() {
}

void CGCMsgSQLStats::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCMsgSQLStats::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CGCMsgSQLStats& CGCMsgSQLStats::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCGCMsgSQLStats();
  return *internal_default_instance();
}

CGCMsgSQLStats* CGCMsgSQLStats::New(::google::protobuf::Arena* arena) const {
  CGCMsgSQLStats* n = new CGCMsgSQLStats;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCMsgSQLStats::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCMsgSQLStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  schema_catalog_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CGCMsgSQLStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCMsgSQLStats)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 schema_catalog = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_schema_catalog();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &schema_catalog_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCMsgSQLStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCMsgSQLStats)
  return false;
#undef DO_
}

void CGCMsgSQLStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCMsgSQLStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 schema_catalog = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->schema_catalog(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCMsgSQLStats)
}

::google::protobuf::uint8* CGCMsgSQLStats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CGCMsgSQLStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 schema_catalog = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->schema_catalog(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCMsgSQLStats)
  return target;
}

size_t CGCMsgSQLStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCMsgSQLStats)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 schema_catalog = 1;
  if (has_schema_catalog()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->schema_catalog());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCMsgSQLStats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CGCMsgSQLStats)
  GOOGLE_DCHECK_NE(&from, this);
  const CGCMsgSQLStats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCMsgSQLStats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CGCMsgSQLStats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CGCMsgSQLStats)
    MergeFrom(*source);
  }
}

void CGCMsgSQLStats::MergeFrom(const CGCMsgSQLStats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CGCMsgSQLStats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_schema_catalog()) {
    set_schema_catalog(from.schema_catalog());
  }
}

void CGCMsgSQLStats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CGCMsgSQLStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCMsgSQLStats::CopyFrom(const CGCMsgSQLStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCMsgSQLStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCMsgSQLStats::IsInitialized() const {
  return true;
}

void CGCMsgSQLStats::Swap(CGCMsgSQLStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCMsgSQLStats::InternalSwap(CGCMsgSQLStats* other) {
  using std::swap;
  swap(schema_catalog_, other->schema_catalog_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCMsgSQLStats::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CGCMsgSQLStatsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCMsgSQLStatsResponse::kThreadsFieldNumber;
const int CGCMsgSQLStatsResponse::kThreadsConnectedFieldNumber;
const int CGCMsgSQLStatsResponse::kThreadsActiveFieldNumber;
const int CGCMsgSQLStatsResponse::kOperationsSubmittedFieldNumber;
const int CGCMsgSQLStatsResponse::kPreparedStatementsExecutedFieldNumber;
const int CGCMsgSQLStatsResponse::kNonPreparedStatementsExecutedFieldNumber;
const int CGCMsgSQLStatsResponse::kDeadlockRetriesFieldNumber;
const int CGCMsgSQLStatsResponse::kOperationsTimedOutInQueueFieldNumber;
const int CGCMsgSQLStatsResponse::kErrorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCMsgSQLStatsResponse::CGCMsgSQLStatsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCGCMsgSQLStatsResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCMsgSQLStatsResponse)
}
CGCMsgSQLStatsResponse::CGCMsgSQLStatsResponse(const CGCMsgSQLStatsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&threads_, &from.threads_,
    static_cast<size_t>(reinterpret_cast<char*>(&errors_) -
    reinterpret_cast<char*>(&threads_)) + sizeof(errors_));
  // @@protoc_insertion_point(copy_constructor:CGCMsgSQLStatsResponse)
}

void CGCMsgSQLStatsResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&threads_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errors_) -
      reinterpret_cast<char*>(&threads_)) + sizeof(errors_));
}

CGCMsgSQLStatsResponse::~CGCMsgSQLStatsResponse() {
  // @@protoc_insertion_point(destructor:CGCMsgSQLStatsResponse)
  SharedDtor();
}

void CGCMsgSQLStatsResponse::SharedDtor() {
}

void CGCMsgSQLStatsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCMsgSQLStatsResponse::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CGCMsgSQLStatsResponse& CGCMsgSQLStatsResponse::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCGCMsgSQLStatsResponse();
  return *internal_default_instance();
}

CGCMsgSQLStatsResponse* CGCMsgSQLStatsResponse::New(::google::protobuf::Arena* arena) const {
  CGCMsgSQLStatsResponse* n = new CGCMsgSQLStatsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCMsgSQLStatsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCMsgSQLStatsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&threads_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&operations_timed_out_in_queue_) -
        reinterpret_cast<char*>(&threads_)) + sizeof(operations_timed_out_in_queue_));
  }
  errors_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CGCMsgSQLStatsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCMsgSQLStatsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 threads = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_threads();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &threads_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 threads_connected = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_threads_connected();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &threads_connected_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 threads_active = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_threads_active();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &threads_active_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 operations_submitted = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_operations_submitted();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &operations_submitted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 prepared_statements_executed = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_prepared_statements_executed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prepared_statements_executed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 non_prepared_statements_executed = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_non_prepared_statements_executed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &non_prepared_statements_executed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 deadlock_retries = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_deadlock_retries();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &deadlock_retries_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 operations_timed_out_in_queue = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_operations_timed_out_in_queue();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &operations_timed_out_in_queue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 errors = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_errors();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errors_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCMsgSQLStatsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCMsgSQLStatsResponse)
  return false;
#undef DO_
}

void CGCMsgSQLStatsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCMsgSQLStatsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 threads = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->threads(), output);
  }

  // optional uint32 threads_connected = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->threads_connected(), output);
  }

  // optional uint32 threads_active = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->threads_active(), output);
  }

  // optional uint32 operations_submitted = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->operations_submitted(), output);
  }

  // optional uint32 prepared_statements_executed = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->prepared_statements_executed(), output);
  }

  // optional uint32 non_prepared_statements_executed = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->non_prepared_statements_executed(), output);
  }

  // optional uint32 deadlock_retries = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->deadlock_retries(), output);
  }

  // optional uint32 operations_timed_out_in_queue = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->operations_timed_out_in_queue(), output);
  }

  // optional uint32 errors = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->errors(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCMsgSQLStatsResponse)
}

::google::protobuf::uint8* CGCMsgSQLStatsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CGCMsgSQLStatsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 threads = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->threads(), target);
  }

  // optional uint32 threads_connected = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->threads_connected(), target);
  }

  // optional uint32 threads_active = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->threads_active(), target);
  }

  // optional uint32 operations_submitted = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->operations_submitted(), target);
  }

  // optional uint32 prepared_statements_executed = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->prepared_statements_executed(), target);
  }

  // optional uint32 non_prepared_statements_executed = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->non_prepared_statements_executed(), target);
  }

  // optional uint32 deadlock_retries = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->deadlock_retries(), target);
  }

  // optional uint32 operations_timed_out_in_queue = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->operations_timed_out_in_queue(), target);
  }

  // optional uint32 errors = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->errors(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCMsgSQLStatsResponse)
  return target;
}

size_t CGCMsgSQLStatsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCMsgSQLStatsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional uint32 threads = 1;
    if (has_threads()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->threads());
    }

    // optional uint32 threads_connected = 2;
    if (has_threads_connected()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->threads_connected());
    }

    // optional uint32 threads_active = 3;
    if (has_threads_active()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->threads_active());
    }

    // optional uint32 operations_submitted = 4;
    if (has_operations_submitted()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->operations_submitted());
    }

    // optional uint32 prepared_statements_executed = 5;
    if (has_prepared_statements_executed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->prepared_statements_executed());
    }

    // optional uint32 non_prepared_statements_executed = 6;
    if (has_non_prepared_statements_executed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->non_prepared_statements_executed());
    }

    // optional uint32 deadlock_retries = 7;
    if (has_deadlock_retries()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->deadlock_retries());
    }

    // optional uint32 operations_timed_out_in_queue = 8;
    if (has_operations_timed_out_in_queue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->operations_timed_out_in_queue());
    }

  }
  // optional uint32 errors = 9;
  if (has_errors()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->errors());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCMsgSQLStatsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CGCMsgSQLStatsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CGCMsgSQLStatsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCMsgSQLStatsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CGCMsgSQLStatsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CGCMsgSQLStatsResponse)
    MergeFrom(*source);
  }
}

void CGCMsgSQLStatsResponse::MergeFrom(const CGCMsgSQLStatsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CGCMsgSQLStatsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      threads_ = from.threads_;
    }
    if (cached_has_bits & 0x00000002u) {
      threads_connected_ = from.threads_connected_;
    }
    if (cached_has_bits & 0x00000004u) {
      threads_active_ = from.threads_active_;
    }
    if (cached_has_bits & 0x00000008u) {
      operations_submitted_ = from.operations_submitted_;
    }
    if (cached_has_bits & 0x00000010u) {
      prepared_statements_executed_ = from.prepared_statements_executed_;
    }
    if (cached_has_bits & 0x00000020u) {
      non_prepared_statements_executed_ = from.non_prepared_statements_executed_;
    }
    if (cached_has_bits & 0x00000040u) {
      deadlock_retries_ = from.deadlock_retries_;
    }
    if (cached_has_bits & 0x00000080u) {
      operations_timed_out_in_queue_ = from.operations_timed_out_in_queue_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_errors(from.errors());
  }
}

void CGCMsgSQLStatsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CGCMsgSQLStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCMsgSQLStatsResponse::CopyFrom(const CGCMsgSQLStatsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCMsgSQLStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCMsgSQLStatsResponse::IsInitialized() const {
  return true;
}

void CGCMsgSQLStatsResponse::Swap(CGCMsgSQLStatsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCMsgSQLStatsResponse::InternalSwap(CGCMsgSQLStatsResponse* other) {
  using std::swap;
  swap(threads_, other->threads_);
  swap(threads_connected_, other->threads_connected_);
  swap(threads_active_, other->threads_active_);
  swap(operations_submitted_, other->operations_submitted_);
  swap(prepared_statements_executed_, other->prepared_statements_executed_);
  swap(non_prepared_statements_executed_, other->non_prepared_statements_executed_);
  swap(deadlock_retries_, other->deadlock_retries_);
  swap(operations_timed_out_in_queue_, other->operations_timed_out_in_queue_);
  swap(errors_, other->errors_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCMsgSQLStatsResponse::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgAMAddFreeLicense::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgAMAddFreeLicense::kSteamidFieldNumber;
const int CMsgAMAddFreeLicense::kIpPublicFieldNumber;
const int CMsgAMAddFreeLicense::kPackageidFieldNumber;
const int CMsgAMAddFreeLicense::kStoreCountryCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgAMAddFreeLicense::CMsgAMAddFreeLicense()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgAMAddFreeLicense();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgAMAddFreeLicense)
}
CMsgAMAddFreeLicense::CMsgAMAddFreeLicense(const CMsgAMAddFreeLicense& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  store_country_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_store_country_code()) {
    store_country_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.store_country_code_);
  }
  ::memcpy(&steamid_, &from.steamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&packageid_) -
    reinterpret_cast<char*>(&steamid_)) + sizeof(packageid_));
  // @@protoc_insertion_point(copy_constructor:CMsgAMAddFreeLicense)
}

void CMsgAMAddFreeLicense::SharedCtor() {
  _cached_size_ = 0;
  store_country_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&steamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&packageid_) -
      reinterpret_cast<char*>(&steamid_)) + sizeof(packageid_));
}

CMsgAMAddFreeLicense::~CMsgAMAddFreeLicense() {
  // @@protoc_insertion_point(destructor:CMsgAMAddFreeLicense)
  SharedDtor();
}

void CMsgAMAddFreeLicense::SharedDtor() {
  store_country_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgAMAddFreeLicense::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgAMAddFreeLicense::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgAMAddFreeLicense& CMsgAMAddFreeLicense::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgAMAddFreeLicense();
  return *internal_default_instance();
}

CMsgAMAddFreeLicense* CMsgAMAddFreeLicense::New(::google::protobuf::Arena* arena) const {
  CMsgAMAddFreeLicense* n = new CMsgAMAddFreeLicense;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgAMAddFreeLicense::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAMAddFreeLicense)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!store_country_code_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*store_country_code_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 14u) {
    ::memset(&steamid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&packageid_) -
        reinterpret_cast<char*>(&steamid_)) + sizeof(packageid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgAMAddFreeLicense::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgAMAddFreeLicense)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ip_public = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_ip_public();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ip_public_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 packageid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_packageid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &packageid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string store_country_code = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_store_country_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->store_country_code().data(), static_cast<int>(this->store_country_code().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgAMAddFreeLicense.store_country_code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgAMAddFreeLicense)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgAMAddFreeLicense)
  return false;
#undef DO_
}

void CMsgAMAddFreeLicense::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgAMAddFreeLicense)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  // optional uint32 ip_public = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ip_public(), output);
  }

  // optional uint32 packageid = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->packageid(), output);
  }

  // optional string store_country_code = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->store_country_code().data(), static_cast<int>(this->store_country_code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgAMAddFreeLicense.store_country_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->store_country_code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgAMAddFreeLicense)
}

::google::protobuf::uint8* CMsgAMAddFreeLicense::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMAddFreeLicense)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  // optional uint32 ip_public = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ip_public(), target);
  }

  // optional uint32 packageid = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->packageid(), target);
  }

  // optional string store_country_code = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->store_country_code().data(), static_cast<int>(this->store_country_code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgAMAddFreeLicense.store_country_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->store_country_code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMAddFreeLicense)
  return target;
}

size_t CMsgAMAddFreeLicense::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAMAddFreeLicense)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string store_country_code = 4;
    if (has_store_country_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->store_country_code());
    }

    // optional fixed64 steamid = 1;
    if (has_steamid()) {
      total_size += 1 + 8;
    }

    // optional uint32 ip_public = 2;
    if (has_ip_public()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ip_public());
    }

    // optional uint32 packageid = 3;
    if (has_packageid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->packageid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgAMAddFreeLicense::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgAMAddFreeLicense)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgAMAddFreeLicense* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAMAddFreeLicense>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgAMAddFreeLicense)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgAMAddFreeLicense)
    MergeFrom(*source);
  }
}

void CMsgAMAddFreeLicense::MergeFrom(const CMsgAMAddFreeLicense& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgAMAddFreeLicense)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_store_country_code();
      store_country_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.store_country_code_);
    }
    if (cached_has_bits & 0x00000002u) {
      steamid_ = from.steamid_;
    }
    if (cached_has_bits & 0x00000004u) {
      ip_public_ = from.ip_public_;
    }
    if (cached_has_bits & 0x00000008u) {
      packageid_ = from.packageid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgAMAddFreeLicense::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgAMAddFreeLicense)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAMAddFreeLicense::CopyFrom(const CMsgAMAddFreeLicense& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAMAddFreeLicense)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAMAddFreeLicense::IsInitialized() const {
  return true;
}

void CMsgAMAddFreeLicense::Swap(CMsgAMAddFreeLicense* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAMAddFreeLicense::InternalSwap(CMsgAMAddFreeLicense* other) {
  using std::swap;
  store_country_code_.Swap(&other->store_country_code_);
  swap(steamid_, other->steamid_);
  swap(ip_public_, other->ip_public_);
  swap(packageid_, other->packageid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgAMAddFreeLicense::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgAMAddFreeLicenseResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgAMAddFreeLicenseResponse::kEresultFieldNumber;
const int CMsgAMAddFreeLicenseResponse::kPurchaseResultDetailFieldNumber;
const int CMsgAMAddFreeLicenseResponse::kTransidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgAMAddFreeLicenseResponse::CMsgAMAddFreeLicenseResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgAMAddFreeLicenseResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgAMAddFreeLicenseResponse)
}
CMsgAMAddFreeLicenseResponse::CMsgAMAddFreeLicenseResponse(const CMsgAMAddFreeLicenseResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&transid_, &from.transid_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&transid_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgAMAddFreeLicenseResponse)
}

void CMsgAMAddFreeLicenseResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&transid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&purchase_result_detail_) -
      reinterpret_cast<char*>(&transid_)) + sizeof(purchase_result_detail_));
  eresult_ = 2;
}

CMsgAMAddFreeLicenseResponse::~CMsgAMAddFreeLicenseResponse() {
  // @@protoc_insertion_point(destructor:CMsgAMAddFreeLicenseResponse)
  SharedDtor();
}

void CMsgAMAddFreeLicenseResponse::SharedDtor() {
}

void CMsgAMAddFreeLicenseResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgAMAddFreeLicenseResponse::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgAMAddFreeLicenseResponse& CMsgAMAddFreeLicenseResponse::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgAMAddFreeLicenseResponse();
  return *internal_default_instance();
}

CMsgAMAddFreeLicenseResponse* CMsgAMAddFreeLicenseResponse::New(::google::protobuf::Arena* arena) const {
  CMsgAMAddFreeLicenseResponse* n = new CMsgAMAddFreeLicenseResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgAMAddFreeLicenseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAMAddFreeLicenseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&transid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&purchase_result_detail_) -
        reinterpret_cast<char*>(&transid_)) + sizeof(purchase_result_detail_));
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgAMAddFreeLicenseResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgAMAddFreeLicenseResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 purchase_result_detail = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_purchase_result_detail();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &purchase_result_detail_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 transid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_transid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &transid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgAMAddFreeLicenseResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgAMAddFreeLicenseResponse)
  return false;
#undef DO_
}

void CMsgAMAddFreeLicenseResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgAMAddFreeLicenseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional int32 purchase_result_detail = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->purchase_result_detail(), output);
  }

  // optional fixed64 transid = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(3, this->transid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgAMAddFreeLicenseResponse)
}

::google::protobuf::uint8* CMsgAMAddFreeLicenseResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMAddFreeLicenseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional int32 purchase_result_detail = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->purchase_result_detail(), target);
  }

  // optional fixed64 transid = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(3, this->transid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMAddFreeLicenseResponse)
  return target;
}

size_t CMsgAMAddFreeLicenseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAMAddFreeLicenseResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional fixed64 transid = 3;
    if (has_transid()) {
      total_size += 1 + 8;
    }

    // optional int32 purchase_result_detail = 2;
    if (has_purchase_result_detail()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->purchase_result_detail());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgAMAddFreeLicenseResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgAMAddFreeLicenseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgAMAddFreeLicenseResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAMAddFreeLicenseResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgAMAddFreeLicenseResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgAMAddFreeLicenseResponse)
    MergeFrom(*source);
  }
}

void CMsgAMAddFreeLicenseResponse::MergeFrom(const CMsgAMAddFreeLicenseResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgAMAddFreeLicenseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      transid_ = from.transid_;
    }
    if (cached_has_bits & 0x00000002u) {
      purchase_result_detail_ = from.purchase_result_detail_;
    }
    if (cached_has_bits & 0x00000004u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgAMAddFreeLicenseResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgAMAddFreeLicenseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAMAddFreeLicenseResponse::CopyFrom(const CMsgAMAddFreeLicenseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAMAddFreeLicenseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAMAddFreeLicenseResponse::IsInitialized() const {
  return true;
}

void CMsgAMAddFreeLicenseResponse::Swap(CMsgAMAddFreeLicenseResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAMAddFreeLicenseResponse::InternalSwap(CMsgAMAddFreeLicenseResponse* other) {
  using std::swap;
  swap(transid_, other->transid_);
  swap(purchase_result_detail_, other->purchase_result_detail_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgAMAddFreeLicenseResponse::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CGCMsgGetIPLocation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCMsgGetIPLocation::kIpsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCMsgGetIPLocation::CGCMsgGetIPLocation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCGCMsgGetIPLocation();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCMsgGetIPLocation)
}
CGCMsgGetIPLocation::CGCMsgGetIPLocation(const CGCMsgGetIPLocation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      ips_(from.ips_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CGCMsgGetIPLocation)
}

void CGCMsgGetIPLocation::SharedCtor() {
  _cached_size_ = 0;
}

CGCMsgGetIPLocation::~CGCMsgGetIPLocation() {
  // @@protoc_insertion_point(destructor:CGCMsgGetIPLocation)
  SharedDtor();
}

void CGCMsgGetIPLocation::SharedDtor() {
}

void CGCMsgGetIPLocation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCMsgGetIPLocation::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CGCMsgGetIPLocation& CGCMsgGetIPLocation::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCGCMsgGetIPLocation();
  return *internal_default_instance();
}

CGCMsgGetIPLocation* CGCMsgGetIPLocation::New(::google::protobuf::Arena* arena) const {
  CGCMsgGetIPLocation* n = new CGCMsgGetIPLocation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCMsgGetIPLocation::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCMsgGetIPLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ips_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CGCMsgGetIPLocation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCMsgGetIPLocation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed32 ips = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 1, 13u, input, this->mutable_ips())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_ips())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCMsgGetIPLocation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCMsgGetIPLocation)
  return false;
#undef DO_
}

void CGCMsgGetIPLocation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCMsgGetIPLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed32 ips = 1;
  for (int i = 0, n = this->ips_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(
      1, this->ips(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCMsgGetIPLocation)
}

::google::protobuf::uint8* CGCMsgGetIPLocation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CGCMsgGetIPLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed32 ips = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFixed32ToArray(1, this->ips_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCMsgGetIPLocation)
  return target;
}

size_t CGCMsgGetIPLocation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCMsgGetIPLocation)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated fixed32 ips = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->ips_size());
    size_t data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->ips_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCMsgGetIPLocation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CGCMsgGetIPLocation)
  GOOGLE_DCHECK_NE(&from, this);
  const CGCMsgGetIPLocation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCMsgGetIPLocation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CGCMsgGetIPLocation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CGCMsgGetIPLocation)
    MergeFrom(*source);
  }
}

void CGCMsgGetIPLocation::MergeFrom(const CGCMsgGetIPLocation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CGCMsgGetIPLocation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ips_.MergeFrom(from.ips_);
}

void CGCMsgGetIPLocation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CGCMsgGetIPLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCMsgGetIPLocation::CopyFrom(const CGCMsgGetIPLocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCMsgGetIPLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCMsgGetIPLocation::IsInitialized() const {
  return true;
}

void CGCMsgGetIPLocation::Swap(CGCMsgGetIPLocation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCMsgGetIPLocation::InternalSwap(CGCMsgGetIPLocation* other) {
  using std::swap;
  ips_.InternalSwap(&other->ips_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCMsgGetIPLocation::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CIPLocationInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CIPLocationInfo::kIpFieldNumber;
const int CIPLocationInfo::kLatitudeFieldNumber;
const int CIPLocationInfo::kLongitudeFieldNumber;
const int CIPLocationInfo::kCountryFieldNumber;
const int CIPLocationInfo::kStateFieldNumber;
const int CIPLocationInfo::kCityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CIPLocationInfo::CIPLocationInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCIPLocationInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CIPLocationInfo)
}
CIPLocationInfo::CIPLocationInfo(const CIPLocationInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  country_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_country()) {
    country_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_);
  }
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_state()) {
    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_city()) {
    city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_);
  }
  ::memcpy(&ip_, &from.ip_,
    static_cast<size_t>(reinterpret_cast<char*>(&longitude_) -
    reinterpret_cast<char*>(&ip_)) + sizeof(longitude_));
  // @@protoc_insertion_point(copy_constructor:CIPLocationInfo)
}

void CIPLocationInfo::SharedCtor() {
  _cached_size_ = 0;
  country_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ip_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&longitude_) -
      reinterpret_cast<char*>(&ip_)) + sizeof(longitude_));
}

CIPLocationInfo::~CIPLocationInfo() {
  // @@protoc_insertion_point(destructor:CIPLocationInfo)
  SharedDtor();
}

void CIPLocationInfo::SharedDtor() {
  country_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CIPLocationInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CIPLocationInfo::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CIPLocationInfo& CIPLocationInfo::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCIPLocationInfo();
  return *internal_default_instance();
}

CIPLocationInfo* CIPLocationInfo::New(::google::protobuf::Arena* arena) const {
  CIPLocationInfo* n = new CIPLocationInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CIPLocationInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CIPLocationInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!country_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*country_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!state_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*state_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!city_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*city_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 56u) {
    ::memset(&ip_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&longitude_) -
        reinterpret_cast<char*>(&ip_)) + sizeof(longitude_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CIPLocationInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CIPLocationInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ip = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float latitude = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          set_has_latitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float longitude = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          set_has_longitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string country = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_country()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->country().data(), static_cast<int>(this->country().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CIPLocationInfo.country");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string state = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_state()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->state().data(), static_cast<int>(this->state().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CIPLocationInfo.state");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string city = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_city()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->city().data(), static_cast<int>(this->city().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CIPLocationInfo.city");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CIPLocationInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CIPLocationInfo)
  return false;
#undef DO_
}

void CIPLocationInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CIPLocationInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 ip = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ip(), output);
  }

  // optional float latitude = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->latitude(), output);
  }

  // optional float longitude = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->longitude(), output);
  }

  // optional string country = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country().data(), static_cast<int>(this->country().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CIPLocationInfo.country");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->country(), output);
  }

  // optional string state = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->state().data(), static_cast<int>(this->state().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CIPLocationInfo.state");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->state(), output);
  }

  // optional string city = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->city().data(), static_cast<int>(this->city().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CIPLocationInfo.city");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->city(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CIPLocationInfo)
}

::google::protobuf::uint8* CIPLocationInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CIPLocationInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 ip = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ip(), target);
  }

  // optional float latitude = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->latitude(), target);
  }

  // optional float longitude = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->longitude(), target);
  }

  // optional string country = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country().data(), static_cast<int>(this->country().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CIPLocationInfo.country");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->country(), target);
  }

  // optional string state = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->state().data(), static_cast<int>(this->state().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CIPLocationInfo.state");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->state(), target);
  }

  // optional string city = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->city().data(), static_cast<int>(this->city().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CIPLocationInfo.city");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->city(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CIPLocationInfo)
  return target;
}

size_t CIPLocationInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CIPLocationInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string country = 4;
    if (has_country()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->country());
    }

    // optional string state = 5;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->state());
    }

    // optional string city = 6;
    if (has_city()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->city());
    }

    // optional uint32 ip = 1;
    if (has_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ip());
    }

    // optional float latitude = 2;
    if (has_latitude()) {
      total_size += 1 + 4;
    }

    // optional float longitude = 3;
    if (has_longitude()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CIPLocationInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CIPLocationInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CIPLocationInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CIPLocationInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CIPLocationInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CIPLocationInfo)
    MergeFrom(*source);
  }
}

void CIPLocationInfo::MergeFrom(const CIPLocationInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CIPLocationInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_country();
      country_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_state();
      state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_city();
      city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_);
    }
    if (cached_has_bits & 0x00000008u) {
      ip_ = from.ip_;
    }
    if (cached_has_bits & 0x00000010u) {
      latitude_ = from.latitude_;
    }
    if (cached_has_bits & 0x00000020u) {
      longitude_ = from.longitude_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CIPLocationInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CIPLocationInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CIPLocationInfo::CopyFrom(const CIPLocationInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CIPLocationInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CIPLocationInfo::IsInitialized() const {
  return true;
}

void CIPLocationInfo::Swap(CIPLocationInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CIPLocationInfo::InternalSwap(CIPLocationInfo* other) {
  using std::swap;
  country_.Swap(&other->country_);
  state_.Swap(&other->state_);
  city_.Swap(&other->city_);
  swap(ip_, other->ip_);
  swap(latitude_, other->latitude_);
  swap(longitude_, other->longitude_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CIPLocationInfo::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CGCMsgGetIPLocationResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCMsgGetIPLocationResponse::kInfosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCMsgGetIPLocationResponse::CGCMsgGetIPLocationResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCGCMsgGetIPLocationResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCMsgGetIPLocationResponse)
}
CGCMsgGetIPLocationResponse::CGCMsgGetIPLocationResponse(const CGCMsgGetIPLocationResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      infos_(from.infos_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CGCMsgGetIPLocationResponse)
}

void CGCMsgGetIPLocationResponse::SharedCtor() {
  _cached_size_ = 0;
}

CGCMsgGetIPLocationResponse::~CGCMsgGetIPLocationResponse() {
  // @@protoc_insertion_point(destructor:CGCMsgGetIPLocationResponse)
  SharedDtor();
}

void CGCMsgGetIPLocationResponse::SharedDtor() {
}

void CGCMsgGetIPLocationResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCMsgGetIPLocationResponse::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CGCMsgGetIPLocationResponse& CGCMsgGetIPLocationResponse::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCGCMsgGetIPLocationResponse();
  return *internal_default_instance();
}

CGCMsgGetIPLocationResponse* CGCMsgGetIPLocationResponse::New(::google::protobuf::Arena* arena) const {
  CGCMsgGetIPLocationResponse* n = new CGCMsgGetIPLocationResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCMsgGetIPLocationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCMsgGetIPLocationResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  infos_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CGCMsgGetIPLocationResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCMsgGetIPLocationResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CIPLocationInfo infos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_infos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCMsgGetIPLocationResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCMsgGetIPLocationResponse)
  return false;
#undef DO_
}

void CGCMsgGetIPLocationResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCMsgGetIPLocationResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CIPLocationInfo infos = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->infos_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->infos(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCMsgGetIPLocationResponse)
}

::google::protobuf::uint8* CGCMsgGetIPLocationResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CGCMsgGetIPLocationResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CIPLocationInfo infos = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->infos_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->infos(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCMsgGetIPLocationResponse)
  return target;
}

size_t CGCMsgGetIPLocationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCMsgGetIPLocationResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CIPLocationInfo infos = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->infos_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->infos(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCMsgGetIPLocationResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CGCMsgGetIPLocationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CGCMsgGetIPLocationResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCMsgGetIPLocationResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CGCMsgGetIPLocationResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CGCMsgGetIPLocationResponse)
    MergeFrom(*source);
  }
}

void CGCMsgGetIPLocationResponse::MergeFrom(const CGCMsgGetIPLocationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CGCMsgGetIPLocationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  infos_.MergeFrom(from.infos_);
}

void CGCMsgGetIPLocationResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CGCMsgGetIPLocationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCMsgGetIPLocationResponse::CopyFrom(const CGCMsgGetIPLocationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCMsgGetIPLocationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCMsgGetIPLocationResponse::IsInitialized() const {
  return true;
}

void CGCMsgGetIPLocationResponse::Swap(CGCMsgGetIPLocationResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCMsgGetIPLocationResponse::InternalSwap(CGCMsgGetIPLocationResponse* other) {
  using std::swap;
  infos_.InternalSwap(&other->infos_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCMsgGetIPLocationResponse::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CGCMsgSystemStatsSchema::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCMsgSystemStatsSchema::kGcAppIdFieldNumber;
const int CGCMsgSystemStatsSchema::kSchemaKvFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCMsgSystemStatsSchema::CGCMsgSystemStatsSchema()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCGCMsgSystemStatsSchema();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCMsgSystemStatsSchema)
}
CGCMsgSystemStatsSchema::CGCMsgSystemStatsSchema(const CGCMsgSystemStatsSchema& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  schema_kv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_schema_kv()) {
    schema_kv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.schema_kv_);
  }
  gc_app_id_ = from.gc_app_id_;
  // @@protoc_insertion_point(copy_constructor:CGCMsgSystemStatsSchema)
}

void CGCMsgSystemStatsSchema::SharedCtor() {
  _cached_size_ = 0;
  schema_kv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gc_app_id_ = 0u;
}

CGCMsgSystemStatsSchema::~CGCMsgSystemStatsSchema() {
  // @@protoc_insertion_point(destructor:CGCMsgSystemStatsSchema)
  SharedDtor();
}

void CGCMsgSystemStatsSchema::SharedDtor() {
  schema_kv_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CGCMsgSystemStatsSchema::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCMsgSystemStatsSchema::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CGCMsgSystemStatsSchema& CGCMsgSystemStatsSchema::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCGCMsgSystemStatsSchema();
  return *internal_default_instance();
}

CGCMsgSystemStatsSchema* CGCMsgSystemStatsSchema::New(::google::protobuf::Arena* arena) const {
  CGCMsgSystemStatsSchema* n = new CGCMsgSystemStatsSchema;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCMsgSystemStatsSchema::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCMsgSystemStatsSchema)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!schema_kv_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*schema_kv_.UnsafeRawStringPointer())->clear();
  }
  gc_app_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CGCMsgSystemStatsSchema::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCMsgSystemStatsSchema)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 gc_app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_gc_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gc_app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes schema_kv = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_schema_kv()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCMsgSystemStatsSchema)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCMsgSystemStatsSchema)
  return false;
#undef DO_
}

void CGCMsgSystemStatsSchema::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCMsgSystemStatsSchema)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 gc_app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->gc_app_id(), output);
  }

  // optional bytes schema_kv = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->schema_kv(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCMsgSystemStatsSchema)
}

::google::protobuf::uint8* CGCMsgSystemStatsSchema::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CGCMsgSystemStatsSchema)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 gc_app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->gc_app_id(), target);
  }

  // optional bytes schema_kv = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->schema_kv(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCMsgSystemStatsSchema)
  return target;
}

size_t CGCMsgSystemStatsSchema::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCMsgSystemStatsSchema)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes schema_kv = 2;
    if (has_schema_kv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->schema_kv());
    }

    // optional uint32 gc_app_id = 1;
    if (has_gc_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gc_app_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCMsgSystemStatsSchema::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CGCMsgSystemStatsSchema)
  GOOGLE_DCHECK_NE(&from, this);
  const CGCMsgSystemStatsSchema* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCMsgSystemStatsSchema>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CGCMsgSystemStatsSchema)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CGCMsgSystemStatsSchema)
    MergeFrom(*source);
  }
}

void CGCMsgSystemStatsSchema::MergeFrom(const CGCMsgSystemStatsSchema& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CGCMsgSystemStatsSchema)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_schema_kv();
      schema_kv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.schema_kv_);
    }
    if (cached_has_bits & 0x00000002u) {
      gc_app_id_ = from.gc_app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CGCMsgSystemStatsSchema::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CGCMsgSystemStatsSchema)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCMsgSystemStatsSchema::CopyFrom(const CGCMsgSystemStatsSchema& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCMsgSystemStatsSchema)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCMsgSystemStatsSchema::IsInitialized() const {
  return true;
}

void CGCMsgSystemStatsSchema::Swap(CGCMsgSystemStatsSchema* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCMsgSystemStatsSchema::InternalSwap(CGCMsgSystemStatsSchema* other) {
  using std::swap;
  schema_kv_.Swap(&other->schema_kv_);
  swap(gc_app_id_, other->gc_app_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCMsgSystemStatsSchema::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CGCMsgGetSystemStats::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCMsgGetSystemStats::CGCMsgGetSystemStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCGCMsgGetSystemStats();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCMsgGetSystemStats)
}
CGCMsgGetSystemStats::CGCMsgGetSystemStats(const CGCMsgGetSystemStats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CGCMsgGetSystemStats)
}

void CGCMsgGetSystemStats::SharedCtor() {
  _cached_size_ = 0;
}

CGCMsgGetSystemStats::~CGCMsgGetSystemStats() {
  // @@protoc_insertion_point(destructor:CGCMsgGetSystemStats)
  SharedDtor();
}

void CGCMsgGetSystemStats::SharedDtor() {
}

void CGCMsgGetSystemStats::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCMsgGetSystemStats::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CGCMsgGetSystemStats& CGCMsgGetSystemStats::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCGCMsgGetSystemStats();
  return *internal_default_instance();
}

CGCMsgGetSystemStats* CGCMsgGetSystemStats::New(::google::protobuf::Arena* arena) const {
  CGCMsgGetSystemStats* n = new CGCMsgGetSystemStats;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCMsgGetSystemStats::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCMsgGetSystemStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CGCMsgGetSystemStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCMsgGetSystemStats)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CGCMsgGetSystemStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCMsgGetSystemStats)
  return false;
#undef DO_
}

void CGCMsgGetSystemStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCMsgGetSystemStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCMsgGetSystemStats)
}

::google::protobuf::uint8* CGCMsgGetSystemStats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CGCMsgGetSystemStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCMsgGetSystemStats)
  return target;
}

size_t CGCMsgGetSystemStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCMsgGetSystemStats)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCMsgGetSystemStats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CGCMsgGetSystemStats)
  GOOGLE_DCHECK_NE(&from, this);
  const CGCMsgGetSystemStats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCMsgGetSystemStats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CGCMsgGetSystemStats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CGCMsgGetSystemStats)
    MergeFrom(*source);
  }
}

void CGCMsgGetSystemStats::MergeFrom(const CGCMsgGetSystemStats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CGCMsgGetSystemStats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CGCMsgGetSystemStats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CGCMsgGetSystemStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCMsgGetSystemStats::CopyFrom(const CGCMsgGetSystemStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCMsgGetSystemStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCMsgGetSystemStats::IsInitialized() const {
  return true;
}

void CGCMsgGetSystemStats::Swap(CGCMsgGetSystemStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCMsgGetSystemStats::InternalSwap(CGCMsgGetSystemStats* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCMsgGetSystemStats::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CGCMsgGetSystemStatsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCMsgGetSystemStatsResponse::kGcAppIdFieldNumber;
const int CGCMsgGetSystemStatsResponse::kStatsKvFieldNumber;
const int CGCMsgGetSystemStatsResponse::kActiveJobsFieldNumber;
const int CGCMsgGetSystemStatsResponse::kYieldingJobsFieldNumber;
const int CGCMsgGetSystemStatsResponse::kUserSessionsFieldNumber;
const int CGCMsgGetSystemStatsResponse::kGameServerSessionsFieldNumber;
const int CGCMsgGetSystemStatsResponse::kSocachesFieldNumber;
const int CGCMsgGetSystemStatsResponse::kSocachesToUnloadFieldNumber;
const int CGCMsgGetSystemStatsResponse::kSocachesLoadingFieldNumber;
const int CGCMsgGetSystemStatsResponse::kWritebackQueueFieldNumber;
const int CGCMsgGetSystemStatsResponse::kSteamidLocksFieldNumber;
const int CGCMsgGetSystemStatsResponse::kLogonQueueFieldNumber;
const int CGCMsgGetSystemStatsResponse::kLogonJobsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCMsgGetSystemStatsResponse::CGCMsgGetSystemStatsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCGCMsgGetSystemStatsResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCMsgGetSystemStatsResponse)
}
CGCMsgGetSystemStatsResponse::CGCMsgGetSystemStatsResponse(const CGCMsgGetSystemStatsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  stats_kv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_stats_kv()) {
    stats_kv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stats_kv_);
  }
  ::memcpy(&gc_app_id_, &from.gc_app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&logon_jobs_) -
    reinterpret_cast<char*>(&gc_app_id_)) + sizeof(logon_jobs_));
  // @@protoc_insertion_point(copy_constructor:CGCMsgGetSystemStatsResponse)
}

void CGCMsgGetSystemStatsResponse::SharedCtor() {
  _cached_size_ = 0;
  stats_kv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&gc_app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&logon_jobs_) -
      reinterpret_cast<char*>(&gc_app_id_)) + sizeof(logon_jobs_));
}

CGCMsgGetSystemStatsResponse::~CGCMsgGetSystemStatsResponse() {
  // @@protoc_insertion_point(destructor:CGCMsgGetSystemStatsResponse)
  SharedDtor();
}

void CGCMsgGetSystemStatsResponse::SharedDtor() {
  stats_kv_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CGCMsgGetSystemStatsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCMsgGetSystemStatsResponse::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CGCMsgGetSystemStatsResponse& CGCMsgGetSystemStatsResponse::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCGCMsgGetSystemStatsResponse();
  return *internal_default_instance();
}

CGCMsgGetSystemStatsResponse* CGCMsgGetSystemStatsResponse::New(::google::protobuf::Arena* arena) const {
  CGCMsgGetSystemStatsResponse* n = new CGCMsgGetSystemStatsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCMsgGetSystemStatsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCMsgGetSystemStatsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!stats_kv_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*stats_kv_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 254u) {
    ::memset(&gc_app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&socaches_to_unload_) -
        reinterpret_cast<char*>(&gc_app_id_)) + sizeof(socaches_to_unload_));
  }
  if (cached_has_bits & 7936u) {
    ::memset(&socaches_loading_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&logon_jobs_) -
        reinterpret_cast<char*>(&socaches_loading_)) + sizeof(logon_jobs_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CGCMsgGetSystemStatsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCMsgGetSystemStatsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 gc_app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_gc_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gc_app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes stats_kv = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_stats_kv()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 active_jobs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_active_jobs();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &active_jobs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 yielding_jobs = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_yielding_jobs();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &yielding_jobs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 user_sessions = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_user_sessions();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_sessions_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 game_server_sessions = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_game_server_sessions();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_server_sessions_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 socaches = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_socaches();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &socaches_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 socaches_to_unload = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_socaches_to_unload();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &socaches_to_unload_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 socaches_loading = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_socaches_loading();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &socaches_loading_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 writeback_queue = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_writeback_queue();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &writeback_queue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 steamid_locks = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_steamid_locks();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &steamid_locks_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 logon_queue = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_logon_queue();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &logon_queue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 logon_jobs = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_logon_jobs();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &logon_jobs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCMsgGetSystemStatsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCMsgGetSystemStatsResponse)
  return false;
#undef DO_
}

void CGCMsgGetSystemStatsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCMsgGetSystemStatsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 gc_app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->gc_app_id(), output);
  }

  // optional bytes stats_kv = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->stats_kv(), output);
  }

  // optional uint32 active_jobs = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->active_jobs(), output);
  }

  // optional uint32 yielding_jobs = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->yielding_jobs(), output);
  }

  // optional uint32 user_sessions = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->user_sessions(), output);
  }

  // optional uint32 game_server_sessions = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->game_server_sessions(), output);
  }

  // optional uint32 socaches = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->socaches(), output);
  }

  // optional uint32 socaches_to_unload = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->socaches_to_unload(), output);
  }

  // optional uint32 socaches_loading = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->socaches_loading(), output);
  }

  // optional uint32 writeback_queue = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->writeback_queue(), output);
  }

  // optional uint32 steamid_locks = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->steamid_locks(), output);
  }

  // optional uint32 logon_queue = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->logon_queue(), output);
  }

  // optional uint32 logon_jobs = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->logon_jobs(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCMsgGetSystemStatsResponse)
}

::google::protobuf::uint8* CGCMsgGetSystemStatsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CGCMsgGetSystemStatsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 gc_app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->gc_app_id(), target);
  }

  // optional bytes stats_kv = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->stats_kv(), target);
  }

  // optional uint32 active_jobs = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->active_jobs(), target);
  }

  // optional uint32 yielding_jobs = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->yielding_jobs(), target);
  }

  // optional uint32 user_sessions = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->user_sessions(), target);
  }

  // optional uint32 game_server_sessions = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->game_server_sessions(), target);
  }

  // optional uint32 socaches = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->socaches(), target);
  }

  // optional uint32 socaches_to_unload = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->socaches_to_unload(), target);
  }

  // optional uint32 socaches_loading = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->socaches_loading(), target);
  }

  // optional uint32 writeback_queue = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->writeback_queue(), target);
  }

  // optional uint32 steamid_locks = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->steamid_locks(), target);
  }

  // optional uint32 logon_queue = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->logon_queue(), target);
  }

  // optional uint32 logon_jobs = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->logon_jobs(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCMsgGetSystemStatsResponse)
  return target;
}

size_t CGCMsgGetSystemStatsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCMsgGetSystemStatsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes stats_kv = 2;
    if (has_stats_kv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->stats_kv());
    }

    // optional uint32 gc_app_id = 1;
    if (has_gc_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gc_app_id());
    }

    // optional uint32 active_jobs = 3;
    if (has_active_jobs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->active_jobs());
    }

    // optional uint32 yielding_jobs = 4;
    if (has_yielding_jobs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->yielding_jobs());
    }

    // optional uint32 user_sessions = 5;
    if (has_user_sessions()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->user_sessions());
    }

    // optional uint32 game_server_sessions = 6;
    if (has_game_server_sessions()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->game_server_sessions());
    }

    // optional uint32 socaches = 7;
    if (has_socaches()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->socaches());
    }

    // optional uint32 socaches_to_unload = 8;
    if (has_socaches_to_unload()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->socaches_to_unload());
    }

  }
  if (_has_bits_[8 / 32] & 7936u) {
    // optional uint32 socaches_loading = 9;
    if (has_socaches_loading()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->socaches_loading());
    }

    // optional uint32 writeback_queue = 10;
    if (has_writeback_queue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->writeback_queue());
    }

    // optional uint32 steamid_locks = 11;
    if (has_steamid_locks()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->steamid_locks());
    }

    // optional uint32 logon_queue = 12;
    if (has_logon_queue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->logon_queue());
    }

    // optional uint32 logon_jobs = 13;
    if (has_logon_jobs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->logon_jobs());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCMsgGetSystemStatsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CGCMsgGetSystemStatsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CGCMsgGetSystemStatsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCMsgGetSystemStatsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CGCMsgGetSystemStatsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CGCMsgGetSystemStatsResponse)
    MergeFrom(*source);
  }
}

void CGCMsgGetSystemStatsResponse::MergeFrom(const CGCMsgGetSystemStatsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CGCMsgGetSystemStatsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_stats_kv();
      stats_kv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stats_kv_);
    }
    if (cached_has_bits & 0x00000002u) {
      gc_app_id_ = from.gc_app_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      active_jobs_ = from.active_jobs_;
    }
    if (cached_has_bits & 0x00000008u) {
      yielding_jobs_ = from.yielding_jobs_;
    }
    if (cached_has_bits & 0x00000010u) {
      user_sessions_ = from.user_sessions_;
    }
    if (cached_has_bits & 0x00000020u) {
      game_server_sessions_ = from.game_server_sessions_;
    }
    if (cached_has_bits & 0x00000040u) {
      socaches_ = from.socaches_;
    }
    if (cached_has_bits & 0x00000080u) {
      socaches_to_unload_ = from.socaches_to_unload_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 7936u) {
    if (cached_has_bits & 0x00000100u) {
      socaches_loading_ = from.socaches_loading_;
    }
    if (cached_has_bits & 0x00000200u) {
      writeback_queue_ = from.writeback_queue_;
    }
    if (cached_has_bits & 0x00000400u) {
      steamid_locks_ = from.steamid_locks_;
    }
    if (cached_has_bits & 0x00000800u) {
      logon_queue_ = from.logon_queue_;
    }
    if (cached_has_bits & 0x00001000u) {
      logon_jobs_ = from.logon_jobs_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CGCMsgGetSystemStatsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CGCMsgGetSystemStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCMsgGetSystemStatsResponse::CopyFrom(const CGCMsgGetSystemStatsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCMsgGetSystemStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCMsgGetSystemStatsResponse::IsInitialized() const {
  return true;
}

void CGCMsgGetSystemStatsResponse::Swap(CGCMsgGetSystemStatsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCMsgGetSystemStatsResponse::InternalSwap(CGCMsgGetSystemStatsResponse* other) {
  using std::swap;
  stats_kv_.Swap(&other->stats_kv_);
  swap(gc_app_id_, other->gc_app_id_);
  swap(active_jobs_, other->active_jobs_);
  swap(yielding_jobs_, other->yielding_jobs_);
  swap(user_sessions_, other->user_sessions_);
  swap(game_server_sessions_, other->game_server_sessions_);
  swap(socaches_, other->socaches_);
  swap(socaches_to_unload_, other->socaches_to_unload_);
  swap(socaches_loading_, other->socaches_loading_);
  swap(writeback_queue_, other->writeback_queue_);
  swap(steamid_locks_, other->steamid_locks_);
  swap(logon_queue_, other->logon_queue_);
  swap(logon_jobs_, other->logon_jobs_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCMsgGetSystemStatsResponse::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgAMSendEmail_ReplacementToken::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgAMSendEmail_ReplacementToken::kTokenNameFieldNumber;
const int CMsgAMSendEmail_ReplacementToken::kTokenValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgAMSendEmail_ReplacementToken::CMsgAMSendEmail_ReplacementToken()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgAMSendEmail_ReplacementToken();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgAMSendEmail.ReplacementToken)
}
CMsgAMSendEmail_ReplacementToken::CMsgAMSendEmail_ReplacementToken(const CMsgAMSendEmail_ReplacementToken& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_token_name()) {
    token_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_name_);
  }
  token_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_token_value()) {
    token_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_value_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgAMSendEmail.ReplacementToken)
}

void CMsgAMSendEmail_ReplacementToken::SharedCtor() {
  _cached_size_ = 0;
  token_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgAMSendEmail_ReplacementToken::~CMsgAMSendEmail_ReplacementToken() {
  // @@protoc_insertion_point(destructor:CMsgAMSendEmail.ReplacementToken)
  SharedDtor();
}

void CMsgAMSendEmail_ReplacementToken::SharedDtor() {
  token_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgAMSendEmail_ReplacementToken::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgAMSendEmail_ReplacementToken::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgAMSendEmail_ReplacementToken& CMsgAMSendEmail_ReplacementToken::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgAMSendEmail_ReplacementToken();
  return *internal_default_instance();
}

CMsgAMSendEmail_ReplacementToken* CMsgAMSendEmail_ReplacementToken::New(::google::protobuf::Arena* arena) const {
  CMsgAMSendEmail_ReplacementToken* n = new CMsgAMSendEmail_ReplacementToken;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgAMSendEmail_ReplacementToken::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAMSendEmail.ReplacementToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!token_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*token_name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!token_value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*token_value_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgAMSendEmail_ReplacementToken::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgAMSendEmail.ReplacementToken)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string token_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->token_name().data(), static_cast<int>(this->token_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgAMSendEmail.ReplacementToken.token_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string token_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->token_value().data(), static_cast<int>(this->token_value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgAMSendEmail.ReplacementToken.token_value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgAMSendEmail.ReplacementToken)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgAMSendEmail.ReplacementToken)
  return false;
#undef DO_
}

void CMsgAMSendEmail_ReplacementToken::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgAMSendEmail.ReplacementToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string token_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token_name().data(), static_cast<int>(this->token_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgAMSendEmail.ReplacementToken.token_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token_name(), output);
  }

  // optional string token_value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token_value().data(), static_cast<int>(this->token_value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgAMSendEmail.ReplacementToken.token_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->token_value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgAMSendEmail.ReplacementToken)
}

::google::protobuf::uint8* CMsgAMSendEmail_ReplacementToken::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMSendEmail.ReplacementToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string token_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token_name().data(), static_cast<int>(this->token_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgAMSendEmail.ReplacementToken.token_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token_name(), target);
  }

  // optional string token_value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token_value().data(), static_cast<int>(this->token_value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgAMSendEmail.ReplacementToken.token_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->token_value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMSendEmail.ReplacementToken)
  return target;
}

size_t CMsgAMSendEmail_ReplacementToken::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAMSendEmail.ReplacementToken)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string token_name = 1;
    if (has_token_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->token_name());
    }

    // optional string token_value = 2;
    if (has_token_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->token_value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgAMSendEmail_ReplacementToken::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgAMSendEmail.ReplacementToken)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgAMSendEmail_ReplacementToken* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAMSendEmail_ReplacementToken>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgAMSendEmail.ReplacementToken)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgAMSendEmail.ReplacementToken)
    MergeFrom(*source);
  }
}

void CMsgAMSendEmail_ReplacementToken::MergeFrom(const CMsgAMSendEmail_ReplacementToken& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgAMSendEmail.ReplacementToken)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_token_name();
      token_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_token_value();
      token_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_value_);
    }
  }
}

void CMsgAMSendEmail_ReplacementToken::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgAMSendEmail.ReplacementToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAMSendEmail_ReplacementToken::CopyFrom(const CMsgAMSendEmail_ReplacementToken& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAMSendEmail.ReplacementToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAMSendEmail_ReplacementToken::IsInitialized() const {
  return true;
}

void CMsgAMSendEmail_ReplacementToken::Swap(CMsgAMSendEmail_ReplacementToken* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAMSendEmail_ReplacementToken::InternalSwap(CMsgAMSendEmail_ReplacementToken* other) {
  using std::swap;
  token_name_.Swap(&other->token_name_);
  token_value_.Swap(&other->token_value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgAMSendEmail_ReplacementToken::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgAMSendEmail_PersonaNameReplacementToken::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgAMSendEmail_PersonaNameReplacementToken::kSteamidFieldNumber;
const int CMsgAMSendEmail_PersonaNameReplacementToken::kTokenNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgAMSendEmail_PersonaNameReplacementToken::CMsgAMSendEmail_PersonaNameReplacementToken()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgAMSendEmail_PersonaNameReplacementToken();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgAMSendEmail.PersonaNameReplacementToken)
}
CMsgAMSendEmail_PersonaNameReplacementToken::CMsgAMSendEmail_PersonaNameReplacementToken(const CMsgAMSendEmail_PersonaNameReplacementToken& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_token_name()) {
    token_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_name_);
  }
  steamid_ = from.steamid_;
  // @@protoc_insertion_point(copy_constructor:CMsgAMSendEmail.PersonaNameReplacementToken)
}

void CMsgAMSendEmail_PersonaNameReplacementToken::SharedCtor() {
  _cached_size_ = 0;
  token_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  steamid_ = GOOGLE_ULONGLONG(0);
}

CMsgAMSendEmail_PersonaNameReplacementToken::~CMsgAMSendEmail_PersonaNameReplacementToken() {
  // @@protoc_insertion_point(destructor:CMsgAMSendEmail.PersonaNameReplacementToken)
  SharedDtor();
}

void CMsgAMSendEmail_PersonaNameReplacementToken::SharedDtor() {
  token_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgAMSendEmail_PersonaNameReplacementToken::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgAMSendEmail_PersonaNameReplacementToken::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgAMSendEmail_PersonaNameReplacementToken& CMsgAMSendEmail_PersonaNameReplacementToken::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgAMSendEmail_PersonaNameReplacementToken();
  return *internal_default_instance();
}

CMsgAMSendEmail_PersonaNameReplacementToken* CMsgAMSendEmail_PersonaNameReplacementToken::New(::google::protobuf::Arena* arena) const {
  CMsgAMSendEmail_PersonaNameReplacementToken* n = new CMsgAMSendEmail_PersonaNameReplacementToken;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgAMSendEmail_PersonaNameReplacementToken::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAMSendEmail.PersonaNameReplacementToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!token_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*token_name_.UnsafeRawStringPointer())->clear();
  }
  steamid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgAMSendEmail_PersonaNameReplacementToken::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgAMSendEmail.PersonaNameReplacementToken)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string token_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->token_name().data(), static_cast<int>(this->token_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgAMSendEmail.PersonaNameReplacementToken.token_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgAMSendEmail.PersonaNameReplacementToken)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgAMSendEmail.PersonaNameReplacementToken)
  return false;
#undef DO_
}

void CMsgAMSendEmail_PersonaNameReplacementToken::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgAMSendEmail.PersonaNameReplacementToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  // optional string token_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token_name().data(), static_cast<int>(this->token_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgAMSendEmail.PersonaNameReplacementToken.token_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->token_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgAMSendEmail.PersonaNameReplacementToken)
}

::google::protobuf::uint8* CMsgAMSendEmail_PersonaNameReplacementToken::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMSendEmail.PersonaNameReplacementToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  // optional string token_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token_name().data(), static_cast<int>(this->token_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgAMSendEmail.PersonaNameReplacementToken.token_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->token_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMSendEmail.PersonaNameReplacementToken)
  return target;
}

size_t CMsgAMSendEmail_PersonaNameReplacementToken::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAMSendEmail.PersonaNameReplacementToken)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string token_name = 2;
    if (has_token_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->token_name());
    }

    // optional fixed64 steamid = 1;
    if (has_steamid()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgAMSendEmail_PersonaNameReplacementToken::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgAMSendEmail.PersonaNameReplacementToken)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgAMSendEmail_PersonaNameReplacementToken* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAMSendEmail_PersonaNameReplacementToken>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgAMSendEmail.PersonaNameReplacementToken)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgAMSendEmail.PersonaNameReplacementToken)
    MergeFrom(*source);
  }
}

void CMsgAMSendEmail_PersonaNameReplacementToken::MergeFrom(const CMsgAMSendEmail_PersonaNameReplacementToken& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgAMSendEmail.PersonaNameReplacementToken)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_token_name();
      token_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      steamid_ = from.steamid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgAMSendEmail_PersonaNameReplacementToken::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgAMSendEmail.PersonaNameReplacementToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAMSendEmail_PersonaNameReplacementToken::CopyFrom(const CMsgAMSendEmail_PersonaNameReplacementToken& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAMSendEmail.PersonaNameReplacementToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAMSendEmail_PersonaNameReplacementToken::IsInitialized() const {
  return true;
}

void CMsgAMSendEmail_PersonaNameReplacementToken::Swap(CMsgAMSendEmail_PersonaNameReplacementToken* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAMSendEmail_PersonaNameReplacementToken::InternalSwap(CMsgAMSendEmail_PersonaNameReplacementToken* other) {
  using std::swap;
  token_name_.Swap(&other->token_name_);
  swap(steamid_, other->steamid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgAMSendEmail_PersonaNameReplacementToken::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgAMSendEmail::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgAMSendEmail::kSteamidFieldNumber;
const int CMsgAMSendEmail::kEmailMsgTypeFieldNumber;
const int CMsgAMSendEmail::kEmailFormatFieldNumber;
const int CMsgAMSendEmail::kPersonaNameTokensFieldNumber;
const int CMsgAMSendEmail::kSourceGcFieldNumber;
const int CMsgAMSendEmail::kTokensFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgAMSendEmail::CMsgAMSendEmail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgAMSendEmail();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgAMSendEmail)
}
CMsgAMSendEmail::CMsgAMSendEmail(const CMsgAMSendEmail& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      persona_name_tokens_(from.persona_name_tokens_),
      tokens_(from.tokens_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steamid_, &from.steamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&source_gc_) -
    reinterpret_cast<char*>(&steamid_)) + sizeof(source_gc_));
  // @@protoc_insertion_point(copy_constructor:CMsgAMSendEmail)
}

void CMsgAMSendEmail::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&steamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&source_gc_) -
      reinterpret_cast<char*>(&steamid_)) + sizeof(source_gc_));
}

CMsgAMSendEmail::~CMsgAMSendEmail() {
  // @@protoc_insertion_point(destructor:CMsgAMSendEmail)
  SharedDtor();
}

void CMsgAMSendEmail::SharedDtor() {
}

void CMsgAMSendEmail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgAMSendEmail::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgAMSendEmail& CMsgAMSendEmail::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgAMSendEmail();
  return *internal_default_instance();
}

CMsgAMSendEmail* CMsgAMSendEmail::New(::google::protobuf::Arena* arena) const {
  CMsgAMSendEmail* n = new CMsgAMSendEmail;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgAMSendEmail::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAMSendEmail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  persona_name_tokens_.Clear();
  tokens_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&steamid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&source_gc_) -
        reinterpret_cast<char*>(&steamid_)) + sizeof(source_gc_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgAMSendEmail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgAMSendEmail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 email_msg_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_email_msg_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &email_msg_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 email_format = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_email_format();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &email_format_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgAMSendEmail.PersonaNameReplacementToken persona_name_tokens = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_persona_name_tokens()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 source_gc = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_source_gc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &source_gc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgAMSendEmail.ReplacementToken tokens = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_tokens()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgAMSendEmail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgAMSendEmail)
  return false;
#undef DO_
}

void CMsgAMSendEmail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgAMSendEmail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  // optional uint32 email_msg_type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->email_msg_type(), output);
  }

  // optional uint32 email_format = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->email_format(), output);
  }

  // repeated .CMsgAMSendEmail.PersonaNameReplacementToken persona_name_tokens = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->persona_name_tokens_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->persona_name_tokens(static_cast<int>(i)), output);
  }

  // optional uint32 source_gc = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->source_gc(), output);
  }

  // repeated .CMsgAMSendEmail.ReplacementToken tokens = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tokens_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->tokens(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgAMSendEmail)
}

::google::protobuf::uint8* CMsgAMSendEmail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMSendEmail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  // optional uint32 email_msg_type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->email_msg_type(), target);
  }

  // optional uint32 email_format = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->email_format(), target);
  }

  // repeated .CMsgAMSendEmail.PersonaNameReplacementToken persona_name_tokens = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->persona_name_tokens_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->persona_name_tokens(static_cast<int>(i)), deterministic, target);
  }

  // optional uint32 source_gc = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->source_gc(), target);
  }

  // repeated .CMsgAMSendEmail.ReplacementToken tokens = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tokens_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->tokens(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMSendEmail)
  return target;
}

size_t CMsgAMSendEmail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAMSendEmail)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgAMSendEmail.PersonaNameReplacementToken persona_name_tokens = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->persona_name_tokens_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->persona_name_tokens(static_cast<int>(i)));
    }
  }

  // repeated .CMsgAMSendEmail.ReplacementToken tokens = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->tokens_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tokens(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional fixed64 steamid = 1;
    if (has_steamid()) {
      total_size += 1 + 8;
    }

    // optional uint32 email_msg_type = 2;
    if (has_email_msg_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->email_msg_type());
    }

    // optional uint32 email_format = 3;
    if (has_email_format()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->email_format());
    }

    // optional uint32 source_gc = 6;
    if (has_source_gc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->source_gc());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgAMSendEmail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgAMSendEmail)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgAMSendEmail* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAMSendEmail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgAMSendEmail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgAMSendEmail)
    MergeFrom(*source);
  }
}

void CMsgAMSendEmail::MergeFrom(const CMsgAMSendEmail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgAMSendEmail)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  persona_name_tokens_.MergeFrom(from.persona_name_tokens_);
  tokens_.MergeFrom(from.tokens_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      steamid_ = from.steamid_;
    }
    if (cached_has_bits & 0x00000002u) {
      email_msg_type_ = from.email_msg_type_;
    }
    if (cached_has_bits & 0x00000004u) {
      email_format_ = from.email_format_;
    }
    if (cached_has_bits & 0x00000008u) {
      source_gc_ = from.source_gc_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgAMSendEmail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgAMSendEmail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAMSendEmail::CopyFrom(const CMsgAMSendEmail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAMSendEmail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAMSendEmail::IsInitialized() const {
  return true;
}

void CMsgAMSendEmail::Swap(CMsgAMSendEmail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAMSendEmail::InternalSwap(CMsgAMSendEmail* other) {
  using std::swap;
  persona_name_tokens_.InternalSwap(&other->persona_name_tokens_);
  tokens_.InternalSwap(&other->tokens_);
  swap(steamid_, other->steamid_);
  swap(email_msg_type_, other->email_msg_type_);
  swap(email_format_, other->email_format_);
  swap(source_gc_, other->source_gc_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgAMSendEmail::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgAMSendEmailResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgAMSendEmailResponse::kEresultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgAMSendEmailResponse::CMsgAMSendEmailResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgAMSendEmailResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgAMSendEmailResponse)
}
CMsgAMSendEmailResponse::CMsgAMSendEmailResponse(const CMsgAMSendEmailResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:CMsgAMSendEmailResponse)
}

void CMsgAMSendEmailResponse::SharedCtor() {
  _cached_size_ = 0;
  eresult_ = 2u;
}

CMsgAMSendEmailResponse::~CMsgAMSendEmailResponse() {
  // @@protoc_insertion_point(destructor:CMsgAMSendEmailResponse)
  SharedDtor();
}

void CMsgAMSendEmailResponse::SharedDtor() {
}

void CMsgAMSendEmailResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgAMSendEmailResponse::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgAMSendEmailResponse& CMsgAMSendEmailResponse::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgAMSendEmailResponse();
  return *internal_default_instance();
}

CMsgAMSendEmailResponse* CMsgAMSendEmailResponse::New(::google::protobuf::Arena* arena) const {
  CMsgAMSendEmailResponse* n = new CMsgAMSendEmailResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgAMSendEmailResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAMSendEmailResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eresult_ = 2u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgAMSendEmailResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgAMSendEmailResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgAMSendEmailResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgAMSendEmailResponse)
  return false;
#undef DO_
}

void CMsgAMSendEmailResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgAMSendEmailResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgAMSendEmailResponse)
}

::google::protobuf::uint8* CMsgAMSendEmailResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMSendEmailResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMSendEmailResponse)
  return target;
}

size_t CMsgAMSendEmailResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAMSendEmailResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 eresult = 1 [default = 2];
  if (has_eresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgAMSendEmailResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgAMSendEmailResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgAMSendEmailResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAMSendEmailResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgAMSendEmailResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgAMSendEmailResponse)
    MergeFrom(*source);
  }
}

void CMsgAMSendEmailResponse::MergeFrom(const CMsgAMSendEmailResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgAMSendEmailResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgAMSendEmailResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgAMSendEmailResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAMSendEmailResponse::CopyFrom(const CMsgAMSendEmailResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAMSendEmailResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAMSendEmailResponse::IsInitialized() const {
  return true;
}

void CMsgAMSendEmailResponse::Swap(CMsgAMSendEmailResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAMSendEmailResponse::InternalSwap(CMsgAMSendEmailResponse* other) {
  using std::swap;
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgAMSendEmailResponse::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCGetEmailTemplate::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCGetEmailTemplate::kAppIdFieldNumber;
const int CMsgGCGetEmailTemplate::kEmailMsgTypeFieldNumber;
const int CMsgGCGetEmailTemplate::kEmailLangFieldNumber;
const int CMsgGCGetEmailTemplate::kEmailFormatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCGetEmailTemplate::CMsgGCGetEmailTemplate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCGetEmailTemplate();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCGetEmailTemplate)
}
CMsgGCGetEmailTemplate::CMsgGCGetEmailTemplate(const CMsgGCGetEmailTemplate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&email_format_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(email_format_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCGetEmailTemplate)
}

void CMsgGCGetEmailTemplate::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&app_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&email_format_) -
      reinterpret_cast<char*>(&app_id_)) + sizeof(email_format_));
}

CMsgGCGetEmailTemplate::~CMsgGCGetEmailTemplate() {
  // @@protoc_insertion_point(destructor:CMsgGCGetEmailTemplate)
  SharedDtor();
}

void CMsgGCGetEmailTemplate::SharedDtor() {
}

void CMsgGCGetEmailTemplate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCGetEmailTemplate::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCGetEmailTemplate& CMsgGCGetEmailTemplate::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCGetEmailTemplate();
  return *internal_default_instance();
}

CMsgGCGetEmailTemplate* CMsgGCGetEmailTemplate::New(::google::protobuf::Arena* arena) const {
  CMsgGCGetEmailTemplate* n = new CMsgGCGetEmailTemplate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCGetEmailTemplate::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCGetEmailTemplate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&email_format_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(email_format_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCGetEmailTemplate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCGetEmailTemplate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 email_msg_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_email_msg_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &email_msg_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 email_lang = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_email_lang();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &email_lang_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 email_format = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_email_format();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &email_format_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCGetEmailTemplate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCGetEmailTemplate)
  return false;
#undef DO_
}

void CMsgGCGetEmailTemplate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCGetEmailTemplate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional uint32 email_msg_type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->email_msg_type(), output);
  }

  // optional int32 email_lang = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->email_lang(), output);
  }

  // optional int32 email_format = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->email_format(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCGetEmailTemplate)
}

::google::protobuf::uint8* CMsgGCGetEmailTemplate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCGetEmailTemplate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional uint32 email_msg_type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->email_msg_type(), target);
  }

  // optional int32 email_lang = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->email_lang(), target);
  }

  // optional int32 email_format = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->email_format(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCGetEmailTemplate)
  return target;
}

size_t CMsgGCGetEmailTemplate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCGetEmailTemplate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 email_msg_type = 2;
    if (has_email_msg_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->email_msg_type());
    }

    // optional int32 email_lang = 3;
    if (has_email_lang()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->email_lang());
    }

    // optional int32 email_format = 4;
    if (has_email_format()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->email_format());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCGetEmailTemplate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCGetEmailTemplate)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCGetEmailTemplate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCGetEmailTemplate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCGetEmailTemplate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCGetEmailTemplate)
    MergeFrom(*source);
  }
}

void CMsgGCGetEmailTemplate::MergeFrom(const CMsgGCGetEmailTemplate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCGetEmailTemplate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      email_msg_type_ = from.email_msg_type_;
    }
    if (cached_has_bits & 0x00000004u) {
      email_lang_ = from.email_lang_;
    }
    if (cached_has_bits & 0x00000008u) {
      email_format_ = from.email_format_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCGetEmailTemplate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCGetEmailTemplate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCGetEmailTemplate::CopyFrom(const CMsgGCGetEmailTemplate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCGetEmailTemplate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCGetEmailTemplate::IsInitialized() const {
  return true;
}

void CMsgGCGetEmailTemplate::Swap(CMsgGCGetEmailTemplate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCGetEmailTemplate::InternalSwap(CMsgGCGetEmailTemplate* other) {
  using std::swap;
  swap(app_id_, other->app_id_);
  swap(email_msg_type_, other->email_msg_type_);
  swap(email_lang_, other->email_lang_);
  swap(email_format_, other->email_format_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCGetEmailTemplate::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCGetEmailTemplateResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCGetEmailTemplateResponse::kEresultFieldNumber;
const int CMsgGCGetEmailTemplateResponse::kTemplateExistsFieldNumber;
const int CMsgGCGetEmailTemplateResponse::kTemplateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCGetEmailTemplateResponse::CMsgGCGetEmailTemplateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCGetEmailTemplateResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCGetEmailTemplateResponse)
}
CMsgGCGetEmailTemplateResponse::CMsgGCGetEmailTemplateResponse(const CMsgGCGetEmailTemplateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  template__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_template_()) {
    template__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.template__);
  }
  ::memcpy(&template_exists_, &from.template_exists_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&template_exists_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCGetEmailTemplateResponse)
}

void CMsgGCGetEmailTemplateResponse::SharedCtor() {
  _cached_size_ = 0;
  template__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  template_exists_ = false;
  eresult_ = 2u;
}

CMsgGCGetEmailTemplateResponse::~CMsgGCGetEmailTemplateResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCGetEmailTemplateResponse)
  SharedDtor();
}

void CMsgGCGetEmailTemplateResponse::SharedDtor() {
  template__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGCGetEmailTemplateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCGetEmailTemplateResponse::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCGetEmailTemplateResponse& CMsgGCGetEmailTemplateResponse::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCGetEmailTemplateResponse();
  return *internal_default_instance();
}

CMsgGCGetEmailTemplateResponse* CMsgGCGetEmailTemplateResponse::New(::google::protobuf::Arena* arena) const {
  CMsgGCGetEmailTemplateResponse* n = new CMsgGCGetEmailTemplateResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCGetEmailTemplateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCGetEmailTemplateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!template__.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*template__.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 6u) {
    template_exists_ = false;
    eresult_ = 2u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCGetEmailTemplateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCGetEmailTemplateResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool template_exists = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_template_exists();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &template_exists_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string template = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_template_()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->template_().data(), static_cast<int>(this->template_().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGCGetEmailTemplateResponse.template");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCGetEmailTemplateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCGetEmailTemplateResponse)
  return false;
#undef DO_
}

void CMsgGCGetEmailTemplateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCGetEmailTemplateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult(), output);
  }

  // optional bool template_exists = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->template_exists(), output);
  }

  // optional string template = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->template_().data(), static_cast<int>(this->template_().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCGetEmailTemplateResponse.template");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->template_(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCGetEmailTemplateResponse)
}

::google::protobuf::uint8* CMsgGCGetEmailTemplateResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCGetEmailTemplateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult(), target);
  }

  // optional bool template_exists = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->template_exists(), target);
  }

  // optional string template = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->template_().data(), static_cast<int>(this->template_().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCGetEmailTemplateResponse.template");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->template_(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCGetEmailTemplateResponse)
  return target;
}

size_t CMsgGCGetEmailTemplateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCGetEmailTemplateResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string template = 3;
    if (has_template_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->template_());
    }

    // optional bool template_exists = 2;
    if (has_template_exists()) {
      total_size += 1 + 1;
    }

    // optional uint32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCGetEmailTemplateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCGetEmailTemplateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCGetEmailTemplateResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCGetEmailTemplateResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCGetEmailTemplateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCGetEmailTemplateResponse)
    MergeFrom(*source);
  }
}

void CMsgGCGetEmailTemplateResponse::MergeFrom(const CMsgGCGetEmailTemplateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCGetEmailTemplateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_template_();
      template__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.template__);
    }
    if (cached_has_bits & 0x00000002u) {
      template_exists_ = from.template_exists_;
    }
    if (cached_has_bits & 0x00000004u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCGetEmailTemplateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCGetEmailTemplateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCGetEmailTemplateResponse::CopyFrom(const CMsgGCGetEmailTemplateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCGetEmailTemplateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCGetEmailTemplateResponse::IsInitialized() const {
  return true;
}

void CMsgGCGetEmailTemplateResponse::Swap(CMsgGCGetEmailTemplateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCGetEmailTemplateResponse::InternalSwap(CMsgGCGetEmailTemplateResponse* other) {
  using std::swap;
  template__.Swap(&other->template__);
  swap(template_exists_, other->template_exists_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCGetEmailTemplateResponse::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgAMGrantGuestPasses2::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgAMGrantGuestPasses2::kSteamIdFieldNumber;
const int CMsgAMGrantGuestPasses2::kPackageIdFieldNumber;
const int CMsgAMGrantGuestPasses2::kPassesToGrantFieldNumber;
const int CMsgAMGrantGuestPasses2::kDaysToExpirationFieldNumber;
const int CMsgAMGrantGuestPasses2::kActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgAMGrantGuestPasses2::CMsgAMGrantGuestPasses2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgAMGrantGuestPasses2();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgAMGrantGuestPasses2)
}
CMsgAMGrantGuestPasses2::CMsgAMGrantGuestPasses2(const CMsgAMGrantGuestPasses2& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steam_id_, &from.steam_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&action_) -
    reinterpret_cast<char*>(&steam_id_)) + sizeof(action_));
  // @@protoc_insertion_point(copy_constructor:CMsgAMGrantGuestPasses2)
}

void CMsgAMGrantGuestPasses2::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&steam_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&action_) -
      reinterpret_cast<char*>(&steam_id_)) + sizeof(action_));
}

CMsgAMGrantGuestPasses2::~CMsgAMGrantGuestPasses2() {
  // @@protoc_insertion_point(destructor:CMsgAMGrantGuestPasses2)
  SharedDtor();
}

void CMsgAMGrantGuestPasses2::SharedDtor() {
}

void CMsgAMGrantGuestPasses2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgAMGrantGuestPasses2::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgAMGrantGuestPasses2& CMsgAMGrantGuestPasses2::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgAMGrantGuestPasses2();
  return *internal_default_instance();
}

CMsgAMGrantGuestPasses2* CMsgAMGrantGuestPasses2::New(::google::protobuf::Arena* arena) const {
  CMsgAMGrantGuestPasses2* n = new CMsgAMGrantGuestPasses2;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgAMGrantGuestPasses2::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAMGrantGuestPasses2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&steam_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&action_) -
        reinterpret_cast<char*>(&steam_id_)) + sizeof(action_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgAMGrantGuestPasses2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgAMGrantGuestPasses2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 package_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_package_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &package_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 passes_to_grant = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_passes_to_grant();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &passes_to_grant_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 days_to_expiration = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_days_to_expiration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &days_to_expiration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 action = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_action();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &action_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgAMGrantGuestPasses2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgAMGrantGuestPasses2)
  return false;
#undef DO_
}

void CMsgAMGrantGuestPasses2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgAMGrantGuestPasses2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id(), output);
  }

  // optional uint32 package_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->package_id(), output);
  }

  // optional int32 passes_to_grant = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->passes_to_grant(), output);
  }

  // optional int32 days_to_expiration = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->days_to_expiration(), output);
  }

  // optional int32 action = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->action(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgAMGrantGuestPasses2)
}

::google::protobuf::uint8* CMsgAMGrantGuestPasses2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMGrantGuestPasses2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id(), target);
  }

  // optional uint32 package_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->package_id(), target);
  }

  // optional int32 passes_to_grant = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->passes_to_grant(), target);
  }

  // optional int32 days_to_expiration = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->days_to_expiration(), target);
  }

  // optional int32 action = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->action(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMGrantGuestPasses2)
  return target;
}

size_t CMsgAMGrantGuestPasses2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAMGrantGuestPasses2)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional fixed64 steam_id = 1;
    if (has_steam_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 package_id = 2;
    if (has_package_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->package_id());
    }

    // optional int32 passes_to_grant = 3;
    if (has_passes_to_grant()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->passes_to_grant());
    }

    // optional int32 days_to_expiration = 4;
    if (has_days_to_expiration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->days_to_expiration());
    }

    // optional int32 action = 5;
    if (has_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->action());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgAMGrantGuestPasses2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgAMGrantGuestPasses2)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgAMGrantGuestPasses2* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAMGrantGuestPasses2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgAMGrantGuestPasses2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgAMGrantGuestPasses2)
    MergeFrom(*source);
  }
}

void CMsgAMGrantGuestPasses2::MergeFrom(const CMsgAMGrantGuestPasses2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgAMGrantGuestPasses2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      steam_id_ = from.steam_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      package_id_ = from.package_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      passes_to_grant_ = from.passes_to_grant_;
    }
    if (cached_has_bits & 0x00000008u) {
      days_to_expiration_ = from.days_to_expiration_;
    }
    if (cached_has_bits & 0x00000010u) {
      action_ = from.action_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgAMGrantGuestPasses2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgAMGrantGuestPasses2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAMGrantGuestPasses2::CopyFrom(const CMsgAMGrantGuestPasses2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAMGrantGuestPasses2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAMGrantGuestPasses2::IsInitialized() const {
  return true;
}

void CMsgAMGrantGuestPasses2::Swap(CMsgAMGrantGuestPasses2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAMGrantGuestPasses2::InternalSwap(CMsgAMGrantGuestPasses2* other) {
  using std::swap;
  swap(steam_id_, other->steam_id_);
  swap(package_id_, other->package_id_);
  swap(passes_to_grant_, other->passes_to_grant_);
  swap(days_to_expiration_, other->days_to_expiration_);
  swap(action_, other->action_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgAMGrantGuestPasses2::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgAMGrantGuestPasses2Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgAMGrantGuestPasses2Response::kEresultFieldNumber;
const int CMsgAMGrantGuestPasses2Response::kPassesGrantedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgAMGrantGuestPasses2Response::CMsgAMGrantGuestPasses2Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgAMGrantGuestPasses2Response();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgAMGrantGuestPasses2Response)
}
CMsgAMGrantGuestPasses2Response::CMsgAMGrantGuestPasses2Response(const CMsgAMGrantGuestPasses2Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&passes_granted_, &from.passes_granted_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&passes_granted_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgAMGrantGuestPasses2Response)
}

void CMsgAMGrantGuestPasses2Response::SharedCtor() {
  _cached_size_ = 0;
  passes_granted_ = 0;
  eresult_ = 2;
}

CMsgAMGrantGuestPasses2Response::~CMsgAMGrantGuestPasses2Response() {
  // @@protoc_insertion_point(destructor:CMsgAMGrantGuestPasses2Response)
  SharedDtor();
}

void CMsgAMGrantGuestPasses2Response::SharedDtor() {
}

void CMsgAMGrantGuestPasses2Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgAMGrantGuestPasses2Response::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgAMGrantGuestPasses2Response& CMsgAMGrantGuestPasses2Response::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgAMGrantGuestPasses2Response();
  return *internal_default_instance();
}

CMsgAMGrantGuestPasses2Response* CMsgAMGrantGuestPasses2Response::New(::google::protobuf::Arena* arena) const {
  CMsgAMGrantGuestPasses2Response* n = new CMsgAMGrantGuestPasses2Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgAMGrantGuestPasses2Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAMGrantGuestPasses2Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    passes_granted_ = 0;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgAMGrantGuestPasses2Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgAMGrantGuestPasses2Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 passes_granted = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_passes_granted();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &passes_granted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgAMGrantGuestPasses2Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgAMGrantGuestPasses2Response)
  return false;
#undef DO_
}

void CMsgAMGrantGuestPasses2Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgAMGrantGuestPasses2Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional int32 passes_granted = 2 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->passes_granted(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgAMGrantGuestPasses2Response)
}

::google::protobuf::uint8* CMsgAMGrantGuestPasses2Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAMGrantGuestPasses2Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional int32 passes_granted = 2 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->passes_granted(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAMGrantGuestPasses2Response)
  return target;
}

size_t CMsgAMGrantGuestPasses2Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAMGrantGuestPasses2Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 passes_granted = 2 [default = 0];
    if (has_passes_granted()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->passes_granted());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgAMGrantGuestPasses2Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgAMGrantGuestPasses2Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgAMGrantGuestPasses2Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAMGrantGuestPasses2Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgAMGrantGuestPasses2Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgAMGrantGuestPasses2Response)
    MergeFrom(*source);
  }
}

void CMsgAMGrantGuestPasses2Response::MergeFrom(const CMsgAMGrantGuestPasses2Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgAMGrantGuestPasses2Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      passes_granted_ = from.passes_granted_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgAMGrantGuestPasses2Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgAMGrantGuestPasses2Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAMGrantGuestPasses2Response::CopyFrom(const CMsgAMGrantGuestPasses2Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAMGrantGuestPasses2Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAMGrantGuestPasses2Response::IsInitialized() const {
  return true;
}

void CMsgAMGrantGuestPasses2Response::Swap(CMsgAMGrantGuestPasses2Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAMGrantGuestPasses2Response::InternalSwap(CMsgAMGrantGuestPasses2Response* other) {
  using std::swap;
  swap(passes_granted_, other->passes_granted_);
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgAMGrantGuestPasses2Response::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CGCSystemMsg_GetAccountDetails::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCSystemMsg_GetAccountDetails::kSteamidFieldNumber;
const int CGCSystemMsg_GetAccountDetails::kAppidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCSystemMsg_GetAccountDetails::CGCSystemMsg_GetAccountDetails()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCGCSystemMsg_GetAccountDetails();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCSystemMsg_GetAccountDetails)
}
CGCSystemMsg_GetAccountDetails::CGCSystemMsg_GetAccountDetails(const CGCSystemMsg_GetAccountDetails& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steamid_, &from.steamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&appid_) -
    reinterpret_cast<char*>(&steamid_)) + sizeof(appid_));
  // @@protoc_insertion_point(copy_constructor:CGCSystemMsg_GetAccountDetails)
}

void CGCSystemMsg_GetAccountDetails::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&steamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&appid_) -
      reinterpret_cast<char*>(&steamid_)) + sizeof(appid_));
}

CGCSystemMsg_GetAccountDetails::~CGCSystemMsg_GetAccountDetails() {
  // @@protoc_insertion_point(destructor:CGCSystemMsg_GetAccountDetails)
  SharedDtor();
}

void CGCSystemMsg_GetAccountDetails::SharedDtor() {
}

void CGCSystemMsg_GetAccountDetails::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCSystemMsg_GetAccountDetails::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CGCSystemMsg_GetAccountDetails& CGCSystemMsg_GetAccountDetails::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCGCSystemMsg_GetAccountDetails();
  return *internal_default_instance();
}

CGCSystemMsg_GetAccountDetails* CGCSystemMsg_GetAccountDetails::New(::google::protobuf::Arena* arena) const {
  CGCSystemMsg_GetAccountDetails* n = new CGCSystemMsg_GetAccountDetails;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCSystemMsg_GetAccountDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCSystemMsg_GetAccountDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&steamid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&appid_) -
        reinterpret_cast<char*>(&steamid_)) + sizeof(appid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CGCSystemMsg_GetAccountDetails::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCSystemMsg_GetAccountDetails)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 appid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCSystemMsg_GetAccountDetails)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCSystemMsg_GetAccountDetails)
  return false;
#undef DO_
}

void CGCSystemMsg_GetAccountDetails::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCSystemMsg_GetAccountDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->appid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCSystemMsg_GetAccountDetails)
}

::google::protobuf::uint8* CGCSystemMsg_GetAccountDetails::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CGCSystemMsg_GetAccountDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->appid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCSystemMsg_GetAccountDetails)
  return target;
}

size_t CGCSystemMsg_GetAccountDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCSystemMsg_GetAccountDetails)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 steamid = 1;
    if (has_steamid()) {
      total_size += 1 + 8;
    }

    // optional uint32 appid = 2;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCSystemMsg_GetAccountDetails::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CGCSystemMsg_GetAccountDetails)
  GOOGLE_DCHECK_NE(&from, this);
  const CGCSystemMsg_GetAccountDetails* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCSystemMsg_GetAccountDetails>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CGCSystemMsg_GetAccountDetails)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CGCSystemMsg_GetAccountDetails)
    MergeFrom(*source);
  }
}

void CGCSystemMsg_GetAccountDetails::MergeFrom(const CGCSystemMsg_GetAccountDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CGCSystemMsg_GetAccountDetails)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      steamid_ = from.steamid_;
    }
    if (cached_has_bits & 0x00000002u) {
      appid_ = from.appid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CGCSystemMsg_GetAccountDetails::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CGCSystemMsg_GetAccountDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCSystemMsg_GetAccountDetails::CopyFrom(const CGCSystemMsg_GetAccountDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCSystemMsg_GetAccountDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCSystemMsg_GetAccountDetails::IsInitialized() const {
  return true;
}

void CGCSystemMsg_GetAccountDetails::Swap(CGCSystemMsg_GetAccountDetails* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCSystemMsg_GetAccountDetails::InternalSwap(CGCSystemMsg_GetAccountDetails* other) {
  using std::swap;
  swap(steamid_, other->steamid_);
  swap(appid_, other->appid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCSystemMsg_GetAccountDetails::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CGCSystemMsg_GetAccountDetails_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCSystemMsg_GetAccountDetails_Response::kEresultDeprecatedFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kAccountNameFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kPersonaNameFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kIsProfilePublicFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kIsInventoryPublicFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kIsVacBannedFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kIsCyberCafeFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kIsSchoolAccountFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kIsLimitedFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kIsSubscribedFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kPackageFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kIsFreeTrialAccountFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kFreeTrialExpirationFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kIsLowViolenceFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kIsAccountLockedDownFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kIsCommunityBannedFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kIsTradeBannedFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kTradeBanExpirationFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kAccountidFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kSuspensionEndTimeFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kCurrencyFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kSteamLevelFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kFriendCountFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kAccountCreationTimeFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kIsSteamguardEnabledFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kIsPhoneVerifiedFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kIsTwoFactorAuthEnabledFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kTwoFactorEnabledTimeFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kPhoneVerificationTimeFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kPhoneIdFieldNumber;
const int CGCSystemMsg_GetAccountDetails_Response::kIsPhoneIdentifyingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCSystemMsg_GetAccountDetails_Response::CGCSystemMsg_GetAccountDetails_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCGCSystemMsg_GetAccountDetails_Response();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCSystemMsg_GetAccountDetails_Response)
}
CGCSystemMsg_GetAccountDetails_Response::CGCSystemMsg_GetAccountDetails_Response(const CGCSystemMsg_GetAccountDetails_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account_name()) {
    account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
  }
  persona_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_persona_name()) {
    persona_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.persona_name_);
  }
  currency_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_currency()) {
    currency_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.currency_);
  }
  ::memcpy(&is_profile_public_, &from.is_profile_public_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_deprecated_) -
    reinterpret_cast<char*>(&is_profile_public_)) + sizeof(eresult_deprecated_));
  // @@protoc_insertion_point(copy_constructor:CGCSystemMsg_GetAccountDetails_Response)
}

void CGCSystemMsg_GetAccountDetails_Response::SharedCtor() {
  _cached_size_ = 0;
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  persona_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&is_profile_public_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&phone_id_) -
      reinterpret_cast<char*>(&is_profile_public_)) + sizeof(phone_id_));
  eresult_deprecated_ = 2u;
}

CGCSystemMsg_GetAccountDetails_Response::~CGCSystemMsg_GetAccountDetails_Response() {
  // @@protoc_insertion_point(destructor:CGCSystemMsg_GetAccountDetails_Response)
  SharedDtor();
}

void CGCSystemMsg_GetAccountDetails_Response::SharedDtor() {
  account_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  persona_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CGCSystemMsg_GetAccountDetails_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCSystemMsg_GetAccountDetails_Response::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CGCSystemMsg_GetAccountDetails_Response& CGCSystemMsg_GetAccountDetails_Response::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCGCSystemMsg_GetAccountDetails_Response();
  return *internal_default_instance();
}

CGCSystemMsg_GetAccountDetails_Response* CGCSystemMsg_GetAccountDetails_Response::New(::google::protobuf::Arena* arena) const {
  CGCSystemMsg_GetAccountDetails_Response* n = new CGCSystemMsg_GetAccountDetails_Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCSystemMsg_GetAccountDetails_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCSystemMsg_GetAccountDetails_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!account_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*account_name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!persona_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*persona_name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!currency_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*currency_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&is_profile_public_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_school_account_) -
        reinterpret_cast<char*>(&is_profile_public_)) + sizeof(is_school_account_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&is_limited_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_community_banned_) -
        reinterpret_cast<char*>(&is_limited_)) + sizeof(is_community_banned_));
  }
  if (cached_has_bits & 16711680u) {
    ::memset(&is_trade_banned_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_steamguard_enabled_) -
        reinterpret_cast<char*>(&is_trade_banned_)) + sizeof(is_steamguard_enabled_));
  }
  if (cached_has_bits & 2130706432u) {
    ::memset(&is_phone_verified_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&phone_id_) -
        reinterpret_cast<char*>(&is_phone_verified_)) + sizeof(phone_id_));
    eresult_deprecated_ = 2u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CGCSystemMsg_GetAccountDetails_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCSystemMsg_GetAccountDetails_Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eresult_deprecated = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult_deprecated();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_deprecated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string account_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account_name().data(), static_cast<int>(this->account_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CGCSystemMsg_GetAccountDetails_Response.account_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string persona_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_persona_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->persona_name().data(), static_cast<int>(this->persona_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CGCSystemMsg_GetAccountDetails_Response.persona_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_profile_public = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_is_profile_public();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_profile_public_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_inventory_public = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_is_inventory_public();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_inventory_public_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_vac_banned = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_is_vac_banned();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_vac_banned_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_cyber_cafe = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_is_cyber_cafe();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_cyber_cafe_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_school_account = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_is_school_account();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_school_account_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_limited = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_is_limited();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_limited_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_subscribed = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_is_subscribed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_subscribed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 package = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_package();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &package_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_free_trial_account = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_is_free_trial_account();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_free_trial_account_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 free_trial_expiration = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_free_trial_expiration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &free_trial_expiration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_low_violence = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_is_low_violence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_low_violence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_account_locked_down = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_is_account_locked_down();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_account_locked_down_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_community_banned = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          set_has_is_community_banned();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_community_banned_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_trade_banned = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          set_has_is_trade_banned();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_trade_banned_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 trade_ban_expiration = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {
          set_has_trade_ban_expiration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &trade_ban_expiration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 accountid = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_accountid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 suspension_end_time = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_suspension_end_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &suspension_end_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string currency = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_currency()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->currency().data(), static_cast<int>(this->currency().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CGCSystemMsg_GetAccountDetails_Response.currency");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 steam_level = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {
          set_has_steam_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &steam_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 friend_count = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {
          set_has_friend_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &friend_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 account_creation_time = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {
          set_has_account_creation_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_creation_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_steamguard_enabled = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 216 & 0xFF */)) {
          set_has_is_steamguard_enabled();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_steamguard_enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_phone_verified = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 224 & 0xFF */)) {
          set_has_is_phone_verified();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_phone_verified_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_two_factor_auth_enabled = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 232 & 0xFF */)) {
          set_has_is_two_factor_auth_enabled();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_two_factor_auth_enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 two_factor_enabled_time = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {
          set_has_two_factor_enabled_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &two_factor_enabled_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 phone_verification_time = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 248 & 0xFF */)) {
          set_has_phone_verification_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &phone_verification_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 phone_id = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 264 & 0xFF */)) {
          set_has_phone_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &phone_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_phone_identifying = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 272 & 0xFF */)) {
          set_has_is_phone_identifying();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_phone_identifying_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCSystemMsg_GetAccountDetails_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCSystemMsg_GetAccountDetails_Response)
  return false;
#undef DO_
}

void CGCSystemMsg_GetAccountDetails_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCSystemMsg_GetAccountDetails_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult_deprecated = 1 [default = 2];
  if (cached_has_bits & 0x40000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult_deprecated(), output);
  }

  // optional string account_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name().data(), static_cast<int>(this->account_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CGCSystemMsg_GetAccountDetails_Response.account_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->account_name(), output);
  }

  // optional string persona_name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->persona_name().data(), static_cast<int>(this->persona_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CGCSystemMsg_GetAccountDetails_Response.persona_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->persona_name(), output);
  }

  // optional bool is_profile_public = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_profile_public(), output);
  }

  // optional bool is_inventory_public = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_inventory_public(), output);
  }

  // optional bool is_vac_banned = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->is_vac_banned(), output);
  }

  // optional bool is_cyber_cafe = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->is_cyber_cafe(), output);
  }

  // optional bool is_school_account = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->is_school_account(), output);
  }

  // optional bool is_limited = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->is_limited(), output);
  }

  // optional bool is_subscribed = 11;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->is_subscribed(), output);
  }

  // optional uint32 package = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->package(), output);
  }

  // optional bool is_free_trial_account = 13;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->is_free_trial_account(), output);
  }

  // optional uint32 free_trial_expiration = 14;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->free_trial_expiration(), output);
  }

  // optional bool is_low_violence = 15;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->is_low_violence(), output);
  }

  // optional bool is_account_locked_down = 16;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->is_account_locked_down(), output);
  }

  // optional bool is_community_banned = 17;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(17, this->is_community_banned(), output);
  }

  // optional bool is_trade_banned = 18;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(18, this->is_trade_banned(), output);
  }

  // optional uint32 trade_ban_expiration = 19;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->trade_ban_expiration(), output);
  }

  // optional uint32 accountid = 20;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->accountid(), output);
  }

  // optional uint32 suspension_end_time = 21;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->suspension_end_time(), output);
  }

  // optional string currency = 22;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->currency().data(), static_cast<int>(this->currency().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CGCSystemMsg_GetAccountDetails_Response.currency");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->currency(), output);
  }

  // optional uint32 steam_level = 23;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(23, this->steam_level(), output);
  }

  // optional uint32 friend_count = 24;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(24, this->friend_count(), output);
  }

  // optional uint32 account_creation_time = 25;
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(25, this->account_creation_time(), output);
  }

  // optional bool is_steamguard_enabled = 27;
  if (cached_has_bits & 0x00800000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(27, this->is_steamguard_enabled(), output);
  }

  // optional bool is_phone_verified = 28;
  if (cached_has_bits & 0x01000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(28, this->is_phone_verified(), output);
  }

  // optional bool is_two_factor_auth_enabled = 29;
  if (cached_has_bits & 0x02000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(29, this->is_two_factor_auth_enabled(), output);
  }

  // optional uint32 two_factor_enabled_time = 30;
  if (cached_has_bits & 0x08000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(30, this->two_factor_enabled_time(), output);
  }

  // optional uint32 phone_verification_time = 31;
  if (cached_has_bits & 0x10000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(31, this->phone_verification_time(), output);
  }

  // optional uint64 phone_id = 33;
  if (cached_has_bits & 0x20000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(33, this->phone_id(), output);
  }

  // optional bool is_phone_identifying = 34;
  if (cached_has_bits & 0x04000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(34, this->is_phone_identifying(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCSystemMsg_GetAccountDetails_Response)
}

::google::protobuf::uint8* CGCSystemMsg_GetAccountDetails_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CGCSystemMsg_GetAccountDetails_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult_deprecated = 1 [default = 2];
  if (cached_has_bits & 0x40000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult_deprecated(), target);
  }

  // optional string account_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name().data(), static_cast<int>(this->account_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CGCSystemMsg_GetAccountDetails_Response.account_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->account_name(), target);
  }

  // optional string persona_name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->persona_name().data(), static_cast<int>(this->persona_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CGCSystemMsg_GetAccountDetails_Response.persona_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->persona_name(), target);
  }

  // optional bool is_profile_public = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_profile_public(), target);
  }

  // optional bool is_inventory_public = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_inventory_public(), target);
  }

  // optional bool is_vac_banned = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->is_vac_banned(), target);
  }

  // optional bool is_cyber_cafe = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->is_cyber_cafe(), target);
  }

  // optional bool is_school_account = 9;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->is_school_account(), target);
  }

  // optional bool is_limited = 10;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->is_limited(), target);
  }

  // optional bool is_subscribed = 11;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->is_subscribed(), target);
  }

  // optional uint32 package = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->package(), target);
  }

  // optional bool is_free_trial_account = 13;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->is_free_trial_account(), target);
  }

  // optional uint32 free_trial_expiration = 14;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->free_trial_expiration(), target);
  }

  // optional bool is_low_violence = 15;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->is_low_violence(), target);
  }

  // optional bool is_account_locked_down = 16;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->is_account_locked_down(), target);
  }

  // optional bool is_community_banned = 17;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(17, this->is_community_banned(), target);
  }

  // optional bool is_trade_banned = 18;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(18, this->is_trade_banned(), target);
  }

  // optional uint32 trade_ban_expiration = 19;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->trade_ban_expiration(), target);
  }

  // optional uint32 accountid = 20;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->accountid(), target);
  }

  // optional uint32 suspension_end_time = 21;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(21, this->suspension_end_time(), target);
  }

  // optional string currency = 22;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->currency().data(), static_cast<int>(this->currency().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CGCSystemMsg_GetAccountDetails_Response.currency");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->currency(), target);
  }

  // optional uint32 steam_level = 23;
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(23, this->steam_level(), target);
  }

  // optional uint32 friend_count = 24;
  if (cached_has_bits & 0x00200000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(24, this->friend_count(), target);
  }

  // optional uint32 account_creation_time = 25;
  if (cached_has_bits & 0x00400000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(25, this->account_creation_time(), target);
  }

  // optional bool is_steamguard_enabled = 27;
  if (cached_has_bits & 0x00800000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(27, this->is_steamguard_enabled(), target);
  }

  // optional bool is_phone_verified = 28;
  if (cached_has_bits & 0x01000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(28, this->is_phone_verified(), target);
  }

  // optional bool is_two_factor_auth_enabled = 29;
  if (cached_has_bits & 0x02000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(29, this->is_two_factor_auth_enabled(), target);
  }

  // optional uint32 two_factor_enabled_time = 30;
  if (cached_has_bits & 0x08000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(30, this->two_factor_enabled_time(), target);
  }

  // optional uint32 phone_verification_time = 31;
  if (cached_has_bits & 0x10000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(31, this->phone_verification_time(), target);
  }

  // optional uint64 phone_id = 33;
  if (cached_has_bits & 0x20000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(33, this->phone_id(), target);
  }

  // optional bool is_phone_identifying = 34;
  if (cached_has_bits & 0x04000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(34, this->is_phone_identifying(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCSystemMsg_GetAccountDetails_Response)
  return target;
}

size_t CGCSystemMsg_GetAccountDetails_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCSystemMsg_GetAccountDetails_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string account_name = 2;
    if (has_account_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account_name());
    }

    // optional string persona_name = 3;
    if (has_persona_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->persona_name());
    }

    // optional string currency = 22;
    if (has_currency()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->currency());
    }

    // optional bool is_profile_public = 4;
    if (has_is_profile_public()) {
      total_size += 1 + 1;
    }

    // optional bool is_inventory_public = 5;
    if (has_is_inventory_public()) {
      total_size += 1 + 1;
    }

    // optional bool is_vac_banned = 7;
    if (has_is_vac_banned()) {
      total_size += 1 + 1;
    }

    // optional bool is_cyber_cafe = 8;
    if (has_is_cyber_cafe()) {
      total_size += 1 + 1;
    }

    // optional bool is_school_account = 9;
    if (has_is_school_account()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional bool is_limited = 10;
    if (has_is_limited()) {
      total_size += 1 + 1;
    }

    // optional bool is_subscribed = 11;
    if (has_is_subscribed()) {
      total_size += 1 + 1;
    }

    // optional bool is_free_trial_account = 13;
    if (has_is_free_trial_account()) {
      total_size += 1 + 1;
    }

    // optional uint32 package = 12;
    if (has_package()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->package());
    }

    // optional uint32 free_trial_expiration = 14;
    if (has_free_trial_expiration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->free_trial_expiration());
    }

    // optional bool is_low_violence = 15;
    if (has_is_low_violence()) {
      total_size += 1 + 1;
    }

    // optional bool is_account_locked_down = 16;
    if (has_is_account_locked_down()) {
      total_size += 2 + 1;
    }

    // optional bool is_community_banned = 17;
    if (has_is_community_banned()) {
      total_size += 2 + 1;
    }

  }
  if (_has_bits_[16 / 32] & 16711680u) {
    // optional bool is_trade_banned = 18;
    if (has_is_trade_banned()) {
      total_size += 2 + 1;
    }

    // optional uint32 trade_ban_expiration = 19;
    if (has_trade_ban_expiration()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->trade_ban_expiration());
    }

    // optional uint32 accountid = 20;
    if (has_accountid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->accountid());
    }

    // optional uint32 suspension_end_time = 21;
    if (has_suspension_end_time()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->suspension_end_time());
    }

    // optional uint32 steam_level = 23;
    if (has_steam_level()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->steam_level());
    }

    // optional uint32 friend_count = 24;
    if (has_friend_count()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->friend_count());
    }

    // optional uint32 account_creation_time = 25;
    if (has_account_creation_time()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_creation_time());
    }

    // optional bool is_steamguard_enabled = 27;
    if (has_is_steamguard_enabled()) {
      total_size += 2 + 1;
    }

  }
  if (_has_bits_[24 / 32] & 2130706432u) {
    // optional bool is_phone_verified = 28;
    if (has_is_phone_verified()) {
      total_size += 2 + 1;
    }

    // optional bool is_two_factor_auth_enabled = 29;
    if (has_is_two_factor_auth_enabled()) {
      total_size += 2 + 1;
    }

    // optional bool is_phone_identifying = 34;
    if (has_is_phone_identifying()) {
      total_size += 2 + 1;
    }

    // optional uint32 two_factor_enabled_time = 30;
    if (has_two_factor_enabled_time()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->two_factor_enabled_time());
    }

    // optional uint32 phone_verification_time = 31;
    if (has_phone_verification_time()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->phone_verification_time());
    }

    // optional uint64 phone_id = 33;
    if (has_phone_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->phone_id());
    }

    // optional uint32 eresult_deprecated = 1 [default = 2];
    if (has_eresult_deprecated()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult_deprecated());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCSystemMsg_GetAccountDetails_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CGCSystemMsg_GetAccountDetails_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CGCSystemMsg_GetAccountDetails_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCSystemMsg_GetAccountDetails_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CGCSystemMsg_GetAccountDetails_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CGCSystemMsg_GetAccountDetails_Response)
    MergeFrom(*source);
  }
}

void CGCSystemMsg_GetAccountDetails_Response::MergeFrom(const CGCSystemMsg_GetAccountDetails_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CGCSystemMsg_GetAccountDetails_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account_name();
      account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_persona_name();
      persona_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.persona_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_currency();
      currency_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.currency_);
    }
    if (cached_has_bits & 0x00000008u) {
      is_profile_public_ = from.is_profile_public_;
    }
    if (cached_has_bits & 0x00000010u) {
      is_inventory_public_ = from.is_inventory_public_;
    }
    if (cached_has_bits & 0x00000020u) {
      is_vac_banned_ = from.is_vac_banned_;
    }
    if (cached_has_bits & 0x00000040u) {
      is_cyber_cafe_ = from.is_cyber_cafe_;
    }
    if (cached_has_bits & 0x00000080u) {
      is_school_account_ = from.is_school_account_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      is_limited_ = from.is_limited_;
    }
    if (cached_has_bits & 0x00000200u) {
      is_subscribed_ = from.is_subscribed_;
    }
    if (cached_has_bits & 0x00000400u) {
      is_free_trial_account_ = from.is_free_trial_account_;
    }
    if (cached_has_bits & 0x00000800u) {
      package_ = from.package_;
    }
    if (cached_has_bits & 0x00001000u) {
      free_trial_expiration_ = from.free_trial_expiration_;
    }
    if (cached_has_bits & 0x00002000u) {
      is_low_violence_ = from.is_low_violence_;
    }
    if (cached_has_bits & 0x00004000u) {
      is_account_locked_down_ = from.is_account_locked_down_;
    }
    if (cached_has_bits & 0x00008000u) {
      is_community_banned_ = from.is_community_banned_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 16711680u) {
    if (cached_has_bits & 0x00010000u) {
      is_trade_banned_ = from.is_trade_banned_;
    }
    if (cached_has_bits & 0x00020000u) {
      trade_ban_expiration_ = from.trade_ban_expiration_;
    }
    if (cached_has_bits & 0x00040000u) {
      accountid_ = from.accountid_;
    }
    if (cached_has_bits & 0x00080000u) {
      suspension_end_time_ = from.suspension_end_time_;
    }
    if (cached_has_bits & 0x00100000u) {
      steam_level_ = from.steam_level_;
    }
    if (cached_has_bits & 0x00200000u) {
      friend_count_ = from.friend_count_;
    }
    if (cached_has_bits & 0x00400000u) {
      account_creation_time_ = from.account_creation_time_;
    }
    if (cached_has_bits & 0x00800000u) {
      is_steamguard_enabled_ = from.is_steamguard_enabled_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 2130706432u) {
    if (cached_has_bits & 0x01000000u) {
      is_phone_verified_ = from.is_phone_verified_;
    }
    if (cached_has_bits & 0x02000000u) {
      is_two_factor_auth_enabled_ = from.is_two_factor_auth_enabled_;
    }
    if (cached_has_bits & 0x04000000u) {
      is_phone_identifying_ = from.is_phone_identifying_;
    }
    if (cached_has_bits & 0x08000000u) {
      two_factor_enabled_time_ = from.two_factor_enabled_time_;
    }
    if (cached_has_bits & 0x10000000u) {
      phone_verification_time_ = from.phone_verification_time_;
    }
    if (cached_has_bits & 0x20000000u) {
      phone_id_ = from.phone_id_;
    }
    if (cached_has_bits & 0x40000000u) {
      eresult_deprecated_ = from.eresult_deprecated_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CGCSystemMsg_GetAccountDetails_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CGCSystemMsg_GetAccountDetails_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCSystemMsg_GetAccountDetails_Response::CopyFrom(const CGCSystemMsg_GetAccountDetails_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCSystemMsg_GetAccountDetails_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCSystemMsg_GetAccountDetails_Response::IsInitialized() const {
  return true;
}

void CGCSystemMsg_GetAccountDetails_Response::Swap(CGCSystemMsg_GetAccountDetails_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCSystemMsg_GetAccountDetails_Response::InternalSwap(CGCSystemMsg_GetAccountDetails_Response* other) {
  using std::swap;
  account_name_.Swap(&other->account_name_);
  persona_name_.Swap(&other->persona_name_);
  currency_.Swap(&other->currency_);
  swap(is_profile_public_, other->is_profile_public_);
  swap(is_inventory_public_, other->is_inventory_public_);
  swap(is_vac_banned_, other->is_vac_banned_);
  swap(is_cyber_cafe_, other->is_cyber_cafe_);
  swap(is_school_account_, other->is_school_account_);
  swap(is_limited_, other->is_limited_);
  swap(is_subscribed_, other->is_subscribed_);
  swap(is_free_trial_account_, other->is_free_trial_account_);
  swap(package_, other->package_);
  swap(free_trial_expiration_, other->free_trial_expiration_);
  swap(is_low_violence_, other->is_low_violence_);
  swap(is_account_locked_down_, other->is_account_locked_down_);
  swap(is_community_banned_, other->is_community_banned_);
  swap(is_trade_banned_, other->is_trade_banned_);
  swap(trade_ban_expiration_, other->trade_ban_expiration_);
  swap(accountid_, other->accountid_);
  swap(suspension_end_time_, other->suspension_end_time_);
  swap(steam_level_, other->steam_level_);
  swap(friend_count_, other->friend_count_);
  swap(account_creation_time_, other->account_creation_time_);
  swap(is_steamguard_enabled_, other->is_steamguard_enabled_);
  swap(is_phone_verified_, other->is_phone_verified_);
  swap(is_two_factor_auth_enabled_, other->is_two_factor_auth_enabled_);
  swap(is_phone_identifying_, other->is_phone_identifying_);
  swap(two_factor_enabled_time_, other->two_factor_enabled_time_);
  swap(phone_verification_time_, other->phone_verification_time_);
  swap(phone_id_, other->phone_id_);
  swap(eresult_deprecated_, other->eresult_deprecated_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCSystemMsg_GetAccountDetails_Response::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCCheckClanMembership::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCCheckClanMembership::kSteamidFieldNumber;
const int CMsgGCCheckClanMembership::kClanidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCCheckClanMembership::CMsgGCCheckClanMembership()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCCheckClanMembership();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCCheckClanMembership)
}
CMsgGCCheckClanMembership::CMsgGCCheckClanMembership(const CMsgGCCheckClanMembership& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steamid_, &from.steamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&clanid_) -
    reinterpret_cast<char*>(&steamid_)) + sizeof(clanid_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCCheckClanMembership)
}

void CMsgGCCheckClanMembership::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&steamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&clanid_) -
      reinterpret_cast<char*>(&steamid_)) + sizeof(clanid_));
}

CMsgGCCheckClanMembership::~CMsgGCCheckClanMembership() {
  // @@protoc_insertion_point(destructor:CMsgGCCheckClanMembership)
  SharedDtor();
}

void CMsgGCCheckClanMembership::SharedDtor() {
}

void CMsgGCCheckClanMembership::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCCheckClanMembership::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCCheckClanMembership& CMsgGCCheckClanMembership::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCCheckClanMembership();
  return *internal_default_instance();
}

CMsgGCCheckClanMembership* CMsgGCCheckClanMembership::New(::google::protobuf::Arena* arena) const {
  CMsgGCCheckClanMembership* n = new CMsgGCCheckClanMembership;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCCheckClanMembership::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCheckClanMembership)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&steamid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&clanid_) -
        reinterpret_cast<char*>(&steamid_)) + sizeof(clanid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCCheckClanMembership::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCCheckClanMembership)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 clanid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_clanid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &clanid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCCheckClanMembership)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCCheckClanMembership)
  return false;
#undef DO_
}

void CMsgGCCheckClanMembership::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCCheckClanMembership)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  // optional uint32 clanid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->clanid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCCheckClanMembership)
}

::google::protobuf::uint8* CMsgGCCheckClanMembership::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCheckClanMembership)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  // optional uint32 clanid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->clanid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCheckClanMembership)
  return target;
}

size_t CMsgGCCheckClanMembership::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCCheckClanMembership)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 steamid = 1;
    if (has_steamid()) {
      total_size += 1 + 8;
    }

    // optional uint32 clanid = 2;
    if (has_clanid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->clanid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCCheckClanMembership::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCCheckClanMembership)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCCheckClanMembership* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCCheckClanMembership>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCCheckClanMembership)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCCheckClanMembership)
    MergeFrom(*source);
  }
}

void CMsgGCCheckClanMembership::MergeFrom(const CMsgGCCheckClanMembership& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCheckClanMembership)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      steamid_ = from.steamid_;
    }
    if (cached_has_bits & 0x00000002u) {
      clanid_ = from.clanid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCCheckClanMembership::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCCheckClanMembership)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCCheckClanMembership::CopyFrom(const CMsgGCCheckClanMembership& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCheckClanMembership)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCCheckClanMembership::IsInitialized() const {
  return true;
}

void CMsgGCCheckClanMembership::Swap(CMsgGCCheckClanMembership* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCCheckClanMembership::InternalSwap(CMsgGCCheckClanMembership* other) {
  using std::swap;
  swap(steamid_, other->steamid_);
  swap(clanid_, other->clanid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCCheckClanMembership::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCCheckClanMembership_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCCheckClanMembership_Response::kIsmemberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCCheckClanMembership_Response::CMsgGCCheckClanMembership_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCCheckClanMembership_Response();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCCheckClanMembership_Response)
}
CMsgGCCheckClanMembership_Response::CMsgGCCheckClanMembership_Response(const CMsgGCCheckClanMembership_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ismember_ = from.ismember_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCCheckClanMembership_Response)
}

void CMsgGCCheckClanMembership_Response::SharedCtor() {
  _cached_size_ = 0;
  ismember_ = false;
}

CMsgGCCheckClanMembership_Response::~CMsgGCCheckClanMembership_Response() {
  // @@protoc_insertion_point(destructor:CMsgGCCheckClanMembership_Response)
  SharedDtor();
}

void CMsgGCCheckClanMembership_Response::SharedDtor() {
}

void CMsgGCCheckClanMembership_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCCheckClanMembership_Response::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCCheckClanMembership_Response& CMsgGCCheckClanMembership_Response::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCCheckClanMembership_Response();
  return *internal_default_instance();
}

CMsgGCCheckClanMembership_Response* CMsgGCCheckClanMembership_Response::New(::google::protobuf::Arena* arena) const {
  CMsgGCCheckClanMembership_Response* n = new CMsgGCCheckClanMembership_Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCCheckClanMembership_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCheckClanMembership_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ismember_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCCheckClanMembership_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCCheckClanMembership_Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool ismember = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ismember();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ismember_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCCheckClanMembership_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCCheckClanMembership_Response)
  return false;
#undef DO_
}

void CMsgGCCheckClanMembership_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCCheckClanMembership_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool ismember = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->ismember(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCCheckClanMembership_Response)
}

::google::protobuf::uint8* CMsgGCCheckClanMembership_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCheckClanMembership_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool ismember = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->ismember(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCheckClanMembership_Response)
  return target;
}

size_t CMsgGCCheckClanMembership_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCCheckClanMembership_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional bool ismember = 1;
  if (has_ismember()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCCheckClanMembership_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCCheckClanMembership_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCCheckClanMembership_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCCheckClanMembership_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCCheckClanMembership_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCCheckClanMembership_Response)
    MergeFrom(*source);
  }
}

void CMsgGCCheckClanMembership_Response::MergeFrom(const CMsgGCCheckClanMembership_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCheckClanMembership_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_ismember()) {
    set_ismember(from.ismember());
  }
}

void CMsgGCCheckClanMembership_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCCheckClanMembership_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCCheckClanMembership_Response::CopyFrom(const CMsgGCCheckClanMembership_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCheckClanMembership_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCCheckClanMembership_Response::IsInitialized() const {
  return true;
}

void CMsgGCCheckClanMembership_Response::Swap(CMsgGCCheckClanMembership_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCCheckClanMembership_Response::InternalSwap(CMsgGCCheckClanMembership_Response* other) {
  using std::swap;
  swap(ismember_, other->ismember_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCCheckClanMembership_Response::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCGetPersonaNames::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCGetPersonaNames::kSteamidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCGetPersonaNames::CMsgGCGetPersonaNames()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCGetPersonaNames();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCGetPersonaNames)
}
CMsgGCGetPersonaNames::CMsgGCGetPersonaNames(const CMsgGCGetPersonaNames& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      steamids_(from.steamids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgGCGetPersonaNames)
}

void CMsgGCGetPersonaNames::SharedCtor() {
  _cached_size_ = 0;
}

CMsgGCGetPersonaNames::~CMsgGCGetPersonaNames() {
  // @@protoc_insertion_point(destructor:CMsgGCGetPersonaNames)
  SharedDtor();
}

void CMsgGCGetPersonaNames::SharedDtor() {
}

void CMsgGCGetPersonaNames::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCGetPersonaNames::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCGetPersonaNames& CMsgGCGetPersonaNames::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCGetPersonaNames();
  return *internal_default_instance();
}

CMsgGCGetPersonaNames* CMsgGCGetPersonaNames::New(::google::protobuf::Arena* arena) const {
  CMsgGCGetPersonaNames* n = new CMsgGCGetPersonaNames;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCGetPersonaNames::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCGetPersonaNames)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  steamids_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCGetPersonaNames::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCGetPersonaNames)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed64 steamids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 9u, input, this->mutable_steamids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_steamids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCGetPersonaNames)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCGetPersonaNames)
  return false;
#undef DO_
}

void CMsgGCGetPersonaNames::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCGetPersonaNames)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 steamids = 1;
  for (int i = 0, n = this->steamids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      1, this->steamids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCGetPersonaNames)
}

::google::protobuf::uint8* CMsgGCGetPersonaNames::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCGetPersonaNames)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 steamids = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFixed64ToArray(1, this->steamids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCGetPersonaNames)
  return target;
}

size_t CMsgGCGetPersonaNames::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCGetPersonaNames)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated fixed64 steamids = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->steamids_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->steamids_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCGetPersonaNames::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCGetPersonaNames)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCGetPersonaNames* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCGetPersonaNames>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCGetPersonaNames)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCGetPersonaNames)
    MergeFrom(*source);
  }
}

void CMsgGCGetPersonaNames::MergeFrom(const CMsgGCGetPersonaNames& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCGetPersonaNames)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  steamids_.MergeFrom(from.steamids_);
}

void CMsgGCGetPersonaNames::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCGetPersonaNames)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCGetPersonaNames::CopyFrom(const CMsgGCGetPersonaNames& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCGetPersonaNames)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCGetPersonaNames::IsInitialized() const {
  return true;
}

void CMsgGCGetPersonaNames::Swap(CMsgGCGetPersonaNames* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCGetPersonaNames::InternalSwap(CMsgGCGetPersonaNames* other) {
  using std::swap;
  steamids_.InternalSwap(&other->steamids_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCGetPersonaNames::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCGetPersonaNames_Response_PersonaName::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCGetPersonaNames_Response_PersonaName::kSteamidFieldNumber;
const int CMsgGCGetPersonaNames_Response_PersonaName::kPersonaNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCGetPersonaNames_Response_PersonaName::CMsgGCGetPersonaNames_Response_PersonaName()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCGetPersonaNames_Response_PersonaName();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCGetPersonaNames_Response.PersonaName)
}
CMsgGCGetPersonaNames_Response_PersonaName::CMsgGCGetPersonaNames_Response_PersonaName(const CMsgGCGetPersonaNames_Response_PersonaName& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  persona_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_persona_name()) {
    persona_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.persona_name_);
  }
  steamid_ = from.steamid_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCGetPersonaNames_Response.PersonaName)
}

void CMsgGCGetPersonaNames_Response_PersonaName::SharedCtor() {
  _cached_size_ = 0;
  persona_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  steamid_ = GOOGLE_ULONGLONG(0);
}

CMsgGCGetPersonaNames_Response_PersonaName::~CMsgGCGetPersonaNames_Response_PersonaName() {
  // @@protoc_insertion_point(destructor:CMsgGCGetPersonaNames_Response.PersonaName)
  SharedDtor();
}

void CMsgGCGetPersonaNames_Response_PersonaName::SharedDtor() {
  persona_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGCGetPersonaNames_Response_PersonaName::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCGetPersonaNames_Response_PersonaName::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCGetPersonaNames_Response_PersonaName& CMsgGCGetPersonaNames_Response_PersonaName::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCGetPersonaNames_Response_PersonaName();
  return *internal_default_instance();
}

CMsgGCGetPersonaNames_Response_PersonaName* CMsgGCGetPersonaNames_Response_PersonaName::New(::google::protobuf::Arena* arena) const {
  CMsgGCGetPersonaNames_Response_PersonaName* n = new CMsgGCGetPersonaNames_Response_PersonaName;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCGetPersonaNames_Response_PersonaName::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCGetPersonaNames_Response.PersonaName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!persona_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*persona_name_.UnsafeRawStringPointer())->clear();
  }
  steamid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCGetPersonaNames_Response_PersonaName::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCGetPersonaNames_Response.PersonaName)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string persona_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_persona_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->persona_name().data(), static_cast<int>(this->persona_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGCGetPersonaNames_Response.PersonaName.persona_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCGetPersonaNames_Response.PersonaName)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCGetPersonaNames_Response.PersonaName)
  return false;
#undef DO_
}

void CMsgGCGetPersonaNames_Response_PersonaName::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCGetPersonaNames_Response.PersonaName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  // optional string persona_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->persona_name().data(), static_cast<int>(this->persona_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCGetPersonaNames_Response.PersonaName.persona_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->persona_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCGetPersonaNames_Response.PersonaName)
}

::google::protobuf::uint8* CMsgGCGetPersonaNames_Response_PersonaName::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCGetPersonaNames_Response.PersonaName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  // optional string persona_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->persona_name().data(), static_cast<int>(this->persona_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCGetPersonaNames_Response.PersonaName.persona_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->persona_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCGetPersonaNames_Response.PersonaName)
  return target;
}

size_t CMsgGCGetPersonaNames_Response_PersonaName::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCGetPersonaNames_Response.PersonaName)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string persona_name = 2;
    if (has_persona_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->persona_name());
    }

    // optional fixed64 steamid = 1;
    if (has_steamid()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCGetPersonaNames_Response_PersonaName::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCGetPersonaNames_Response.PersonaName)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCGetPersonaNames_Response_PersonaName* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCGetPersonaNames_Response_PersonaName>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCGetPersonaNames_Response.PersonaName)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCGetPersonaNames_Response.PersonaName)
    MergeFrom(*source);
  }
}

void CMsgGCGetPersonaNames_Response_PersonaName::MergeFrom(const CMsgGCGetPersonaNames_Response_PersonaName& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCGetPersonaNames_Response.PersonaName)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_persona_name();
      persona_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.persona_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      steamid_ = from.steamid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCGetPersonaNames_Response_PersonaName::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCGetPersonaNames_Response.PersonaName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCGetPersonaNames_Response_PersonaName::CopyFrom(const CMsgGCGetPersonaNames_Response_PersonaName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCGetPersonaNames_Response.PersonaName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCGetPersonaNames_Response_PersonaName::IsInitialized() const {
  return true;
}

void CMsgGCGetPersonaNames_Response_PersonaName::Swap(CMsgGCGetPersonaNames_Response_PersonaName* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCGetPersonaNames_Response_PersonaName::InternalSwap(CMsgGCGetPersonaNames_Response_PersonaName* other) {
  using std::swap;
  persona_name_.Swap(&other->persona_name_);
  swap(steamid_, other->steamid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCGetPersonaNames_Response_PersonaName::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCGetPersonaNames_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCGetPersonaNames_Response::kSucceededLookupsFieldNumber;
const int CMsgGCGetPersonaNames_Response::kFailedLookupSteamidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCGetPersonaNames_Response::CMsgGCGetPersonaNames_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCGetPersonaNames_Response();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCGetPersonaNames_Response)
}
CMsgGCGetPersonaNames_Response::CMsgGCGetPersonaNames_Response(const CMsgGCGetPersonaNames_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      succeeded_lookups_(from.succeeded_lookups_),
      failed_lookup_steamids_(from.failed_lookup_steamids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgGCGetPersonaNames_Response)
}

void CMsgGCGetPersonaNames_Response::SharedCtor() {
  _cached_size_ = 0;
}

CMsgGCGetPersonaNames_Response::~CMsgGCGetPersonaNames_Response() {
  // @@protoc_insertion_point(destructor:CMsgGCGetPersonaNames_Response)
  SharedDtor();
}

void CMsgGCGetPersonaNames_Response::SharedDtor() {
}

void CMsgGCGetPersonaNames_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCGetPersonaNames_Response::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCGetPersonaNames_Response& CMsgGCGetPersonaNames_Response::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCGetPersonaNames_Response();
  return *internal_default_instance();
}

CMsgGCGetPersonaNames_Response* CMsgGCGetPersonaNames_Response::New(::google::protobuf::Arena* arena) const {
  CMsgGCGetPersonaNames_Response* n = new CMsgGCGetPersonaNames_Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCGetPersonaNames_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCGetPersonaNames_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  succeeded_lookups_.Clear();
  failed_lookup_steamids_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCGetPersonaNames_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCGetPersonaNames_Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgGCGetPersonaNames_Response.PersonaName succeeded_lookups = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_succeeded_lookups()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed64 failed_lookup_steamids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 17u, input, this->mutable_failed_lookup_steamids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_failed_lookup_steamids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCGetPersonaNames_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCGetPersonaNames_Response)
  return false;
#undef DO_
}

void CMsgGCGetPersonaNames_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCGetPersonaNames_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgGCGetPersonaNames_Response.PersonaName succeeded_lookups = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->succeeded_lookups_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->succeeded_lookups(static_cast<int>(i)), output);
  }

  // repeated fixed64 failed_lookup_steamids = 2;
  for (int i = 0, n = this->failed_lookup_steamids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      2, this->failed_lookup_steamids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCGetPersonaNames_Response)
}

::google::protobuf::uint8* CMsgGCGetPersonaNames_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCGetPersonaNames_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgGCGetPersonaNames_Response.PersonaName succeeded_lookups = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->succeeded_lookups_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->succeeded_lookups(static_cast<int>(i)), deterministic, target);
  }

  // repeated fixed64 failed_lookup_steamids = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFixed64ToArray(2, this->failed_lookup_steamids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCGetPersonaNames_Response)
  return target;
}

size_t CMsgGCGetPersonaNames_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCGetPersonaNames_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgGCGetPersonaNames_Response.PersonaName succeeded_lookups = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->succeeded_lookups_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->succeeded_lookups(static_cast<int>(i)));
    }
  }

  // repeated fixed64 failed_lookup_steamids = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->failed_lookup_steamids_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->failed_lookup_steamids_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCGetPersonaNames_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCGetPersonaNames_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCGetPersonaNames_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCGetPersonaNames_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCGetPersonaNames_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCGetPersonaNames_Response)
    MergeFrom(*source);
  }
}

void CMsgGCGetPersonaNames_Response::MergeFrom(const CMsgGCGetPersonaNames_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCGetPersonaNames_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  succeeded_lookups_.MergeFrom(from.succeeded_lookups_);
  failed_lookup_steamids_.MergeFrom(from.failed_lookup_steamids_);
}

void CMsgGCGetPersonaNames_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCGetPersonaNames_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCGetPersonaNames_Response::CopyFrom(const CMsgGCGetPersonaNames_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCGetPersonaNames_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCGetPersonaNames_Response::IsInitialized() const {
  return true;
}

void CMsgGCGetPersonaNames_Response::Swap(CMsgGCGetPersonaNames_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCGetPersonaNames_Response::InternalSwap(CMsgGCGetPersonaNames_Response* other) {
  using std::swap;
  succeeded_lookups_.InternalSwap(&other->succeeded_lookups_);
  failed_lookup_steamids_.InternalSwap(&other->failed_lookup_steamids_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCGetPersonaNames_Response::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCCheckFriendship::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCCheckFriendship::kSteamidLeftFieldNumber;
const int CMsgGCCheckFriendship::kSteamidRightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCCheckFriendship::CMsgGCCheckFriendship()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCCheckFriendship();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCCheckFriendship)
}
CMsgGCCheckFriendship::CMsgGCCheckFriendship(const CMsgGCCheckFriendship& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steamid_left_, &from.steamid_left_,
    static_cast<size_t>(reinterpret_cast<char*>(&steamid_right_) -
    reinterpret_cast<char*>(&steamid_left_)) + sizeof(steamid_right_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCCheckFriendship)
}

void CMsgGCCheckFriendship::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&steamid_left_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&steamid_right_) -
      reinterpret_cast<char*>(&steamid_left_)) + sizeof(steamid_right_));
}

CMsgGCCheckFriendship::~CMsgGCCheckFriendship() {
  // @@protoc_insertion_point(destructor:CMsgGCCheckFriendship)
  SharedDtor();
}

void CMsgGCCheckFriendship::SharedDtor() {
}

void CMsgGCCheckFriendship::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCCheckFriendship::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCCheckFriendship& CMsgGCCheckFriendship::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCCheckFriendship();
  return *internal_default_instance();
}

CMsgGCCheckFriendship* CMsgGCCheckFriendship::New(::google::protobuf::Arena* arena) const {
  CMsgGCCheckFriendship* n = new CMsgGCCheckFriendship;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCCheckFriendship::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCheckFriendship)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&steamid_left_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&steamid_right_) -
        reinterpret_cast<char*>(&steamid_left_)) + sizeof(steamid_right_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCCheckFriendship::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCCheckFriendship)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid_left = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steamid_left();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_left_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steamid_right = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_steamid_right();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_right_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCCheckFriendship)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCCheckFriendship)
  return false;
#undef DO_
}

void CMsgGCCheckFriendship::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCCheckFriendship)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid_left = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid_left(), output);
  }

  // optional fixed64 steamid_right = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->steamid_right(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCCheckFriendship)
}

::google::protobuf::uint8* CMsgGCCheckFriendship::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCheckFriendship)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid_left = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid_left(), target);
  }

  // optional fixed64 steamid_right = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->steamid_right(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCheckFriendship)
  return target;
}

size_t CMsgGCCheckFriendship::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCCheckFriendship)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 steamid_left = 1;
    if (has_steamid_left()) {
      total_size += 1 + 8;
    }

    // optional fixed64 steamid_right = 2;
    if (has_steamid_right()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCCheckFriendship::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCCheckFriendship)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCCheckFriendship* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCCheckFriendship>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCCheckFriendship)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCCheckFriendship)
    MergeFrom(*source);
  }
}

void CMsgGCCheckFriendship::MergeFrom(const CMsgGCCheckFriendship& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCheckFriendship)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      steamid_left_ = from.steamid_left_;
    }
    if (cached_has_bits & 0x00000002u) {
      steamid_right_ = from.steamid_right_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCCheckFriendship::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCCheckFriendship)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCCheckFriendship::CopyFrom(const CMsgGCCheckFriendship& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCheckFriendship)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCCheckFriendship::IsInitialized() const {
  return true;
}

void CMsgGCCheckFriendship::Swap(CMsgGCCheckFriendship* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCCheckFriendship::InternalSwap(CMsgGCCheckFriendship* other) {
  using std::swap;
  swap(steamid_left_, other->steamid_left_);
  swap(steamid_right_, other->steamid_right_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCCheckFriendship::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCCheckFriendship_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCCheckFriendship_Response::kSuccessFieldNumber;
const int CMsgGCCheckFriendship_Response::kFoundFriendshipFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCCheckFriendship_Response::CMsgGCCheckFriendship_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCCheckFriendship_Response();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCCheckFriendship_Response)
}
CMsgGCCheckFriendship_Response::CMsgGCCheckFriendship_Response(const CMsgGCCheckFriendship_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&success_, &from.success_,
    static_cast<size_t>(reinterpret_cast<char*>(&found_friendship_) -
    reinterpret_cast<char*>(&success_)) + sizeof(found_friendship_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCCheckFriendship_Response)
}

void CMsgGCCheckFriendship_Response::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&success_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&found_friendship_) -
      reinterpret_cast<char*>(&success_)) + sizeof(found_friendship_));
}

CMsgGCCheckFriendship_Response::~CMsgGCCheckFriendship_Response() {
  // @@protoc_insertion_point(destructor:CMsgGCCheckFriendship_Response)
  SharedDtor();
}

void CMsgGCCheckFriendship_Response::SharedDtor() {
}

void CMsgGCCheckFriendship_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCCheckFriendship_Response::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCCheckFriendship_Response& CMsgGCCheckFriendship_Response::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCCheckFriendship_Response();
  return *internal_default_instance();
}

CMsgGCCheckFriendship_Response* CMsgGCCheckFriendship_Response::New(::google::protobuf::Arena* arena) const {
  CMsgGCCheckFriendship_Response* n = new CMsgGCCheckFriendship_Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCCheckFriendship_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCCheckFriendship_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&success_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&found_friendship_) -
      reinterpret_cast<char*>(&success_)) + sizeof(found_friendship_));
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCCheckFriendship_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCCheckFriendship_Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool found_friendship = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_found_friendship();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &found_friendship_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCCheckFriendship_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCCheckFriendship_Response)
  return false;
#undef DO_
}

void CMsgGCCheckFriendship_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCCheckFriendship_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // optional bool found_friendship = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->found_friendship(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCCheckFriendship_Response)
}

::google::protobuf::uint8* CMsgGCCheckFriendship_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCCheckFriendship_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // optional bool found_friendship = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->found_friendship(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCCheckFriendship_Response)
  return target;
}

size_t CMsgGCCheckFriendship_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCCheckFriendship_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bool success = 1;
    if (has_success()) {
      total_size += 1 + 1;
    }

    // optional bool found_friendship = 2;
    if (has_found_friendship()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCCheckFriendship_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCCheckFriendship_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCCheckFriendship_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCCheckFriendship_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCCheckFriendship_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCCheckFriendship_Response)
    MergeFrom(*source);
  }
}

void CMsgGCCheckFriendship_Response::MergeFrom(const CMsgGCCheckFriendship_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCCheckFriendship_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      success_ = from.success_;
    }
    if (cached_has_bits & 0x00000002u) {
      found_friendship_ = from.found_friendship_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCCheckFriendship_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCCheckFriendship_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCCheckFriendship_Response::CopyFrom(const CMsgGCCheckFriendship_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCCheckFriendship_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCCheckFriendship_Response::IsInitialized() const {
  return true;
}

void CMsgGCCheckFriendship_Response::Swap(CMsgGCCheckFriendship_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCCheckFriendship_Response::InternalSwap(CMsgGCCheckFriendship_Response* other) {
  using std::swap;
  swap(success_, other->success_);
  swap(found_friendship_, other->found_friendship_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCCheckFriendship_Response::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCMsgMasterSetDirectory_SubGC::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCMsgMasterSetDirectory_SubGC::kDirIndexFieldNumber;
const int CMsgGCMsgMasterSetDirectory_SubGC::kNameFieldNumber;
const int CMsgGCMsgMasterSetDirectory_SubGC::kBoxFieldNumber;
const int CMsgGCMsgMasterSetDirectory_SubGC::kCommandLineFieldNumber;
const int CMsgGCMsgMasterSetDirectory_SubGC::kGcBinaryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCMsgMasterSetDirectory_SubGC::CMsgGCMsgMasterSetDirectory_SubGC()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCMsgMasterSetDirectory_SubGC();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCMsgMasterSetDirectory.SubGC)
}
CMsgGCMsgMasterSetDirectory_SubGC::CMsgGCMsgMasterSetDirectory_SubGC(const CMsgGCMsgMasterSetDirectory_SubGC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  box_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_box()) {
    box_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.box_);
  }
  command_line_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_command_line()) {
    command_line_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_line_);
  }
  gc_binary_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gc_binary()) {
    gc_binary_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gc_binary_);
  }
  dir_index_ = from.dir_index_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCMsgMasterSetDirectory.SubGC)
}

void CMsgGCMsgMasterSetDirectory_SubGC::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  box_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  command_line_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gc_binary_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dir_index_ = 0u;
}

CMsgGCMsgMasterSetDirectory_SubGC::~CMsgGCMsgMasterSetDirectory_SubGC() {
  // @@protoc_insertion_point(destructor:CMsgGCMsgMasterSetDirectory.SubGC)
  SharedDtor();
}

void CMsgGCMsgMasterSetDirectory_SubGC::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  box_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  command_line_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gc_binary_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGCMsgMasterSetDirectory_SubGC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCMsgMasterSetDirectory_SubGC::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCMsgMasterSetDirectory_SubGC& CMsgGCMsgMasterSetDirectory_SubGC::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCMsgMasterSetDirectory_SubGC();
  return *internal_default_instance();
}

CMsgGCMsgMasterSetDirectory_SubGC* CMsgGCMsgMasterSetDirectory_SubGC::New(::google::protobuf::Arena* arena) const {
  CMsgGCMsgMasterSetDirectory_SubGC* n = new CMsgGCMsgMasterSetDirectory_SubGC;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCMsgMasterSetDirectory_SubGC::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCMsgMasterSetDirectory.SubGC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!box_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*box_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!command_line_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*command_line_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!gc_binary_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*gc_binary_.UnsafeRawStringPointer())->clear();
    }
  }
  dir_index_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCMsgMasterSetDirectory_SubGC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCMsgMasterSetDirectory.SubGC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 dir_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_dir_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dir_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGCMsgMasterSetDirectory.SubGC.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string box = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_box()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->box().data(), static_cast<int>(this->box().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGCMsgMasterSetDirectory.SubGC.box");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string command_line = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_command_line()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->command_line().data(), static_cast<int>(this->command_line().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGCMsgMasterSetDirectory.SubGC.command_line");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string gc_binary = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gc_binary()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gc_binary().data(), static_cast<int>(this->gc_binary().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGCMsgMasterSetDirectory.SubGC.gc_binary");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCMsgMasterSetDirectory.SubGC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCMsgMasterSetDirectory.SubGC)
  return false;
#undef DO_
}

void CMsgGCMsgMasterSetDirectory_SubGC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCMsgMasterSetDirectory.SubGC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 dir_index = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->dir_index(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCMsgMasterSetDirectory.SubGC.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional string box = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->box().data(), static_cast<int>(this->box().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCMsgMasterSetDirectory.SubGC.box");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->box(), output);
  }

  // optional string command_line = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->command_line().data(), static_cast<int>(this->command_line().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCMsgMasterSetDirectory.SubGC.command_line");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->command_line(), output);
  }

  // optional string gc_binary = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gc_binary().data(), static_cast<int>(this->gc_binary().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCMsgMasterSetDirectory.SubGC.gc_binary");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->gc_binary(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCMsgMasterSetDirectory.SubGC)
}

::google::protobuf::uint8* CMsgGCMsgMasterSetDirectory_SubGC::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCMsgMasterSetDirectory.SubGC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 dir_index = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->dir_index(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCMsgMasterSetDirectory.SubGC.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional string box = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->box().data(), static_cast<int>(this->box().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCMsgMasterSetDirectory.SubGC.box");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->box(), target);
  }

  // optional string command_line = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->command_line().data(), static_cast<int>(this->command_line().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCMsgMasterSetDirectory.SubGC.command_line");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->command_line(), target);
  }

  // optional string gc_binary = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gc_binary().data(), static_cast<int>(this->gc_binary().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCMsgMasterSetDirectory.SubGC.gc_binary");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->gc_binary(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCMsgMasterSetDirectory.SubGC)
  return target;
}

size_t CMsgGCMsgMasterSetDirectory_SubGC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCMsgMasterSetDirectory.SubGC)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string box = 3;
    if (has_box()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->box());
    }

    // optional string command_line = 4;
    if (has_command_line()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->command_line());
    }

    // optional string gc_binary = 5;
    if (has_gc_binary()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gc_binary());
    }

    // optional uint32 dir_index = 1;
    if (has_dir_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dir_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCMsgMasterSetDirectory_SubGC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCMsgMasterSetDirectory.SubGC)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCMsgMasterSetDirectory_SubGC* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCMsgMasterSetDirectory_SubGC>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCMsgMasterSetDirectory.SubGC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCMsgMasterSetDirectory.SubGC)
    MergeFrom(*source);
  }
}

void CMsgGCMsgMasterSetDirectory_SubGC::MergeFrom(const CMsgGCMsgMasterSetDirectory_SubGC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCMsgMasterSetDirectory.SubGC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_box();
      box_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.box_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_command_line();
      command_line_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_line_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_gc_binary();
      gc_binary_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gc_binary_);
    }
    if (cached_has_bits & 0x00000010u) {
      dir_index_ = from.dir_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCMsgMasterSetDirectory_SubGC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCMsgMasterSetDirectory.SubGC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCMsgMasterSetDirectory_SubGC::CopyFrom(const CMsgGCMsgMasterSetDirectory_SubGC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCMsgMasterSetDirectory.SubGC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCMsgMasterSetDirectory_SubGC::IsInitialized() const {
  return true;
}

void CMsgGCMsgMasterSetDirectory_SubGC::Swap(CMsgGCMsgMasterSetDirectory_SubGC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCMsgMasterSetDirectory_SubGC::InternalSwap(CMsgGCMsgMasterSetDirectory_SubGC* other) {
  using std::swap;
  name_.Swap(&other->name_);
  box_.Swap(&other->box_);
  command_line_.Swap(&other->command_line_);
  gc_binary_.Swap(&other->gc_binary_);
  swap(dir_index_, other->dir_index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCMsgMasterSetDirectory_SubGC::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCMsgMasterSetDirectory::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCMsgMasterSetDirectory::kMasterDirIndexFieldNumber;
const int CMsgGCMsgMasterSetDirectory::kDirFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCMsgMasterSetDirectory::CMsgGCMsgMasterSetDirectory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCMsgMasterSetDirectory();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCMsgMasterSetDirectory)
}
CMsgGCMsgMasterSetDirectory::CMsgGCMsgMasterSetDirectory(const CMsgGCMsgMasterSetDirectory& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      dir_(from.dir_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  master_dir_index_ = from.master_dir_index_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCMsgMasterSetDirectory)
}

void CMsgGCMsgMasterSetDirectory::SharedCtor() {
  _cached_size_ = 0;
  master_dir_index_ = 0u;
}

CMsgGCMsgMasterSetDirectory::~CMsgGCMsgMasterSetDirectory() {
  // @@protoc_insertion_point(destructor:CMsgGCMsgMasterSetDirectory)
  SharedDtor();
}

void CMsgGCMsgMasterSetDirectory::SharedDtor() {
}

void CMsgGCMsgMasterSetDirectory::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCMsgMasterSetDirectory::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCMsgMasterSetDirectory& CMsgGCMsgMasterSetDirectory::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCMsgMasterSetDirectory();
  return *internal_default_instance();
}

CMsgGCMsgMasterSetDirectory* CMsgGCMsgMasterSetDirectory::New(::google::protobuf::Arena* arena) const {
  CMsgGCMsgMasterSetDirectory* n = new CMsgGCMsgMasterSetDirectory;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCMsgMasterSetDirectory::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCMsgMasterSetDirectory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dir_.Clear();
  master_dir_index_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCMsgMasterSetDirectory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCMsgMasterSetDirectory)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 master_dir_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_master_dir_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &master_dir_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgGCMsgMasterSetDirectory.SubGC dir = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_dir()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCMsgMasterSetDirectory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCMsgMasterSetDirectory)
  return false;
#undef DO_
}

void CMsgGCMsgMasterSetDirectory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCMsgMasterSetDirectory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 master_dir_index = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->master_dir_index(), output);
  }

  // repeated .CMsgGCMsgMasterSetDirectory.SubGC dir = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dir_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->dir(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCMsgMasterSetDirectory)
}

::google::protobuf::uint8* CMsgGCMsgMasterSetDirectory::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCMsgMasterSetDirectory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 master_dir_index = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->master_dir_index(), target);
  }

  // repeated .CMsgGCMsgMasterSetDirectory.SubGC dir = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dir_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->dir(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCMsgMasterSetDirectory)
  return target;
}

size_t CMsgGCMsgMasterSetDirectory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCMsgMasterSetDirectory)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgGCMsgMasterSetDirectory.SubGC dir = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->dir_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->dir(static_cast<int>(i)));
    }
  }

  // optional uint32 master_dir_index = 1;
  if (has_master_dir_index()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->master_dir_index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCMsgMasterSetDirectory::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCMsgMasterSetDirectory)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCMsgMasterSetDirectory* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCMsgMasterSetDirectory>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCMsgMasterSetDirectory)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCMsgMasterSetDirectory)
    MergeFrom(*source);
  }
}

void CMsgGCMsgMasterSetDirectory::MergeFrom(const CMsgGCMsgMasterSetDirectory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCMsgMasterSetDirectory)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dir_.MergeFrom(from.dir_);
  if (from.has_master_dir_index()) {
    set_master_dir_index(from.master_dir_index());
  }
}

void CMsgGCMsgMasterSetDirectory::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCMsgMasterSetDirectory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCMsgMasterSetDirectory::CopyFrom(const CMsgGCMsgMasterSetDirectory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCMsgMasterSetDirectory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCMsgMasterSetDirectory::IsInitialized() const {
  return true;
}

void CMsgGCMsgMasterSetDirectory::Swap(CMsgGCMsgMasterSetDirectory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCMsgMasterSetDirectory::InternalSwap(CMsgGCMsgMasterSetDirectory* other) {
  using std::swap;
  dir_.InternalSwap(&other->dir_);
  swap(master_dir_index_, other->master_dir_index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCMsgMasterSetDirectory::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCMsgMasterSetDirectory_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCMsgMasterSetDirectory_Response::kEresultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCMsgMasterSetDirectory_Response::CMsgGCMsgMasterSetDirectory_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCMsgMasterSetDirectory_Response();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCMsgMasterSetDirectory_Response)
}
CMsgGCMsgMasterSetDirectory_Response::CMsgGCMsgMasterSetDirectory_Response(const CMsgGCMsgMasterSetDirectory_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCMsgMasterSetDirectory_Response)
}

void CMsgGCMsgMasterSetDirectory_Response::SharedCtor() {
  _cached_size_ = 0;
  eresult_ = 2;
}

CMsgGCMsgMasterSetDirectory_Response::~CMsgGCMsgMasterSetDirectory_Response() {
  // @@protoc_insertion_point(destructor:CMsgGCMsgMasterSetDirectory_Response)
  SharedDtor();
}

void CMsgGCMsgMasterSetDirectory_Response::SharedDtor() {
}

void CMsgGCMsgMasterSetDirectory_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCMsgMasterSetDirectory_Response::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCMsgMasterSetDirectory_Response& CMsgGCMsgMasterSetDirectory_Response::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCMsgMasterSetDirectory_Response();
  return *internal_default_instance();
}

CMsgGCMsgMasterSetDirectory_Response* CMsgGCMsgMasterSetDirectory_Response::New(::google::protobuf::Arena* arena) const {
  CMsgGCMsgMasterSetDirectory_Response* n = new CMsgGCMsgMasterSetDirectory_Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCMsgMasterSetDirectory_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCMsgMasterSetDirectory_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eresult_ = 2;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCMsgMasterSetDirectory_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCMsgMasterSetDirectory_Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCMsgMasterSetDirectory_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCMsgMasterSetDirectory_Response)
  return false;
#undef DO_
}

void CMsgGCMsgMasterSetDirectory_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCMsgMasterSetDirectory_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCMsgMasterSetDirectory_Response)
}

::google::protobuf::uint8* CMsgGCMsgMasterSetDirectory_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCMsgMasterSetDirectory_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCMsgMasterSetDirectory_Response)
  return target;
}

size_t CMsgGCMsgMasterSetDirectory_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCMsgMasterSetDirectory_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 eresult = 1 [default = 2];
  if (has_eresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCMsgMasterSetDirectory_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCMsgMasterSetDirectory_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCMsgMasterSetDirectory_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCMsgMasterSetDirectory_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCMsgMasterSetDirectory_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCMsgMasterSetDirectory_Response)
    MergeFrom(*source);
  }
}

void CMsgGCMsgMasterSetDirectory_Response::MergeFrom(const CMsgGCMsgMasterSetDirectory_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCMsgMasterSetDirectory_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgGCMsgMasterSetDirectory_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCMsgMasterSetDirectory_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCMsgMasterSetDirectory_Response::CopyFrom(const CMsgGCMsgMasterSetDirectory_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCMsgMasterSetDirectory_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCMsgMasterSetDirectory_Response::IsInitialized() const {
  return true;
}

void CMsgGCMsgMasterSetDirectory_Response::Swap(CMsgGCMsgMasterSetDirectory_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCMsgMasterSetDirectory_Response::InternalSwap(CMsgGCMsgMasterSetDirectory_Response* other) {
  using std::swap;
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCMsgMasterSetDirectory_Response::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCMsgWebAPIJobRequestForwardResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCMsgWebAPIJobRequestForwardResponse::kDirIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCMsgWebAPIJobRequestForwardResponse::CMsgGCMsgWebAPIJobRequestForwardResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCMsgWebAPIJobRequestForwardResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCMsgWebAPIJobRequestForwardResponse)
}
CMsgGCMsgWebAPIJobRequestForwardResponse::CMsgGCMsgWebAPIJobRequestForwardResponse(const CMsgGCMsgWebAPIJobRequestForwardResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dir_index_ = from.dir_index_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCMsgWebAPIJobRequestForwardResponse)
}

void CMsgGCMsgWebAPIJobRequestForwardResponse::SharedCtor() {
  _cached_size_ = 0;
  dir_index_ = 0u;
}

CMsgGCMsgWebAPIJobRequestForwardResponse::~CMsgGCMsgWebAPIJobRequestForwardResponse() {
  // @@protoc_insertion_point(destructor:CMsgGCMsgWebAPIJobRequestForwardResponse)
  SharedDtor();
}

void CMsgGCMsgWebAPIJobRequestForwardResponse::SharedDtor() {
}

void CMsgGCMsgWebAPIJobRequestForwardResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCMsgWebAPIJobRequestForwardResponse::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCMsgWebAPIJobRequestForwardResponse& CMsgGCMsgWebAPIJobRequestForwardResponse::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCMsgWebAPIJobRequestForwardResponse();
  return *internal_default_instance();
}

CMsgGCMsgWebAPIJobRequestForwardResponse* CMsgGCMsgWebAPIJobRequestForwardResponse::New(::google::protobuf::Arena* arena) const {
  CMsgGCMsgWebAPIJobRequestForwardResponse* n = new CMsgGCMsgWebAPIJobRequestForwardResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCMsgWebAPIJobRequestForwardResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCMsgWebAPIJobRequestForwardResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dir_index_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCMsgWebAPIJobRequestForwardResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCMsgWebAPIJobRequestForwardResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 dir_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_dir_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dir_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCMsgWebAPIJobRequestForwardResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCMsgWebAPIJobRequestForwardResponse)
  return false;
#undef DO_
}

void CMsgGCMsgWebAPIJobRequestForwardResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCMsgWebAPIJobRequestForwardResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 dir_index = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->dir_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCMsgWebAPIJobRequestForwardResponse)
}

::google::protobuf::uint8* CMsgGCMsgWebAPIJobRequestForwardResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCMsgWebAPIJobRequestForwardResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 dir_index = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->dir_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCMsgWebAPIJobRequestForwardResponse)
  return target;
}

size_t CMsgGCMsgWebAPIJobRequestForwardResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCMsgWebAPIJobRequestForwardResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional uint32 dir_index = 1;
  if (has_dir_index()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dir_index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCMsgWebAPIJobRequestForwardResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCMsgWebAPIJobRequestForwardResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCMsgWebAPIJobRequestForwardResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCMsgWebAPIJobRequestForwardResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCMsgWebAPIJobRequestForwardResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCMsgWebAPIJobRequestForwardResponse)
    MergeFrom(*source);
  }
}

void CMsgGCMsgWebAPIJobRequestForwardResponse::MergeFrom(const CMsgGCMsgWebAPIJobRequestForwardResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCMsgWebAPIJobRequestForwardResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_dir_index()) {
    set_dir_index(from.dir_index());
  }
}

void CMsgGCMsgWebAPIJobRequestForwardResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCMsgWebAPIJobRequestForwardResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCMsgWebAPIJobRequestForwardResponse::CopyFrom(const CMsgGCMsgWebAPIJobRequestForwardResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCMsgWebAPIJobRequestForwardResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCMsgWebAPIJobRequestForwardResponse::IsInitialized() const {
  return true;
}

void CMsgGCMsgWebAPIJobRequestForwardResponse::Swap(CMsgGCMsgWebAPIJobRequestForwardResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCMsgWebAPIJobRequestForwardResponse::InternalSwap(CMsgGCMsgWebAPIJobRequestForwardResponse* other) {
  using std::swap;
  swap(dir_index_, other->dir_index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCMsgWebAPIJobRequestForwardResponse::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CGCSystemMsg_GetPurchaseTrust_Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCSystemMsg_GetPurchaseTrust_Request::kSteamidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCSystemMsg_GetPurchaseTrust_Request::CGCSystemMsg_GetPurchaseTrust_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCGCSystemMsg_GetPurchaseTrust_Request();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCSystemMsg_GetPurchaseTrust_Request)
}
CGCSystemMsg_GetPurchaseTrust_Request::CGCSystemMsg_GetPurchaseTrust_Request(const CGCSystemMsg_GetPurchaseTrust_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  steamid_ = from.steamid_;
  // @@protoc_insertion_point(copy_constructor:CGCSystemMsg_GetPurchaseTrust_Request)
}

void CGCSystemMsg_GetPurchaseTrust_Request::SharedCtor() {
  _cached_size_ = 0;
  steamid_ = GOOGLE_ULONGLONG(0);
}

CGCSystemMsg_GetPurchaseTrust_Request::~CGCSystemMsg_GetPurchaseTrust_Request() {
  // @@protoc_insertion_point(destructor:CGCSystemMsg_GetPurchaseTrust_Request)
  SharedDtor();
}

void CGCSystemMsg_GetPurchaseTrust_Request::SharedDtor() {
}

void CGCSystemMsg_GetPurchaseTrust_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCSystemMsg_GetPurchaseTrust_Request::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CGCSystemMsg_GetPurchaseTrust_Request& CGCSystemMsg_GetPurchaseTrust_Request::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCGCSystemMsg_GetPurchaseTrust_Request();
  return *internal_default_instance();
}

CGCSystemMsg_GetPurchaseTrust_Request* CGCSystemMsg_GetPurchaseTrust_Request::New(::google::protobuf::Arena* arena) const {
  CGCSystemMsg_GetPurchaseTrust_Request* n = new CGCSystemMsg_GetPurchaseTrust_Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCSystemMsg_GetPurchaseTrust_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCSystemMsg_GetPurchaseTrust_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  steamid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CGCSystemMsg_GetPurchaseTrust_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCSystemMsg_GetPurchaseTrust_Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCSystemMsg_GetPurchaseTrust_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCSystemMsg_GetPurchaseTrust_Request)
  return false;
#undef DO_
}

void CGCSystemMsg_GetPurchaseTrust_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCSystemMsg_GetPurchaseTrust_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCSystemMsg_GetPurchaseTrust_Request)
}

::google::protobuf::uint8* CGCSystemMsg_GetPurchaseTrust_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CGCSystemMsg_GetPurchaseTrust_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCSystemMsg_GetPurchaseTrust_Request)
  return target;
}

size_t CGCSystemMsg_GetPurchaseTrust_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCSystemMsg_GetPurchaseTrust_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional fixed64 steamid = 1;
  if (has_steamid()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCSystemMsg_GetPurchaseTrust_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CGCSystemMsg_GetPurchaseTrust_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CGCSystemMsg_GetPurchaseTrust_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCSystemMsg_GetPurchaseTrust_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CGCSystemMsg_GetPurchaseTrust_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CGCSystemMsg_GetPurchaseTrust_Request)
    MergeFrom(*source);
  }
}

void CGCSystemMsg_GetPurchaseTrust_Request::MergeFrom(const CGCSystemMsg_GetPurchaseTrust_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CGCSystemMsg_GetPurchaseTrust_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_steamid()) {
    set_steamid(from.steamid());
  }
}

void CGCSystemMsg_GetPurchaseTrust_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CGCSystemMsg_GetPurchaseTrust_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCSystemMsg_GetPurchaseTrust_Request::CopyFrom(const CGCSystemMsg_GetPurchaseTrust_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCSystemMsg_GetPurchaseTrust_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCSystemMsg_GetPurchaseTrust_Request::IsInitialized() const {
  return true;
}

void CGCSystemMsg_GetPurchaseTrust_Request::Swap(CGCSystemMsg_GetPurchaseTrust_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCSystemMsg_GetPurchaseTrust_Request::InternalSwap(CGCSystemMsg_GetPurchaseTrust_Request* other) {
  using std::swap;
  swap(steamid_, other->steamid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCSystemMsg_GetPurchaseTrust_Request::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CGCSystemMsg_GetPurchaseTrust_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCSystemMsg_GetPurchaseTrust_Response::kHasPriorPurchaseHistoryFieldNumber;
const int CGCSystemMsg_GetPurchaseTrust_Response::kHasNoRecentPasswordResetsFieldNumber;
const int CGCSystemMsg_GetPurchaseTrust_Response::kIsWalletCashTrustedFieldNumber;
const int CGCSystemMsg_GetPurchaseTrust_Response::kTimeAllTrustedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCSystemMsg_GetPurchaseTrust_Response::CGCSystemMsg_GetPurchaseTrust_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCGCSystemMsg_GetPurchaseTrust_Response();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CGCSystemMsg_GetPurchaseTrust_Response)
}
CGCSystemMsg_GetPurchaseTrust_Response::CGCSystemMsg_GetPurchaseTrust_Response(const CGCSystemMsg_GetPurchaseTrust_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&has_prior_purchase_history_, &from.has_prior_purchase_history_,
    static_cast<size_t>(reinterpret_cast<char*>(&time_all_trusted_) -
    reinterpret_cast<char*>(&has_prior_purchase_history_)) + sizeof(time_all_trusted_));
  // @@protoc_insertion_point(copy_constructor:CGCSystemMsg_GetPurchaseTrust_Response)
}

void CGCSystemMsg_GetPurchaseTrust_Response::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&has_prior_purchase_history_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_all_trusted_) -
      reinterpret_cast<char*>(&has_prior_purchase_history_)) + sizeof(time_all_trusted_));
}

CGCSystemMsg_GetPurchaseTrust_Response::~CGCSystemMsg_GetPurchaseTrust_Response() {
  // @@protoc_insertion_point(destructor:CGCSystemMsg_GetPurchaseTrust_Response)
  SharedDtor();
}

void CGCSystemMsg_GetPurchaseTrust_Response::SharedDtor() {
}

void CGCSystemMsg_GetPurchaseTrust_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCSystemMsg_GetPurchaseTrust_Response::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CGCSystemMsg_GetPurchaseTrust_Response& CGCSystemMsg_GetPurchaseTrust_Response::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCGCSystemMsg_GetPurchaseTrust_Response();
  return *internal_default_instance();
}

CGCSystemMsg_GetPurchaseTrust_Response* CGCSystemMsg_GetPurchaseTrust_Response::New(::google::protobuf::Arena* arena) const {
  CGCSystemMsg_GetPurchaseTrust_Response* n = new CGCSystemMsg_GetPurchaseTrust_Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCSystemMsg_GetPurchaseTrust_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CGCSystemMsg_GetPurchaseTrust_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&has_prior_purchase_history_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&time_all_trusted_) -
        reinterpret_cast<char*>(&has_prior_purchase_history_)) + sizeof(time_all_trusted_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CGCSystemMsg_GetPurchaseTrust_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CGCSystemMsg_GetPurchaseTrust_Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool has_prior_purchase_history = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_has_prior_purchase_history();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_prior_purchase_history_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool has_no_recent_password_resets = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_has_no_recent_password_resets();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_no_recent_password_resets_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_wallet_cash_trusted = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_is_wallet_cash_trusted();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_wallet_cash_trusted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 time_all_trusted = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_time_all_trusted();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_all_trusted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CGCSystemMsg_GetPurchaseTrust_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CGCSystemMsg_GetPurchaseTrust_Response)
  return false;
#undef DO_
}

void CGCSystemMsg_GetPurchaseTrust_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CGCSystemMsg_GetPurchaseTrust_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool has_prior_purchase_history = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->has_prior_purchase_history(), output);
  }

  // optional bool has_no_recent_password_resets = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->has_no_recent_password_resets(), output);
  }

  // optional bool is_wallet_cash_trusted = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_wallet_cash_trusted(), output);
  }

  // optional uint32 time_all_trusted = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->time_all_trusted(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CGCSystemMsg_GetPurchaseTrust_Response)
}

::google::protobuf::uint8* CGCSystemMsg_GetPurchaseTrust_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CGCSystemMsg_GetPurchaseTrust_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool has_prior_purchase_history = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->has_prior_purchase_history(), target);
  }

  // optional bool has_no_recent_password_resets = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->has_no_recent_password_resets(), target);
  }

  // optional bool is_wallet_cash_trusted = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_wallet_cash_trusted(), target);
  }

  // optional uint32 time_all_trusted = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->time_all_trusted(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CGCSystemMsg_GetPurchaseTrust_Response)
  return target;
}

size_t CGCSystemMsg_GetPurchaseTrust_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CGCSystemMsg_GetPurchaseTrust_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional bool has_prior_purchase_history = 1;
    if (has_has_prior_purchase_history()) {
      total_size += 1 + 1;
    }

    // optional bool has_no_recent_password_resets = 2;
    if (has_has_no_recent_password_resets()) {
      total_size += 1 + 1;
    }

    // optional bool is_wallet_cash_trusted = 3;
    if (has_is_wallet_cash_trusted()) {
      total_size += 1 + 1;
    }

    // optional uint32 time_all_trusted = 4;
    if (has_time_all_trusted()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time_all_trusted());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCSystemMsg_GetPurchaseTrust_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CGCSystemMsg_GetPurchaseTrust_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CGCSystemMsg_GetPurchaseTrust_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCSystemMsg_GetPurchaseTrust_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CGCSystemMsg_GetPurchaseTrust_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CGCSystemMsg_GetPurchaseTrust_Response)
    MergeFrom(*source);
  }
}

void CGCSystemMsg_GetPurchaseTrust_Response::MergeFrom(const CGCSystemMsg_GetPurchaseTrust_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CGCSystemMsg_GetPurchaseTrust_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      has_prior_purchase_history_ = from.has_prior_purchase_history_;
    }
    if (cached_has_bits & 0x00000002u) {
      has_no_recent_password_resets_ = from.has_no_recent_password_resets_;
    }
    if (cached_has_bits & 0x00000004u) {
      is_wallet_cash_trusted_ = from.is_wallet_cash_trusted_;
    }
    if (cached_has_bits & 0x00000008u) {
      time_all_trusted_ = from.time_all_trusted_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CGCSystemMsg_GetPurchaseTrust_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CGCSystemMsg_GetPurchaseTrust_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCSystemMsg_GetPurchaseTrust_Response::CopyFrom(const CGCSystemMsg_GetPurchaseTrust_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CGCSystemMsg_GetPurchaseTrust_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCSystemMsg_GetPurchaseTrust_Response::IsInitialized() const {
  return true;
}

void CGCSystemMsg_GetPurchaseTrust_Response::Swap(CGCSystemMsg_GetPurchaseTrust_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCSystemMsg_GetPurchaseTrust_Response::InternalSwap(CGCSystemMsg_GetPurchaseTrust_Response* other) {
  using std::swap;
  swap(has_prior_purchase_history_, other->has_prior_purchase_history_);
  swap(has_no_recent_password_resets_, other->has_no_recent_password_resets_);
  swap(is_wallet_cash_trusted_, other->is_wallet_cash_trusted_);
  swap(time_all_trusted_, other->time_all_trusted_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCSystemMsg_GetPurchaseTrust_Response::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCHAccountVacStatusChange::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCHAccountVacStatusChange::kSteamIdFieldNumber;
const int CMsgGCHAccountVacStatusChange::kAppIdFieldNumber;
const int CMsgGCHAccountVacStatusChange::kRtimeVacbanStartsFieldNumber;
const int CMsgGCHAccountVacStatusChange::kIsBannedNowFieldNumber;
const int CMsgGCHAccountVacStatusChange::kIsBannedFutureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCHAccountVacStatusChange::CMsgGCHAccountVacStatusChange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCHAccountVacStatusChange();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCHAccountVacStatusChange)
}
CMsgGCHAccountVacStatusChange::CMsgGCHAccountVacStatusChange(const CMsgGCHAccountVacStatusChange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steam_id_, &from.steam_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_banned_future_) -
    reinterpret_cast<char*>(&steam_id_)) + sizeof(is_banned_future_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCHAccountVacStatusChange)
}

void CMsgGCHAccountVacStatusChange::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&steam_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_banned_future_) -
      reinterpret_cast<char*>(&steam_id_)) + sizeof(is_banned_future_));
}

CMsgGCHAccountVacStatusChange::~CMsgGCHAccountVacStatusChange() {
  // @@protoc_insertion_point(destructor:CMsgGCHAccountVacStatusChange)
  SharedDtor();
}

void CMsgGCHAccountVacStatusChange::SharedDtor() {
}

void CMsgGCHAccountVacStatusChange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCHAccountVacStatusChange::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCHAccountVacStatusChange& CMsgGCHAccountVacStatusChange::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCHAccountVacStatusChange();
  return *internal_default_instance();
}

CMsgGCHAccountVacStatusChange* CMsgGCHAccountVacStatusChange::New(::google::protobuf::Arena* arena) const {
  CMsgGCHAccountVacStatusChange* n = new CMsgGCHAccountVacStatusChange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCHAccountVacStatusChange::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCHAccountVacStatusChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&steam_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_banned_future_) -
        reinterpret_cast<char*>(&steam_id_)) + sizeof(is_banned_future_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCHAccountVacStatusChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCHAccountVacStatusChange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 rtime_vacban_starts = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_rtime_vacban_starts();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rtime_vacban_starts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_banned_now = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_is_banned_now();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_banned_now_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_banned_future = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_is_banned_future();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_banned_future_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCHAccountVacStatusChange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCHAccountVacStatusChange)
  return false;
#undef DO_
}

void CMsgGCHAccountVacStatusChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCHAccountVacStatusChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id(), output);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->app_id(), output);
  }

  // optional uint32 rtime_vacban_starts = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->rtime_vacban_starts(), output);
  }

  // optional bool is_banned_now = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_banned_now(), output);
  }

  // optional bool is_banned_future = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_banned_future(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCHAccountVacStatusChange)
}

::google::protobuf::uint8* CMsgGCHAccountVacStatusChange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCHAccountVacStatusChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id(), target);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->app_id(), target);
  }

  // optional uint32 rtime_vacban_starts = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->rtime_vacban_starts(), target);
  }

  // optional bool is_banned_now = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_banned_now(), target);
  }

  // optional bool is_banned_future = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_banned_future(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCHAccountVacStatusChange)
  return target;
}

size_t CMsgGCHAccountVacStatusChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCHAccountVacStatusChange)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional fixed64 steam_id = 1;
    if (has_steam_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 2;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 rtime_vacban_starts = 3;
    if (has_rtime_vacban_starts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rtime_vacban_starts());
    }

    // optional bool is_banned_now = 4;
    if (has_is_banned_now()) {
      total_size += 1 + 1;
    }

    // optional bool is_banned_future = 5;
    if (has_is_banned_future()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCHAccountVacStatusChange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCHAccountVacStatusChange)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCHAccountVacStatusChange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCHAccountVacStatusChange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCHAccountVacStatusChange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCHAccountVacStatusChange)
    MergeFrom(*source);
  }
}

void CMsgGCHAccountVacStatusChange::MergeFrom(const CMsgGCHAccountVacStatusChange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCHAccountVacStatusChange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      steam_id_ = from.steam_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      rtime_vacban_starts_ = from.rtime_vacban_starts_;
    }
    if (cached_has_bits & 0x00000008u) {
      is_banned_now_ = from.is_banned_now_;
    }
    if (cached_has_bits & 0x00000010u) {
      is_banned_future_ = from.is_banned_future_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCHAccountVacStatusChange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCHAccountVacStatusChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCHAccountVacStatusChange::CopyFrom(const CMsgGCHAccountVacStatusChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCHAccountVacStatusChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCHAccountVacStatusChange::IsInitialized() const {
  return true;
}

void CMsgGCHAccountVacStatusChange::Swap(CMsgGCHAccountVacStatusChange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCHAccountVacStatusChange::InternalSwap(CMsgGCHAccountVacStatusChange* other) {
  using std::swap;
  swap(steam_id_, other->steam_id_);
  swap(app_id_, other->app_id_);
  swap(rtime_vacban_starts_, other->rtime_vacban_starts_);
  swap(is_banned_now_, other->is_banned_now_);
  swap(is_banned_future_, other->is_banned_future_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCHAccountVacStatusChange::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCHAccountTradeBanStatusChange::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCHAccountTradeBanStatusChange::kSteamidFieldNumber;
const int CMsgGCHAccountTradeBanStatusChange::kAppidFieldNumber;
const int CMsgGCHAccountTradeBanStatusChange::kIsBannedFieldNumber;
const int CMsgGCHAccountTradeBanStatusChange::kTimeBannedUntilFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCHAccountTradeBanStatusChange::CMsgGCHAccountTradeBanStatusChange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCHAccountTradeBanStatusChange();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCHAccountTradeBanStatusChange)
}
CMsgGCHAccountTradeBanStatusChange::CMsgGCHAccountTradeBanStatusChange(const CMsgGCHAccountTradeBanStatusChange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steamid_, &from.steamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&time_banned_until_) -
    reinterpret_cast<char*>(&steamid_)) + sizeof(time_banned_until_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCHAccountTradeBanStatusChange)
}

void CMsgGCHAccountTradeBanStatusChange::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&steamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_banned_until_) -
      reinterpret_cast<char*>(&steamid_)) + sizeof(time_banned_until_));
}

CMsgGCHAccountTradeBanStatusChange::~CMsgGCHAccountTradeBanStatusChange() {
  // @@protoc_insertion_point(destructor:CMsgGCHAccountTradeBanStatusChange)
  SharedDtor();
}

void CMsgGCHAccountTradeBanStatusChange::SharedDtor() {
}

void CMsgGCHAccountTradeBanStatusChange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCHAccountTradeBanStatusChange::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCHAccountTradeBanStatusChange& CMsgGCHAccountTradeBanStatusChange::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCHAccountTradeBanStatusChange();
  return *internal_default_instance();
}

CMsgGCHAccountTradeBanStatusChange* CMsgGCHAccountTradeBanStatusChange::New(::google::protobuf::Arena* arena) const {
  CMsgGCHAccountTradeBanStatusChange* n = new CMsgGCHAccountTradeBanStatusChange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCHAccountTradeBanStatusChange::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCHAccountTradeBanStatusChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&steamid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&time_banned_until_) -
        reinterpret_cast<char*>(&steamid_)) + sizeof(time_banned_until_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCHAccountTradeBanStatusChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCHAccountTradeBanStatusChange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 appid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_banned = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_is_banned();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_banned_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 time_banned_until = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_time_banned_until();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_banned_until_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCHAccountTradeBanStatusChange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCHAccountTradeBanStatusChange)
  return false;
#undef DO_
}

void CMsgGCHAccountTradeBanStatusChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCHAccountTradeBanStatusChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->appid(), output);
  }

  // optional bool is_banned = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_banned(), output);
  }

  // optional uint32 time_banned_until = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->time_banned_until(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCHAccountTradeBanStatusChange)
}

::google::protobuf::uint8* CMsgGCHAccountTradeBanStatusChange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCHAccountTradeBanStatusChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->appid(), target);
  }

  // optional bool is_banned = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_banned(), target);
  }

  // optional uint32 time_banned_until = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->time_banned_until(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCHAccountTradeBanStatusChange)
  return target;
}

size_t CMsgGCHAccountTradeBanStatusChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCHAccountTradeBanStatusChange)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional fixed64 steamid = 1;
    if (has_steamid()) {
      total_size += 1 + 8;
    }

    // optional uint32 appid = 2;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional bool is_banned = 3;
    if (has_is_banned()) {
      total_size += 1 + 1;
    }

    // optional uint32 time_banned_until = 4;
    if (has_time_banned_until()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time_banned_until());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCHAccountTradeBanStatusChange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCHAccountTradeBanStatusChange)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCHAccountTradeBanStatusChange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCHAccountTradeBanStatusChange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCHAccountTradeBanStatusChange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCHAccountTradeBanStatusChange)
    MergeFrom(*source);
  }
}

void CMsgGCHAccountTradeBanStatusChange::MergeFrom(const CMsgGCHAccountTradeBanStatusChange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCHAccountTradeBanStatusChange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      steamid_ = from.steamid_;
    }
    if (cached_has_bits & 0x00000002u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000004u) {
      is_banned_ = from.is_banned_;
    }
    if (cached_has_bits & 0x00000008u) {
      time_banned_until_ = from.time_banned_until_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCHAccountTradeBanStatusChange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCHAccountTradeBanStatusChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCHAccountTradeBanStatusChange::CopyFrom(const CMsgGCHAccountTradeBanStatusChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCHAccountTradeBanStatusChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCHAccountTradeBanStatusChange::IsInitialized() const {
  return true;
}

void CMsgGCHAccountTradeBanStatusChange::Swap(CMsgGCHAccountTradeBanStatusChange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCHAccountTradeBanStatusChange::InternalSwap(CMsgGCHAccountTradeBanStatusChange* other) {
  using std::swap;
  swap(steamid_, other->steamid_);
  swap(appid_, other->appid_);
  swap(is_banned_, other->is_banned_);
  swap(time_banned_until_, other->time_banned_until_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCHAccountTradeBanStatusChange::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCHAccountLockStatusChange::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCHAccountLockStatusChange::kSteamidFieldNumber;
const int CMsgGCHAccountLockStatusChange::kAppidFieldNumber;
const int CMsgGCHAccountLockStatusChange::kIsLockedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCHAccountLockStatusChange::CMsgGCHAccountLockStatusChange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCHAccountLockStatusChange();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCHAccountLockStatusChange)
}
CMsgGCHAccountLockStatusChange::CMsgGCHAccountLockStatusChange(const CMsgGCHAccountLockStatusChange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steamid_, &from.steamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_locked_) -
    reinterpret_cast<char*>(&steamid_)) + sizeof(is_locked_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCHAccountLockStatusChange)
}

void CMsgGCHAccountLockStatusChange::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&steamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_locked_) -
      reinterpret_cast<char*>(&steamid_)) + sizeof(is_locked_));
}

CMsgGCHAccountLockStatusChange::~CMsgGCHAccountLockStatusChange() {
  // @@protoc_insertion_point(destructor:CMsgGCHAccountLockStatusChange)
  SharedDtor();
}

void CMsgGCHAccountLockStatusChange::SharedDtor() {
}

void CMsgGCHAccountLockStatusChange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCHAccountLockStatusChange::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCHAccountLockStatusChange& CMsgGCHAccountLockStatusChange::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCHAccountLockStatusChange();
  return *internal_default_instance();
}

CMsgGCHAccountLockStatusChange* CMsgGCHAccountLockStatusChange::New(::google::protobuf::Arena* arena) const {
  CMsgGCHAccountLockStatusChange* n = new CMsgGCHAccountLockStatusChange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCHAccountLockStatusChange::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCHAccountLockStatusChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&steamid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_locked_) -
        reinterpret_cast<char*>(&steamid_)) + sizeof(is_locked_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCHAccountLockStatusChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCHAccountLockStatusChange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 appid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_locked = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_is_locked();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_locked_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCHAccountLockStatusChange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCHAccountLockStatusChange)
  return false;
#undef DO_
}

void CMsgGCHAccountLockStatusChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCHAccountLockStatusChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->appid(), output);
  }

  // optional bool is_locked = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_locked(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCHAccountLockStatusChange)
}

::google::protobuf::uint8* CMsgGCHAccountLockStatusChange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCHAccountLockStatusChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->appid(), target);
  }

  // optional bool is_locked = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_locked(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCHAccountLockStatusChange)
  return target;
}

size_t CMsgGCHAccountLockStatusChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCHAccountLockStatusChange)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional fixed64 steamid = 1;
    if (has_steamid()) {
      total_size += 1 + 8;
    }

    // optional uint32 appid = 2;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional bool is_locked = 3;
    if (has_is_locked()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCHAccountLockStatusChange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCHAccountLockStatusChange)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCHAccountLockStatusChange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCHAccountLockStatusChange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCHAccountLockStatusChange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCHAccountLockStatusChange)
    MergeFrom(*source);
  }
}

void CMsgGCHAccountLockStatusChange::MergeFrom(const CMsgGCHAccountLockStatusChange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCHAccountLockStatusChange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      steamid_ = from.steamid_;
    }
    if (cached_has_bits & 0x00000002u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000004u) {
      is_locked_ = from.is_locked_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCHAccountLockStatusChange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCHAccountLockStatusChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCHAccountLockStatusChange::CopyFrom(const CMsgGCHAccountLockStatusChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCHAccountLockStatusChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCHAccountLockStatusChange::IsInitialized() const {
  return true;
}

void CMsgGCHAccountLockStatusChange::Swap(CMsgGCHAccountLockStatusChange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCHAccountLockStatusChange::InternalSwap(CMsgGCHAccountLockStatusChange* other) {
  using std::swap;
  swap(steamid_, other->steamid_);
  swap(appid_, other->appid_);
  swap(is_locked_, other->is_locked_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCHAccountLockStatusChange::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCHVacVerificationChange::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCHVacVerificationChange::kSteamidFieldNumber;
const int CMsgGCHVacVerificationChange::kAppidFieldNumber;
const int CMsgGCHVacVerificationChange::kIsVerifiedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCHVacVerificationChange::CMsgGCHVacVerificationChange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCHVacVerificationChange();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCHVacVerificationChange)
}
CMsgGCHVacVerificationChange::CMsgGCHVacVerificationChange(const CMsgGCHVacVerificationChange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steamid_, &from.steamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_verified_) -
    reinterpret_cast<char*>(&steamid_)) + sizeof(is_verified_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCHVacVerificationChange)
}

void CMsgGCHVacVerificationChange::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&steamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_verified_) -
      reinterpret_cast<char*>(&steamid_)) + sizeof(is_verified_));
}

CMsgGCHVacVerificationChange::~CMsgGCHVacVerificationChange() {
  // @@protoc_insertion_point(destructor:CMsgGCHVacVerificationChange)
  SharedDtor();
}

void CMsgGCHVacVerificationChange::SharedDtor() {
}

void CMsgGCHVacVerificationChange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCHVacVerificationChange::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCHVacVerificationChange& CMsgGCHVacVerificationChange::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCHVacVerificationChange();
  return *internal_default_instance();
}

CMsgGCHVacVerificationChange* CMsgGCHVacVerificationChange::New(::google::protobuf::Arena* arena) const {
  CMsgGCHVacVerificationChange* n = new CMsgGCHVacVerificationChange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCHVacVerificationChange::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCHVacVerificationChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&steamid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_verified_) -
        reinterpret_cast<char*>(&steamid_)) + sizeof(is_verified_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCHVacVerificationChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCHVacVerificationChange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 appid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_verified = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_is_verified();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_verified_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCHVacVerificationChange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCHVacVerificationChange)
  return false;
#undef DO_
}

void CMsgGCHVacVerificationChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCHVacVerificationChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->appid(), output);
  }

  // optional bool is_verified = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_verified(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCHVacVerificationChange)
}

::google::protobuf::uint8* CMsgGCHVacVerificationChange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCHVacVerificationChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->appid(), target);
  }

  // optional bool is_verified = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_verified(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCHVacVerificationChange)
  return target;
}

size_t CMsgGCHVacVerificationChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCHVacVerificationChange)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional fixed64 steamid = 1;
    if (has_steamid()) {
      total_size += 1 + 8;
    }

    // optional uint32 appid = 2;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional bool is_verified = 3;
    if (has_is_verified()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCHVacVerificationChange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCHVacVerificationChange)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCHVacVerificationChange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCHVacVerificationChange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCHVacVerificationChange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCHVacVerificationChange)
    MergeFrom(*source);
  }
}

void CMsgGCHVacVerificationChange::MergeFrom(const CMsgGCHVacVerificationChange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCHVacVerificationChange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      steamid_ = from.steamid_;
    }
    if (cached_has_bits & 0x00000002u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000004u) {
      is_verified_ = from.is_verified_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCHVacVerificationChange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCHVacVerificationChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCHVacVerificationChange::CopyFrom(const CMsgGCHVacVerificationChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCHVacVerificationChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCHVacVerificationChange::IsInitialized() const {
  return true;
}

void CMsgGCHVacVerificationChange::Swap(CMsgGCHVacVerificationChange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCHVacVerificationChange::InternalSwap(CMsgGCHVacVerificationChange* other) {
  using std::swap;
  swap(steamid_, other->steamid_);
  swap(appid_, other->appid_);
  swap(is_verified_, other->is_verified_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCHVacVerificationChange::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCHAccountPhoneNumberChange::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCHAccountPhoneNumberChange::kSteamidFieldNumber;
const int CMsgGCHAccountPhoneNumberChange::kAppidFieldNumber;
const int CMsgGCHAccountPhoneNumberChange::kPhoneIdFieldNumber;
const int CMsgGCHAccountPhoneNumberChange::kIsVerifiedFieldNumber;
const int CMsgGCHAccountPhoneNumberChange::kIsIdentifyingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCHAccountPhoneNumberChange::CMsgGCHAccountPhoneNumberChange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCHAccountPhoneNumberChange();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCHAccountPhoneNumberChange)
}
CMsgGCHAccountPhoneNumberChange::CMsgGCHAccountPhoneNumberChange(const CMsgGCHAccountPhoneNumberChange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steamid_, &from.steamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_identifying_) -
    reinterpret_cast<char*>(&steamid_)) + sizeof(is_identifying_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCHAccountPhoneNumberChange)
}

void CMsgGCHAccountPhoneNumberChange::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&steamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_identifying_) -
      reinterpret_cast<char*>(&steamid_)) + sizeof(is_identifying_));
}

CMsgGCHAccountPhoneNumberChange::~CMsgGCHAccountPhoneNumberChange() {
  // @@protoc_insertion_point(destructor:CMsgGCHAccountPhoneNumberChange)
  SharedDtor();
}

void CMsgGCHAccountPhoneNumberChange::SharedDtor() {
}

void CMsgGCHAccountPhoneNumberChange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCHAccountPhoneNumberChange::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCHAccountPhoneNumberChange& CMsgGCHAccountPhoneNumberChange::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCHAccountPhoneNumberChange();
  return *internal_default_instance();
}

CMsgGCHAccountPhoneNumberChange* CMsgGCHAccountPhoneNumberChange::New(::google::protobuf::Arena* arena) const {
  CMsgGCHAccountPhoneNumberChange* n = new CMsgGCHAccountPhoneNumberChange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCHAccountPhoneNumberChange::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCHAccountPhoneNumberChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&steamid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_identifying_) -
        reinterpret_cast<char*>(&steamid_)) + sizeof(is_identifying_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCHAccountPhoneNumberChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCHAccountPhoneNumberChange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 appid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 phone_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_phone_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &phone_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_verified = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_is_verified();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_verified_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_identifying = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_is_identifying();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_identifying_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCHAccountPhoneNumberChange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCHAccountPhoneNumberChange)
  return false;
#undef DO_
}

void CMsgGCHAccountPhoneNumberChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCHAccountPhoneNumberChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->appid(), output);
  }

  // optional uint64 phone_id = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->phone_id(), output);
  }

  // optional bool is_verified = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_verified(), output);
  }

  // optional bool is_identifying = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_identifying(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCHAccountPhoneNumberChange)
}

::google::protobuf::uint8* CMsgGCHAccountPhoneNumberChange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCHAccountPhoneNumberChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->appid(), target);
  }

  // optional uint64 phone_id = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->phone_id(), target);
  }

  // optional bool is_verified = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_verified(), target);
  }

  // optional bool is_identifying = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_identifying(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCHAccountPhoneNumberChange)
  return target;
}

size_t CMsgGCHAccountPhoneNumberChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCHAccountPhoneNumberChange)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional fixed64 steamid = 1;
    if (has_steamid()) {
      total_size += 1 + 8;
    }

    // optional uint64 phone_id = 3;
    if (has_phone_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->phone_id());
    }

    // optional uint32 appid = 2;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional bool is_verified = 4;
    if (has_is_verified()) {
      total_size += 1 + 1;
    }

    // optional bool is_identifying = 5;
    if (has_is_identifying()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCHAccountPhoneNumberChange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCHAccountPhoneNumberChange)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCHAccountPhoneNumberChange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCHAccountPhoneNumberChange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCHAccountPhoneNumberChange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCHAccountPhoneNumberChange)
    MergeFrom(*source);
  }
}

void CMsgGCHAccountPhoneNumberChange::MergeFrom(const CMsgGCHAccountPhoneNumberChange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCHAccountPhoneNumberChange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      steamid_ = from.steamid_;
    }
    if (cached_has_bits & 0x00000002u) {
      phone_id_ = from.phone_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000008u) {
      is_verified_ = from.is_verified_;
    }
    if (cached_has_bits & 0x00000010u) {
      is_identifying_ = from.is_identifying_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCHAccountPhoneNumberChange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCHAccountPhoneNumberChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCHAccountPhoneNumberChange::CopyFrom(const CMsgGCHAccountPhoneNumberChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCHAccountPhoneNumberChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCHAccountPhoneNumberChange::IsInitialized() const {
  return true;
}

void CMsgGCHAccountPhoneNumberChange::Swap(CMsgGCHAccountPhoneNumberChange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCHAccountPhoneNumberChange::InternalSwap(CMsgGCHAccountPhoneNumberChange* other) {
  using std::swap;
  swap(steamid_, other->steamid_);
  swap(phone_id_, other->phone_id_);
  swap(appid_, other->appid_);
  swap(is_verified_, other->is_verified_);
  swap(is_identifying_, other->is_identifying_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCHAccountPhoneNumberChange::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCHAccountTwoFactorChange::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCHAccountTwoFactorChange::kSteamidFieldNumber;
const int CMsgGCHAccountTwoFactorChange::kAppidFieldNumber;
const int CMsgGCHAccountTwoFactorChange::kTwofactorEnabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCHAccountTwoFactorChange::CMsgGCHAccountTwoFactorChange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCHAccountTwoFactorChange();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCHAccountTwoFactorChange)
}
CMsgGCHAccountTwoFactorChange::CMsgGCHAccountTwoFactorChange(const CMsgGCHAccountTwoFactorChange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steamid_, &from.steamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&twofactor_enabled_) -
    reinterpret_cast<char*>(&steamid_)) + sizeof(twofactor_enabled_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCHAccountTwoFactorChange)
}

void CMsgGCHAccountTwoFactorChange::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&steamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&twofactor_enabled_) -
      reinterpret_cast<char*>(&steamid_)) + sizeof(twofactor_enabled_));
}

CMsgGCHAccountTwoFactorChange::~CMsgGCHAccountTwoFactorChange() {
  // @@protoc_insertion_point(destructor:CMsgGCHAccountTwoFactorChange)
  SharedDtor();
}

void CMsgGCHAccountTwoFactorChange::SharedDtor() {
}

void CMsgGCHAccountTwoFactorChange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCHAccountTwoFactorChange::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCHAccountTwoFactorChange& CMsgGCHAccountTwoFactorChange::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCHAccountTwoFactorChange();
  return *internal_default_instance();
}

CMsgGCHAccountTwoFactorChange* CMsgGCHAccountTwoFactorChange::New(::google::protobuf::Arena* arena) const {
  CMsgGCHAccountTwoFactorChange* n = new CMsgGCHAccountTwoFactorChange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCHAccountTwoFactorChange::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCHAccountTwoFactorChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&steamid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&twofactor_enabled_) -
        reinterpret_cast<char*>(&steamid_)) + sizeof(twofactor_enabled_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCHAccountTwoFactorChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCHAccountTwoFactorChange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 appid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool twofactor_enabled = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_twofactor_enabled();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &twofactor_enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCHAccountTwoFactorChange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCHAccountTwoFactorChange)
  return false;
#undef DO_
}

void CMsgGCHAccountTwoFactorChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCHAccountTwoFactorChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->appid(), output);
  }

  // optional bool twofactor_enabled = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->twofactor_enabled(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCHAccountTwoFactorChange)
}

::google::protobuf::uint8* CMsgGCHAccountTwoFactorChange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCHAccountTwoFactorChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->appid(), target);
  }

  // optional bool twofactor_enabled = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->twofactor_enabled(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCHAccountTwoFactorChange)
  return target;
}

size_t CMsgGCHAccountTwoFactorChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCHAccountTwoFactorChange)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional fixed64 steamid = 1;
    if (has_steamid()) {
      total_size += 1 + 8;
    }

    // optional uint32 appid = 2;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional bool twofactor_enabled = 3;
    if (has_twofactor_enabled()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCHAccountTwoFactorChange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCHAccountTwoFactorChange)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCHAccountTwoFactorChange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCHAccountTwoFactorChange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCHAccountTwoFactorChange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCHAccountTwoFactorChange)
    MergeFrom(*source);
  }
}

void CMsgGCHAccountTwoFactorChange::MergeFrom(const CMsgGCHAccountTwoFactorChange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCHAccountTwoFactorChange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      steamid_ = from.steamid_;
    }
    if (cached_has_bits & 0x00000002u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000004u) {
      twofactor_enabled_ = from.twofactor_enabled_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCHAccountTwoFactorChange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCHAccountTwoFactorChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCHAccountTwoFactorChange::CopyFrom(const CMsgGCHAccountTwoFactorChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCHAccountTwoFactorChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCHAccountTwoFactorChange::IsInitialized() const {
  return true;
}

void CMsgGCHAccountTwoFactorChange::Swap(CMsgGCHAccountTwoFactorChange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCHAccountTwoFactorChange::InternalSwap(CMsgGCHAccountTwoFactorChange* other) {
  using std::swap;
  swap(steamid_, other->steamid_);
  swap(appid_, other->appid_);
  swap(twofactor_enabled_, other->twofactor_enabled_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCHAccountTwoFactorChange::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCGetPartnerAccountLink::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCGetPartnerAccountLink::kSteamidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCGetPartnerAccountLink::CMsgGCGetPartnerAccountLink()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCGetPartnerAccountLink();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCGetPartnerAccountLink)
}
CMsgGCGetPartnerAccountLink::CMsgGCGetPartnerAccountLink(const CMsgGCGetPartnerAccountLink& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  steamid_ = from.steamid_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCGetPartnerAccountLink)
}

void CMsgGCGetPartnerAccountLink::SharedCtor() {
  _cached_size_ = 0;
  steamid_ = GOOGLE_ULONGLONG(0);
}

CMsgGCGetPartnerAccountLink::~CMsgGCGetPartnerAccountLink() {
  // @@protoc_insertion_point(destructor:CMsgGCGetPartnerAccountLink)
  SharedDtor();
}

void CMsgGCGetPartnerAccountLink::SharedDtor() {
}

void CMsgGCGetPartnerAccountLink::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCGetPartnerAccountLink::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCGetPartnerAccountLink& CMsgGCGetPartnerAccountLink::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCGetPartnerAccountLink();
  return *internal_default_instance();
}

CMsgGCGetPartnerAccountLink* CMsgGCGetPartnerAccountLink::New(::google::protobuf::Arena* arena) const {
  CMsgGCGetPartnerAccountLink* n = new CMsgGCGetPartnerAccountLink;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCGetPartnerAccountLink::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCGetPartnerAccountLink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  steamid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCGetPartnerAccountLink::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCGetPartnerAccountLink)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCGetPartnerAccountLink)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCGetPartnerAccountLink)
  return false;
#undef DO_
}

void CMsgGCGetPartnerAccountLink::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCGetPartnerAccountLink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCGetPartnerAccountLink)
}

::google::protobuf::uint8* CMsgGCGetPartnerAccountLink::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCGetPartnerAccountLink)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCGetPartnerAccountLink)
  return target;
}

size_t CMsgGCGetPartnerAccountLink::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCGetPartnerAccountLink)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional fixed64 steamid = 1;
  if (has_steamid()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCGetPartnerAccountLink::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCGetPartnerAccountLink)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCGetPartnerAccountLink* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCGetPartnerAccountLink>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCGetPartnerAccountLink)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCGetPartnerAccountLink)
    MergeFrom(*source);
  }
}

void CMsgGCGetPartnerAccountLink::MergeFrom(const CMsgGCGetPartnerAccountLink& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCGetPartnerAccountLink)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_steamid()) {
    set_steamid(from.steamid());
  }
}

void CMsgGCGetPartnerAccountLink::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCGetPartnerAccountLink)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCGetPartnerAccountLink::CopyFrom(const CMsgGCGetPartnerAccountLink& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCGetPartnerAccountLink)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCGetPartnerAccountLink::IsInitialized() const {
  return true;
}

void CMsgGCGetPartnerAccountLink::Swap(CMsgGCGetPartnerAccountLink* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCGetPartnerAccountLink::InternalSwap(CMsgGCGetPartnerAccountLink* other) {
  using std::swap;
  swap(steamid_, other->steamid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCGetPartnerAccountLink::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCGetPartnerAccountLink_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCGetPartnerAccountLink_Response::kPwidFieldNumber;
const int CMsgGCGetPartnerAccountLink_Response::kNexonidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCGetPartnerAccountLink_Response::CMsgGCGetPartnerAccountLink_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCGetPartnerAccountLink_Response();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCGetPartnerAccountLink_Response)
}
CMsgGCGetPartnerAccountLink_Response::CMsgGCGetPartnerAccountLink_Response(const CMsgGCGetPartnerAccountLink_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pwid_, &from.pwid_,
    static_cast<size_t>(reinterpret_cast<char*>(&nexonid_) -
    reinterpret_cast<char*>(&pwid_)) + sizeof(nexonid_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCGetPartnerAccountLink_Response)
}

void CMsgGCGetPartnerAccountLink_Response::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&pwid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nexonid_) -
      reinterpret_cast<char*>(&pwid_)) + sizeof(nexonid_));
}

CMsgGCGetPartnerAccountLink_Response::~CMsgGCGetPartnerAccountLink_Response() {
  // @@protoc_insertion_point(destructor:CMsgGCGetPartnerAccountLink_Response)
  SharedDtor();
}

void CMsgGCGetPartnerAccountLink_Response::SharedDtor() {
}

void CMsgGCGetPartnerAccountLink_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCGetPartnerAccountLink_Response::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCGetPartnerAccountLink_Response& CMsgGCGetPartnerAccountLink_Response::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCGetPartnerAccountLink_Response();
  return *internal_default_instance();
}

CMsgGCGetPartnerAccountLink_Response* CMsgGCGetPartnerAccountLink_Response::New(::google::protobuf::Arena* arena) const {
  CMsgGCGetPartnerAccountLink_Response* n = new CMsgGCGetPartnerAccountLink_Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCGetPartnerAccountLink_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCGetPartnerAccountLink_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&pwid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&nexonid_) -
        reinterpret_cast<char*>(&pwid_)) + sizeof(nexonid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCGetPartnerAccountLink_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCGetPartnerAccountLink_Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 pwid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_pwid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pwid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 nexonid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_nexonid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nexonid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCGetPartnerAccountLink_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCGetPartnerAccountLink_Response)
  return false;
#undef DO_
}

void CMsgGCGetPartnerAccountLink_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCGetPartnerAccountLink_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 pwid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pwid(), output);
  }

  // optional uint32 nexonid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->nexonid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCGetPartnerAccountLink_Response)
}

::google::protobuf::uint8* CMsgGCGetPartnerAccountLink_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCGetPartnerAccountLink_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 pwid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pwid(), target);
  }

  // optional uint32 nexonid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->nexonid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCGetPartnerAccountLink_Response)
  return target;
}

size_t CMsgGCGetPartnerAccountLink_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCGetPartnerAccountLink_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 pwid = 1;
    if (has_pwid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pwid());
    }

    // optional uint32 nexonid = 2;
    if (has_nexonid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->nexonid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCGetPartnerAccountLink_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCGetPartnerAccountLink_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCGetPartnerAccountLink_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCGetPartnerAccountLink_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCGetPartnerAccountLink_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCGetPartnerAccountLink_Response)
    MergeFrom(*source);
  }
}

void CMsgGCGetPartnerAccountLink_Response::MergeFrom(const CMsgGCGetPartnerAccountLink_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCGetPartnerAccountLink_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      pwid_ = from.pwid_;
    }
    if (cached_has_bits & 0x00000002u) {
      nexonid_ = from.nexonid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCGetPartnerAccountLink_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCGetPartnerAccountLink_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCGetPartnerAccountLink_Response::CopyFrom(const CMsgGCGetPartnerAccountLink_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCGetPartnerAccountLink_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCGetPartnerAccountLink_Response::IsInitialized() const {
  return true;
}

void CMsgGCGetPartnerAccountLink_Response::Swap(CMsgGCGetPartnerAccountLink_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCGetPartnerAccountLink_Response::InternalSwap(CMsgGCGetPartnerAccountLink_Response* other) {
  using std::swap;
  swap(pwid_, other->pwid_);
  swap(nexonid_, other->nexonid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCGetPartnerAccountLink_Response::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCRoutingInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCRoutingInfo::kDirIndexFieldNumber;
const int CMsgGCRoutingInfo::kMethodFieldNumber;
const int CMsgGCRoutingInfo::kFallbackFieldNumber;
const int CMsgGCRoutingInfo::kProtobufFieldFieldNumber;
const int CMsgGCRoutingInfo::kWebapiParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCRoutingInfo::CMsgGCRoutingInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCRoutingInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCRoutingInfo)
}
CMsgGCRoutingInfo::CMsgGCRoutingInfo(const CMsgGCRoutingInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      dir_index_(from.dir_index_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  webapi_param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_webapi_param()) {
    webapi_param_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.webapi_param_);
  }
  ::memcpy(&method_, &from.method_,
    static_cast<size_t>(reinterpret_cast<char*>(&fallback_) -
    reinterpret_cast<char*>(&method_)) + sizeof(fallback_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCRoutingInfo)
}

void CMsgGCRoutingInfo::SharedCtor() {
  _cached_size_ = 0;
  webapi_param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&method_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&protobuf_field_) -
      reinterpret_cast<char*>(&method_)) + sizeof(protobuf_field_));
  fallback_ = 1;
}

CMsgGCRoutingInfo::~CMsgGCRoutingInfo() {
  // @@protoc_insertion_point(destructor:CMsgGCRoutingInfo)
  SharedDtor();
}

void CMsgGCRoutingInfo::SharedDtor() {
  webapi_param_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGCRoutingInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCRoutingInfo::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCRoutingInfo& CMsgGCRoutingInfo::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCRoutingInfo();
  return *internal_default_instance();
}

CMsgGCRoutingInfo* CMsgGCRoutingInfo::New(::google::protobuf::Arena* arena) const {
  CMsgGCRoutingInfo* n = new CMsgGCRoutingInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCRoutingInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCRoutingInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dir_index_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!webapi_param_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*webapi_param_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 14u) {
    ::memset(&method_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&protobuf_field_) -
        reinterpret_cast<char*>(&method_)) + sizeof(protobuf_field_));
    fallback_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCRoutingInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCRoutingInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 dir_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8u, input, this->mutable_dir_index())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_dir_index())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgGCRoutingInfo.RoutingMethod method = 2 [default = RANDOM];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CMsgGCRoutingInfo_RoutingMethod_IsValid(value)) {
            set_method(static_cast< ::CMsgGCRoutingInfo_RoutingMethod >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgGCRoutingInfo.RoutingMethod fallback = 3 [default = DISCARD];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CMsgGCRoutingInfo_RoutingMethod_IsValid(value)) {
            set_fallback(static_cast< ::CMsgGCRoutingInfo_RoutingMethod >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 protobuf_field = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_protobuf_field();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &protobuf_field_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string webapi_param = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_webapi_param()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->webapi_param().data(), static_cast<int>(this->webapi_param().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGCRoutingInfo.webapi_param");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCRoutingInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCRoutingInfo)
  return false;
#undef DO_
}

void CMsgGCRoutingInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCRoutingInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 dir_index = 1;
  for (int i = 0, n = this->dir_index_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->dir_index(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional .CMsgGCRoutingInfo.RoutingMethod method = 2 [default = RANDOM];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->method(), output);
  }

  // optional .CMsgGCRoutingInfo.RoutingMethod fallback = 3 [default = DISCARD];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->fallback(), output);
  }

  // optional uint32 protobuf_field = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->protobuf_field(), output);
  }

  // optional string webapi_param = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->webapi_param().data(), static_cast<int>(this->webapi_param().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCRoutingInfo.webapi_param");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->webapi_param(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCRoutingInfo)
}

::google::protobuf::uint8* CMsgGCRoutingInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCRoutingInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 dir_index = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(1, this->dir_index_, target);

  cached_has_bits = _has_bits_[0];
  // optional .CMsgGCRoutingInfo.RoutingMethod method = 2 [default = RANDOM];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->method(), target);
  }

  // optional .CMsgGCRoutingInfo.RoutingMethod fallback = 3 [default = DISCARD];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->fallback(), target);
  }

  // optional uint32 protobuf_field = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->protobuf_field(), target);
  }

  // optional string webapi_param = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->webapi_param().data(), static_cast<int>(this->webapi_param().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCRoutingInfo.webapi_param");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->webapi_param(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCRoutingInfo)
  return target;
}

size_t CMsgGCRoutingInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCRoutingInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 dir_index = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->dir_index_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->dir_index_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional string webapi_param = 5;
    if (has_webapi_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->webapi_param());
    }

    // optional .CMsgGCRoutingInfo.RoutingMethod method = 2 [default = RANDOM];
    if (has_method()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->method());
    }

    // optional uint32 protobuf_field = 4;
    if (has_protobuf_field()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->protobuf_field());
    }

    // optional .CMsgGCRoutingInfo.RoutingMethod fallback = 3 [default = DISCARD];
    if (has_fallback()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->fallback());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCRoutingInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCRoutingInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCRoutingInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCRoutingInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCRoutingInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCRoutingInfo)
    MergeFrom(*source);
  }
}

void CMsgGCRoutingInfo::MergeFrom(const CMsgGCRoutingInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCRoutingInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dir_index_.MergeFrom(from.dir_index_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_webapi_param();
      webapi_param_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.webapi_param_);
    }
    if (cached_has_bits & 0x00000002u) {
      method_ = from.method_;
    }
    if (cached_has_bits & 0x00000004u) {
      protobuf_field_ = from.protobuf_field_;
    }
    if (cached_has_bits & 0x00000008u) {
      fallback_ = from.fallback_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCRoutingInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCRoutingInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCRoutingInfo::CopyFrom(const CMsgGCRoutingInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCRoutingInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCRoutingInfo::IsInitialized() const {
  return true;
}

void CMsgGCRoutingInfo::Swap(CMsgGCRoutingInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCRoutingInfo::InternalSwap(CMsgGCRoutingInfo* other) {
  using std::swap;
  dir_index_.InternalSwap(&other->dir_index_);
  webapi_param_.Swap(&other->webapi_param_);
  swap(method_, other->method_);
  swap(protobuf_field_, other->protobuf_field_);
  swap(fallback_, other->fallback_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCRoutingInfo::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCMsgMasterSetWebAPIRouting_Entry::InitAsDefaultInstance() {
  ::_CMsgGCMsgMasterSetWebAPIRouting_Entry_default_instance_._instance.get_mutable()->routing_ = const_cast< ::CMsgGCRoutingInfo*>(
      ::CMsgGCRoutingInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCMsgMasterSetWebAPIRouting_Entry::kInterfaceNameFieldNumber;
const int CMsgGCMsgMasterSetWebAPIRouting_Entry::kMethodNameFieldNumber;
const int CMsgGCMsgMasterSetWebAPIRouting_Entry::kRoutingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCMsgMasterSetWebAPIRouting_Entry::CMsgGCMsgMasterSetWebAPIRouting_Entry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCMsgMasterSetWebAPIRouting_Entry();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCMsgMasterSetWebAPIRouting.Entry)
}
CMsgGCMsgMasterSetWebAPIRouting_Entry::CMsgGCMsgMasterSetWebAPIRouting_Entry(const CMsgGCMsgMasterSetWebAPIRouting_Entry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  interface_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_interface_name()) {
    interface_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.interface_name_);
  }
  method_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_method_name()) {
    method_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_name_);
  }
  if (from.has_routing()) {
    routing_ = new ::CMsgGCRoutingInfo(*from.routing_);
  } else {
    routing_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:CMsgGCMsgMasterSetWebAPIRouting.Entry)
}

void CMsgGCMsgMasterSetWebAPIRouting_Entry::SharedCtor() {
  _cached_size_ = 0;
  interface_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  routing_ = NULL;
}

CMsgGCMsgMasterSetWebAPIRouting_Entry::~CMsgGCMsgMasterSetWebAPIRouting_Entry() {
  // @@protoc_insertion_point(destructor:CMsgGCMsgMasterSetWebAPIRouting.Entry)
  SharedDtor();
}

void CMsgGCMsgMasterSetWebAPIRouting_Entry::SharedDtor() {
  interface_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete routing_;
}

void CMsgGCMsgMasterSetWebAPIRouting_Entry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCMsgMasterSetWebAPIRouting_Entry::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCMsgMasterSetWebAPIRouting_Entry& CMsgGCMsgMasterSetWebAPIRouting_Entry::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCMsgMasterSetWebAPIRouting_Entry();
  return *internal_default_instance();
}

CMsgGCMsgMasterSetWebAPIRouting_Entry* CMsgGCMsgMasterSetWebAPIRouting_Entry::New(::google::protobuf::Arena* arena) const {
  CMsgGCMsgMasterSetWebAPIRouting_Entry* n = new CMsgGCMsgMasterSetWebAPIRouting_Entry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCMsgMasterSetWebAPIRouting_Entry::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCMsgMasterSetWebAPIRouting.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!interface_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*interface_name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!method_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*method_name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(routing_ != NULL);
      routing_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCMsgMasterSetWebAPIRouting_Entry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCMsgMasterSetWebAPIRouting.Entry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string interface_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_interface_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->interface_name().data(), static_cast<int>(this->interface_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGCMsgMasterSetWebAPIRouting.Entry.interface_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string method_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_method_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->method_name().data(), static_cast<int>(this->method_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGCMsgMasterSetWebAPIRouting.Entry.method_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgGCRoutingInfo routing = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_routing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCMsgMasterSetWebAPIRouting.Entry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCMsgMasterSetWebAPIRouting.Entry)
  return false;
#undef DO_
}

void CMsgGCMsgMasterSetWebAPIRouting_Entry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCMsgMasterSetWebAPIRouting.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string interface_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->interface_name().data(), static_cast<int>(this->interface_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCMsgMasterSetWebAPIRouting.Entry.interface_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->interface_name(), output);
  }

  // optional string method_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->method_name().data(), static_cast<int>(this->method_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCMsgMasterSetWebAPIRouting.Entry.method_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->method_name(), output);
  }

  // optional .CMsgGCRoutingInfo routing = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->routing_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCMsgMasterSetWebAPIRouting.Entry)
}

::google::protobuf::uint8* CMsgGCMsgMasterSetWebAPIRouting_Entry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCMsgMasterSetWebAPIRouting.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string interface_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->interface_name().data(), static_cast<int>(this->interface_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCMsgMasterSetWebAPIRouting.Entry.interface_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->interface_name(), target);
  }

  // optional string method_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->method_name().data(), static_cast<int>(this->method_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCMsgMasterSetWebAPIRouting.Entry.method_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->method_name(), target);
  }

  // optional .CMsgGCRoutingInfo routing = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->routing_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCMsgMasterSetWebAPIRouting.Entry)
  return target;
}

size_t CMsgGCMsgMasterSetWebAPIRouting_Entry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCMsgMasterSetWebAPIRouting.Entry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string interface_name = 1;
    if (has_interface_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->interface_name());
    }

    // optional string method_name = 2;
    if (has_method_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->method_name());
    }

    // optional .CMsgGCRoutingInfo routing = 3;
    if (has_routing()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->routing_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCMsgMasterSetWebAPIRouting_Entry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCMsgMasterSetWebAPIRouting.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCMsgMasterSetWebAPIRouting_Entry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCMsgMasterSetWebAPIRouting_Entry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCMsgMasterSetWebAPIRouting.Entry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCMsgMasterSetWebAPIRouting.Entry)
    MergeFrom(*source);
  }
}

void CMsgGCMsgMasterSetWebAPIRouting_Entry::MergeFrom(const CMsgGCMsgMasterSetWebAPIRouting_Entry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCMsgMasterSetWebAPIRouting.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_interface_name();
      interface_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.interface_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_method_name();
      method_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_routing()->::CMsgGCRoutingInfo::MergeFrom(from.routing());
    }
  }
}

void CMsgGCMsgMasterSetWebAPIRouting_Entry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCMsgMasterSetWebAPIRouting.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCMsgMasterSetWebAPIRouting_Entry::CopyFrom(const CMsgGCMsgMasterSetWebAPIRouting_Entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCMsgMasterSetWebAPIRouting.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCMsgMasterSetWebAPIRouting_Entry::IsInitialized() const {
  return true;
}

void CMsgGCMsgMasterSetWebAPIRouting_Entry::Swap(CMsgGCMsgMasterSetWebAPIRouting_Entry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCMsgMasterSetWebAPIRouting_Entry::InternalSwap(CMsgGCMsgMasterSetWebAPIRouting_Entry* other) {
  using std::swap;
  interface_name_.Swap(&other->interface_name_);
  method_name_.Swap(&other->method_name_);
  swap(routing_, other->routing_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCMsgMasterSetWebAPIRouting_Entry::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCMsgMasterSetWebAPIRouting::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCMsgMasterSetWebAPIRouting::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCMsgMasterSetWebAPIRouting::CMsgGCMsgMasterSetWebAPIRouting()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCMsgMasterSetWebAPIRouting();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCMsgMasterSetWebAPIRouting)
}
CMsgGCMsgMasterSetWebAPIRouting::CMsgGCMsgMasterSetWebAPIRouting(const CMsgGCMsgMasterSetWebAPIRouting& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgGCMsgMasterSetWebAPIRouting)
}

void CMsgGCMsgMasterSetWebAPIRouting::SharedCtor() {
  _cached_size_ = 0;
}

CMsgGCMsgMasterSetWebAPIRouting::~CMsgGCMsgMasterSetWebAPIRouting() {
  // @@protoc_insertion_point(destructor:CMsgGCMsgMasterSetWebAPIRouting)
  SharedDtor();
}

void CMsgGCMsgMasterSetWebAPIRouting::SharedDtor() {
}

void CMsgGCMsgMasterSetWebAPIRouting::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCMsgMasterSetWebAPIRouting::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCMsgMasterSetWebAPIRouting& CMsgGCMsgMasterSetWebAPIRouting::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCMsgMasterSetWebAPIRouting();
  return *internal_default_instance();
}

CMsgGCMsgMasterSetWebAPIRouting* CMsgGCMsgMasterSetWebAPIRouting::New(::google::protobuf::Arena* arena) const {
  CMsgGCMsgMasterSetWebAPIRouting* n = new CMsgGCMsgMasterSetWebAPIRouting;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCMsgMasterSetWebAPIRouting::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCMsgMasterSetWebAPIRouting)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCMsgMasterSetWebAPIRouting::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCMsgMasterSetWebAPIRouting)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgGCMsgMasterSetWebAPIRouting.Entry entries = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCMsgMasterSetWebAPIRouting)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCMsgMasterSetWebAPIRouting)
  return false;
#undef DO_
}

void CMsgGCMsgMasterSetWebAPIRouting::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCMsgMasterSetWebAPIRouting)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgGCMsgMasterSetWebAPIRouting.Entry entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->entries(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCMsgMasterSetWebAPIRouting)
}

::google::protobuf::uint8* CMsgGCMsgMasterSetWebAPIRouting::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCMsgMasterSetWebAPIRouting)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgGCMsgMasterSetWebAPIRouting.Entry entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->entries(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCMsgMasterSetWebAPIRouting)
  return target;
}

size_t CMsgGCMsgMasterSetWebAPIRouting::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCMsgMasterSetWebAPIRouting)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgGCMsgMasterSetWebAPIRouting.Entry entries = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entries(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCMsgMasterSetWebAPIRouting::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCMsgMasterSetWebAPIRouting)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCMsgMasterSetWebAPIRouting* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCMsgMasterSetWebAPIRouting>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCMsgMasterSetWebAPIRouting)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCMsgMasterSetWebAPIRouting)
    MergeFrom(*source);
  }
}

void CMsgGCMsgMasterSetWebAPIRouting::MergeFrom(const CMsgGCMsgMasterSetWebAPIRouting& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCMsgMasterSetWebAPIRouting)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
}

void CMsgGCMsgMasterSetWebAPIRouting::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCMsgMasterSetWebAPIRouting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCMsgMasterSetWebAPIRouting::CopyFrom(const CMsgGCMsgMasterSetWebAPIRouting& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCMsgMasterSetWebAPIRouting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCMsgMasterSetWebAPIRouting::IsInitialized() const {
  return true;
}

void CMsgGCMsgMasterSetWebAPIRouting::Swap(CMsgGCMsgMasterSetWebAPIRouting* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCMsgMasterSetWebAPIRouting::InternalSwap(CMsgGCMsgMasterSetWebAPIRouting* other) {
  using std::swap;
  entries_.InternalSwap(&other->entries_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCMsgMasterSetWebAPIRouting::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCMsgMasterSetClientMsgRouting_Entry::InitAsDefaultInstance() {
  ::_CMsgGCMsgMasterSetClientMsgRouting_Entry_default_instance_._instance.get_mutable()->routing_ = const_cast< ::CMsgGCRoutingInfo*>(
      ::CMsgGCRoutingInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCMsgMasterSetClientMsgRouting_Entry::kMsgTypeFieldNumber;
const int CMsgGCMsgMasterSetClientMsgRouting_Entry::kRoutingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCMsgMasterSetClientMsgRouting_Entry::CMsgGCMsgMasterSetClientMsgRouting_Entry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCMsgMasterSetClientMsgRouting_Entry();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCMsgMasterSetClientMsgRouting.Entry)
}
CMsgGCMsgMasterSetClientMsgRouting_Entry::CMsgGCMsgMasterSetClientMsgRouting_Entry(const CMsgGCMsgMasterSetClientMsgRouting_Entry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_routing()) {
    routing_ = new ::CMsgGCRoutingInfo(*from.routing_);
  } else {
    routing_ = NULL;
  }
  msg_type_ = from.msg_type_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCMsgMasterSetClientMsgRouting.Entry)
}

void CMsgGCMsgMasterSetClientMsgRouting_Entry::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&routing_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msg_type_) -
      reinterpret_cast<char*>(&routing_)) + sizeof(msg_type_));
}

CMsgGCMsgMasterSetClientMsgRouting_Entry::~CMsgGCMsgMasterSetClientMsgRouting_Entry() {
  // @@protoc_insertion_point(destructor:CMsgGCMsgMasterSetClientMsgRouting.Entry)
  SharedDtor();
}

void CMsgGCMsgMasterSetClientMsgRouting_Entry::SharedDtor() {
  if (this != internal_default_instance()) delete routing_;
}

void CMsgGCMsgMasterSetClientMsgRouting_Entry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCMsgMasterSetClientMsgRouting_Entry::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCMsgMasterSetClientMsgRouting_Entry& CMsgGCMsgMasterSetClientMsgRouting_Entry::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCMsgMasterSetClientMsgRouting_Entry();
  return *internal_default_instance();
}

CMsgGCMsgMasterSetClientMsgRouting_Entry* CMsgGCMsgMasterSetClientMsgRouting_Entry::New(::google::protobuf::Arena* arena) const {
  CMsgGCMsgMasterSetClientMsgRouting_Entry* n = new CMsgGCMsgMasterSetClientMsgRouting_Entry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCMsgMasterSetClientMsgRouting_Entry::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCMsgMasterSetClientMsgRouting.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(routing_ != NULL);
    routing_->Clear();
  }
  msg_type_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCMsgMasterSetClientMsgRouting_Entry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCMsgMasterSetClientMsgRouting.Entry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 msg_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_msg_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msg_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgGCRoutingInfo routing = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_routing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCMsgMasterSetClientMsgRouting.Entry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCMsgMasterSetClientMsgRouting.Entry)
  return false;
#undef DO_
}

void CMsgGCMsgMasterSetClientMsgRouting_Entry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCMsgMasterSetClientMsgRouting.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 msg_type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->msg_type(), output);
  }

  // optional .CMsgGCRoutingInfo routing = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->routing_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCMsgMasterSetClientMsgRouting.Entry)
}

::google::protobuf::uint8* CMsgGCMsgMasterSetClientMsgRouting_Entry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCMsgMasterSetClientMsgRouting.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 msg_type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->msg_type(), target);
  }

  // optional .CMsgGCRoutingInfo routing = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->routing_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCMsgMasterSetClientMsgRouting.Entry)
  return target;
}

size_t CMsgGCMsgMasterSetClientMsgRouting_Entry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCMsgMasterSetClientMsgRouting.Entry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .CMsgGCRoutingInfo routing = 2;
    if (has_routing()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->routing_);
    }

    // optional uint32 msg_type = 1;
    if (has_msg_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->msg_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCMsgMasterSetClientMsgRouting_Entry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCMsgMasterSetClientMsgRouting.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCMsgMasterSetClientMsgRouting_Entry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCMsgMasterSetClientMsgRouting_Entry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCMsgMasterSetClientMsgRouting.Entry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCMsgMasterSetClientMsgRouting.Entry)
    MergeFrom(*source);
  }
}

void CMsgGCMsgMasterSetClientMsgRouting_Entry::MergeFrom(const CMsgGCMsgMasterSetClientMsgRouting_Entry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCMsgMasterSetClientMsgRouting.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_routing()->::CMsgGCRoutingInfo::MergeFrom(from.routing());
    }
    if (cached_has_bits & 0x00000002u) {
      msg_type_ = from.msg_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCMsgMasterSetClientMsgRouting_Entry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCMsgMasterSetClientMsgRouting.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCMsgMasterSetClientMsgRouting_Entry::CopyFrom(const CMsgGCMsgMasterSetClientMsgRouting_Entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCMsgMasterSetClientMsgRouting.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCMsgMasterSetClientMsgRouting_Entry::IsInitialized() const {
  return true;
}

void CMsgGCMsgMasterSetClientMsgRouting_Entry::Swap(CMsgGCMsgMasterSetClientMsgRouting_Entry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCMsgMasterSetClientMsgRouting_Entry::InternalSwap(CMsgGCMsgMasterSetClientMsgRouting_Entry* other) {
  using std::swap;
  swap(routing_, other->routing_);
  swap(msg_type_, other->msg_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCMsgMasterSetClientMsgRouting_Entry::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCMsgMasterSetClientMsgRouting::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCMsgMasterSetClientMsgRouting::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCMsgMasterSetClientMsgRouting::CMsgGCMsgMasterSetClientMsgRouting()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCMsgMasterSetClientMsgRouting();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCMsgMasterSetClientMsgRouting)
}
CMsgGCMsgMasterSetClientMsgRouting::CMsgGCMsgMasterSetClientMsgRouting(const CMsgGCMsgMasterSetClientMsgRouting& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgGCMsgMasterSetClientMsgRouting)
}

void CMsgGCMsgMasterSetClientMsgRouting::SharedCtor() {
  _cached_size_ = 0;
}

CMsgGCMsgMasterSetClientMsgRouting::~CMsgGCMsgMasterSetClientMsgRouting() {
  // @@protoc_insertion_point(destructor:CMsgGCMsgMasterSetClientMsgRouting)
  SharedDtor();
}

void CMsgGCMsgMasterSetClientMsgRouting::SharedDtor() {
}

void CMsgGCMsgMasterSetClientMsgRouting::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCMsgMasterSetClientMsgRouting::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCMsgMasterSetClientMsgRouting& CMsgGCMsgMasterSetClientMsgRouting::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCMsgMasterSetClientMsgRouting();
  return *internal_default_instance();
}

CMsgGCMsgMasterSetClientMsgRouting* CMsgGCMsgMasterSetClientMsgRouting::New(::google::protobuf::Arena* arena) const {
  CMsgGCMsgMasterSetClientMsgRouting* n = new CMsgGCMsgMasterSetClientMsgRouting;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCMsgMasterSetClientMsgRouting::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCMsgMasterSetClientMsgRouting)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCMsgMasterSetClientMsgRouting::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCMsgMasterSetClientMsgRouting)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgGCMsgMasterSetClientMsgRouting.Entry entries = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCMsgMasterSetClientMsgRouting)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCMsgMasterSetClientMsgRouting)
  return false;
#undef DO_
}

void CMsgGCMsgMasterSetClientMsgRouting::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCMsgMasterSetClientMsgRouting)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgGCMsgMasterSetClientMsgRouting.Entry entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->entries(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCMsgMasterSetClientMsgRouting)
}

::google::protobuf::uint8* CMsgGCMsgMasterSetClientMsgRouting::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCMsgMasterSetClientMsgRouting)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgGCMsgMasterSetClientMsgRouting.Entry entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->entries(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCMsgMasterSetClientMsgRouting)
  return target;
}

size_t CMsgGCMsgMasterSetClientMsgRouting::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCMsgMasterSetClientMsgRouting)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgGCMsgMasterSetClientMsgRouting.Entry entries = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entries(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCMsgMasterSetClientMsgRouting::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCMsgMasterSetClientMsgRouting)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCMsgMasterSetClientMsgRouting* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCMsgMasterSetClientMsgRouting>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCMsgMasterSetClientMsgRouting)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCMsgMasterSetClientMsgRouting)
    MergeFrom(*source);
  }
}

void CMsgGCMsgMasterSetClientMsgRouting::MergeFrom(const CMsgGCMsgMasterSetClientMsgRouting& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCMsgMasterSetClientMsgRouting)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
}

void CMsgGCMsgMasterSetClientMsgRouting::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCMsgMasterSetClientMsgRouting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCMsgMasterSetClientMsgRouting::CopyFrom(const CMsgGCMsgMasterSetClientMsgRouting& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCMsgMasterSetClientMsgRouting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCMsgMasterSetClientMsgRouting::IsInitialized() const {
  return true;
}

void CMsgGCMsgMasterSetClientMsgRouting::Swap(CMsgGCMsgMasterSetClientMsgRouting* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCMsgMasterSetClientMsgRouting::InternalSwap(CMsgGCMsgMasterSetClientMsgRouting* other) {
  using std::swap;
  entries_.InternalSwap(&other->entries_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCMsgMasterSetClientMsgRouting::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCMsgMasterSetWebAPIRouting_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCMsgMasterSetWebAPIRouting_Response::kEresultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCMsgMasterSetWebAPIRouting_Response::CMsgGCMsgMasterSetWebAPIRouting_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCMsgMasterSetWebAPIRouting_Response();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCMsgMasterSetWebAPIRouting_Response)
}
CMsgGCMsgMasterSetWebAPIRouting_Response::CMsgGCMsgMasterSetWebAPIRouting_Response(const CMsgGCMsgMasterSetWebAPIRouting_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCMsgMasterSetWebAPIRouting_Response)
}

void CMsgGCMsgMasterSetWebAPIRouting_Response::SharedCtor() {
  _cached_size_ = 0;
  eresult_ = 2;
}

CMsgGCMsgMasterSetWebAPIRouting_Response::~CMsgGCMsgMasterSetWebAPIRouting_Response() {
  // @@protoc_insertion_point(destructor:CMsgGCMsgMasterSetWebAPIRouting_Response)
  SharedDtor();
}

void CMsgGCMsgMasterSetWebAPIRouting_Response::SharedDtor() {
}

void CMsgGCMsgMasterSetWebAPIRouting_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCMsgMasterSetWebAPIRouting_Response::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCMsgMasterSetWebAPIRouting_Response& CMsgGCMsgMasterSetWebAPIRouting_Response::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCMsgMasterSetWebAPIRouting_Response();
  return *internal_default_instance();
}

CMsgGCMsgMasterSetWebAPIRouting_Response* CMsgGCMsgMasterSetWebAPIRouting_Response::New(::google::protobuf::Arena* arena) const {
  CMsgGCMsgMasterSetWebAPIRouting_Response* n = new CMsgGCMsgMasterSetWebAPIRouting_Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCMsgMasterSetWebAPIRouting_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCMsgMasterSetWebAPIRouting_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eresult_ = 2;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCMsgMasterSetWebAPIRouting_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCMsgMasterSetWebAPIRouting_Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCMsgMasterSetWebAPIRouting_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCMsgMasterSetWebAPIRouting_Response)
  return false;
#undef DO_
}

void CMsgGCMsgMasterSetWebAPIRouting_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCMsgMasterSetWebAPIRouting_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCMsgMasterSetWebAPIRouting_Response)
}

::google::protobuf::uint8* CMsgGCMsgMasterSetWebAPIRouting_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCMsgMasterSetWebAPIRouting_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCMsgMasterSetWebAPIRouting_Response)
  return target;
}

size_t CMsgGCMsgMasterSetWebAPIRouting_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCMsgMasterSetWebAPIRouting_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 eresult = 1 [default = 2];
  if (has_eresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCMsgMasterSetWebAPIRouting_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCMsgMasterSetWebAPIRouting_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCMsgMasterSetWebAPIRouting_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCMsgMasterSetWebAPIRouting_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCMsgMasterSetWebAPIRouting_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCMsgMasterSetWebAPIRouting_Response)
    MergeFrom(*source);
  }
}

void CMsgGCMsgMasterSetWebAPIRouting_Response::MergeFrom(const CMsgGCMsgMasterSetWebAPIRouting_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCMsgMasterSetWebAPIRouting_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgGCMsgMasterSetWebAPIRouting_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCMsgMasterSetWebAPIRouting_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCMsgMasterSetWebAPIRouting_Response::CopyFrom(const CMsgGCMsgMasterSetWebAPIRouting_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCMsgMasterSetWebAPIRouting_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCMsgMasterSetWebAPIRouting_Response::IsInitialized() const {
  return true;
}

void CMsgGCMsgMasterSetWebAPIRouting_Response::Swap(CMsgGCMsgMasterSetWebAPIRouting_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCMsgMasterSetWebAPIRouting_Response::InternalSwap(CMsgGCMsgMasterSetWebAPIRouting_Response* other) {
  using std::swap;
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCMsgMasterSetWebAPIRouting_Response::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCMsgMasterSetClientMsgRouting_Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCMsgMasterSetClientMsgRouting_Response::kEresultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCMsgMasterSetClientMsgRouting_Response::CMsgGCMsgMasterSetClientMsgRouting_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCMsgMasterSetClientMsgRouting_Response();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCMsgMasterSetClientMsgRouting_Response)
}
CMsgGCMsgMasterSetClientMsgRouting_Response::CMsgGCMsgMasterSetClientMsgRouting_Response(const CMsgGCMsgMasterSetClientMsgRouting_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCMsgMasterSetClientMsgRouting_Response)
}

void CMsgGCMsgMasterSetClientMsgRouting_Response::SharedCtor() {
  _cached_size_ = 0;
  eresult_ = 2;
}

CMsgGCMsgMasterSetClientMsgRouting_Response::~CMsgGCMsgMasterSetClientMsgRouting_Response() {
  // @@protoc_insertion_point(destructor:CMsgGCMsgMasterSetClientMsgRouting_Response)
  SharedDtor();
}

void CMsgGCMsgMasterSetClientMsgRouting_Response::SharedDtor() {
}

void CMsgGCMsgMasterSetClientMsgRouting_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCMsgMasterSetClientMsgRouting_Response::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCMsgMasterSetClientMsgRouting_Response& CMsgGCMsgMasterSetClientMsgRouting_Response::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCMsgMasterSetClientMsgRouting_Response();
  return *internal_default_instance();
}

CMsgGCMsgMasterSetClientMsgRouting_Response* CMsgGCMsgMasterSetClientMsgRouting_Response::New(::google::protobuf::Arena* arena) const {
  CMsgGCMsgMasterSetClientMsgRouting_Response* n = new CMsgGCMsgMasterSetClientMsgRouting_Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCMsgMasterSetClientMsgRouting_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCMsgMasterSetClientMsgRouting_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eresult_ = 2;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCMsgMasterSetClientMsgRouting_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCMsgMasterSetClientMsgRouting_Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCMsgMasterSetClientMsgRouting_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCMsgMasterSetClientMsgRouting_Response)
  return false;
#undef DO_
}

void CMsgGCMsgMasterSetClientMsgRouting_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCMsgMasterSetClientMsgRouting_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCMsgMasterSetClientMsgRouting_Response)
}

::google::protobuf::uint8* CMsgGCMsgMasterSetClientMsgRouting_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCMsgMasterSetClientMsgRouting_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCMsgMasterSetClientMsgRouting_Response)
  return target;
}

size_t CMsgGCMsgMasterSetClientMsgRouting_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCMsgMasterSetClientMsgRouting_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional int32 eresult = 1 [default = 2];
  if (has_eresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCMsgMasterSetClientMsgRouting_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCMsgMasterSetClientMsgRouting_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCMsgMasterSetClientMsgRouting_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCMsgMasterSetClientMsgRouting_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCMsgMasterSetClientMsgRouting_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCMsgMasterSetClientMsgRouting_Response)
    MergeFrom(*source);
  }
}

void CMsgGCMsgMasterSetClientMsgRouting_Response::MergeFrom(const CMsgGCMsgMasterSetClientMsgRouting_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCMsgMasterSetClientMsgRouting_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgGCMsgMasterSetClientMsgRouting_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCMsgMasterSetClientMsgRouting_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCMsgMasterSetClientMsgRouting_Response::CopyFrom(const CMsgGCMsgMasterSetClientMsgRouting_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCMsgMasterSetClientMsgRouting_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCMsgMasterSetClientMsgRouting_Response::IsInitialized() const {
  return true;
}

void CMsgGCMsgMasterSetClientMsgRouting_Response::Swap(CMsgGCMsgMasterSetClientMsgRouting_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCMsgMasterSetClientMsgRouting_Response::InternalSwap(CMsgGCMsgMasterSetClientMsgRouting_Response* other) {
  using std::swap;
  swap(eresult_, other->eresult_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCMsgMasterSetClientMsgRouting_Response::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCMsgSetOptions_MessageRange::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCMsgSetOptions_MessageRange::kLowFieldNumber;
const int CMsgGCMsgSetOptions_MessageRange::kHighFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCMsgSetOptions_MessageRange::CMsgGCMsgSetOptions_MessageRange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCMsgSetOptions_MessageRange();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCMsgSetOptions.MessageRange)
}
CMsgGCMsgSetOptions_MessageRange::CMsgGCMsgSetOptions_MessageRange(const CMsgGCMsgSetOptions_MessageRange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&low_, &from.low_,
    static_cast<size_t>(reinterpret_cast<char*>(&high_) -
    reinterpret_cast<char*>(&low_)) + sizeof(high_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCMsgSetOptions.MessageRange)
}

void CMsgGCMsgSetOptions_MessageRange::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&low_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&high_) -
      reinterpret_cast<char*>(&low_)) + sizeof(high_));
}

CMsgGCMsgSetOptions_MessageRange::~CMsgGCMsgSetOptions_MessageRange() {
  // @@protoc_insertion_point(destructor:CMsgGCMsgSetOptions.MessageRange)
  SharedDtor();
}

void CMsgGCMsgSetOptions_MessageRange::SharedDtor() {
}

void CMsgGCMsgSetOptions_MessageRange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCMsgSetOptions_MessageRange::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCMsgSetOptions_MessageRange& CMsgGCMsgSetOptions_MessageRange::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCMsgSetOptions_MessageRange();
  return *internal_default_instance();
}

CMsgGCMsgSetOptions_MessageRange* CMsgGCMsgSetOptions_MessageRange::New(::google::protobuf::Arena* arena) const {
  CMsgGCMsgSetOptions_MessageRange* n = new CMsgGCMsgSetOptions_MessageRange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCMsgSetOptions_MessageRange::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCMsgSetOptions.MessageRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&low_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&high_) -
        reinterpret_cast<char*>(&low_)) + sizeof(high_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCMsgSetOptions_MessageRange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCMsgSetOptions.MessageRange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 low = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_low();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &low_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 high = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_high();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &high_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCMsgSetOptions.MessageRange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCMsgSetOptions.MessageRange)
  return false;
#undef DO_
}

void CMsgGCMsgSetOptions_MessageRange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCMsgSetOptions.MessageRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 low = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->low(), output);
  }

  // required uint32 high = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->high(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCMsgSetOptions.MessageRange)
}

::google::protobuf::uint8* CMsgGCMsgSetOptions_MessageRange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCMsgSetOptions.MessageRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 low = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->low(), target);
  }

  // required uint32 high = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->high(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCMsgSetOptions.MessageRange)
  return target;
}

size_t CMsgGCMsgSetOptions_MessageRange::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:CMsgGCMsgSetOptions.MessageRange)
  size_t total_size = 0;

  if (has_low()) {
    // required uint32 low = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->low());
  }

  if (has_high()) {
    // required uint32 high = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->high());
  }

  return total_size;
}
size_t CMsgGCMsgSetOptions_MessageRange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCMsgSetOptions.MessageRange)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 low = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->low());

    // required uint32 high = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->high());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCMsgSetOptions_MessageRange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCMsgSetOptions.MessageRange)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCMsgSetOptions_MessageRange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCMsgSetOptions_MessageRange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCMsgSetOptions.MessageRange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCMsgSetOptions.MessageRange)
    MergeFrom(*source);
  }
}

void CMsgGCMsgSetOptions_MessageRange::MergeFrom(const CMsgGCMsgSetOptions_MessageRange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCMsgSetOptions.MessageRange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      low_ = from.low_;
    }
    if (cached_has_bits & 0x00000002u) {
      high_ = from.high_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCMsgSetOptions_MessageRange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCMsgSetOptions.MessageRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCMsgSetOptions_MessageRange::CopyFrom(const CMsgGCMsgSetOptions_MessageRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCMsgSetOptions.MessageRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCMsgSetOptions_MessageRange::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void CMsgGCMsgSetOptions_MessageRange::Swap(CMsgGCMsgSetOptions_MessageRange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCMsgSetOptions_MessageRange::InternalSwap(CMsgGCMsgSetOptions_MessageRange* other) {
  using std::swap;
  swap(low_, other->low_);
  swap(high_, other->high_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCMsgSetOptions_MessageRange::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCMsgSetOptions::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCMsgSetOptions::kOptionsFieldNumber;
const int CMsgGCMsgSetOptions::kClientMsgRangesFieldNumber;
const int CMsgGCMsgSetOptions::kGcsqlVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCMsgSetOptions::CMsgGCMsgSetOptions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCMsgSetOptions();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCMsgSetOptions)
}
CMsgGCMsgSetOptions::CMsgGCMsgSetOptions(const CMsgGCMsgSetOptions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      options_(from.options_),
      client_msg_ranges_(from.client_msg_ranges_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gcsql_version_ = from.gcsql_version_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCMsgSetOptions)
}

void CMsgGCMsgSetOptions::SharedCtor() {
  _cached_size_ = 0;
  gcsql_version_ = 1;
}

CMsgGCMsgSetOptions::~CMsgGCMsgSetOptions() {
  // @@protoc_insertion_point(destructor:CMsgGCMsgSetOptions)
  SharedDtor();
}

void CMsgGCMsgSetOptions::SharedDtor() {
}

void CMsgGCMsgSetOptions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCMsgSetOptions::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCMsgSetOptions& CMsgGCMsgSetOptions::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCMsgSetOptions();
  return *internal_default_instance();
}

CMsgGCMsgSetOptions* CMsgGCMsgSetOptions::New(::google::protobuf::Arena* arena) const {
  CMsgGCMsgSetOptions* n = new CMsgGCMsgSetOptions;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCMsgSetOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCMsgSetOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  options_.Clear();
  client_msg_ranges_.Clear();
  gcsql_version_ = 1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCMsgSetOptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCMsgSetOptions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CMsgGCMsgSetOptions.Option options = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CMsgGCMsgSetOptions_Option_IsValid(value)) {
            add_options(static_cast< ::CMsgGCMsgSetOptions_Option >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormat::ReadPackedEnumPreserveUnknowns(
                 input,
                 1,
                 ::CMsgGCMsgSetOptions_Option_IsValid,
                 mutable_unknown_fields(),
                 this->mutable_options())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgGCMsgSetOptions.MessageRange client_msg_ranges = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_client_msg_ranges()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgGCMsgSetOptions.GCSQLVersion gcsql_version = 3 [default = GCSQL_VERSION_BASELINE];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::CMsgGCMsgSetOptions_GCSQLVersion_IsValid(value)) {
            set_gcsql_version(static_cast< ::CMsgGCMsgSetOptions_GCSQLVersion >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCMsgSetOptions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCMsgSetOptions)
  return false;
#undef DO_
}

void CMsgGCMsgSetOptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCMsgSetOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgGCMsgSetOptions.Option options = 1;
  for (int i = 0, n = this->options_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->options(i), output);
  }

  // repeated .CMsgGCMsgSetOptions.MessageRange client_msg_ranges = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->client_msg_ranges_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->client_msg_ranges(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional .CMsgGCMsgSetOptions.GCSQLVersion gcsql_version = 3 [default = GCSQL_VERSION_BASELINE];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->gcsql_version(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCMsgSetOptions)
}

::google::protobuf::uint8* CMsgGCMsgSetOptions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCMsgSetOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgGCMsgSetOptions.Option options = 1;
  target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
    1, this->options_, target);

  // repeated .CMsgGCMsgSetOptions.MessageRange client_msg_ranges = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->client_msg_ranges_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->client_msg_ranges(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .CMsgGCMsgSetOptions.GCSQLVersion gcsql_version = 3 [default = GCSQL_VERSION_BASELINE];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->gcsql_version(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCMsgSetOptions)
  return target;
}

size_t CMsgGCMsgSetOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCMsgSetOptions)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgGCMsgSetOptions.Option options = 1;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->options_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->options(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  // repeated .CMsgGCMsgSetOptions.MessageRange client_msg_ranges = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->client_msg_ranges_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->client_msg_ranges(static_cast<int>(i)));
    }
  }

  // optional .CMsgGCMsgSetOptions.GCSQLVersion gcsql_version = 3 [default = GCSQL_VERSION_BASELINE];
  if (has_gcsql_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->gcsql_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCMsgSetOptions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCMsgSetOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCMsgSetOptions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCMsgSetOptions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCMsgSetOptions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCMsgSetOptions)
    MergeFrom(*source);
  }
}

void CMsgGCMsgSetOptions::MergeFrom(const CMsgGCMsgSetOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCMsgSetOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  options_.MergeFrom(from.options_);
  client_msg_ranges_.MergeFrom(from.client_msg_ranges_);
  if (from.has_gcsql_version()) {
    set_gcsql_version(from.gcsql_version());
  }
}

void CMsgGCMsgSetOptions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCMsgSetOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCMsgSetOptions::CopyFrom(const CMsgGCMsgSetOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCMsgSetOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCMsgSetOptions::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->client_msg_ranges())) return false;
  return true;
}

void CMsgGCMsgSetOptions::Swap(CMsgGCMsgSetOptions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCMsgSetOptions::InternalSwap(CMsgGCMsgSetOptions* other) {
  using std::swap;
  options_.InternalSwap(&other->options_);
  client_msg_ranges_.InternalSwap(&other->client_msg_ranges_);
  swap(gcsql_version_, other->gcsql_version_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCMsgSetOptions::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCHUpdateSession_ExtraField::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCHUpdateSession_ExtraField::kNameFieldNumber;
const int CMsgGCHUpdateSession_ExtraField::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCHUpdateSession_ExtraField::CMsgGCHUpdateSession_ExtraField()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCHUpdateSession_ExtraField();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCHUpdateSession.ExtraField)
}
CMsgGCHUpdateSession_ExtraField::CMsgGCHUpdateSession_ExtraField(const CMsgGCHUpdateSession_ExtraField& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:CMsgGCHUpdateSession.ExtraField)
}

void CMsgGCHUpdateSession_ExtraField::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgGCHUpdateSession_ExtraField::~CMsgGCHUpdateSession_ExtraField() {
  // @@protoc_insertion_point(destructor:CMsgGCHUpdateSession.ExtraField)
  SharedDtor();
}

void CMsgGCHUpdateSession_ExtraField::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGCHUpdateSession_ExtraField::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCHUpdateSession_ExtraField::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCHUpdateSession_ExtraField& CMsgGCHUpdateSession_ExtraField::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCHUpdateSession_ExtraField();
  return *internal_default_instance();
}

CMsgGCHUpdateSession_ExtraField* CMsgGCHUpdateSession_ExtraField::New(::google::protobuf::Arena* arena) const {
  CMsgGCHUpdateSession_ExtraField* n = new CMsgGCHUpdateSession_ExtraField;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCHUpdateSession_ExtraField::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCHUpdateSession.ExtraField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*value_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCHUpdateSession_ExtraField::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCHUpdateSession.ExtraField)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGCHUpdateSession.ExtraField.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CMsgGCHUpdateSession.ExtraField.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCHUpdateSession.ExtraField)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCHUpdateSession.ExtraField)
  return false;
#undef DO_
}

void CMsgGCHUpdateSession_ExtraField::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCHUpdateSession.ExtraField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCHUpdateSession.ExtraField.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCHUpdateSession.ExtraField.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCHUpdateSession.ExtraField)
}

::google::protobuf::uint8* CMsgGCHUpdateSession_ExtraField::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCHUpdateSession.ExtraField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCHUpdateSession.ExtraField.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CMsgGCHUpdateSession.ExtraField.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCHUpdateSession.ExtraField)
  return target;
}

size_t CMsgGCHUpdateSession_ExtraField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCHUpdateSession.ExtraField)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCHUpdateSession_ExtraField::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCHUpdateSession.ExtraField)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCHUpdateSession_ExtraField* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCHUpdateSession_ExtraField>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCHUpdateSession.ExtraField)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCHUpdateSession.ExtraField)
    MergeFrom(*source);
  }
}

void CMsgGCHUpdateSession_ExtraField::MergeFrom(const CMsgGCHUpdateSession_ExtraField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCHUpdateSession.ExtraField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void CMsgGCHUpdateSession_ExtraField::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCHUpdateSession.ExtraField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCHUpdateSession_ExtraField::CopyFrom(const CMsgGCHUpdateSession_ExtraField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCHUpdateSession.ExtraField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCHUpdateSession_ExtraField::IsInitialized() const {
  return true;
}

void CMsgGCHUpdateSession_ExtraField::Swap(CMsgGCHUpdateSession_ExtraField* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCHUpdateSession_ExtraField::InternalSwap(CMsgGCHUpdateSession_ExtraField* other) {
  using std::swap;
  name_.Swap(&other->name_);
  value_.Swap(&other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCHUpdateSession_ExtraField::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgGCHUpdateSession::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCHUpdateSession::kSteamIdFieldNumber;
const int CMsgGCHUpdateSession::kAppIdFieldNumber;
const int CMsgGCHUpdateSession::kOnlineFieldNumber;
const int CMsgGCHUpdateSession::kServerSteamIdFieldNumber;
const int CMsgGCHUpdateSession::kServerAddrFieldNumber;
const int CMsgGCHUpdateSession::kServerPortFieldNumber;
const int CMsgGCHUpdateSession::kOsTypeFieldNumber;
const int CMsgGCHUpdateSession::kClientAddrFieldNumber;
const int CMsgGCHUpdateSession::kExtraFieldsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCHUpdateSession::CMsgGCHUpdateSession()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCHUpdateSession();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgGCHUpdateSession)
}
CMsgGCHUpdateSession::CMsgGCHUpdateSession(const CMsgGCHUpdateSession& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      extra_fields_(from.extra_fields_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steam_id_, &from.steam_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&client_addr_) -
    reinterpret_cast<char*>(&steam_id_)) + sizeof(client_addr_));
  // @@protoc_insertion_point(copy_constructor:CMsgGCHUpdateSession)
}

void CMsgGCHUpdateSession::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&steam_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&client_addr_) -
      reinterpret_cast<char*>(&steam_id_)) + sizeof(client_addr_));
}

CMsgGCHUpdateSession::~CMsgGCHUpdateSession() {
  // @@protoc_insertion_point(destructor:CMsgGCHUpdateSession)
  SharedDtor();
}

void CMsgGCHUpdateSession::SharedDtor() {
}

void CMsgGCHUpdateSession::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCHUpdateSession::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCHUpdateSession& CMsgGCHUpdateSession::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgGCHUpdateSession();
  return *internal_default_instance();
}

CMsgGCHUpdateSession* CMsgGCHUpdateSession::New(::google::protobuf::Arena* arena) const {
  CMsgGCHUpdateSession* n = new CMsgGCHUpdateSession;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCHUpdateSession::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCHUpdateSession)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extra_fields_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&steam_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&client_addr_) -
        reinterpret_cast<char*>(&steam_id_)) + sizeof(client_addr_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCHUpdateSession::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgGCHUpdateSession)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool online = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_online();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &online_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 server_steam_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_server_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &server_steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 server_addr = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_server_addr();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_addr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 server_port = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_server_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 os_type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_os_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &os_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 client_addr = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_client_addr();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_addr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .CMsgGCHUpdateSession.ExtraField extra_fields = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_extra_fields()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgGCHUpdateSession)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgGCHUpdateSession)
  return false;
#undef DO_
}

void CMsgGCHUpdateSession::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgGCHUpdateSession)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id(), output);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->app_id(), output);
  }

  // optional bool online = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->online(), output);
  }

  // optional fixed64 server_steam_id = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(4, this->server_steam_id(), output);
  }

  // optional uint32 server_addr = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->server_addr(), output);
  }

  // optional uint32 server_port = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->server_port(), output);
  }

  // optional uint32 os_type = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->os_type(), output);
  }

  // optional uint32 client_addr = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->client_addr(), output);
  }

  // repeated .CMsgGCHUpdateSession.ExtraField extra_fields = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extra_fields_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->extra_fields(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgGCHUpdateSession)
}

::google::protobuf::uint8* CMsgGCHUpdateSession::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCHUpdateSession)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id(), target);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->app_id(), target);
  }

  // optional bool online = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->online(), target);
  }

  // optional fixed64 server_steam_id = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(4, this->server_steam_id(), target);
  }

  // optional uint32 server_addr = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->server_addr(), target);
  }

  // optional uint32 server_port = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->server_port(), target);
  }

  // optional uint32 os_type = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->os_type(), target);
  }

  // optional uint32 client_addr = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->client_addr(), target);
  }

  // repeated .CMsgGCHUpdateSession.ExtraField extra_fields = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->extra_fields_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->extra_fields(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCHUpdateSession)
  return target;
}

size_t CMsgGCHUpdateSession::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCHUpdateSession)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .CMsgGCHUpdateSession.ExtraField extra_fields = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->extra_fields_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->extra_fields(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional fixed64 steam_id = 1;
    if (has_steam_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 2;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional bool online = 3;
    if (has_online()) {
      total_size += 1 + 1;
    }

    // optional fixed64 server_steam_id = 4;
    if (has_server_steam_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 server_addr = 5;
    if (has_server_addr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->server_addr());
    }

    // optional uint32 server_port = 6;
    if (has_server_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->server_port());
    }

    // optional uint32 os_type = 7;
    if (has_os_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->os_type());
    }

    // optional uint32 client_addr = 8;
    if (has_client_addr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->client_addr());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCHUpdateSession::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCHUpdateSession)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCHUpdateSession* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCHUpdateSession>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCHUpdateSession)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCHUpdateSession)
    MergeFrom(*source);
  }
}

void CMsgGCHUpdateSession::MergeFrom(const CMsgGCHUpdateSession& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCHUpdateSession)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extra_fields_.MergeFrom(from.extra_fields_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      steam_id_ = from.steam_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      online_ = from.online_;
    }
    if (cached_has_bits & 0x00000008u) {
      server_steam_id_ = from.server_steam_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      server_addr_ = from.server_addr_;
    }
    if (cached_has_bits & 0x00000020u) {
      server_port_ = from.server_port_;
    }
    if (cached_has_bits & 0x00000040u) {
      os_type_ = from.os_type_;
    }
    if (cached_has_bits & 0x00000080u) {
      client_addr_ = from.client_addr_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCHUpdateSession::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCHUpdateSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCHUpdateSession::CopyFrom(const CMsgGCHUpdateSession& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCHUpdateSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCHUpdateSession::IsInitialized() const {
  return true;
}

void CMsgGCHUpdateSession::Swap(CMsgGCHUpdateSession* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCHUpdateSession::InternalSwap(CMsgGCHUpdateSession* other) {
  using std::swap;
  extra_fields_.InternalSwap(&other->extra_fields_);
  swap(steam_id_, other->steam_id_);
  swap(app_id_, other->app_id_);
  swap(online_, other->online_);
  swap(server_steam_id_, other->server_steam_id_);
  swap(server_addr_, other->server_addr_);
  swap(server_port_, other->server_port_);
  swap(os_type_, other->os_type_);
  swap(client_addr_, other->client_addr_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCHUpdateSession::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::kAppInstanceCountFieldNumber;
const int CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::kOtherSteamidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgNotificationOfSuspiciousActivity_MultipleGameInstances();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgNotificationOfSuspiciousActivity.MultipleGameInstances)
}
CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances(const CMsgNotificationOfSuspiciousActivity_MultipleGameInstances& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      other_steamids_(from.other_steamids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  app_instance_count_ = from.app_instance_count_;
  // @@protoc_insertion_point(copy_constructor:CMsgNotificationOfSuspiciousActivity.MultipleGameInstances)
}

void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::SharedCtor() {
  _cached_size_ = 0;
  app_instance_count_ = 0u;
}

CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::~CMsgNotificationOfSuspiciousActivity_MultipleGameInstances() {
  // @@protoc_insertion_point(destructor:CMsgNotificationOfSuspiciousActivity.MultipleGameInstances)
  SharedDtor();
}

void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::SharedDtor() {
}

void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgNotificationOfSuspiciousActivity_MultipleGameInstances& CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgNotificationOfSuspiciousActivity_MultipleGameInstances();
  return *internal_default_instance();
}

CMsgNotificationOfSuspiciousActivity_MultipleGameInstances* CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::New(::google::protobuf::Arena* arena) const {
  CMsgNotificationOfSuspiciousActivity_MultipleGameInstances* n = new CMsgNotificationOfSuspiciousActivity_MultipleGameInstances;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgNotificationOfSuspiciousActivity.MultipleGameInstances)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  other_steamids_.Clear();
  app_instance_count_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgNotificationOfSuspiciousActivity.MultipleGameInstances)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_instance_count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_app_instance_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_instance_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed64 other_steamids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 17u, input, this->mutable_other_steamids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_other_steamids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgNotificationOfSuspiciousActivity.MultipleGameInstances)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgNotificationOfSuspiciousActivity.MultipleGameInstances)
  return false;
#undef DO_
}

void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgNotificationOfSuspiciousActivity.MultipleGameInstances)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_instance_count = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_instance_count(), output);
  }

  // repeated fixed64 other_steamids = 2;
  for (int i = 0, n = this->other_steamids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      2, this->other_steamids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgNotificationOfSuspiciousActivity.MultipleGameInstances)
}

::google::protobuf::uint8* CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgNotificationOfSuspiciousActivity.MultipleGameInstances)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_instance_count = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_instance_count(), target);
  }

  // repeated fixed64 other_steamids = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFixed64ToArray(2, this->other_steamids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgNotificationOfSuspiciousActivity.MultipleGameInstances)
  return target;
}

size_t CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgNotificationOfSuspiciousActivity.MultipleGameInstances)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated fixed64 other_steamids = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->other_steamids_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->other_steamids_size());
    total_size += data_size;
  }

  // optional uint32 app_instance_count = 1;
  if (has_app_instance_count()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->app_instance_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgNotificationOfSuspiciousActivity.MultipleGameInstances)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgNotificationOfSuspiciousActivity_MultipleGameInstances* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgNotificationOfSuspiciousActivity_MultipleGameInstances>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgNotificationOfSuspiciousActivity.MultipleGameInstances)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgNotificationOfSuspiciousActivity.MultipleGameInstances)
    MergeFrom(*source);
  }
}

void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::MergeFrom(const CMsgNotificationOfSuspiciousActivity_MultipleGameInstances& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgNotificationOfSuspiciousActivity.MultipleGameInstances)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  other_steamids_.MergeFrom(from.other_steamids_);
  if (from.has_app_instance_count()) {
    set_app_instance_count(from.app_instance_count());
  }
}

void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgNotificationOfSuspiciousActivity.MultipleGameInstances)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::CopyFrom(const CMsgNotificationOfSuspiciousActivity_MultipleGameInstances& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgNotificationOfSuspiciousActivity.MultipleGameInstances)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::IsInitialized() const {
  return true;
}

void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::Swap(CMsgNotificationOfSuspiciousActivity_MultipleGameInstances* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::InternalSwap(CMsgNotificationOfSuspiciousActivity_MultipleGameInstances* other) {
  using std::swap;
  other_steamids_.InternalSwap(&other->other_steamids_);
  swap(app_instance_count_, other->app_instance_count_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CMsgNotificationOfSuspiciousActivity::InitAsDefaultInstance() {
  ::_CMsgNotificationOfSuspiciousActivity_default_instance_._instance.get_mutable()->multiple_instances_ = const_cast< ::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances*>(
      ::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgNotificationOfSuspiciousActivity::kSteamidFieldNumber;
const int CMsgNotificationOfSuspiciousActivity::kAppidFieldNumber;
const int CMsgNotificationOfSuspiciousActivity::kMultipleInstancesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgNotificationOfSuspiciousActivity::CMsgNotificationOfSuspiciousActivity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_steammessages_2eproto::InitDefaultsCMsgNotificationOfSuspiciousActivity();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CMsgNotificationOfSuspiciousActivity)
}
CMsgNotificationOfSuspiciousActivity::CMsgNotificationOfSuspiciousActivity(const CMsgNotificationOfSuspiciousActivity& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_multiple_instances()) {
    multiple_instances_ = new ::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances(*from.multiple_instances_);
  } else {
    multiple_instances_ = NULL;
  }
  ::memcpy(&steamid_, &from.steamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&appid_) -
    reinterpret_cast<char*>(&steamid_)) + sizeof(appid_));
  // @@protoc_insertion_point(copy_constructor:CMsgNotificationOfSuspiciousActivity)
}

void CMsgNotificationOfSuspiciousActivity::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&multiple_instances_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&appid_) -
      reinterpret_cast<char*>(&multiple_instances_)) + sizeof(appid_));
}

CMsgNotificationOfSuspiciousActivity::~CMsgNotificationOfSuspiciousActivity() {
  // @@protoc_insertion_point(destructor:CMsgNotificationOfSuspiciousActivity)
  SharedDtor();
}

void CMsgNotificationOfSuspiciousActivity::SharedDtor() {
  if (this != internal_default_instance()) delete multiple_instances_;
}

void CMsgNotificationOfSuspiciousActivity::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgNotificationOfSuspiciousActivity::descriptor() {
  ::protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgNotificationOfSuspiciousActivity& CMsgNotificationOfSuspiciousActivity::default_instance() {
  ::protobuf_steammessages_2eproto::InitDefaultsCMsgNotificationOfSuspiciousActivity();
  return *internal_default_instance();
}

CMsgNotificationOfSuspiciousActivity* CMsgNotificationOfSuspiciousActivity::New(::google::protobuf::Arena* arena) const {
  CMsgNotificationOfSuspiciousActivity* n = new CMsgNotificationOfSuspiciousActivity;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgNotificationOfSuspiciousActivity::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgNotificationOfSuspiciousActivity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(multiple_instances_ != NULL);
    multiple_instances_->Clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&steamid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&appid_) -
        reinterpret_cast<char*>(&steamid_)) + sizeof(appid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgNotificationOfSuspiciousActivity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CMsgNotificationOfSuspiciousActivity)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 appid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .CMsgNotificationOfSuspiciousActivity.MultipleGameInstances multiple_instances = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_multiple_instances()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CMsgNotificationOfSuspiciousActivity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CMsgNotificationOfSuspiciousActivity)
  return false;
#undef DO_
}

void CMsgNotificationOfSuspiciousActivity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CMsgNotificationOfSuspiciousActivity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->appid(), output);
  }

  // optional .CMsgNotificationOfSuspiciousActivity.MultipleGameInstances multiple_instances = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->multiple_instances_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CMsgNotificationOfSuspiciousActivity)
}

::google::protobuf::uint8* CMsgNotificationOfSuspiciousActivity::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CMsgNotificationOfSuspiciousActivity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->appid(), target);
  }

  // optional .CMsgNotificationOfSuspiciousActivity.MultipleGameInstances multiple_instances = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->multiple_instances_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgNotificationOfSuspiciousActivity)
  return target;
}

size_t CMsgNotificationOfSuspiciousActivity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgNotificationOfSuspiciousActivity)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .CMsgNotificationOfSuspiciousActivity.MultipleGameInstances multiple_instances = 3;
    if (has_multiple_instances()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->multiple_instances_);
    }

    // optional fixed64 steamid = 1;
    if (has_steamid()) {
      total_size += 1 + 8;
    }

    // optional uint32 appid = 2;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgNotificationOfSuspiciousActivity::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgNotificationOfSuspiciousActivity)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgNotificationOfSuspiciousActivity* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgNotificationOfSuspiciousActivity>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgNotificationOfSuspiciousActivity)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgNotificationOfSuspiciousActivity)
    MergeFrom(*source);
  }
}

void CMsgNotificationOfSuspiciousActivity::MergeFrom(const CMsgNotificationOfSuspiciousActivity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgNotificationOfSuspiciousActivity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_multiple_instances()->::CMsgNotificationOfSuspiciousActivity_MultipleGameInstances::MergeFrom(from.multiple_instances());
    }
    if (cached_has_bits & 0x00000002u) {
      steamid_ = from.steamid_;
    }
    if (cached_has_bits & 0x00000004u) {
      appid_ = from.appid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgNotificationOfSuspiciousActivity::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgNotificationOfSuspiciousActivity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgNotificationOfSuspiciousActivity::CopyFrom(const CMsgNotificationOfSuspiciousActivity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgNotificationOfSuspiciousActivity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgNotificationOfSuspiciousActivity::IsInitialized() const {
  return true;
}

void CMsgNotificationOfSuspiciousActivity::Swap(CMsgNotificationOfSuspiciousActivity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgNotificationOfSuspiciousActivity::InternalSwap(CMsgNotificationOfSuspiciousActivity* other) {
  using std::swap;
  swap(multiple_instances_, other->multiple_instances_);
  swap(steamid_, other->steamid_);
  swap(appid_, other->appid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgNotificationOfSuspiciousActivity::GetMetadata() const {
  protobuf_steammessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_steammessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  key_field(kKeyFieldFieldNumber, false);
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 5, false >
  msgpool_soft_limit(kMsgpoolSoftLimitFieldNumber, 32);
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 5, false >
  msgpool_hard_limit(kMsgpoolHardLimitFieldNumber, 384);

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
