// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: base_gcmessages.proto

#ifndef PROTOBUF_base_5fgcmessages_2eproto__INCLUDED
#define PROTOBUF_base_5fgcmessages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "steammessages.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_base_5fgcmessages_2eproto();
void protobuf_AssignDesc_base_5fgcmessages_2eproto();
void protobuf_ShutdownFile_base_5fgcmessages_2eproto();

class CSOPartyInvite;
class CSOLobbyInvite;
class CMsgSystemBroadcast;
class CMsgClientHello;
class CMsgServerHello;
class CMsgClientWelcome;
class CMsgServerWelcome;
class CMsgInviteToParty;
class CMsgInvitationCreated;
class CMsgPartyInviteResponse;
class CMsgKickFromParty;
class CMsgLeaveParty;
class CMsgGameServerInfo;
class CMsgServerAvailable;
class CSOEconGameAccountClient;
class CSOItemCriteriaCondition;
class CSOItemCriteria;
class CSOItemRecipe;
class CMsgDevNewItemRequest;
class CMsgIncrementKillCountAttribute;
class CSOEconItemAttribute;
class CSOEconItemEquipped;
class CSOEconItem;
class CMsgAdjustItemEquippedState;
class CMsgSortItems;
class CSOEconClaimCode;
class CMsgStoreGetUserData;
class CMsgStoreGetUserDataResponse;
class CMsgUpdateItemSchema;
class CMsgRequestItemSchemaData;
class CMsgGCError;
class CMsgRequestInventoryRefresh;
class CMsgConVarValue;
class CMsgReplicateConVars;
class CMsgUseItem;
class CMsgConsumableExhausted;

enum CMsgGameServerInfo_ServerType {
  CMsgGameServerInfo_ServerType_UNSPECIFIED = 0,
  CMsgGameServerInfo_ServerType_GAME = 1,
  CMsgGameServerInfo_ServerType_PROXY = 2,
  CMsgGameServerInfo_ServerType_CONTROLLER = 3
};
bool CMsgGameServerInfo_ServerType_IsValid(int value);
const CMsgGameServerInfo_ServerType CMsgGameServerInfo_ServerType_ServerType_MIN = CMsgGameServerInfo_ServerType_UNSPECIFIED;
const CMsgGameServerInfo_ServerType CMsgGameServerInfo_ServerType_ServerType_MAX = CMsgGameServerInfo_ServerType_CONTROLLER;
const int CMsgGameServerInfo_ServerType_ServerType_ARRAYSIZE = CMsgGameServerInfo_ServerType_ServerType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGameServerInfo_ServerType_descriptor();
inline const ::std::string& CMsgGameServerInfo_ServerType_Name(CMsgGameServerInfo_ServerType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGameServerInfo_ServerType_descriptor(), value);
}
inline bool CMsgGameServerInfo_ServerType_Parse(
    const ::std::string& name, CMsgGameServerInfo_ServerType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGameServerInfo_ServerType>(
    CMsgGameServerInfo_ServerType_descriptor(), name, value);
}
// ===================================================================

class CSOPartyInvite : public ::google::protobuf::Message {
 public:
  CSOPartyInvite();
  virtual ~CSOPartyInvite();
  
  CSOPartyInvite(const CSOPartyInvite& from);
  
  inline CSOPartyInvite& operator=(const CSOPartyInvite& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOPartyInvite& default_instance();
  
  void Swap(CSOPartyInvite* other);
  
  // implements Message ----------------------------------------------
  
  CSOPartyInvite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOPartyInvite& from);
  void MergeFrom(const CSOPartyInvite& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 group_id = 1;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);
  
  // optional fixed64 sender_id = 2;
  inline bool has_sender_id() const;
  inline void clear_sender_id();
  static const int kSenderIdFieldNumber = 2;
  inline ::google::protobuf::uint64 sender_id() const;
  inline void set_sender_id(::google::protobuf::uint64 value);
  
  // optional string sender_name = 3;
  inline bool has_sender_name() const;
  inline void clear_sender_name();
  static const int kSenderNameFieldNumber = 3;
  inline const ::std::string& sender_name() const;
  inline void set_sender_name(const ::std::string& value);
  inline void set_sender_name(const char* value);
  inline void set_sender_name(const char* value, size_t size);
  inline ::std::string* mutable_sender_name();
  inline ::std::string* release_sender_name();
  
  // @@protoc_insertion_point(class_scope:CSOPartyInvite)
 private:
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_sender_id();
  inline void clear_has_sender_id();
  inline void set_has_sender_name();
  inline void clear_has_sender_name();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 group_id_;
  ::google::protobuf::uint64 sender_id_;
  ::std::string* sender_name_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_base_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_base_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_base_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CSOPartyInvite* default_instance_;
};
// -------------------------------------------------------------------

class CSOLobbyInvite : public ::google::protobuf::Message {
 public:
  CSOLobbyInvite();
  virtual ~CSOLobbyInvite();
  
  CSOLobbyInvite(const CSOLobbyInvite& from);
  
  inline CSOLobbyInvite& operator=(const CSOLobbyInvite& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOLobbyInvite& default_instance();
  
  void Swap(CSOLobbyInvite* other);
  
  // implements Message ----------------------------------------------
  
  CSOLobbyInvite* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOLobbyInvite& from);
  void MergeFrom(const CSOLobbyInvite& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 group_id = 1;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);
  
  // optional fixed64 sender_id = 2;
  inline bool has_sender_id() const;
  inline void clear_sender_id();
  static const int kSenderIdFieldNumber = 2;
  inline ::google::protobuf::uint64 sender_id() const;
  inline void set_sender_id(::google::protobuf::uint64 value);
  
  // optional string sender_name = 3;
  inline bool has_sender_name() const;
  inline void clear_sender_name();
  static const int kSenderNameFieldNumber = 3;
  inline const ::std::string& sender_name() const;
  inline void set_sender_name(const ::std::string& value);
  inline void set_sender_name(const char* value);
  inline void set_sender_name(const char* value, size_t size);
  inline ::std::string* mutable_sender_name();
  inline ::std::string* release_sender_name();
  
  // @@protoc_insertion_point(class_scope:CSOLobbyInvite)
 private:
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_sender_id();
  inline void clear_has_sender_id();
  inline void set_has_sender_name();
  inline void clear_has_sender_name();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 group_id_;
  ::google::protobuf::uint64 sender_id_;
  ::std::string* sender_name_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_base_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_base_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_base_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CSOLobbyInvite* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSystemBroadcast : public ::google::protobuf::Message {
 public:
  CMsgSystemBroadcast();
  virtual ~CMsgSystemBroadcast();
  
  CMsgSystemBroadcast(const CMsgSystemBroadcast& from);
  
  inline CMsgSystemBroadcast& operator=(const CMsgSystemBroadcast& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSystemBroadcast& default_instance();
  
  void Swap(CMsgSystemBroadcast* other);
  
  // implements Message ----------------------------------------------
  
  CMsgSystemBroadcast* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSystemBroadcast& from);
  void MergeFrom(const CMsgSystemBroadcast& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string message = 1;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 1;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  
  // @@protoc_insertion_point(class_scope:CMsgSystemBroadcast)
 private:
  inline void set_has_message();
  inline void clear_has_message();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* message_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_base_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_base_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_base_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgSystemBroadcast* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientHello : public ::google::protobuf::Message {
 public:
  CMsgClientHello();
  virtual ~CMsgClientHello();
  
  CMsgClientHello(const CMsgClientHello& from);
  
  inline CMsgClientHello& operator=(const CMsgClientHello& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientHello& default_instance();
  
  void Swap(CMsgClientHello* other);
  
  // implements Message ----------------------------------------------
  
  CMsgClientHello* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientHello& from);
  void MergeFrom(const CMsgClientHello& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 version = 1;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 1;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgClientHello)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 version_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_base_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_base_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_base_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgClientHello* default_instance_;
};
// -------------------------------------------------------------------

class CMsgServerHello : public ::google::protobuf::Message {
 public:
  CMsgServerHello();
  virtual ~CMsgServerHello();
  
  CMsgServerHello(const CMsgServerHello& from);
  
  inline CMsgServerHello& operator=(const CMsgServerHello& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgServerHello& default_instance();
  
  void Swap(CMsgServerHello* other);
  
  // implements Message ----------------------------------------------
  
  CMsgServerHello* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgServerHello& from);
  void MergeFrom(const CMsgServerHello& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 version = 1;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 1;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgServerHello)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 version_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_base_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_base_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_base_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgServerHello* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientWelcome : public ::google::protobuf::Message {
 public:
  CMsgClientWelcome();
  virtual ~CMsgClientWelcome();
  
  CMsgClientWelcome(const CMsgClientWelcome& from);
  
  inline CMsgClientWelcome& operator=(const CMsgClientWelcome& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientWelcome& default_instance();
  
  void Swap(CMsgClientWelcome* other);
  
  // implements Message ----------------------------------------------
  
  CMsgClientWelcome* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientWelcome& from);
  void MergeFrom(const CMsgClientWelcome& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 version = 1;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 1;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgClientWelcome)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 version_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_base_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_base_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_base_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgClientWelcome* default_instance_;
};
// -------------------------------------------------------------------

class CMsgServerWelcome : public ::google::protobuf::Message {
 public:
  CMsgServerWelcome();
  virtual ~CMsgServerWelcome();
  
  CMsgServerWelcome(const CMsgServerWelcome& from);
  
  inline CMsgServerWelcome& operator=(const CMsgServerWelcome& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgServerWelcome& default_instance();
  
  void Swap(CMsgServerWelcome* other);
  
  // implements Message ----------------------------------------------
  
  CMsgServerWelcome* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgServerWelcome& from);
  void MergeFrom(const CMsgServerWelcome& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 version = 1;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 1;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgServerWelcome)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 version_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_base_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_base_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_base_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgServerWelcome* default_instance_;
};
// -------------------------------------------------------------------

class CMsgInviteToParty : public ::google::protobuf::Message {
 public:
  CMsgInviteToParty();
  virtual ~CMsgInviteToParty();
  
  CMsgInviteToParty(const CMsgInviteToParty& from);
  
  inline CMsgInviteToParty& operator=(const CMsgInviteToParty& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgInviteToParty& default_instance();
  
  void Swap(CMsgInviteToParty* other);
  
  // implements Message ----------------------------------------------
  
  CMsgInviteToParty* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgInviteToParty& from);
  void MergeFrom(const CMsgInviteToParty& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional fixed64 steam_id = 1;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:CMsgInviteToParty)
 private:
  inline void set_has_steam_id();
  inline void clear_has_steam_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 steam_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_base_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_base_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_base_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgInviteToParty* default_instance_;
};
// -------------------------------------------------------------------

class CMsgInvitationCreated : public ::google::protobuf::Message {
 public:
  CMsgInvitationCreated();
  virtual ~CMsgInvitationCreated();
  
  CMsgInvitationCreated(const CMsgInvitationCreated& from);
  
  inline CMsgInvitationCreated& operator=(const CMsgInvitationCreated& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgInvitationCreated& default_instance();
  
  void Swap(CMsgInvitationCreated* other);
  
  // implements Message ----------------------------------------------
  
  CMsgInvitationCreated* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgInvitationCreated& from);
  void MergeFrom(const CMsgInvitationCreated& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 group_id = 1;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  inline ::google::protobuf::uint64 group_id() const;
  inline void set_group_id(::google::protobuf::uint64 value);
  
  // optional fixed64 steam_id = 2;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 2;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:CMsgInvitationCreated)
 private:
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_steam_id();
  inline void clear_has_steam_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 group_id_;
  ::google::protobuf::uint64 steam_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_base_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_base_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_base_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgInvitationCreated* default_instance_;
};
// -------------------------------------------------------------------

class CMsgPartyInviteResponse : public ::google::protobuf::Message {
 public:
  CMsgPartyInviteResponse();
  virtual ~CMsgPartyInviteResponse();
  
  CMsgPartyInviteResponse(const CMsgPartyInviteResponse& from);
  
  inline CMsgPartyInviteResponse& operator=(const CMsgPartyInviteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPartyInviteResponse& default_instance();
  
  void Swap(CMsgPartyInviteResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMsgPartyInviteResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgPartyInviteResponse& from);
  void MergeFrom(const CMsgPartyInviteResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 party_id = 1;
  inline bool has_party_id() const;
  inline void clear_party_id();
  static const int kPartyIdFieldNumber = 1;
  inline ::google::protobuf::uint64 party_id() const;
  inline void set_party_id(::google::protobuf::uint64 value);
  
  // optional bool accept = 2;
  inline bool has_accept() const;
  inline void clear_accept();
  static const int kAcceptFieldNumber = 2;
  inline bool accept() const;
  inline void set_accept(bool value);
  
  // @@protoc_insertion_point(class_scope:CMsgPartyInviteResponse)
 private:
  inline void set_has_party_id();
  inline void clear_has_party_id();
  inline void set_has_accept();
  inline void clear_has_accept();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 party_id_;
  bool accept_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_base_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_base_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_base_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgPartyInviteResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgKickFromParty : public ::google::protobuf::Message {
 public:
  CMsgKickFromParty();
  virtual ~CMsgKickFromParty();
  
  CMsgKickFromParty(const CMsgKickFromParty& from);
  
  inline CMsgKickFromParty& operator=(const CMsgKickFromParty& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgKickFromParty& default_instance();
  
  void Swap(CMsgKickFromParty* other);
  
  // implements Message ----------------------------------------------
  
  CMsgKickFromParty* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgKickFromParty& from);
  void MergeFrom(const CMsgKickFromParty& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional fixed64 steam_id = 1;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:CMsgKickFromParty)
 private:
  inline void set_has_steam_id();
  inline void clear_has_steam_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 steam_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_base_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_base_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_base_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgKickFromParty* default_instance_;
};
// -------------------------------------------------------------------

class CMsgLeaveParty : public ::google::protobuf::Message {
 public:
  CMsgLeaveParty();
  virtual ~CMsgLeaveParty();
  
  CMsgLeaveParty(const CMsgLeaveParty& from);
  
  inline CMsgLeaveParty& operator=(const CMsgLeaveParty& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgLeaveParty& default_instance();
  
  void Swap(CMsgLeaveParty* other);
  
  // implements Message ----------------------------------------------
  
  CMsgLeaveParty* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgLeaveParty& from);
  void MergeFrom(const CMsgLeaveParty& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CMsgLeaveParty)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_base_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_base_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_base_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgLeaveParty* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGameServerInfo : public ::google::protobuf::Message {
 public:
  CMsgGameServerInfo();
  virtual ~CMsgGameServerInfo();
  
  CMsgGameServerInfo(const CMsgGameServerInfo& from);
  
  inline CMsgGameServerInfo& operator=(const CMsgGameServerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGameServerInfo& default_instance();
  
  void Swap(CMsgGameServerInfo* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGameServerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGameServerInfo& from);
  void MergeFrom(const CMsgGameServerInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CMsgGameServerInfo_ServerType ServerType;
  static const ServerType UNSPECIFIED = CMsgGameServerInfo_ServerType_UNSPECIFIED;
  static const ServerType GAME = CMsgGameServerInfo_ServerType_GAME;
  static const ServerType PROXY = CMsgGameServerInfo_ServerType_PROXY;
  static const ServerType CONTROLLER = CMsgGameServerInfo_ServerType_CONTROLLER;
  static inline bool ServerType_IsValid(int value) {
    return CMsgGameServerInfo_ServerType_IsValid(value);
  }
  static const ServerType ServerType_MIN =
    CMsgGameServerInfo_ServerType_ServerType_MIN;
  static const ServerType ServerType_MAX =
    CMsgGameServerInfo_ServerType_ServerType_MAX;
  static const int ServerType_ARRAYSIZE =
    CMsgGameServerInfo_ServerType_ServerType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ServerType_descriptor() {
    return CMsgGameServerInfo_ServerType_descriptor();
  }
  static inline const ::std::string& ServerType_Name(ServerType value) {
    return CMsgGameServerInfo_ServerType_Name(value);
  }
  static inline bool ServerType_Parse(const ::std::string& name,
      ServerType* value) {
    return CMsgGameServerInfo_ServerType_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // optional fixed32 server_public_ip_addr = 1;
  inline bool has_server_public_ip_addr() const;
  inline void clear_server_public_ip_addr();
  static const int kServerPublicIpAddrFieldNumber = 1;
  inline ::google::protobuf::uint32 server_public_ip_addr() const;
  inline void set_server_public_ip_addr(::google::protobuf::uint32 value);
  
  // optional fixed32 server_private_ip_addr = 2;
  inline bool has_server_private_ip_addr() const;
  inline void clear_server_private_ip_addr();
  static const int kServerPrivateIpAddrFieldNumber = 2;
  inline ::google::protobuf::uint32 server_private_ip_addr() const;
  inline void set_server_private_ip_addr(::google::protobuf::uint32 value);
  
  // optional uint32 server_port = 3;
  inline bool has_server_port() const;
  inline void clear_server_port();
  static const int kServerPortFieldNumber = 3;
  inline ::google::protobuf::uint32 server_port() const;
  inline void set_server_port(::google::protobuf::uint32 value);
  
  // optional uint32 server_tv_port = 4;
  inline bool has_server_tv_port() const;
  inline void clear_server_tv_port();
  static const int kServerTvPortFieldNumber = 4;
  inline ::google::protobuf::uint32 server_tv_port() const;
  inline void set_server_tv_port(::google::protobuf::uint32 value);
  
  // optional string server_key = 5;
  inline bool has_server_key() const;
  inline void clear_server_key();
  static const int kServerKeyFieldNumber = 5;
  inline const ::std::string& server_key() const;
  inline void set_server_key(const ::std::string& value);
  inline void set_server_key(const char* value);
  inline void set_server_key(const char* value, size_t size);
  inline ::std::string* mutable_server_key();
  inline ::std::string* release_server_key();
  
  // optional bool server_hibernation = 6;
  inline bool has_server_hibernation() const;
  inline void clear_server_hibernation();
  static const int kServerHibernationFieldNumber = 6;
  inline bool server_hibernation() const;
  inline void set_server_hibernation(bool value);
  
  // optional .CMsgGameServerInfo.ServerType server_type = 7 [default = UNSPECIFIED];
  inline bool has_server_type() const;
  inline void clear_server_type();
  static const int kServerTypeFieldNumber = 7;
  inline ::CMsgGameServerInfo_ServerType server_type() const;
  inline void set_server_type(::CMsgGameServerInfo_ServerType value);
  
  // optional uint32 server_region = 8;
  inline bool has_server_region() const;
  inline void clear_server_region();
  static const int kServerRegionFieldNumber = 8;
  inline ::google::protobuf::uint32 server_region() const;
  inline void set_server_region(::google::protobuf::uint32 value);
  
  // optional float server_loadavg = 9;
  inline bool has_server_loadavg() const;
  inline void clear_server_loadavg();
  static const int kServerLoadavgFieldNumber = 9;
  inline float server_loadavg() const;
  inline void set_server_loadavg(float value);
  
  // @@protoc_insertion_point(class_scope:CMsgGameServerInfo)
 private:
  inline void set_has_server_public_ip_addr();
  inline void clear_has_server_public_ip_addr();
  inline void set_has_server_private_ip_addr();
  inline void clear_has_server_private_ip_addr();
  inline void set_has_server_port();
  inline void clear_has_server_port();
  inline void set_has_server_tv_port();
  inline void clear_has_server_tv_port();
  inline void set_has_server_key();
  inline void clear_has_server_key();
  inline void set_has_server_hibernation();
  inline void clear_has_server_hibernation();
  inline void set_has_server_type();
  inline void clear_has_server_type();
  inline void set_has_server_region();
  inline void clear_has_server_region();
  inline void set_has_server_loadavg();
  inline void clear_has_server_loadavg();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 server_public_ip_addr_;
  ::google::protobuf::uint32 server_private_ip_addr_;
  ::google::protobuf::uint32 server_port_;
  ::google::protobuf::uint32 server_tv_port_;
  ::std::string* server_key_;
  bool server_hibernation_;
  int server_type_;
  ::google::protobuf::uint32 server_region_;
  float server_loadavg_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  friend void  protobuf_AddDesc_base_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_base_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_base_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgGameServerInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMsgServerAvailable : public ::google::protobuf::Message {
 public:
  CMsgServerAvailable();
  virtual ~CMsgServerAvailable();
  
  CMsgServerAvailable(const CMsgServerAvailable& from);
  
  inline CMsgServerAvailable& operator=(const CMsgServerAvailable& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgServerAvailable& default_instance();
  
  void Swap(CMsgServerAvailable* other);
  
  // implements Message ----------------------------------------------
  
  CMsgServerAvailable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgServerAvailable& from);
  void MergeFrom(const CMsgServerAvailable& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CMsgServerAvailable)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_base_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_base_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_base_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgServerAvailable* default_instance_;
};
// -------------------------------------------------------------------

class CSOEconGameAccountClient : public ::google::protobuf::Message {
 public:
  CSOEconGameAccountClient();
  virtual ~CSOEconGameAccountClient();
  
  CSOEconGameAccountClient(const CSOEconGameAccountClient& from);
  
  inline CSOEconGameAccountClient& operator=(const CSOEconGameAccountClient& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOEconGameAccountClient& default_instance();
  
  void Swap(CSOEconGameAccountClient* other);
  
  // implements Message ----------------------------------------------
  
  CSOEconGameAccountClient* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOEconGameAccountClient& from);
  void MergeFrom(const CSOEconGameAccountClient& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 additional_backpack_slots = 1 [default = 0];
  inline bool has_additional_backpack_slots() const;
  inline void clear_additional_backpack_slots();
  static const int kAdditionalBackpackSlotsFieldNumber = 1;
  inline ::google::protobuf::uint32 additional_backpack_slots() const;
  inline void set_additional_backpack_slots(::google::protobuf::uint32 value);
  
  // optional bool trial_account = 2 [default = false];
  inline bool has_trial_account() const;
  inline void clear_trial_account();
  static const int kTrialAccountFieldNumber = 2;
  inline bool trial_account() const;
  inline void set_trial_account(bool value);
  
  // optional bool eligible_for_online_play = 3 [default = true];
  inline bool has_eligible_for_online_play() const;
  inline void clear_eligible_for_online_play();
  static const int kEligibleForOnlinePlayFieldNumber = 3;
  inline bool eligible_for_online_play() const;
  inline void set_eligible_for_online_play(bool value);
  
  // optional bool need_to_choose_most_helpful_friend = 4;
  inline bool has_need_to_choose_most_helpful_friend() const;
  inline void clear_need_to_choose_most_helpful_friend();
  static const int kNeedToChooseMostHelpfulFriendFieldNumber = 4;
  inline bool need_to_choose_most_helpful_friend() const;
  inline void set_need_to_choose_most_helpful_friend(bool value);
  
  // optional bool in_coaches_list = 5;
  inline bool has_in_coaches_list() const;
  inline void clear_in_coaches_list();
  static const int kInCoachesListFieldNumber = 5;
  inline bool in_coaches_list() const;
  inline void set_in_coaches_list(bool value);
  
  // optional fixed32 trade_ban_expiration = 6;
  inline bool has_trade_ban_expiration() const;
  inline void clear_trade_ban_expiration();
  static const int kTradeBanExpirationFieldNumber = 6;
  inline ::google::protobuf::uint32 trade_ban_expiration() const;
  inline void set_trade_ban_expiration(::google::protobuf::uint32 value);
  
  // optional fixed32 duel_ban_expiration = 7;
  inline bool has_duel_ban_expiration() const;
  inline void clear_duel_ban_expiration();
  static const int kDuelBanExpirationFieldNumber = 7;
  inline ::google::protobuf::uint32 duel_ban_expiration() const;
  inline void set_duel_ban_expiration(::google::protobuf::uint32 value);
  
  // optional uint32 preview_item_def = 8 [default = 0];
  inline bool has_preview_item_def() const;
  inline void clear_preview_item_def();
  static const int kPreviewItemDefFieldNumber = 8;
  inline ::google::protobuf::uint32 preview_item_def() const;
  inline void set_preview_item_def(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSOEconGameAccountClient)
 private:
  inline void set_has_additional_backpack_slots();
  inline void clear_has_additional_backpack_slots();
  inline void set_has_trial_account();
  inline void clear_has_trial_account();
  inline void set_has_eligible_for_online_play();
  inline void clear_has_eligible_for_online_play();
  inline void set_has_need_to_choose_most_helpful_friend();
  inline void clear_has_need_to_choose_most_helpful_friend();
  inline void set_has_in_coaches_list();
  inline void clear_has_in_coaches_list();
  inline void set_has_trade_ban_expiration();
  inline void clear_has_trade_ban_expiration();
  inline void set_has_duel_ban_expiration();
  inline void clear_has_duel_ban_expiration();
  inline void set_has_preview_item_def();
  inline void clear_has_preview_item_def();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 additional_backpack_slots_;
  bool trial_account_;
  bool eligible_for_online_play_;
  bool need_to_choose_most_helpful_friend_;
  bool in_coaches_list_;
  ::google::protobuf::uint32 trade_ban_expiration_;
  ::google::protobuf::uint32 duel_ban_expiration_;
  ::google::protobuf::uint32 preview_item_def_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  friend void  protobuf_AddDesc_base_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_base_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_base_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CSOEconGameAccountClient* default_instance_;
};
// -------------------------------------------------------------------

class CSOItemCriteriaCondition : public ::google::protobuf::Message {
 public:
  CSOItemCriteriaCondition();
  virtual ~CSOItemCriteriaCondition();
  
  CSOItemCriteriaCondition(const CSOItemCriteriaCondition& from);
  
  inline CSOItemCriteriaCondition& operator=(const CSOItemCriteriaCondition& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOItemCriteriaCondition& default_instance();
  
  void Swap(CSOItemCriteriaCondition* other);
  
  // implements Message ----------------------------------------------
  
  CSOItemCriteriaCondition* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOItemCriteriaCondition& from);
  void MergeFrom(const CSOItemCriteriaCondition& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 op = 1;
  inline bool has_op() const;
  inline void clear_op();
  static const int kOpFieldNumber = 1;
  inline ::google::protobuf::int32 op() const;
  inline void set_op(::google::protobuf::int32 value);
  
  // optional string field = 2;
  inline bool has_field() const;
  inline void clear_field();
  static const int kFieldFieldNumber = 2;
  inline const ::std::string& field() const;
  inline void set_field(const ::std::string& value);
  inline void set_field(const char* value);
  inline void set_field(const char* value, size_t size);
  inline ::std::string* mutable_field();
  inline ::std::string* release_field();
  
  // optional bool required = 3;
  inline bool has_required() const;
  inline void clear_required();
  static const int kRequiredFieldNumber = 3;
  inline bool required() const;
  inline void set_required(bool value);
  
  // optional float float_value = 4;
  inline bool has_float_value() const;
  inline void clear_float_value();
  static const int kFloatValueFieldNumber = 4;
  inline float float_value() const;
  inline void set_float_value(float value);
  
  // optional string string_value = 5;
  inline bool has_string_value() const;
  inline void clear_string_value();
  static const int kStringValueFieldNumber = 5;
  inline const ::std::string& string_value() const;
  inline void set_string_value(const ::std::string& value);
  inline void set_string_value(const char* value);
  inline void set_string_value(const char* value, size_t size);
  inline ::std::string* mutable_string_value();
  inline ::std::string* release_string_value();
  
  // @@protoc_insertion_point(class_scope:CSOItemCriteriaCondition)
 private:
  inline void set_has_op();
  inline void clear_has_op();
  inline void set_has_field();
  inline void clear_has_field();
  inline void set_has_required();
  inline void clear_has_required();
  inline void set_has_float_value();
  inline void clear_has_float_value();
  inline void set_has_string_value();
  inline void clear_has_string_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* field_;
  ::google::protobuf::int32 op_;
  bool required_;
  ::std::string* string_value_;
  float float_value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_base_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_base_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_base_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CSOItemCriteriaCondition* default_instance_;
};
// -------------------------------------------------------------------

class CSOItemCriteria : public ::google::protobuf::Message {
 public:
  CSOItemCriteria();
  virtual ~CSOItemCriteria();
  
  CSOItemCriteria(const CSOItemCriteria& from);
  
  inline CSOItemCriteria& operator=(const CSOItemCriteria& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOItemCriteria& default_instance();
  
  void Swap(CSOItemCriteria* other);
  
  // implements Message ----------------------------------------------
  
  CSOItemCriteria* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOItemCriteria& from);
  void MergeFrom(const CSOItemCriteria& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 item_level = 1;
  inline bool has_item_level() const;
  inline void clear_item_level();
  static const int kItemLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 item_level() const;
  inline void set_item_level(::google::protobuf::uint32 value);
  
  // optional int32 item_quality = 2;
  inline bool has_item_quality() const;
  inline void clear_item_quality();
  static const int kItemQualityFieldNumber = 2;
  inline ::google::protobuf::int32 item_quality() const;
  inline void set_item_quality(::google::protobuf::int32 value);
  
  // optional bool item_level_set = 3;
  inline bool has_item_level_set() const;
  inline void clear_item_level_set();
  static const int kItemLevelSetFieldNumber = 3;
  inline bool item_level_set() const;
  inline void set_item_level_set(bool value);
  
  // optional bool item_quality_set = 4;
  inline bool has_item_quality_set() const;
  inline void clear_item_quality_set();
  static const int kItemQualitySetFieldNumber = 4;
  inline bool item_quality_set() const;
  inline void set_item_quality_set(bool value);
  
  // optional uint32 initial_inventory = 5;
  inline bool has_initial_inventory() const;
  inline void clear_initial_inventory();
  static const int kInitialInventoryFieldNumber = 5;
  inline ::google::protobuf::uint32 initial_inventory() const;
  inline void set_initial_inventory(::google::protobuf::uint32 value);
  
  // optional uint32 initial_quantity = 6;
  inline bool has_initial_quantity() const;
  inline void clear_initial_quantity();
  static const int kInitialQuantityFieldNumber = 6;
  inline ::google::protobuf::uint32 initial_quantity() const;
  inline void set_initial_quantity(::google::protobuf::uint32 value);
  
  // optional bool forced_quality_match = 7;
  inline bool has_forced_quality_match() const;
  inline void clear_forced_quality_match();
  static const int kForcedQualityMatchFieldNumber = 7;
  inline bool forced_quality_match() const;
  inline void set_forced_quality_match(bool value);
  
  // optional bool ignore_enabled_flag = 8;
  inline bool has_ignore_enabled_flag() const;
  inline void clear_ignore_enabled_flag();
  static const int kIgnoreEnabledFlagFieldNumber = 8;
  inline bool ignore_enabled_flag() const;
  inline void set_ignore_enabled_flag(bool value);
  
  // repeated .CSOItemCriteriaCondition conditions = 9;
  inline int conditions_size() const;
  inline void clear_conditions();
  static const int kConditionsFieldNumber = 9;
  inline const ::CSOItemCriteriaCondition& conditions(int index) const;
  inline ::CSOItemCriteriaCondition* mutable_conditions(int index);
  inline ::CSOItemCriteriaCondition* add_conditions();
  inline const ::google::protobuf::RepeatedPtrField< ::CSOItemCriteriaCondition >&
      conditions() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSOItemCriteriaCondition >*
      mutable_conditions();
  
  // @@protoc_insertion_point(class_scope:CSOItemCriteria)
 private:
  inline void set_has_item_level();
  inline void clear_has_item_level();
  inline void set_has_item_quality();
  inline void clear_has_item_quality();
  inline void set_has_item_level_set();
  inline void clear_has_item_level_set();
  inline void set_has_item_quality_set();
  inline void clear_has_item_quality_set();
  inline void set_has_initial_inventory();
  inline void clear_has_initial_inventory();
  inline void set_has_initial_quantity();
  inline void clear_has_initial_quantity();
  inline void set_has_forced_quality_match();
  inline void clear_has_forced_quality_match();
  inline void set_has_ignore_enabled_flag();
  inline void clear_has_ignore_enabled_flag();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 item_level_;
  ::google::protobuf::int32 item_quality_;
  ::google::protobuf::uint32 initial_inventory_;
  bool item_level_set_;
  bool item_quality_set_;
  bool forced_quality_match_;
  bool ignore_enabled_flag_;
  ::google::protobuf::RepeatedPtrField< ::CSOItemCriteriaCondition > conditions_;
  ::google::protobuf::uint32 initial_quantity_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  friend void  protobuf_AddDesc_base_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_base_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_base_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CSOItemCriteria* default_instance_;
};
// -------------------------------------------------------------------

class CSOItemRecipe : public ::google::protobuf::Message {
 public:
  CSOItemRecipe();
  virtual ~CSOItemRecipe();
  
  CSOItemRecipe(const CSOItemRecipe& from);
  
  inline CSOItemRecipe& operator=(const CSOItemRecipe& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOItemRecipe& default_instance();
  
  void Swap(CSOItemRecipe* other);
  
  // implements Message ----------------------------------------------
  
  CSOItemRecipe* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOItemRecipe& from);
  void MergeFrom(const CSOItemRecipe& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 def_index = 1;
  inline bool has_def_index() const;
  inline void clear_def_index();
  static const int kDefIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 def_index() const;
  inline void set_def_index(::google::protobuf::uint32 value);
  
  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional string n_a = 3;
  inline bool has_n_a() const;
  inline void clear_n_a();
  static const int kNAFieldNumber = 3;
  inline const ::std::string& n_a() const;
  inline void set_n_a(const ::std::string& value);
  inline void set_n_a(const char* value);
  inline void set_n_a(const char* value, size_t size);
  inline ::std::string* mutable_n_a();
  inline ::std::string* release_n_a();
  
  // optional string desc_inputs = 4;
  inline bool has_desc_inputs() const;
  inline void clear_desc_inputs();
  static const int kDescInputsFieldNumber = 4;
  inline const ::std::string& desc_inputs() const;
  inline void set_desc_inputs(const ::std::string& value);
  inline void set_desc_inputs(const char* value);
  inline void set_desc_inputs(const char* value, size_t size);
  inline ::std::string* mutable_desc_inputs();
  inline ::std::string* release_desc_inputs();
  
  // optional string desc_outputs = 5;
  inline bool has_desc_outputs() const;
  inline void clear_desc_outputs();
  static const int kDescOutputsFieldNumber = 5;
  inline const ::std::string& desc_outputs() const;
  inline void set_desc_outputs(const ::std::string& value);
  inline void set_desc_outputs(const char* value);
  inline void set_desc_outputs(const char* value, size_t size);
  inline ::std::string* mutable_desc_outputs();
  inline ::std::string* release_desc_outputs();
  
  // optional string di_a = 6;
  inline bool has_di_a() const;
  inline void clear_di_a();
  static const int kDiAFieldNumber = 6;
  inline const ::std::string& di_a() const;
  inline void set_di_a(const ::std::string& value);
  inline void set_di_a(const char* value);
  inline void set_di_a(const char* value, size_t size);
  inline ::std::string* mutable_di_a();
  inline ::std::string* release_di_a();
  
  // optional string di_b = 7;
  inline bool has_di_b() const;
  inline void clear_di_b();
  static const int kDiBFieldNumber = 7;
  inline const ::std::string& di_b() const;
  inline void set_di_b(const ::std::string& value);
  inline void set_di_b(const char* value);
  inline void set_di_b(const char* value, size_t size);
  inline ::std::string* mutable_di_b();
  inline ::std::string* release_di_b();
  
  // optional string di_c = 8;
  inline bool has_di_c() const;
  inline void clear_di_c();
  static const int kDiCFieldNumber = 8;
  inline const ::std::string& di_c() const;
  inline void set_di_c(const ::std::string& value);
  inline void set_di_c(const char* value);
  inline void set_di_c(const char* value, size_t size);
  inline ::std::string* mutable_di_c();
  inline ::std::string* release_di_c();
  
  // optional string do_a = 9;
  inline bool has_do_a() const;
  inline void clear_do_a();
  static const int kDoAFieldNumber = 9;
  inline const ::std::string& do_a() const;
  inline void set_do_a(const ::std::string& value);
  inline void set_do_a(const char* value);
  inline void set_do_a(const char* value, size_t size);
  inline ::std::string* mutable_do_a();
  inline ::std::string* release_do_a();
  
  // optional string do_b = 10;
  inline bool has_do_b() const;
  inline void clear_do_b();
  static const int kDoBFieldNumber = 10;
  inline const ::std::string& do_b() const;
  inline void set_do_b(const ::std::string& value);
  inline void set_do_b(const char* value);
  inline void set_do_b(const char* value, size_t size);
  inline ::std::string* mutable_do_b();
  inline ::std::string* release_do_b();
  
  // optional string do_c = 11;
  inline bool has_do_c() const;
  inline void clear_do_c();
  static const int kDoCFieldNumber = 11;
  inline const ::std::string& do_c() const;
  inline void set_do_c(const ::std::string& value);
  inline void set_do_c(const char* value);
  inline void set_do_c(const char* value, size_t size);
  inline ::std::string* mutable_do_c();
  inline ::std::string* release_do_c();
  
  // optional bool requires_all_same_class = 12;
  inline bool has_requires_all_same_class() const;
  inline void clear_requires_all_same_class();
  static const int kRequiresAllSameClassFieldNumber = 12;
  inline bool requires_all_same_class() const;
  inline void set_requires_all_same_class(bool value);
  
  // optional bool requires_all_same_slot = 13;
  inline bool has_requires_all_same_slot() const;
  inline void clear_requires_all_same_slot();
  static const int kRequiresAllSameSlotFieldNumber = 13;
  inline bool requires_all_same_slot() const;
  inline void set_requires_all_same_slot(bool value);
  
  // optional int32 class_usage_for_output = 14;
  inline bool has_class_usage_for_output() const;
  inline void clear_class_usage_for_output();
  static const int kClassUsageForOutputFieldNumber = 14;
  inline ::google::protobuf::int32 class_usage_for_output() const;
  inline void set_class_usage_for_output(::google::protobuf::int32 value);
  
  // optional int32 slot_usage_for_output = 15;
  inline bool has_slot_usage_for_output() const;
  inline void clear_slot_usage_for_output();
  static const int kSlotUsageForOutputFieldNumber = 15;
  inline ::google::protobuf::int32 slot_usage_for_output() const;
  inline void set_slot_usage_for_output(::google::protobuf::int32 value);
  
  // optional int32 set_for_output = 16;
  inline bool has_set_for_output() const;
  inline void clear_set_for_output();
  static const int kSetForOutputFieldNumber = 16;
  inline ::google::protobuf::int32 set_for_output() const;
  inline void set_set_for_output(::google::protobuf::int32 value);
  
  // repeated .CSOItemCriteria input_items_criteria = 20;
  inline int input_items_criteria_size() const;
  inline void clear_input_items_criteria();
  static const int kInputItemsCriteriaFieldNumber = 20;
  inline const ::CSOItemCriteria& input_items_criteria(int index) const;
  inline ::CSOItemCriteria* mutable_input_items_criteria(int index);
  inline ::CSOItemCriteria* add_input_items_criteria();
  inline const ::google::protobuf::RepeatedPtrField< ::CSOItemCriteria >&
      input_items_criteria() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSOItemCriteria >*
      mutable_input_items_criteria();
  
  // repeated .CSOItemCriteria output_items_criteria = 21;
  inline int output_items_criteria_size() const;
  inline void clear_output_items_criteria();
  static const int kOutputItemsCriteriaFieldNumber = 21;
  inline const ::CSOItemCriteria& output_items_criteria(int index) const;
  inline ::CSOItemCriteria* mutable_output_items_criteria(int index);
  inline ::CSOItemCriteria* add_output_items_criteria();
  inline const ::google::protobuf::RepeatedPtrField< ::CSOItemCriteria >&
      output_items_criteria() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSOItemCriteria >*
      mutable_output_items_criteria();
  
  // repeated uint32 input_item_dupe_counts = 22;
  inline int input_item_dupe_counts_size() const;
  inline void clear_input_item_dupe_counts();
  static const int kInputItemDupeCountsFieldNumber = 22;
  inline ::google::protobuf::uint32 input_item_dupe_counts(int index) const;
  inline void set_input_item_dupe_counts(int index, ::google::protobuf::uint32 value);
  inline void add_input_item_dupe_counts(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      input_item_dupe_counts() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_input_item_dupe_counts();
  
  // @@protoc_insertion_point(class_scope:CSOItemRecipe)
 private:
  inline void set_has_def_index();
  inline void clear_has_def_index();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_n_a();
  inline void clear_has_n_a();
  inline void set_has_desc_inputs();
  inline void clear_has_desc_inputs();
  inline void set_has_desc_outputs();
  inline void clear_has_desc_outputs();
  inline void set_has_di_a();
  inline void clear_has_di_a();
  inline void set_has_di_b();
  inline void clear_has_di_b();
  inline void set_has_di_c();
  inline void clear_has_di_c();
  inline void set_has_do_a();
  inline void clear_has_do_a();
  inline void set_has_do_b();
  inline void clear_has_do_b();
  inline void set_has_do_c();
  inline void clear_has_do_c();
  inline void set_has_requires_all_same_class();
  inline void clear_has_requires_all_same_class();
  inline void set_has_requires_all_same_slot();
  inline void clear_has_requires_all_same_slot();
  inline void set_has_class_usage_for_output();
  inline void clear_has_class_usage_for_output();
  inline void set_has_slot_usage_for_output();
  inline void clear_has_slot_usage_for_output();
  inline void set_has_set_for_output();
  inline void clear_has_set_for_output();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  ::std::string* n_a_;
  ::std::string* desc_inputs_;
  ::std::string* desc_outputs_;
  ::std::string* di_a_;
  ::std::string* di_b_;
  ::std::string* di_c_;
  ::google::protobuf::uint32 def_index_;
  bool requires_all_same_class_;
  bool requires_all_same_slot_;
  ::std::string* do_a_;
  ::std::string* do_b_;
  ::std::string* do_c_;
  ::google::protobuf::int32 class_usage_for_output_;
  ::google::protobuf::int32 slot_usage_for_output_;
  ::google::protobuf::RepeatedPtrField< ::CSOItemCriteria > input_items_criteria_;
  ::google::protobuf::RepeatedPtrField< ::CSOItemCriteria > output_items_criteria_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > input_item_dupe_counts_;
  ::google::protobuf::int32 set_for_output_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(19 + 31) / 32];
  
  friend void  protobuf_AddDesc_base_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_base_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_base_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CSOItemRecipe* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDevNewItemRequest : public ::google::protobuf::Message {
 public:
  CMsgDevNewItemRequest();
  virtual ~CMsgDevNewItemRequest();
  
  CMsgDevNewItemRequest(const CMsgDevNewItemRequest& from);
  
  inline CMsgDevNewItemRequest& operator=(const CMsgDevNewItemRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDevNewItemRequest& default_instance();
  
  void Swap(CMsgDevNewItemRequest* other);
  
  // implements Message ----------------------------------------------
  
  CMsgDevNewItemRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDevNewItemRequest& from);
  void MergeFrom(const CMsgDevNewItemRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional fixed64 receiver = 1;
  inline bool has_receiver() const;
  inline void clear_receiver();
  static const int kReceiverFieldNumber = 1;
  inline ::google::protobuf::uint64 receiver() const;
  inline void set_receiver(::google::protobuf::uint64 value);
  
  // optional .CSOItemCriteria criteria = 2;
  inline bool has_criteria() const;
  inline void clear_criteria();
  static const int kCriteriaFieldNumber = 2;
  inline const ::CSOItemCriteria& criteria() const;
  inline ::CSOItemCriteria* mutable_criteria();
  inline ::CSOItemCriteria* release_criteria();
  
  // @@protoc_insertion_point(class_scope:CMsgDevNewItemRequest)
 private:
  inline void set_has_receiver();
  inline void clear_has_receiver();
  inline void set_has_criteria();
  inline void clear_has_criteria();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 receiver_;
  ::CSOItemCriteria* criteria_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_base_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_base_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_base_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgDevNewItemRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgIncrementKillCountAttribute : public ::google::protobuf::Message {
 public:
  CMsgIncrementKillCountAttribute();
  virtual ~CMsgIncrementKillCountAttribute();
  
  CMsgIncrementKillCountAttribute(const CMsgIncrementKillCountAttribute& from);
  
  inline CMsgIncrementKillCountAttribute& operator=(const CMsgIncrementKillCountAttribute& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgIncrementKillCountAttribute& default_instance();
  
  void Swap(CMsgIncrementKillCountAttribute* other);
  
  // implements Message ----------------------------------------------
  
  CMsgIncrementKillCountAttribute* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgIncrementKillCountAttribute& from);
  void MergeFrom(const CMsgIncrementKillCountAttribute& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 killer_steam_id = 1;
  inline bool has_killer_steam_id() const;
  inline void clear_killer_steam_id();
  static const int kKillerSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 killer_steam_id() const;
  inline void set_killer_steam_id(::google::protobuf::uint64 value);
  
  // optional uint64 victim_steam_id = 2;
  inline bool has_victim_steam_id() const;
  inline void clear_victim_steam_id();
  static const int kVictimSteamIdFieldNumber = 2;
  inline ::google::protobuf::uint64 victim_steam_id() const;
  inline void set_victim_steam_id(::google::protobuf::uint64 value);
  
  // optional uint64 item_id = 3;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 3;
  inline ::google::protobuf::uint64 item_id() const;
  inline void set_item_id(::google::protobuf::uint64 value);
  
  // optional uint32 event_type = 4;
  inline bool has_event_type() const;
  inline void clear_event_type();
  static const int kEventTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 event_type() const;
  inline void set_event_type(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgIncrementKillCountAttribute)
 private:
  inline void set_has_killer_steam_id();
  inline void clear_has_killer_steam_id();
  inline void set_has_victim_steam_id();
  inline void clear_has_victim_steam_id();
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_event_type();
  inline void clear_has_event_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 killer_steam_id_;
  ::google::protobuf::uint64 victim_steam_id_;
  ::google::protobuf::uint64 item_id_;
  ::google::protobuf::uint32 event_type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_base_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_base_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_base_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgIncrementKillCountAttribute* default_instance_;
};
// -------------------------------------------------------------------

class CSOEconItemAttribute : public ::google::protobuf::Message {
 public:
  CSOEconItemAttribute();
  virtual ~CSOEconItemAttribute();
  
  CSOEconItemAttribute(const CSOEconItemAttribute& from);
  
  inline CSOEconItemAttribute& operator=(const CSOEconItemAttribute& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOEconItemAttribute& default_instance();
  
  void Swap(CSOEconItemAttribute* other);
  
  // implements Message ----------------------------------------------
  
  CSOEconItemAttribute* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOEconItemAttribute& from);
  void MergeFrom(const CSOEconItemAttribute& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 def_index = 1;
  inline bool has_def_index() const;
  inline void clear_def_index();
  static const int kDefIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 def_index() const;
  inline void set_def_index(::google::protobuf::uint32 value);
  
  // optional uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSOEconItemAttribute)
 private:
  inline void set_has_def_index();
  inline void clear_has_def_index();
  inline void set_has_value();
  inline void clear_has_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 def_index_;
  ::google::protobuf::uint32 value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_base_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_base_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_base_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CSOEconItemAttribute* default_instance_;
};
// -------------------------------------------------------------------

class CSOEconItemEquipped : public ::google::protobuf::Message {
 public:
  CSOEconItemEquipped();
  virtual ~CSOEconItemEquipped();
  
  CSOEconItemEquipped(const CSOEconItemEquipped& from);
  
  inline CSOEconItemEquipped& operator=(const CSOEconItemEquipped& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOEconItemEquipped& default_instance();
  
  void Swap(CSOEconItemEquipped* other);
  
  // implements Message ----------------------------------------------
  
  CSOEconItemEquipped* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOEconItemEquipped& from);
  void MergeFrom(const CSOEconItemEquipped& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 new_class = 1;
  inline bool has_new_class() const;
  inline void clear_new_class();
  static const int kNewClassFieldNumber = 1;
  inline ::google::protobuf::uint32 new_class() const;
  inline void set_new_class(::google::protobuf::uint32 value);
  
  // optional uint32 new_slot = 2;
  inline bool has_new_slot() const;
  inline void clear_new_slot();
  static const int kNewSlotFieldNumber = 2;
  inline ::google::protobuf::uint32 new_slot() const;
  inline void set_new_slot(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSOEconItemEquipped)
 private:
  inline void set_has_new_class();
  inline void clear_has_new_class();
  inline void set_has_new_slot();
  inline void clear_has_new_slot();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 new_class_;
  ::google::protobuf::uint32 new_slot_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_base_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_base_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_base_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CSOEconItemEquipped* default_instance_;
};
// -------------------------------------------------------------------

class CSOEconItem : public ::google::protobuf::Message {
 public:
  CSOEconItem();
  virtual ~CSOEconItem();
  
  CSOEconItem(const CSOEconItem& from);
  
  inline CSOEconItem& operator=(const CSOEconItem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOEconItem& default_instance();
  
  void Swap(CSOEconItem* other);
  
  // implements Message ----------------------------------------------
  
  CSOEconItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOEconItem& from);
  void MergeFrom(const CSOEconItem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);
  
  // optional uint32 account_id = 2;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);
  
  // optional uint32 inventory = 3;
  inline bool has_inventory() const;
  inline void clear_inventory();
  static const int kInventoryFieldNumber = 3;
  inline ::google::protobuf::uint32 inventory() const;
  inline void set_inventory(::google::protobuf::uint32 value);
  
  // optional uint32 def_index = 4;
  inline bool has_def_index() const;
  inline void clear_def_index();
  static const int kDefIndexFieldNumber = 4;
  inline ::google::protobuf::uint32 def_index() const;
  inline void set_def_index(::google::protobuf::uint32 value);
  
  // optional uint32 quantity = 5;
  inline bool has_quantity() const;
  inline void clear_quantity();
  static const int kQuantityFieldNumber = 5;
  inline ::google::protobuf::uint32 quantity() const;
  inline void set_quantity(::google::protobuf::uint32 value);
  
  // optional uint32 level = 6;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 quality = 7;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 7;
  inline ::google::protobuf::uint32 quality() const;
  inline void set_quality(::google::protobuf::uint32 value);
  
  // optional uint32 flags = 8 [default = 0];
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 8;
  inline ::google::protobuf::uint32 flags() const;
  inline void set_flags(::google::protobuf::uint32 value);
  
  // optional uint32 origin = 9;
  inline bool has_origin() const;
  inline void clear_origin();
  static const int kOriginFieldNumber = 9;
  inline ::google::protobuf::uint32 origin() const;
  inline void set_origin(::google::protobuf::uint32 value);
  
  // optional string custom_name = 10;
  inline bool has_custom_name() const;
  inline void clear_custom_name();
  static const int kCustomNameFieldNumber = 10;
  inline const ::std::string& custom_name() const;
  inline void set_custom_name(const ::std::string& value);
  inline void set_custom_name(const char* value);
  inline void set_custom_name(const char* value, size_t size);
  inline ::std::string* mutable_custom_name();
  inline ::std::string* release_custom_name();
  
  // optional string custom_desc = 11;
  inline bool has_custom_desc() const;
  inline void clear_custom_desc();
  static const int kCustomDescFieldNumber = 11;
  inline const ::std::string& custom_desc() const;
  inline void set_custom_desc(const ::std::string& value);
  inline void set_custom_desc(const char* value);
  inline void set_custom_desc(const char* value, size_t size);
  inline ::std::string* mutable_custom_desc();
  inline ::std::string* release_custom_desc();
  
  // repeated .CSOEconItemAttribute attribute = 12;
  inline int attribute_size() const;
  inline void clear_attribute();
  static const int kAttributeFieldNumber = 12;
  inline const ::CSOEconItemAttribute& attribute(int index) const;
  inline ::CSOEconItemAttribute* mutable_attribute(int index);
  inline ::CSOEconItemAttribute* add_attribute();
  inline const ::google::protobuf::RepeatedPtrField< ::CSOEconItemAttribute >&
      attribute() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSOEconItemAttribute >*
      mutable_attribute();
  
  // optional .CSOEconItem interior_item = 13;
  inline bool has_interior_item() const;
  inline void clear_interior_item();
  static const int kInteriorItemFieldNumber = 13;
  inline const ::CSOEconItem& interior_item() const;
  inline ::CSOEconItem* mutable_interior_item();
  inline ::CSOEconItem* release_interior_item();
  
  // optional bool in_use = 14 [default = false];
  inline bool has_in_use() const;
  inline void clear_in_use();
  static const int kInUseFieldNumber = 14;
  inline bool in_use() const;
  inline void set_in_use(bool value);
  
  // optional uint32 style = 15 [default = 0];
  inline bool has_style() const;
  inline void clear_style();
  static const int kStyleFieldNumber = 15;
  inline ::google::protobuf::uint32 style() const;
  inline void set_style(::google::protobuf::uint32 value);
  
  // optional uint64 original_id = 16 [default = 0];
  inline bool has_original_id() const;
  inline void clear_original_id();
  static const int kOriginalIdFieldNumber = 16;
  inline ::google::protobuf::uint64 original_id() const;
  inline void set_original_id(::google::protobuf::uint64 value);
  
  // optional bool contains_equipped_state = 17;
  inline bool has_contains_equipped_state() const;
  inline void clear_contains_equipped_state();
  static const int kContainsEquippedStateFieldNumber = 17;
  inline bool contains_equipped_state() const;
  inline void set_contains_equipped_state(bool value);
  
  // repeated .CSOEconItemEquipped equipped_state = 18;
  inline int equipped_state_size() const;
  inline void clear_equipped_state();
  static const int kEquippedStateFieldNumber = 18;
  inline const ::CSOEconItemEquipped& equipped_state(int index) const;
  inline ::CSOEconItemEquipped* mutable_equipped_state(int index);
  inline ::CSOEconItemEquipped* add_equipped_state();
  inline const ::google::protobuf::RepeatedPtrField< ::CSOEconItemEquipped >&
      equipped_state() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSOEconItemEquipped >*
      mutable_equipped_state();
  
  // @@protoc_insertion_point(class_scope:CSOEconItem)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_inventory();
  inline void clear_has_inventory();
  inline void set_has_def_index();
  inline void clear_has_def_index();
  inline void set_has_quantity();
  inline void clear_has_quantity();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_flags();
  inline void clear_has_flags();
  inline void set_has_origin();
  inline void clear_has_origin();
  inline void set_has_custom_name();
  inline void clear_has_custom_name();
  inline void set_has_custom_desc();
  inline void clear_has_custom_desc();
  inline void set_has_interior_item();
  inline void clear_has_interior_item();
  inline void set_has_in_use();
  inline void clear_has_in_use();
  inline void set_has_style();
  inline void clear_has_style();
  inline void set_has_original_id();
  inline void clear_has_original_id();
  inline void set_has_contains_equipped_state();
  inline void clear_has_contains_equipped_state();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 inventory_;
  ::google::protobuf::uint32 def_index_;
  ::google::protobuf::uint32 quantity_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 quality_;
  ::google::protobuf::uint32 flags_;
  ::google::protobuf::uint32 origin_;
  ::std::string* custom_name_;
  ::std::string* custom_desc_;
  ::google::protobuf::RepeatedPtrField< ::CSOEconItemAttribute > attribute_;
  ::CSOEconItem* interior_item_;
  ::google::protobuf::uint32 style_;
  bool in_use_;
  bool contains_equipped_state_;
  ::google::protobuf::uint64 original_id_;
  ::google::protobuf::RepeatedPtrField< ::CSOEconItemEquipped > equipped_state_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(18 + 31) / 32];
  
  friend void  protobuf_AddDesc_base_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_base_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_base_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CSOEconItem* default_instance_;
};
// -------------------------------------------------------------------

class CMsgAdjustItemEquippedState : public ::google::protobuf::Message {
 public:
  CMsgAdjustItemEquippedState();
  virtual ~CMsgAdjustItemEquippedState();
  
  CMsgAdjustItemEquippedState(const CMsgAdjustItemEquippedState& from);
  
  inline CMsgAdjustItemEquippedState& operator=(const CMsgAdjustItemEquippedState& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgAdjustItemEquippedState& default_instance();
  
  void Swap(CMsgAdjustItemEquippedState* other);
  
  // implements Message ----------------------------------------------
  
  CMsgAdjustItemEquippedState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgAdjustItemEquippedState& from);
  void MergeFrom(const CMsgAdjustItemEquippedState& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint64 item_id() const;
  inline void set_item_id(::google::protobuf::uint64 value);
  
  // optional uint32 new_class = 2;
  inline bool has_new_class() const;
  inline void clear_new_class();
  static const int kNewClassFieldNumber = 2;
  inline ::google::protobuf::uint32 new_class() const;
  inline void set_new_class(::google::protobuf::uint32 value);
  
  // optional uint32 new_slot = 3;
  inline bool has_new_slot() const;
  inline void clear_new_slot();
  static const int kNewSlotFieldNumber = 3;
  inline ::google::protobuf::uint32 new_slot() const;
  inline void set_new_slot(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgAdjustItemEquippedState)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_new_class();
  inline void clear_has_new_class();
  inline void set_has_new_slot();
  inline void clear_has_new_slot();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 item_id_;
  ::google::protobuf::uint32 new_class_;
  ::google::protobuf::uint32 new_slot_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_base_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_base_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_base_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgAdjustItemEquippedState* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSortItems : public ::google::protobuf::Message {
 public:
  CMsgSortItems();
  virtual ~CMsgSortItems();
  
  CMsgSortItems(const CMsgSortItems& from);
  
  inline CMsgSortItems& operator=(const CMsgSortItems& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSortItems& default_instance();
  
  void Swap(CMsgSortItems* other);
  
  // implements Message ----------------------------------------------
  
  CMsgSortItems* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSortItems& from);
  void MergeFrom(const CMsgSortItems& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 sort_type = 1;
  inline bool has_sort_type() const;
  inline void clear_sort_type();
  static const int kSortTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 sort_type() const;
  inline void set_sort_type(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgSortItems)
 private:
  inline void set_has_sort_type();
  inline void clear_has_sort_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 sort_type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_base_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_base_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_base_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgSortItems* default_instance_;
};
// -------------------------------------------------------------------

class CSOEconClaimCode : public ::google::protobuf::Message {
 public:
  CSOEconClaimCode();
  virtual ~CSOEconClaimCode();
  
  CSOEconClaimCode(const CSOEconClaimCode& from);
  
  inline CSOEconClaimCode& operator=(const CSOEconClaimCode& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOEconClaimCode& default_instance();
  
  void Swap(CSOEconClaimCode* other);
  
  // implements Message ----------------------------------------------
  
  CSOEconClaimCode* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOEconClaimCode& from);
  void MergeFrom(const CSOEconClaimCode& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);
  
  // optional uint32 code_type = 2;
  inline bool has_code_type() const;
  inline void clear_code_type();
  static const int kCodeTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 code_type() const;
  inline void set_code_type(::google::protobuf::uint32 value);
  
  // optional uint32 time_acquired = 3;
  inline bool has_time_acquired() const;
  inline void clear_time_acquired();
  static const int kTimeAcquiredFieldNumber = 3;
  inline ::google::protobuf::uint32 time_acquired() const;
  inline void set_time_acquired(::google::protobuf::uint32 value);
  
  // optional string code = 4;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 4;
  inline const ::std::string& code() const;
  inline void set_code(const ::std::string& value);
  inline void set_code(const char* value);
  inline void set_code(const char* value, size_t size);
  inline ::std::string* mutable_code();
  inline ::std::string* release_code();
  
  // @@protoc_insertion_point(class_scope:CSOEconClaimCode)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_code_type();
  inline void clear_has_code_type();
  inline void set_has_time_acquired();
  inline void clear_has_time_acquired();
  inline void set_has_code();
  inline void clear_has_code();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 code_type_;
  ::std::string* code_;
  ::google::protobuf::uint32 time_acquired_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_base_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_base_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_base_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CSOEconClaimCode* default_instance_;
};
// -------------------------------------------------------------------

class CMsgStoreGetUserData : public ::google::protobuf::Message {
 public:
  CMsgStoreGetUserData();
  virtual ~CMsgStoreGetUserData();
  
  CMsgStoreGetUserData(const CMsgStoreGetUserData& from);
  
  inline CMsgStoreGetUserData& operator=(const CMsgStoreGetUserData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgStoreGetUserData& default_instance();
  
  void Swap(CMsgStoreGetUserData* other);
  
  // implements Message ----------------------------------------------
  
  CMsgStoreGetUserData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgStoreGetUserData& from);
  void MergeFrom(const CMsgStoreGetUserData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional fixed32 price_sheet_version = 1;
  inline bool has_price_sheet_version() const;
  inline void clear_price_sheet_version();
  static const int kPriceSheetVersionFieldNumber = 1;
  inline ::google::protobuf::uint32 price_sheet_version() const;
  inline void set_price_sheet_version(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgStoreGetUserData)
 private:
  inline void set_has_price_sheet_version();
  inline void clear_has_price_sheet_version();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 price_sheet_version_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_base_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_base_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_base_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgStoreGetUserData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgStoreGetUserDataResponse : public ::google::protobuf::Message {
 public:
  CMsgStoreGetUserDataResponse();
  virtual ~CMsgStoreGetUserDataResponse();
  
  CMsgStoreGetUserDataResponse(const CMsgStoreGetUserDataResponse& from);
  
  inline CMsgStoreGetUserDataResponse& operator=(const CMsgStoreGetUserDataResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgStoreGetUserDataResponse& default_instance();
  
  void Swap(CMsgStoreGetUserDataResponse* other);
  
  // implements Message ----------------------------------------------
  
  CMsgStoreGetUserDataResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgStoreGetUserDataResponse& from);
  void MergeFrom(const CMsgStoreGetUserDataResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);
  
  // optional int32 currency = 2;
  inline bool has_currency() const;
  inline void clear_currency();
  static const int kCurrencyFieldNumber = 2;
  inline ::google::protobuf::int32 currency() const;
  inline void set_currency(::google::protobuf::int32 value);
  
  // optional string country = 3;
  inline bool has_country() const;
  inline void clear_country();
  static const int kCountryFieldNumber = 3;
  inline const ::std::string& country() const;
  inline void set_country(const ::std::string& value);
  inline void set_country(const char* value);
  inline void set_country(const char* value, size_t size);
  inline ::std::string* mutable_country();
  inline ::std::string* release_country();
  
  // optional fixed32 price_sheet_version = 4;
  inline bool has_price_sheet_version() const;
  inline void clear_price_sheet_version();
  static const int kPriceSheetVersionFieldNumber = 4;
  inline ::google::protobuf::uint32 price_sheet_version() const;
  inline void set_price_sheet_version(::google::protobuf::uint32 value);
  
  // optional uint64 experiment_data = 5 [default = 0];
  inline bool has_experiment_data() const;
  inline void clear_experiment_data();
  static const int kExperimentDataFieldNumber = 5;
  inline ::google::protobuf::uint64 experiment_data() const;
  inline void set_experiment_data(::google::protobuf::uint64 value);
  
  // optional int32 featured_item_idx = 6;
  inline bool has_featured_item_idx() const;
  inline void clear_featured_item_idx();
  static const int kFeaturedItemIdxFieldNumber = 6;
  inline ::google::protobuf::int32 featured_item_idx() const;
  inline void set_featured_item_idx(::google::protobuf::int32 value);
  
  // optional bool show_hat_descriptions = 7 [default = true];
  inline bool has_show_hat_descriptions() const;
  inline void clear_show_hat_descriptions();
  static const int kShowHatDescriptionsFieldNumber = 7;
  inline bool show_hat_descriptions() const;
  inline void set_show_hat_descriptions(bool value);
  
  // optional bytes price_sheet = 8;
  inline bool has_price_sheet() const;
  inline void clear_price_sheet();
  static const int kPriceSheetFieldNumber = 8;
  inline const ::std::string& price_sheet() const;
  inline void set_price_sheet(const ::std::string& value);
  inline void set_price_sheet(const char* value);
  inline void set_price_sheet(const void* value, size_t size);
  inline ::std::string* mutable_price_sheet();
  inline ::std::string* release_price_sheet();
  
  // optional int32 default_item_sort = 9 [default = 0];
  inline bool has_default_item_sort() const;
  inline void clear_default_item_sort();
  static const int kDefaultItemSortFieldNumber = 9;
  inline ::google::protobuf::int32 default_item_sort() const;
  inline void set_default_item_sort(::google::protobuf::int32 value);
  
  // repeated uint32 popular_items = 10;
  inline int popular_items_size() const;
  inline void clear_popular_items();
  static const int kPopularItemsFieldNumber = 10;
  inline ::google::protobuf::uint32 popular_items(int index) const;
  inline void set_popular_items(int index, ::google::protobuf::uint32 value);
  inline void add_popular_items(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      popular_items() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_popular_items();
  
  // @@protoc_insertion_point(class_scope:CMsgStoreGetUserDataResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_currency();
  inline void clear_has_currency();
  inline void set_has_country();
  inline void clear_has_country();
  inline void set_has_price_sheet_version();
  inline void clear_has_price_sheet_version();
  inline void set_has_experiment_data();
  inline void clear_has_experiment_data();
  inline void set_has_featured_item_idx();
  inline void clear_has_featured_item_idx();
  inline void set_has_show_hat_descriptions();
  inline void clear_has_show_hat_descriptions();
  inline void set_has_price_sheet();
  inline void clear_has_price_sheet();
  inline void set_has_default_item_sort();
  inline void clear_has_default_item_sort();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 currency_;
  ::std::string* country_;
  ::google::protobuf::uint64 experiment_data_;
  ::google::protobuf::uint32 price_sheet_version_;
  ::google::protobuf::int32 featured_item_idx_;
  ::std::string* price_sheet_;
  bool show_hat_descriptions_;
  ::google::protobuf::int32 default_item_sort_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > popular_items_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  friend void  protobuf_AddDesc_base_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_base_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_base_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgStoreGetUserDataResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgUpdateItemSchema : public ::google::protobuf::Message {
 public:
  CMsgUpdateItemSchema();
  virtual ~CMsgUpdateItemSchema();
  
  CMsgUpdateItemSchema(const CMsgUpdateItemSchema& from);
  
  inline CMsgUpdateItemSchema& operator=(const CMsgUpdateItemSchema& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgUpdateItemSchema& default_instance();
  
  void Swap(CMsgUpdateItemSchema* other);
  
  // implements Message ----------------------------------------------
  
  CMsgUpdateItemSchema* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgUpdateItemSchema& from);
  void MergeFrom(const CMsgUpdateItemSchema& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bytes items_game = 1;
  inline bool has_items_game() const;
  inline void clear_items_game();
  static const int kItemsGameFieldNumber = 1;
  inline const ::std::string& items_game() const;
  inline void set_items_game(const ::std::string& value);
  inline void set_items_game(const char* value);
  inline void set_items_game(const void* value, size_t size);
  inline ::std::string* mutable_items_game();
  inline ::std::string* release_items_game();
  
  // optional fixed32 item_schema_version = 2;
  inline bool has_item_schema_version() const;
  inline void clear_item_schema_version();
  static const int kItemSchemaVersionFieldNumber = 2;
  inline ::google::protobuf::uint32 item_schema_version() const;
  inline void set_item_schema_version(::google::protobuf::uint32 value);
  
  // optional string items_game_url = 3;
  inline bool has_items_game_url() const;
  inline void clear_items_game_url();
  static const int kItemsGameUrlFieldNumber = 3;
  inline const ::std::string& items_game_url() const;
  inline void set_items_game_url(const ::std::string& value);
  inline void set_items_game_url(const char* value);
  inline void set_items_game_url(const char* value, size_t size);
  inline ::std::string* mutable_items_game_url();
  inline ::std::string* release_items_game_url();
  
  // @@protoc_insertion_point(class_scope:CMsgUpdateItemSchema)
 private:
  inline void set_has_items_game();
  inline void clear_has_items_game();
  inline void set_has_item_schema_version();
  inline void clear_has_item_schema_version();
  inline void set_has_items_game_url();
  inline void clear_has_items_game_url();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* items_game_;
  ::std::string* items_game_url_;
  ::google::protobuf::uint32 item_schema_version_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_base_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_base_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_base_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgUpdateItemSchema* default_instance_;
};
// -------------------------------------------------------------------

class CMsgRequestItemSchemaData : public ::google::protobuf::Message {
 public:
  CMsgRequestItemSchemaData();
  virtual ~CMsgRequestItemSchemaData();
  
  CMsgRequestItemSchemaData(const CMsgRequestItemSchemaData& from);
  
  inline CMsgRequestItemSchemaData& operator=(const CMsgRequestItemSchemaData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgRequestItemSchemaData& default_instance();
  
  void Swap(CMsgRequestItemSchemaData* other);
  
  // implements Message ----------------------------------------------
  
  CMsgRequestItemSchemaData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgRequestItemSchemaData& from);
  void MergeFrom(const CMsgRequestItemSchemaData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CMsgRequestItemSchemaData)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_base_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_base_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_base_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgRequestItemSchemaData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCError : public ::google::protobuf::Message {
 public:
  CMsgGCError();
  virtual ~CMsgGCError();
  
  CMsgGCError(const CMsgGCError& from);
  
  inline CMsgGCError& operator=(const CMsgGCError& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCError& default_instance();
  
  void Swap(CMsgGCError* other);
  
  // implements Message ----------------------------------------------
  
  CMsgGCError* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCError& from);
  void MergeFrom(const CMsgGCError& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string error_text = 1;
  inline bool has_error_text() const;
  inline void clear_error_text();
  static const int kErrorTextFieldNumber = 1;
  inline const ::std::string& error_text() const;
  inline void set_error_text(const ::std::string& value);
  inline void set_error_text(const char* value);
  inline void set_error_text(const char* value, size_t size);
  inline ::std::string* mutable_error_text();
  inline ::std::string* release_error_text();
  
  // @@protoc_insertion_point(class_scope:CMsgGCError)
 private:
  inline void set_has_error_text();
  inline void clear_has_error_text();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* error_text_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_base_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_base_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_base_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgGCError* default_instance_;
};
// -------------------------------------------------------------------

class CMsgRequestInventoryRefresh : public ::google::protobuf::Message {
 public:
  CMsgRequestInventoryRefresh();
  virtual ~CMsgRequestInventoryRefresh();
  
  CMsgRequestInventoryRefresh(const CMsgRequestInventoryRefresh& from);
  
  inline CMsgRequestInventoryRefresh& operator=(const CMsgRequestInventoryRefresh& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgRequestInventoryRefresh& default_instance();
  
  void Swap(CMsgRequestInventoryRefresh* other);
  
  // implements Message ----------------------------------------------
  
  CMsgRequestInventoryRefresh* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgRequestInventoryRefresh& from);
  void MergeFrom(const CMsgRequestInventoryRefresh& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CMsgRequestInventoryRefresh)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_base_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_base_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_base_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgRequestInventoryRefresh* default_instance_;
};
// -------------------------------------------------------------------

class CMsgConVarValue : public ::google::protobuf::Message {
 public:
  CMsgConVarValue();
  virtual ~CMsgConVarValue();
  
  CMsgConVarValue(const CMsgConVarValue& from);
  
  inline CMsgConVarValue& operator=(const CMsgConVarValue& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgConVarValue& default_instance();
  
  void Swap(CMsgConVarValue* other);
  
  // implements Message ----------------------------------------------
  
  CMsgConVarValue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgConVarValue& from);
  void MergeFrom(const CMsgConVarValue& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional string value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const char* value, size_t size);
  inline ::std::string* mutable_value();
  inline ::std::string* release_value();
  
  // @@protoc_insertion_point(class_scope:CMsgConVarValue)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_value();
  inline void clear_has_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  ::std::string* value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_base_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_base_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_base_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgConVarValue* default_instance_;
};
// -------------------------------------------------------------------

class CMsgReplicateConVars : public ::google::protobuf::Message {
 public:
  CMsgReplicateConVars();
  virtual ~CMsgReplicateConVars();
  
  CMsgReplicateConVars(const CMsgReplicateConVars& from);
  
  inline CMsgReplicateConVars& operator=(const CMsgReplicateConVars& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgReplicateConVars& default_instance();
  
  void Swap(CMsgReplicateConVars* other);
  
  // implements Message ----------------------------------------------
  
  CMsgReplicateConVars* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgReplicateConVars& from);
  void MergeFrom(const CMsgReplicateConVars& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .CMsgConVarValue convars = 1;
  inline int convars_size() const;
  inline void clear_convars();
  static const int kConvarsFieldNumber = 1;
  inline const ::CMsgConVarValue& convars(int index) const;
  inline ::CMsgConVarValue* mutable_convars(int index);
  inline ::CMsgConVarValue* add_convars();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgConVarValue >&
      convars() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgConVarValue >*
      mutable_convars();
  
  // @@protoc_insertion_point(class_scope:CMsgReplicateConVars)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CMsgConVarValue > convars_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_base_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_base_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_base_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgReplicateConVars* default_instance_;
};
// -------------------------------------------------------------------

class CMsgUseItem : public ::google::protobuf::Message {
 public:
  CMsgUseItem();
  virtual ~CMsgUseItem();
  
  CMsgUseItem(const CMsgUseItem& from);
  
  inline CMsgUseItem& operator=(const CMsgUseItem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgUseItem& default_instance();
  
  void Swap(CMsgUseItem* other);
  
  // implements Message ----------------------------------------------
  
  CMsgUseItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgUseItem& from);
  void MergeFrom(const CMsgUseItem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint64 item_id() const;
  inline void set_item_id(::google::protobuf::uint64 value);
  
  // optional fixed64 target_steam_id = 2;
  inline bool has_target_steam_id() const;
  inline void clear_target_steam_id();
  static const int kTargetSteamIdFieldNumber = 2;
  inline ::google::protobuf::uint64 target_steam_id() const;
  inline void set_target_steam_id(::google::protobuf::uint64 value);
  
  // repeated uint32 gift__potential_targets = 3;
  inline int gift__potential_targets_size() const;
  inline void clear_gift__potential_targets();
  static const int kGiftPotentialTargetsFieldNumber = 3;
  inline ::google::protobuf::uint32 gift__potential_targets(int index) const;
  inline void set_gift__potential_targets(int index, ::google::protobuf::uint32 value);
  inline void add_gift__potential_targets(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      gift__potential_targets() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_gift__potential_targets();
  
  // optional uint32 duel__class_lock = 4;
  inline bool has_duel__class_lock() const;
  inline void clear_duel__class_lock();
  static const int kDuelClassLockFieldNumber = 4;
  inline ::google::protobuf::uint32 duel__class_lock() const;
  inline void set_duel__class_lock(::google::protobuf::uint32 value);
  
  // optional fixed64 initiator_steam_id = 5;
  inline bool has_initiator_steam_id() const;
  inline void clear_initiator_steam_id();
  static const int kInitiatorSteamIdFieldNumber = 5;
  inline ::google::protobuf::uint64 initiator_steam_id() const;
  inline void set_initiator_steam_id(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:CMsgUseItem)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_target_steam_id();
  inline void clear_has_target_steam_id();
  inline void set_has_duel__class_lock();
  inline void clear_has_duel__class_lock();
  inline void set_has_initiator_steam_id();
  inline void clear_has_initiator_steam_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 item_id_;
  ::google::protobuf::uint64 target_steam_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > gift__potential_targets_;
  ::google::protobuf::uint64 initiator_steam_id_;
  ::google::protobuf::uint32 duel__class_lock_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_base_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_base_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_base_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgUseItem* default_instance_;
};
// -------------------------------------------------------------------

class CMsgConsumableExhausted : public ::google::protobuf::Message {
 public:
  CMsgConsumableExhausted();
  virtual ~CMsgConsumableExhausted();
  
  CMsgConsumableExhausted(const CMsgConsumableExhausted& from);
  
  inline CMsgConsumableExhausted& operator=(const CMsgConsumableExhausted& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgConsumableExhausted& default_instance();
  
  void Swap(CMsgConsumableExhausted* other);
  
  // implements Message ----------------------------------------------
  
  CMsgConsumableExhausted* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgConsumableExhausted& from);
  void MergeFrom(const CMsgConsumableExhausted& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 item_def_id = 1;
  inline bool has_item_def_id() const;
  inline void clear_item_def_id();
  static const int kItemDefIdFieldNumber = 1;
  inline ::google::protobuf::int32 item_def_id() const;
  inline void set_item_def_id(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:CMsgConsumableExhausted)
 private:
  inline void set_has_item_def_id();
  inline void clear_has_item_def_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 item_def_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_base_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_base_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_base_5fgcmessages_2eproto();
  
  void InitAsDefaultInstance();
  static CMsgConsumableExhausted* default_instance_;
};
// ===================================================================


// ===================================================================

// CSOPartyInvite

// optional uint64 group_id = 1;
inline bool CSOPartyInvite::has_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOPartyInvite::set_has_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOPartyInvite::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOPartyInvite::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 CSOPartyInvite::group_id() const {
  return group_id_;
}
inline void CSOPartyInvite::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
}

// optional fixed64 sender_id = 2;
inline bool CSOPartyInvite::has_sender_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOPartyInvite::set_has_sender_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOPartyInvite::clear_has_sender_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOPartyInvite::clear_sender_id() {
  sender_id_ = GOOGLE_ULONGLONG(0);
  clear_has_sender_id();
}
inline ::google::protobuf::uint64 CSOPartyInvite::sender_id() const {
  return sender_id_;
}
inline void CSOPartyInvite::set_sender_id(::google::protobuf::uint64 value) {
  set_has_sender_id();
  sender_id_ = value;
}

// optional string sender_name = 3;
inline bool CSOPartyInvite::has_sender_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSOPartyInvite::set_has_sender_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSOPartyInvite::clear_has_sender_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSOPartyInvite::clear_sender_name() {
  if (sender_name_ != &::google::protobuf::internal::kEmptyString) {
    sender_name_->clear();
  }
  clear_has_sender_name();
}
inline const ::std::string& CSOPartyInvite::sender_name() const {
  return *sender_name_;
}
inline void CSOPartyInvite::set_sender_name(const ::std::string& value) {
  set_has_sender_name();
  if (sender_name_ == &::google::protobuf::internal::kEmptyString) {
    sender_name_ = new ::std::string;
  }
  sender_name_->assign(value);
}
inline void CSOPartyInvite::set_sender_name(const char* value) {
  set_has_sender_name();
  if (sender_name_ == &::google::protobuf::internal::kEmptyString) {
    sender_name_ = new ::std::string;
  }
  sender_name_->assign(value);
}
inline void CSOPartyInvite::set_sender_name(const char* value, size_t size) {
  set_has_sender_name();
  if (sender_name_ == &::google::protobuf::internal::kEmptyString) {
    sender_name_ = new ::std::string;
  }
  sender_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSOPartyInvite::mutable_sender_name() {
  set_has_sender_name();
  if (sender_name_ == &::google::protobuf::internal::kEmptyString) {
    sender_name_ = new ::std::string;
  }
  return sender_name_;
}
inline ::std::string* CSOPartyInvite::release_sender_name() {
  clear_has_sender_name();
  if (sender_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sender_name_;
    sender_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CSOLobbyInvite

// optional uint64 group_id = 1;
inline bool CSOLobbyInvite::has_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOLobbyInvite::set_has_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOLobbyInvite::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOLobbyInvite::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 CSOLobbyInvite::group_id() const {
  return group_id_;
}
inline void CSOLobbyInvite::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
}

// optional fixed64 sender_id = 2;
inline bool CSOLobbyInvite::has_sender_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOLobbyInvite::set_has_sender_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOLobbyInvite::clear_has_sender_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOLobbyInvite::clear_sender_id() {
  sender_id_ = GOOGLE_ULONGLONG(0);
  clear_has_sender_id();
}
inline ::google::protobuf::uint64 CSOLobbyInvite::sender_id() const {
  return sender_id_;
}
inline void CSOLobbyInvite::set_sender_id(::google::protobuf::uint64 value) {
  set_has_sender_id();
  sender_id_ = value;
}

// optional string sender_name = 3;
inline bool CSOLobbyInvite::has_sender_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSOLobbyInvite::set_has_sender_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSOLobbyInvite::clear_has_sender_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSOLobbyInvite::clear_sender_name() {
  if (sender_name_ != &::google::protobuf::internal::kEmptyString) {
    sender_name_->clear();
  }
  clear_has_sender_name();
}
inline const ::std::string& CSOLobbyInvite::sender_name() const {
  return *sender_name_;
}
inline void CSOLobbyInvite::set_sender_name(const ::std::string& value) {
  set_has_sender_name();
  if (sender_name_ == &::google::protobuf::internal::kEmptyString) {
    sender_name_ = new ::std::string;
  }
  sender_name_->assign(value);
}
inline void CSOLobbyInvite::set_sender_name(const char* value) {
  set_has_sender_name();
  if (sender_name_ == &::google::protobuf::internal::kEmptyString) {
    sender_name_ = new ::std::string;
  }
  sender_name_->assign(value);
}
inline void CSOLobbyInvite::set_sender_name(const char* value, size_t size) {
  set_has_sender_name();
  if (sender_name_ == &::google::protobuf::internal::kEmptyString) {
    sender_name_ = new ::std::string;
  }
  sender_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSOLobbyInvite::mutable_sender_name() {
  set_has_sender_name();
  if (sender_name_ == &::google::protobuf::internal::kEmptyString) {
    sender_name_ = new ::std::string;
  }
  return sender_name_;
}
inline ::std::string* CSOLobbyInvite::release_sender_name() {
  clear_has_sender_name();
  if (sender_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sender_name_;
    sender_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CMsgSystemBroadcast

// optional string message = 1;
inline bool CMsgSystemBroadcast::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSystemBroadcast::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSystemBroadcast::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSystemBroadcast::clear_message() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& CMsgSystemBroadcast::message() const {
  return *message_;
}
inline void CMsgSystemBroadcast::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void CMsgSystemBroadcast::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void CMsgSystemBroadcast::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgSystemBroadcast::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  return message_;
}
inline ::std::string* CMsgSystemBroadcast::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CMsgClientHello

// optional uint32 version = 1;
inline bool CMsgClientHello::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientHello::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientHello::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientHello::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 CMsgClientHello::version() const {
  return version_;
}
inline void CMsgClientHello::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
}

// -------------------------------------------------------------------

// CMsgServerHello

// optional uint32 version = 1;
inline bool CMsgServerHello::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerHello::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgServerHello::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgServerHello::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 CMsgServerHello::version() const {
  return version_;
}
inline void CMsgServerHello::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
}

// -------------------------------------------------------------------

// CMsgClientWelcome

// optional uint32 version = 1;
inline bool CMsgClientWelcome::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientWelcome::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientWelcome::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientWelcome::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 CMsgClientWelcome::version() const {
  return version_;
}
inline void CMsgClientWelcome::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
}

// -------------------------------------------------------------------

// CMsgServerWelcome

// optional uint32 version = 1;
inline bool CMsgServerWelcome::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgServerWelcome::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgServerWelcome::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgServerWelcome::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 CMsgServerWelcome::version() const {
  return version_;
}
inline void CMsgServerWelcome::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
}

// -------------------------------------------------------------------

// CMsgInviteToParty

// optional fixed64 steam_id = 1;
inline bool CMsgInviteToParty::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgInviteToParty::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgInviteToParty::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgInviteToParty::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgInviteToParty::steam_id() const {
  return steam_id_;
}
inline void CMsgInviteToParty::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
}

// -------------------------------------------------------------------

// CMsgInvitationCreated

// optional uint64 group_id = 1;
inline bool CMsgInvitationCreated::has_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgInvitationCreated::set_has_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgInvitationCreated::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgInvitationCreated::clear_group_id() {
  group_id_ = GOOGLE_ULONGLONG(0);
  clear_has_group_id();
}
inline ::google::protobuf::uint64 CMsgInvitationCreated::group_id() const {
  return group_id_;
}
inline void CMsgInvitationCreated::set_group_id(::google::protobuf::uint64 value) {
  set_has_group_id();
  group_id_ = value;
}

// optional fixed64 steam_id = 2;
inline bool CMsgInvitationCreated::has_steam_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgInvitationCreated::set_has_steam_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgInvitationCreated::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgInvitationCreated::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgInvitationCreated::steam_id() const {
  return steam_id_;
}
inline void CMsgInvitationCreated::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
}

// -------------------------------------------------------------------

// CMsgPartyInviteResponse

// optional uint64 party_id = 1;
inline bool CMsgPartyInviteResponse::has_party_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPartyInviteResponse::set_has_party_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPartyInviteResponse::clear_has_party_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPartyInviteResponse::clear_party_id() {
  party_id_ = GOOGLE_ULONGLONG(0);
  clear_has_party_id();
}
inline ::google::protobuf::uint64 CMsgPartyInviteResponse::party_id() const {
  return party_id_;
}
inline void CMsgPartyInviteResponse::set_party_id(::google::protobuf::uint64 value) {
  set_has_party_id();
  party_id_ = value;
}

// optional bool accept = 2;
inline bool CMsgPartyInviteResponse::has_accept() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPartyInviteResponse::set_has_accept() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPartyInviteResponse::clear_has_accept() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPartyInviteResponse::clear_accept() {
  accept_ = false;
  clear_has_accept();
}
inline bool CMsgPartyInviteResponse::accept() const {
  return accept_;
}
inline void CMsgPartyInviteResponse::set_accept(bool value) {
  set_has_accept();
  accept_ = value;
}

// -------------------------------------------------------------------

// CMsgKickFromParty

// optional fixed64 steam_id = 1;
inline bool CMsgKickFromParty::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgKickFromParty::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgKickFromParty::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgKickFromParty::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgKickFromParty::steam_id() const {
  return steam_id_;
}
inline void CMsgKickFromParty::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
}

// -------------------------------------------------------------------

// CMsgLeaveParty

// -------------------------------------------------------------------

// CMsgGameServerInfo

// optional fixed32 server_public_ip_addr = 1;
inline bool CMsgGameServerInfo::has_server_public_ip_addr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGameServerInfo::set_has_server_public_ip_addr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGameServerInfo::clear_has_server_public_ip_addr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGameServerInfo::clear_server_public_ip_addr() {
  server_public_ip_addr_ = 0u;
  clear_has_server_public_ip_addr();
}
inline ::google::protobuf::uint32 CMsgGameServerInfo::server_public_ip_addr() const {
  return server_public_ip_addr_;
}
inline void CMsgGameServerInfo::set_server_public_ip_addr(::google::protobuf::uint32 value) {
  set_has_server_public_ip_addr();
  server_public_ip_addr_ = value;
}

// optional fixed32 server_private_ip_addr = 2;
inline bool CMsgGameServerInfo::has_server_private_ip_addr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGameServerInfo::set_has_server_private_ip_addr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGameServerInfo::clear_has_server_private_ip_addr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGameServerInfo::clear_server_private_ip_addr() {
  server_private_ip_addr_ = 0u;
  clear_has_server_private_ip_addr();
}
inline ::google::protobuf::uint32 CMsgGameServerInfo::server_private_ip_addr() const {
  return server_private_ip_addr_;
}
inline void CMsgGameServerInfo::set_server_private_ip_addr(::google::protobuf::uint32 value) {
  set_has_server_private_ip_addr();
  server_private_ip_addr_ = value;
}

// optional uint32 server_port = 3;
inline bool CMsgGameServerInfo::has_server_port() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGameServerInfo::set_has_server_port() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGameServerInfo::clear_has_server_port() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGameServerInfo::clear_server_port() {
  server_port_ = 0u;
  clear_has_server_port();
}
inline ::google::protobuf::uint32 CMsgGameServerInfo::server_port() const {
  return server_port_;
}
inline void CMsgGameServerInfo::set_server_port(::google::protobuf::uint32 value) {
  set_has_server_port();
  server_port_ = value;
}

// optional uint32 server_tv_port = 4;
inline bool CMsgGameServerInfo::has_server_tv_port() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGameServerInfo::set_has_server_tv_port() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGameServerInfo::clear_has_server_tv_port() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGameServerInfo::clear_server_tv_port() {
  server_tv_port_ = 0u;
  clear_has_server_tv_port();
}
inline ::google::protobuf::uint32 CMsgGameServerInfo::server_tv_port() const {
  return server_tv_port_;
}
inline void CMsgGameServerInfo::set_server_tv_port(::google::protobuf::uint32 value) {
  set_has_server_tv_port();
  server_tv_port_ = value;
}

// optional string server_key = 5;
inline bool CMsgGameServerInfo::has_server_key() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGameServerInfo::set_has_server_key() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGameServerInfo::clear_has_server_key() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGameServerInfo::clear_server_key() {
  if (server_key_ != &::google::protobuf::internal::kEmptyString) {
    server_key_->clear();
  }
  clear_has_server_key();
}
inline const ::std::string& CMsgGameServerInfo::server_key() const {
  return *server_key_;
}
inline void CMsgGameServerInfo::set_server_key(const ::std::string& value) {
  set_has_server_key();
  if (server_key_ == &::google::protobuf::internal::kEmptyString) {
    server_key_ = new ::std::string;
  }
  server_key_->assign(value);
}
inline void CMsgGameServerInfo::set_server_key(const char* value) {
  set_has_server_key();
  if (server_key_ == &::google::protobuf::internal::kEmptyString) {
    server_key_ = new ::std::string;
  }
  server_key_->assign(value);
}
inline void CMsgGameServerInfo::set_server_key(const char* value, size_t size) {
  set_has_server_key();
  if (server_key_ == &::google::protobuf::internal::kEmptyString) {
    server_key_ = new ::std::string;
  }
  server_key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgGameServerInfo::mutable_server_key() {
  set_has_server_key();
  if (server_key_ == &::google::protobuf::internal::kEmptyString) {
    server_key_ = new ::std::string;
  }
  return server_key_;
}
inline ::std::string* CMsgGameServerInfo::release_server_key() {
  clear_has_server_key();
  if (server_key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = server_key_;
    server_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional bool server_hibernation = 6;
inline bool CMsgGameServerInfo::has_server_hibernation() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGameServerInfo::set_has_server_hibernation() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgGameServerInfo::clear_has_server_hibernation() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgGameServerInfo::clear_server_hibernation() {
  server_hibernation_ = false;
  clear_has_server_hibernation();
}
inline bool CMsgGameServerInfo::server_hibernation() const {
  return server_hibernation_;
}
inline void CMsgGameServerInfo::set_server_hibernation(bool value) {
  set_has_server_hibernation();
  server_hibernation_ = value;
}

// optional .CMsgGameServerInfo.ServerType server_type = 7 [default = UNSPECIFIED];
inline bool CMsgGameServerInfo::has_server_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGameServerInfo::set_has_server_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgGameServerInfo::clear_has_server_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgGameServerInfo::clear_server_type() {
  server_type_ = 0;
  clear_has_server_type();
}
inline ::CMsgGameServerInfo_ServerType CMsgGameServerInfo::server_type() const {
  return static_cast< ::CMsgGameServerInfo_ServerType >(server_type_);
}
inline void CMsgGameServerInfo::set_server_type(::CMsgGameServerInfo_ServerType value) {
  GOOGLE_DCHECK(::CMsgGameServerInfo_ServerType_IsValid(value));
  set_has_server_type();
  server_type_ = value;
}

// optional uint32 server_region = 8;
inline bool CMsgGameServerInfo::has_server_region() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgGameServerInfo::set_has_server_region() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgGameServerInfo::clear_has_server_region() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgGameServerInfo::clear_server_region() {
  server_region_ = 0u;
  clear_has_server_region();
}
inline ::google::protobuf::uint32 CMsgGameServerInfo::server_region() const {
  return server_region_;
}
inline void CMsgGameServerInfo::set_server_region(::google::protobuf::uint32 value) {
  set_has_server_region();
  server_region_ = value;
}

// optional float server_loadavg = 9;
inline bool CMsgGameServerInfo::has_server_loadavg() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgGameServerInfo::set_has_server_loadavg() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgGameServerInfo::clear_has_server_loadavg() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgGameServerInfo::clear_server_loadavg() {
  server_loadavg_ = 0;
  clear_has_server_loadavg();
}
inline float CMsgGameServerInfo::server_loadavg() const {
  return server_loadavg_;
}
inline void CMsgGameServerInfo::set_server_loadavg(float value) {
  set_has_server_loadavg();
  server_loadavg_ = value;
}

// -------------------------------------------------------------------

// CMsgServerAvailable

// -------------------------------------------------------------------

// CSOEconGameAccountClient

// optional uint32 additional_backpack_slots = 1 [default = 0];
inline bool CSOEconGameAccountClient::has_additional_backpack_slots() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOEconGameAccountClient::set_has_additional_backpack_slots() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOEconGameAccountClient::clear_has_additional_backpack_slots() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOEconGameAccountClient::clear_additional_backpack_slots() {
  additional_backpack_slots_ = 0u;
  clear_has_additional_backpack_slots();
}
inline ::google::protobuf::uint32 CSOEconGameAccountClient::additional_backpack_slots() const {
  return additional_backpack_slots_;
}
inline void CSOEconGameAccountClient::set_additional_backpack_slots(::google::protobuf::uint32 value) {
  set_has_additional_backpack_slots();
  additional_backpack_slots_ = value;
}

// optional bool trial_account = 2 [default = false];
inline bool CSOEconGameAccountClient::has_trial_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOEconGameAccountClient::set_has_trial_account() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOEconGameAccountClient::clear_has_trial_account() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOEconGameAccountClient::clear_trial_account() {
  trial_account_ = false;
  clear_has_trial_account();
}
inline bool CSOEconGameAccountClient::trial_account() const {
  return trial_account_;
}
inline void CSOEconGameAccountClient::set_trial_account(bool value) {
  set_has_trial_account();
  trial_account_ = value;
}

// optional bool eligible_for_online_play = 3 [default = true];
inline bool CSOEconGameAccountClient::has_eligible_for_online_play() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSOEconGameAccountClient::set_has_eligible_for_online_play() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSOEconGameAccountClient::clear_has_eligible_for_online_play() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSOEconGameAccountClient::clear_eligible_for_online_play() {
  eligible_for_online_play_ = true;
  clear_has_eligible_for_online_play();
}
inline bool CSOEconGameAccountClient::eligible_for_online_play() const {
  return eligible_for_online_play_;
}
inline void CSOEconGameAccountClient::set_eligible_for_online_play(bool value) {
  set_has_eligible_for_online_play();
  eligible_for_online_play_ = value;
}

// optional bool need_to_choose_most_helpful_friend = 4;
inline bool CSOEconGameAccountClient::has_need_to_choose_most_helpful_friend() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSOEconGameAccountClient::set_has_need_to_choose_most_helpful_friend() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSOEconGameAccountClient::clear_has_need_to_choose_most_helpful_friend() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSOEconGameAccountClient::clear_need_to_choose_most_helpful_friend() {
  need_to_choose_most_helpful_friend_ = false;
  clear_has_need_to_choose_most_helpful_friend();
}
inline bool CSOEconGameAccountClient::need_to_choose_most_helpful_friend() const {
  return need_to_choose_most_helpful_friend_;
}
inline void CSOEconGameAccountClient::set_need_to_choose_most_helpful_friend(bool value) {
  set_has_need_to_choose_most_helpful_friend();
  need_to_choose_most_helpful_friend_ = value;
}

// optional bool in_coaches_list = 5;
inline bool CSOEconGameAccountClient::has_in_coaches_list() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSOEconGameAccountClient::set_has_in_coaches_list() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSOEconGameAccountClient::clear_has_in_coaches_list() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSOEconGameAccountClient::clear_in_coaches_list() {
  in_coaches_list_ = false;
  clear_has_in_coaches_list();
}
inline bool CSOEconGameAccountClient::in_coaches_list() const {
  return in_coaches_list_;
}
inline void CSOEconGameAccountClient::set_in_coaches_list(bool value) {
  set_has_in_coaches_list();
  in_coaches_list_ = value;
}

// optional fixed32 trade_ban_expiration = 6;
inline bool CSOEconGameAccountClient::has_trade_ban_expiration() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSOEconGameAccountClient::set_has_trade_ban_expiration() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSOEconGameAccountClient::clear_has_trade_ban_expiration() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSOEconGameAccountClient::clear_trade_ban_expiration() {
  trade_ban_expiration_ = 0u;
  clear_has_trade_ban_expiration();
}
inline ::google::protobuf::uint32 CSOEconGameAccountClient::trade_ban_expiration() const {
  return trade_ban_expiration_;
}
inline void CSOEconGameAccountClient::set_trade_ban_expiration(::google::protobuf::uint32 value) {
  set_has_trade_ban_expiration();
  trade_ban_expiration_ = value;
}

// optional fixed32 duel_ban_expiration = 7;
inline bool CSOEconGameAccountClient::has_duel_ban_expiration() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSOEconGameAccountClient::set_has_duel_ban_expiration() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSOEconGameAccountClient::clear_has_duel_ban_expiration() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSOEconGameAccountClient::clear_duel_ban_expiration() {
  duel_ban_expiration_ = 0u;
  clear_has_duel_ban_expiration();
}
inline ::google::protobuf::uint32 CSOEconGameAccountClient::duel_ban_expiration() const {
  return duel_ban_expiration_;
}
inline void CSOEconGameAccountClient::set_duel_ban_expiration(::google::protobuf::uint32 value) {
  set_has_duel_ban_expiration();
  duel_ban_expiration_ = value;
}

// optional uint32 preview_item_def = 8 [default = 0];
inline bool CSOEconGameAccountClient::has_preview_item_def() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSOEconGameAccountClient::set_has_preview_item_def() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSOEconGameAccountClient::clear_has_preview_item_def() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSOEconGameAccountClient::clear_preview_item_def() {
  preview_item_def_ = 0u;
  clear_has_preview_item_def();
}
inline ::google::protobuf::uint32 CSOEconGameAccountClient::preview_item_def() const {
  return preview_item_def_;
}
inline void CSOEconGameAccountClient::set_preview_item_def(::google::protobuf::uint32 value) {
  set_has_preview_item_def();
  preview_item_def_ = value;
}

// -------------------------------------------------------------------

// CSOItemCriteriaCondition

// optional int32 op = 1;
inline bool CSOItemCriteriaCondition::has_op() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOItemCriteriaCondition::set_has_op() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOItemCriteriaCondition::clear_has_op() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOItemCriteriaCondition::clear_op() {
  op_ = 0;
  clear_has_op();
}
inline ::google::protobuf::int32 CSOItemCriteriaCondition::op() const {
  return op_;
}
inline void CSOItemCriteriaCondition::set_op(::google::protobuf::int32 value) {
  set_has_op();
  op_ = value;
}

// optional string field = 2;
inline bool CSOItemCriteriaCondition::has_field() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOItemCriteriaCondition::set_has_field() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOItemCriteriaCondition::clear_has_field() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOItemCriteriaCondition::clear_field() {
  if (field_ != &::google::protobuf::internal::kEmptyString) {
    field_->clear();
  }
  clear_has_field();
}
inline const ::std::string& CSOItemCriteriaCondition::field() const {
  return *field_;
}
inline void CSOItemCriteriaCondition::set_field(const ::std::string& value) {
  set_has_field();
  if (field_ == &::google::protobuf::internal::kEmptyString) {
    field_ = new ::std::string;
  }
  field_->assign(value);
}
inline void CSOItemCriteriaCondition::set_field(const char* value) {
  set_has_field();
  if (field_ == &::google::protobuf::internal::kEmptyString) {
    field_ = new ::std::string;
  }
  field_->assign(value);
}
inline void CSOItemCriteriaCondition::set_field(const char* value, size_t size) {
  set_has_field();
  if (field_ == &::google::protobuf::internal::kEmptyString) {
    field_ = new ::std::string;
  }
  field_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSOItemCriteriaCondition::mutable_field() {
  set_has_field();
  if (field_ == &::google::protobuf::internal::kEmptyString) {
    field_ = new ::std::string;
  }
  return field_;
}
inline ::std::string* CSOItemCriteriaCondition::release_field() {
  clear_has_field();
  if (field_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = field_;
    field_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional bool required = 3;
inline bool CSOItemCriteriaCondition::has_required() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSOItemCriteriaCondition::set_has_required() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSOItemCriteriaCondition::clear_has_required() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSOItemCriteriaCondition::clear_required() {
  required_ = false;
  clear_has_required();
}
inline bool CSOItemCriteriaCondition::required() const {
  return required_;
}
inline void CSOItemCriteriaCondition::set_required(bool value) {
  set_has_required();
  required_ = value;
}

// optional float float_value = 4;
inline bool CSOItemCriteriaCondition::has_float_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSOItemCriteriaCondition::set_has_float_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSOItemCriteriaCondition::clear_has_float_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSOItemCriteriaCondition::clear_float_value() {
  float_value_ = 0;
  clear_has_float_value();
}
inline float CSOItemCriteriaCondition::float_value() const {
  return float_value_;
}
inline void CSOItemCriteriaCondition::set_float_value(float value) {
  set_has_float_value();
  float_value_ = value;
}

// optional string string_value = 5;
inline bool CSOItemCriteriaCondition::has_string_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSOItemCriteriaCondition::set_has_string_value() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSOItemCriteriaCondition::clear_has_string_value() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSOItemCriteriaCondition::clear_string_value() {
  if (string_value_ != &::google::protobuf::internal::kEmptyString) {
    string_value_->clear();
  }
  clear_has_string_value();
}
inline const ::std::string& CSOItemCriteriaCondition::string_value() const {
  return *string_value_;
}
inline void CSOItemCriteriaCondition::set_string_value(const ::std::string& value) {
  set_has_string_value();
  if (string_value_ == &::google::protobuf::internal::kEmptyString) {
    string_value_ = new ::std::string;
  }
  string_value_->assign(value);
}
inline void CSOItemCriteriaCondition::set_string_value(const char* value) {
  set_has_string_value();
  if (string_value_ == &::google::protobuf::internal::kEmptyString) {
    string_value_ = new ::std::string;
  }
  string_value_->assign(value);
}
inline void CSOItemCriteriaCondition::set_string_value(const char* value, size_t size) {
  set_has_string_value();
  if (string_value_ == &::google::protobuf::internal::kEmptyString) {
    string_value_ = new ::std::string;
  }
  string_value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSOItemCriteriaCondition::mutable_string_value() {
  set_has_string_value();
  if (string_value_ == &::google::protobuf::internal::kEmptyString) {
    string_value_ = new ::std::string;
  }
  return string_value_;
}
inline ::std::string* CSOItemCriteriaCondition::release_string_value() {
  clear_has_string_value();
  if (string_value_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = string_value_;
    string_value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CSOItemCriteria

// optional uint32 item_level = 1;
inline bool CSOItemCriteria::has_item_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOItemCriteria::set_has_item_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOItemCriteria::clear_has_item_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOItemCriteria::clear_item_level() {
  item_level_ = 0u;
  clear_has_item_level();
}
inline ::google::protobuf::uint32 CSOItemCriteria::item_level() const {
  return item_level_;
}
inline void CSOItemCriteria::set_item_level(::google::protobuf::uint32 value) {
  set_has_item_level();
  item_level_ = value;
}

// optional int32 item_quality = 2;
inline bool CSOItemCriteria::has_item_quality() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOItemCriteria::set_has_item_quality() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOItemCriteria::clear_has_item_quality() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOItemCriteria::clear_item_quality() {
  item_quality_ = 0;
  clear_has_item_quality();
}
inline ::google::protobuf::int32 CSOItemCriteria::item_quality() const {
  return item_quality_;
}
inline void CSOItemCriteria::set_item_quality(::google::protobuf::int32 value) {
  set_has_item_quality();
  item_quality_ = value;
}

// optional bool item_level_set = 3;
inline bool CSOItemCriteria::has_item_level_set() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSOItemCriteria::set_has_item_level_set() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSOItemCriteria::clear_has_item_level_set() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSOItemCriteria::clear_item_level_set() {
  item_level_set_ = false;
  clear_has_item_level_set();
}
inline bool CSOItemCriteria::item_level_set() const {
  return item_level_set_;
}
inline void CSOItemCriteria::set_item_level_set(bool value) {
  set_has_item_level_set();
  item_level_set_ = value;
}

// optional bool item_quality_set = 4;
inline bool CSOItemCriteria::has_item_quality_set() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSOItemCriteria::set_has_item_quality_set() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSOItemCriteria::clear_has_item_quality_set() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSOItemCriteria::clear_item_quality_set() {
  item_quality_set_ = false;
  clear_has_item_quality_set();
}
inline bool CSOItemCriteria::item_quality_set() const {
  return item_quality_set_;
}
inline void CSOItemCriteria::set_item_quality_set(bool value) {
  set_has_item_quality_set();
  item_quality_set_ = value;
}

// optional uint32 initial_inventory = 5;
inline bool CSOItemCriteria::has_initial_inventory() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSOItemCriteria::set_has_initial_inventory() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSOItemCriteria::clear_has_initial_inventory() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSOItemCriteria::clear_initial_inventory() {
  initial_inventory_ = 0u;
  clear_has_initial_inventory();
}
inline ::google::protobuf::uint32 CSOItemCriteria::initial_inventory() const {
  return initial_inventory_;
}
inline void CSOItemCriteria::set_initial_inventory(::google::protobuf::uint32 value) {
  set_has_initial_inventory();
  initial_inventory_ = value;
}

// optional uint32 initial_quantity = 6;
inline bool CSOItemCriteria::has_initial_quantity() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSOItemCriteria::set_has_initial_quantity() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSOItemCriteria::clear_has_initial_quantity() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSOItemCriteria::clear_initial_quantity() {
  initial_quantity_ = 0u;
  clear_has_initial_quantity();
}
inline ::google::protobuf::uint32 CSOItemCriteria::initial_quantity() const {
  return initial_quantity_;
}
inline void CSOItemCriteria::set_initial_quantity(::google::protobuf::uint32 value) {
  set_has_initial_quantity();
  initial_quantity_ = value;
}

// optional bool forced_quality_match = 7;
inline bool CSOItemCriteria::has_forced_quality_match() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSOItemCriteria::set_has_forced_quality_match() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSOItemCriteria::clear_has_forced_quality_match() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSOItemCriteria::clear_forced_quality_match() {
  forced_quality_match_ = false;
  clear_has_forced_quality_match();
}
inline bool CSOItemCriteria::forced_quality_match() const {
  return forced_quality_match_;
}
inline void CSOItemCriteria::set_forced_quality_match(bool value) {
  set_has_forced_quality_match();
  forced_quality_match_ = value;
}

// optional bool ignore_enabled_flag = 8;
inline bool CSOItemCriteria::has_ignore_enabled_flag() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSOItemCriteria::set_has_ignore_enabled_flag() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSOItemCriteria::clear_has_ignore_enabled_flag() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSOItemCriteria::clear_ignore_enabled_flag() {
  ignore_enabled_flag_ = false;
  clear_has_ignore_enabled_flag();
}
inline bool CSOItemCriteria::ignore_enabled_flag() const {
  return ignore_enabled_flag_;
}
inline void CSOItemCriteria::set_ignore_enabled_flag(bool value) {
  set_has_ignore_enabled_flag();
  ignore_enabled_flag_ = value;
}

// repeated .CSOItemCriteriaCondition conditions = 9;
inline int CSOItemCriteria::conditions_size() const {
  return conditions_.size();
}
inline void CSOItemCriteria::clear_conditions() {
  conditions_.Clear();
}
inline const ::CSOItemCriteriaCondition& CSOItemCriteria::conditions(int index) const {
  return conditions_.Get(index);
}
inline ::CSOItemCriteriaCondition* CSOItemCriteria::mutable_conditions(int index) {
  return conditions_.Mutable(index);
}
inline ::CSOItemCriteriaCondition* CSOItemCriteria::add_conditions() {
  return conditions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSOItemCriteriaCondition >&
CSOItemCriteria::conditions() const {
  return conditions_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSOItemCriteriaCondition >*
CSOItemCriteria::mutable_conditions() {
  return &conditions_;
}

// -------------------------------------------------------------------

// CSOItemRecipe

// optional uint32 def_index = 1;
inline bool CSOItemRecipe::has_def_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOItemRecipe::set_has_def_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOItemRecipe::clear_has_def_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOItemRecipe::clear_def_index() {
  def_index_ = 0u;
  clear_has_def_index();
}
inline ::google::protobuf::uint32 CSOItemRecipe::def_index() const {
  return def_index_;
}
inline void CSOItemRecipe::set_def_index(::google::protobuf::uint32 value) {
  set_has_def_index();
  def_index_ = value;
}

// optional string name = 2;
inline bool CSOItemRecipe::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOItemRecipe::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOItemRecipe::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOItemRecipe::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CSOItemRecipe::name() const {
  return *name_;
}
inline void CSOItemRecipe::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSOItemRecipe::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSOItemRecipe::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSOItemRecipe::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CSOItemRecipe::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string n_a = 3;
inline bool CSOItemRecipe::has_n_a() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSOItemRecipe::set_has_n_a() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSOItemRecipe::clear_has_n_a() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSOItemRecipe::clear_n_a() {
  if (n_a_ != &::google::protobuf::internal::kEmptyString) {
    n_a_->clear();
  }
  clear_has_n_a();
}
inline const ::std::string& CSOItemRecipe::n_a() const {
  return *n_a_;
}
inline void CSOItemRecipe::set_n_a(const ::std::string& value) {
  set_has_n_a();
  if (n_a_ == &::google::protobuf::internal::kEmptyString) {
    n_a_ = new ::std::string;
  }
  n_a_->assign(value);
}
inline void CSOItemRecipe::set_n_a(const char* value) {
  set_has_n_a();
  if (n_a_ == &::google::protobuf::internal::kEmptyString) {
    n_a_ = new ::std::string;
  }
  n_a_->assign(value);
}
inline void CSOItemRecipe::set_n_a(const char* value, size_t size) {
  set_has_n_a();
  if (n_a_ == &::google::protobuf::internal::kEmptyString) {
    n_a_ = new ::std::string;
  }
  n_a_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSOItemRecipe::mutable_n_a() {
  set_has_n_a();
  if (n_a_ == &::google::protobuf::internal::kEmptyString) {
    n_a_ = new ::std::string;
  }
  return n_a_;
}
inline ::std::string* CSOItemRecipe::release_n_a() {
  clear_has_n_a();
  if (n_a_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = n_a_;
    n_a_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string desc_inputs = 4;
inline bool CSOItemRecipe::has_desc_inputs() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSOItemRecipe::set_has_desc_inputs() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSOItemRecipe::clear_has_desc_inputs() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSOItemRecipe::clear_desc_inputs() {
  if (desc_inputs_ != &::google::protobuf::internal::kEmptyString) {
    desc_inputs_->clear();
  }
  clear_has_desc_inputs();
}
inline const ::std::string& CSOItemRecipe::desc_inputs() const {
  return *desc_inputs_;
}
inline void CSOItemRecipe::set_desc_inputs(const ::std::string& value) {
  set_has_desc_inputs();
  if (desc_inputs_ == &::google::protobuf::internal::kEmptyString) {
    desc_inputs_ = new ::std::string;
  }
  desc_inputs_->assign(value);
}
inline void CSOItemRecipe::set_desc_inputs(const char* value) {
  set_has_desc_inputs();
  if (desc_inputs_ == &::google::protobuf::internal::kEmptyString) {
    desc_inputs_ = new ::std::string;
  }
  desc_inputs_->assign(value);
}
inline void CSOItemRecipe::set_desc_inputs(const char* value, size_t size) {
  set_has_desc_inputs();
  if (desc_inputs_ == &::google::protobuf::internal::kEmptyString) {
    desc_inputs_ = new ::std::string;
  }
  desc_inputs_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSOItemRecipe::mutable_desc_inputs() {
  set_has_desc_inputs();
  if (desc_inputs_ == &::google::protobuf::internal::kEmptyString) {
    desc_inputs_ = new ::std::string;
  }
  return desc_inputs_;
}
inline ::std::string* CSOItemRecipe::release_desc_inputs() {
  clear_has_desc_inputs();
  if (desc_inputs_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = desc_inputs_;
    desc_inputs_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string desc_outputs = 5;
inline bool CSOItemRecipe::has_desc_outputs() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSOItemRecipe::set_has_desc_outputs() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSOItemRecipe::clear_has_desc_outputs() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSOItemRecipe::clear_desc_outputs() {
  if (desc_outputs_ != &::google::protobuf::internal::kEmptyString) {
    desc_outputs_->clear();
  }
  clear_has_desc_outputs();
}
inline const ::std::string& CSOItemRecipe::desc_outputs() const {
  return *desc_outputs_;
}
inline void CSOItemRecipe::set_desc_outputs(const ::std::string& value) {
  set_has_desc_outputs();
  if (desc_outputs_ == &::google::protobuf::internal::kEmptyString) {
    desc_outputs_ = new ::std::string;
  }
  desc_outputs_->assign(value);
}
inline void CSOItemRecipe::set_desc_outputs(const char* value) {
  set_has_desc_outputs();
  if (desc_outputs_ == &::google::protobuf::internal::kEmptyString) {
    desc_outputs_ = new ::std::string;
  }
  desc_outputs_->assign(value);
}
inline void CSOItemRecipe::set_desc_outputs(const char* value, size_t size) {
  set_has_desc_outputs();
  if (desc_outputs_ == &::google::protobuf::internal::kEmptyString) {
    desc_outputs_ = new ::std::string;
  }
  desc_outputs_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSOItemRecipe::mutable_desc_outputs() {
  set_has_desc_outputs();
  if (desc_outputs_ == &::google::protobuf::internal::kEmptyString) {
    desc_outputs_ = new ::std::string;
  }
  return desc_outputs_;
}
inline ::std::string* CSOItemRecipe::release_desc_outputs() {
  clear_has_desc_outputs();
  if (desc_outputs_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = desc_outputs_;
    desc_outputs_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string di_a = 6;
inline bool CSOItemRecipe::has_di_a() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSOItemRecipe::set_has_di_a() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSOItemRecipe::clear_has_di_a() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSOItemRecipe::clear_di_a() {
  if (di_a_ != &::google::protobuf::internal::kEmptyString) {
    di_a_->clear();
  }
  clear_has_di_a();
}
inline const ::std::string& CSOItemRecipe::di_a() const {
  return *di_a_;
}
inline void CSOItemRecipe::set_di_a(const ::std::string& value) {
  set_has_di_a();
  if (di_a_ == &::google::protobuf::internal::kEmptyString) {
    di_a_ = new ::std::string;
  }
  di_a_->assign(value);
}
inline void CSOItemRecipe::set_di_a(const char* value) {
  set_has_di_a();
  if (di_a_ == &::google::protobuf::internal::kEmptyString) {
    di_a_ = new ::std::string;
  }
  di_a_->assign(value);
}
inline void CSOItemRecipe::set_di_a(const char* value, size_t size) {
  set_has_di_a();
  if (di_a_ == &::google::protobuf::internal::kEmptyString) {
    di_a_ = new ::std::string;
  }
  di_a_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSOItemRecipe::mutable_di_a() {
  set_has_di_a();
  if (di_a_ == &::google::protobuf::internal::kEmptyString) {
    di_a_ = new ::std::string;
  }
  return di_a_;
}
inline ::std::string* CSOItemRecipe::release_di_a() {
  clear_has_di_a();
  if (di_a_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = di_a_;
    di_a_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string di_b = 7;
inline bool CSOItemRecipe::has_di_b() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSOItemRecipe::set_has_di_b() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSOItemRecipe::clear_has_di_b() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSOItemRecipe::clear_di_b() {
  if (di_b_ != &::google::protobuf::internal::kEmptyString) {
    di_b_->clear();
  }
  clear_has_di_b();
}
inline const ::std::string& CSOItemRecipe::di_b() const {
  return *di_b_;
}
inline void CSOItemRecipe::set_di_b(const ::std::string& value) {
  set_has_di_b();
  if (di_b_ == &::google::protobuf::internal::kEmptyString) {
    di_b_ = new ::std::string;
  }
  di_b_->assign(value);
}
inline void CSOItemRecipe::set_di_b(const char* value) {
  set_has_di_b();
  if (di_b_ == &::google::protobuf::internal::kEmptyString) {
    di_b_ = new ::std::string;
  }
  di_b_->assign(value);
}
inline void CSOItemRecipe::set_di_b(const char* value, size_t size) {
  set_has_di_b();
  if (di_b_ == &::google::protobuf::internal::kEmptyString) {
    di_b_ = new ::std::string;
  }
  di_b_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSOItemRecipe::mutable_di_b() {
  set_has_di_b();
  if (di_b_ == &::google::protobuf::internal::kEmptyString) {
    di_b_ = new ::std::string;
  }
  return di_b_;
}
inline ::std::string* CSOItemRecipe::release_di_b() {
  clear_has_di_b();
  if (di_b_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = di_b_;
    di_b_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string di_c = 8;
inline bool CSOItemRecipe::has_di_c() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSOItemRecipe::set_has_di_c() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSOItemRecipe::clear_has_di_c() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSOItemRecipe::clear_di_c() {
  if (di_c_ != &::google::protobuf::internal::kEmptyString) {
    di_c_->clear();
  }
  clear_has_di_c();
}
inline const ::std::string& CSOItemRecipe::di_c() const {
  return *di_c_;
}
inline void CSOItemRecipe::set_di_c(const ::std::string& value) {
  set_has_di_c();
  if (di_c_ == &::google::protobuf::internal::kEmptyString) {
    di_c_ = new ::std::string;
  }
  di_c_->assign(value);
}
inline void CSOItemRecipe::set_di_c(const char* value) {
  set_has_di_c();
  if (di_c_ == &::google::protobuf::internal::kEmptyString) {
    di_c_ = new ::std::string;
  }
  di_c_->assign(value);
}
inline void CSOItemRecipe::set_di_c(const char* value, size_t size) {
  set_has_di_c();
  if (di_c_ == &::google::protobuf::internal::kEmptyString) {
    di_c_ = new ::std::string;
  }
  di_c_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSOItemRecipe::mutable_di_c() {
  set_has_di_c();
  if (di_c_ == &::google::protobuf::internal::kEmptyString) {
    di_c_ = new ::std::string;
  }
  return di_c_;
}
inline ::std::string* CSOItemRecipe::release_di_c() {
  clear_has_di_c();
  if (di_c_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = di_c_;
    di_c_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string do_a = 9;
inline bool CSOItemRecipe::has_do_a() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSOItemRecipe::set_has_do_a() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSOItemRecipe::clear_has_do_a() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSOItemRecipe::clear_do_a() {
  if (do_a_ != &::google::protobuf::internal::kEmptyString) {
    do_a_->clear();
  }
  clear_has_do_a();
}
inline const ::std::string& CSOItemRecipe::do_a() const {
  return *do_a_;
}
inline void CSOItemRecipe::set_do_a(const ::std::string& value) {
  set_has_do_a();
  if (do_a_ == &::google::protobuf::internal::kEmptyString) {
    do_a_ = new ::std::string;
  }
  do_a_->assign(value);
}
inline void CSOItemRecipe::set_do_a(const char* value) {
  set_has_do_a();
  if (do_a_ == &::google::protobuf::internal::kEmptyString) {
    do_a_ = new ::std::string;
  }
  do_a_->assign(value);
}
inline void CSOItemRecipe::set_do_a(const char* value, size_t size) {
  set_has_do_a();
  if (do_a_ == &::google::protobuf::internal::kEmptyString) {
    do_a_ = new ::std::string;
  }
  do_a_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSOItemRecipe::mutable_do_a() {
  set_has_do_a();
  if (do_a_ == &::google::protobuf::internal::kEmptyString) {
    do_a_ = new ::std::string;
  }
  return do_a_;
}
inline ::std::string* CSOItemRecipe::release_do_a() {
  clear_has_do_a();
  if (do_a_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = do_a_;
    do_a_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string do_b = 10;
inline bool CSOItemRecipe::has_do_b() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSOItemRecipe::set_has_do_b() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CSOItemRecipe::clear_has_do_b() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CSOItemRecipe::clear_do_b() {
  if (do_b_ != &::google::protobuf::internal::kEmptyString) {
    do_b_->clear();
  }
  clear_has_do_b();
}
inline const ::std::string& CSOItemRecipe::do_b() const {
  return *do_b_;
}
inline void CSOItemRecipe::set_do_b(const ::std::string& value) {
  set_has_do_b();
  if (do_b_ == &::google::protobuf::internal::kEmptyString) {
    do_b_ = new ::std::string;
  }
  do_b_->assign(value);
}
inline void CSOItemRecipe::set_do_b(const char* value) {
  set_has_do_b();
  if (do_b_ == &::google::protobuf::internal::kEmptyString) {
    do_b_ = new ::std::string;
  }
  do_b_->assign(value);
}
inline void CSOItemRecipe::set_do_b(const char* value, size_t size) {
  set_has_do_b();
  if (do_b_ == &::google::protobuf::internal::kEmptyString) {
    do_b_ = new ::std::string;
  }
  do_b_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSOItemRecipe::mutable_do_b() {
  set_has_do_b();
  if (do_b_ == &::google::protobuf::internal::kEmptyString) {
    do_b_ = new ::std::string;
  }
  return do_b_;
}
inline ::std::string* CSOItemRecipe::release_do_b() {
  clear_has_do_b();
  if (do_b_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = do_b_;
    do_b_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string do_c = 11;
inline bool CSOItemRecipe::has_do_c() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CSOItemRecipe::set_has_do_c() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CSOItemRecipe::clear_has_do_c() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CSOItemRecipe::clear_do_c() {
  if (do_c_ != &::google::protobuf::internal::kEmptyString) {
    do_c_->clear();
  }
  clear_has_do_c();
}
inline const ::std::string& CSOItemRecipe::do_c() const {
  return *do_c_;
}
inline void CSOItemRecipe::set_do_c(const ::std::string& value) {
  set_has_do_c();
  if (do_c_ == &::google::protobuf::internal::kEmptyString) {
    do_c_ = new ::std::string;
  }
  do_c_->assign(value);
}
inline void CSOItemRecipe::set_do_c(const char* value) {
  set_has_do_c();
  if (do_c_ == &::google::protobuf::internal::kEmptyString) {
    do_c_ = new ::std::string;
  }
  do_c_->assign(value);
}
inline void CSOItemRecipe::set_do_c(const char* value, size_t size) {
  set_has_do_c();
  if (do_c_ == &::google::protobuf::internal::kEmptyString) {
    do_c_ = new ::std::string;
  }
  do_c_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSOItemRecipe::mutable_do_c() {
  set_has_do_c();
  if (do_c_ == &::google::protobuf::internal::kEmptyString) {
    do_c_ = new ::std::string;
  }
  return do_c_;
}
inline ::std::string* CSOItemRecipe::release_do_c() {
  clear_has_do_c();
  if (do_c_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = do_c_;
    do_c_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional bool requires_all_same_class = 12;
inline bool CSOItemRecipe::has_requires_all_same_class() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CSOItemRecipe::set_has_requires_all_same_class() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CSOItemRecipe::clear_has_requires_all_same_class() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CSOItemRecipe::clear_requires_all_same_class() {
  requires_all_same_class_ = false;
  clear_has_requires_all_same_class();
}
inline bool CSOItemRecipe::requires_all_same_class() const {
  return requires_all_same_class_;
}
inline void CSOItemRecipe::set_requires_all_same_class(bool value) {
  set_has_requires_all_same_class();
  requires_all_same_class_ = value;
}

// optional bool requires_all_same_slot = 13;
inline bool CSOItemRecipe::has_requires_all_same_slot() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CSOItemRecipe::set_has_requires_all_same_slot() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CSOItemRecipe::clear_has_requires_all_same_slot() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CSOItemRecipe::clear_requires_all_same_slot() {
  requires_all_same_slot_ = false;
  clear_has_requires_all_same_slot();
}
inline bool CSOItemRecipe::requires_all_same_slot() const {
  return requires_all_same_slot_;
}
inline void CSOItemRecipe::set_requires_all_same_slot(bool value) {
  set_has_requires_all_same_slot();
  requires_all_same_slot_ = value;
}

// optional int32 class_usage_for_output = 14;
inline bool CSOItemRecipe::has_class_usage_for_output() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CSOItemRecipe::set_has_class_usage_for_output() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CSOItemRecipe::clear_has_class_usage_for_output() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CSOItemRecipe::clear_class_usage_for_output() {
  class_usage_for_output_ = 0;
  clear_has_class_usage_for_output();
}
inline ::google::protobuf::int32 CSOItemRecipe::class_usage_for_output() const {
  return class_usage_for_output_;
}
inline void CSOItemRecipe::set_class_usage_for_output(::google::protobuf::int32 value) {
  set_has_class_usage_for_output();
  class_usage_for_output_ = value;
}

// optional int32 slot_usage_for_output = 15;
inline bool CSOItemRecipe::has_slot_usage_for_output() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CSOItemRecipe::set_has_slot_usage_for_output() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CSOItemRecipe::clear_has_slot_usage_for_output() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CSOItemRecipe::clear_slot_usage_for_output() {
  slot_usage_for_output_ = 0;
  clear_has_slot_usage_for_output();
}
inline ::google::protobuf::int32 CSOItemRecipe::slot_usage_for_output() const {
  return slot_usage_for_output_;
}
inline void CSOItemRecipe::set_slot_usage_for_output(::google::protobuf::int32 value) {
  set_has_slot_usage_for_output();
  slot_usage_for_output_ = value;
}

// optional int32 set_for_output = 16;
inline bool CSOItemRecipe::has_set_for_output() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CSOItemRecipe::set_has_set_for_output() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CSOItemRecipe::clear_has_set_for_output() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CSOItemRecipe::clear_set_for_output() {
  set_for_output_ = 0;
  clear_has_set_for_output();
}
inline ::google::protobuf::int32 CSOItemRecipe::set_for_output() const {
  return set_for_output_;
}
inline void CSOItemRecipe::set_set_for_output(::google::protobuf::int32 value) {
  set_has_set_for_output();
  set_for_output_ = value;
}

// repeated .CSOItemCriteria input_items_criteria = 20;
inline int CSOItemRecipe::input_items_criteria_size() const {
  return input_items_criteria_.size();
}
inline void CSOItemRecipe::clear_input_items_criteria() {
  input_items_criteria_.Clear();
}
inline const ::CSOItemCriteria& CSOItemRecipe::input_items_criteria(int index) const {
  return input_items_criteria_.Get(index);
}
inline ::CSOItemCriteria* CSOItemRecipe::mutable_input_items_criteria(int index) {
  return input_items_criteria_.Mutable(index);
}
inline ::CSOItemCriteria* CSOItemRecipe::add_input_items_criteria() {
  return input_items_criteria_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSOItemCriteria >&
CSOItemRecipe::input_items_criteria() const {
  return input_items_criteria_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSOItemCriteria >*
CSOItemRecipe::mutable_input_items_criteria() {
  return &input_items_criteria_;
}

// repeated .CSOItemCriteria output_items_criteria = 21;
inline int CSOItemRecipe::output_items_criteria_size() const {
  return output_items_criteria_.size();
}
inline void CSOItemRecipe::clear_output_items_criteria() {
  output_items_criteria_.Clear();
}
inline const ::CSOItemCriteria& CSOItemRecipe::output_items_criteria(int index) const {
  return output_items_criteria_.Get(index);
}
inline ::CSOItemCriteria* CSOItemRecipe::mutable_output_items_criteria(int index) {
  return output_items_criteria_.Mutable(index);
}
inline ::CSOItemCriteria* CSOItemRecipe::add_output_items_criteria() {
  return output_items_criteria_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSOItemCriteria >&
CSOItemRecipe::output_items_criteria() const {
  return output_items_criteria_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSOItemCriteria >*
CSOItemRecipe::mutable_output_items_criteria() {
  return &output_items_criteria_;
}

// repeated uint32 input_item_dupe_counts = 22;
inline int CSOItemRecipe::input_item_dupe_counts_size() const {
  return input_item_dupe_counts_.size();
}
inline void CSOItemRecipe::clear_input_item_dupe_counts() {
  input_item_dupe_counts_.Clear();
}
inline ::google::protobuf::uint32 CSOItemRecipe::input_item_dupe_counts(int index) const {
  return input_item_dupe_counts_.Get(index);
}
inline void CSOItemRecipe::set_input_item_dupe_counts(int index, ::google::protobuf::uint32 value) {
  input_item_dupe_counts_.Set(index, value);
}
inline void CSOItemRecipe::add_input_item_dupe_counts(::google::protobuf::uint32 value) {
  input_item_dupe_counts_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSOItemRecipe::input_item_dupe_counts() const {
  return input_item_dupe_counts_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSOItemRecipe::mutable_input_item_dupe_counts() {
  return &input_item_dupe_counts_;
}

// -------------------------------------------------------------------

// CMsgDevNewItemRequest

// optional fixed64 receiver = 1;
inline bool CMsgDevNewItemRequest::has_receiver() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDevNewItemRequest::set_has_receiver() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDevNewItemRequest::clear_has_receiver() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDevNewItemRequest::clear_receiver() {
  receiver_ = GOOGLE_ULONGLONG(0);
  clear_has_receiver();
}
inline ::google::protobuf::uint64 CMsgDevNewItemRequest::receiver() const {
  return receiver_;
}
inline void CMsgDevNewItemRequest::set_receiver(::google::protobuf::uint64 value) {
  set_has_receiver();
  receiver_ = value;
}

// optional .CSOItemCriteria criteria = 2;
inline bool CMsgDevNewItemRequest::has_criteria() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDevNewItemRequest::set_has_criteria() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDevNewItemRequest::clear_has_criteria() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDevNewItemRequest::clear_criteria() {
  if (criteria_ != NULL) criteria_->::CSOItemCriteria::Clear();
  clear_has_criteria();
}
inline const ::CSOItemCriteria& CMsgDevNewItemRequest::criteria() const {
  return criteria_ != NULL ? *criteria_ : *default_instance_->criteria_;
}
inline ::CSOItemCriteria* CMsgDevNewItemRequest::mutable_criteria() {
  set_has_criteria();
  if (criteria_ == NULL) criteria_ = new ::CSOItemCriteria;
  return criteria_;
}
inline ::CSOItemCriteria* CMsgDevNewItemRequest::release_criteria() {
  clear_has_criteria();
  ::CSOItemCriteria* temp = criteria_;
  criteria_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// CMsgIncrementKillCountAttribute

// optional uint64 killer_steam_id = 1;
inline bool CMsgIncrementKillCountAttribute::has_killer_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgIncrementKillCountAttribute::set_has_killer_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgIncrementKillCountAttribute::clear_has_killer_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgIncrementKillCountAttribute::clear_killer_steam_id() {
  killer_steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_killer_steam_id();
}
inline ::google::protobuf::uint64 CMsgIncrementKillCountAttribute::killer_steam_id() const {
  return killer_steam_id_;
}
inline void CMsgIncrementKillCountAttribute::set_killer_steam_id(::google::protobuf::uint64 value) {
  set_has_killer_steam_id();
  killer_steam_id_ = value;
}

// optional uint64 victim_steam_id = 2;
inline bool CMsgIncrementKillCountAttribute::has_victim_steam_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgIncrementKillCountAttribute::set_has_victim_steam_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgIncrementKillCountAttribute::clear_has_victim_steam_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgIncrementKillCountAttribute::clear_victim_steam_id() {
  victim_steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_victim_steam_id();
}
inline ::google::protobuf::uint64 CMsgIncrementKillCountAttribute::victim_steam_id() const {
  return victim_steam_id_;
}
inline void CMsgIncrementKillCountAttribute::set_victim_steam_id(::google::protobuf::uint64 value) {
  set_has_victim_steam_id();
  victim_steam_id_ = value;
}

// optional uint64 item_id = 3;
inline bool CMsgIncrementKillCountAttribute::has_item_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgIncrementKillCountAttribute::set_has_item_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgIncrementKillCountAttribute::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgIncrementKillCountAttribute::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::uint64 CMsgIncrementKillCountAttribute::item_id() const {
  return item_id_;
}
inline void CMsgIncrementKillCountAttribute::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
}

// optional uint32 event_type = 4;
inline bool CMsgIncrementKillCountAttribute::has_event_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgIncrementKillCountAttribute::set_has_event_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgIncrementKillCountAttribute::clear_has_event_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgIncrementKillCountAttribute::clear_event_type() {
  event_type_ = 0u;
  clear_has_event_type();
}
inline ::google::protobuf::uint32 CMsgIncrementKillCountAttribute::event_type() const {
  return event_type_;
}
inline void CMsgIncrementKillCountAttribute::set_event_type(::google::protobuf::uint32 value) {
  set_has_event_type();
  event_type_ = value;
}

// -------------------------------------------------------------------

// CSOEconItemAttribute

// optional uint32 def_index = 1;
inline bool CSOEconItemAttribute::has_def_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOEconItemAttribute::set_has_def_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOEconItemAttribute::clear_has_def_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOEconItemAttribute::clear_def_index() {
  def_index_ = 0u;
  clear_has_def_index();
}
inline ::google::protobuf::uint32 CSOEconItemAttribute::def_index() const {
  return def_index_;
}
inline void CSOEconItemAttribute::set_def_index(::google::protobuf::uint32 value) {
  set_has_def_index();
  def_index_ = value;
}

// optional uint32 value = 2;
inline bool CSOEconItemAttribute::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOEconItemAttribute::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOEconItemAttribute::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOEconItemAttribute::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 CSOEconItemAttribute::value() const {
  return value_;
}
inline void CSOEconItemAttribute::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// CSOEconItemEquipped

// optional uint32 new_class = 1;
inline bool CSOEconItemEquipped::has_new_class() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOEconItemEquipped::set_has_new_class() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOEconItemEquipped::clear_has_new_class() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOEconItemEquipped::clear_new_class() {
  new_class_ = 0u;
  clear_has_new_class();
}
inline ::google::protobuf::uint32 CSOEconItemEquipped::new_class() const {
  return new_class_;
}
inline void CSOEconItemEquipped::set_new_class(::google::protobuf::uint32 value) {
  set_has_new_class();
  new_class_ = value;
}

// optional uint32 new_slot = 2;
inline bool CSOEconItemEquipped::has_new_slot() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOEconItemEquipped::set_has_new_slot() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOEconItemEquipped::clear_has_new_slot() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOEconItemEquipped::clear_new_slot() {
  new_slot_ = 0u;
  clear_has_new_slot();
}
inline ::google::protobuf::uint32 CSOEconItemEquipped::new_slot() const {
  return new_slot_;
}
inline void CSOEconItemEquipped::set_new_slot(::google::protobuf::uint32 value) {
  set_has_new_slot();
  new_slot_ = value;
}

// -------------------------------------------------------------------

// CSOEconItem

// optional uint64 id = 1;
inline bool CSOEconItem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOEconItem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOEconItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOEconItem::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 CSOEconItem::id() const {
  return id_;
}
inline void CSOEconItem::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 account_id = 2;
inline bool CSOEconItem::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOEconItem::set_has_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOEconItem::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOEconItem::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CSOEconItem::account_id() const {
  return account_id_;
}
inline void CSOEconItem::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
}

// optional uint32 inventory = 3;
inline bool CSOEconItem::has_inventory() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSOEconItem::set_has_inventory() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSOEconItem::clear_has_inventory() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSOEconItem::clear_inventory() {
  inventory_ = 0u;
  clear_has_inventory();
}
inline ::google::protobuf::uint32 CSOEconItem::inventory() const {
  return inventory_;
}
inline void CSOEconItem::set_inventory(::google::protobuf::uint32 value) {
  set_has_inventory();
  inventory_ = value;
}

// optional uint32 def_index = 4;
inline bool CSOEconItem::has_def_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSOEconItem::set_has_def_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSOEconItem::clear_has_def_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSOEconItem::clear_def_index() {
  def_index_ = 0u;
  clear_has_def_index();
}
inline ::google::protobuf::uint32 CSOEconItem::def_index() const {
  return def_index_;
}
inline void CSOEconItem::set_def_index(::google::protobuf::uint32 value) {
  set_has_def_index();
  def_index_ = value;
}

// optional uint32 quantity = 5;
inline bool CSOEconItem::has_quantity() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSOEconItem::set_has_quantity() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSOEconItem::clear_has_quantity() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSOEconItem::clear_quantity() {
  quantity_ = 0u;
  clear_has_quantity();
}
inline ::google::protobuf::uint32 CSOEconItem::quantity() const {
  return quantity_;
}
inline void CSOEconItem::set_quantity(::google::protobuf::uint32 value) {
  set_has_quantity();
  quantity_ = value;
}

// optional uint32 level = 6;
inline bool CSOEconItem::has_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSOEconItem::set_has_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSOEconItem::clear_has_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSOEconItem::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 CSOEconItem::level() const {
  return level_;
}
inline void CSOEconItem::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional uint32 quality = 7;
inline bool CSOEconItem::has_quality() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSOEconItem::set_has_quality() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSOEconItem::clear_has_quality() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSOEconItem::clear_quality() {
  quality_ = 0u;
  clear_has_quality();
}
inline ::google::protobuf::uint32 CSOEconItem::quality() const {
  return quality_;
}
inline void CSOEconItem::set_quality(::google::protobuf::uint32 value) {
  set_has_quality();
  quality_ = value;
}

// optional uint32 flags = 8 [default = 0];
inline bool CSOEconItem::has_flags() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSOEconItem::set_has_flags() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSOEconItem::clear_has_flags() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSOEconItem::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 CSOEconItem::flags() const {
  return flags_;
}
inline void CSOEconItem::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
}

// optional uint32 origin = 9;
inline bool CSOEconItem::has_origin() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSOEconItem::set_has_origin() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSOEconItem::clear_has_origin() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSOEconItem::clear_origin() {
  origin_ = 0u;
  clear_has_origin();
}
inline ::google::protobuf::uint32 CSOEconItem::origin() const {
  return origin_;
}
inline void CSOEconItem::set_origin(::google::protobuf::uint32 value) {
  set_has_origin();
  origin_ = value;
}

// optional string custom_name = 10;
inline bool CSOEconItem::has_custom_name() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSOEconItem::set_has_custom_name() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CSOEconItem::clear_has_custom_name() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CSOEconItem::clear_custom_name() {
  if (custom_name_ != &::google::protobuf::internal::kEmptyString) {
    custom_name_->clear();
  }
  clear_has_custom_name();
}
inline const ::std::string& CSOEconItem::custom_name() const {
  return *custom_name_;
}
inline void CSOEconItem::set_custom_name(const ::std::string& value) {
  set_has_custom_name();
  if (custom_name_ == &::google::protobuf::internal::kEmptyString) {
    custom_name_ = new ::std::string;
  }
  custom_name_->assign(value);
}
inline void CSOEconItem::set_custom_name(const char* value) {
  set_has_custom_name();
  if (custom_name_ == &::google::protobuf::internal::kEmptyString) {
    custom_name_ = new ::std::string;
  }
  custom_name_->assign(value);
}
inline void CSOEconItem::set_custom_name(const char* value, size_t size) {
  set_has_custom_name();
  if (custom_name_ == &::google::protobuf::internal::kEmptyString) {
    custom_name_ = new ::std::string;
  }
  custom_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSOEconItem::mutable_custom_name() {
  set_has_custom_name();
  if (custom_name_ == &::google::protobuf::internal::kEmptyString) {
    custom_name_ = new ::std::string;
  }
  return custom_name_;
}
inline ::std::string* CSOEconItem::release_custom_name() {
  clear_has_custom_name();
  if (custom_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = custom_name_;
    custom_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string custom_desc = 11;
inline bool CSOEconItem::has_custom_desc() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CSOEconItem::set_has_custom_desc() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CSOEconItem::clear_has_custom_desc() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CSOEconItem::clear_custom_desc() {
  if (custom_desc_ != &::google::protobuf::internal::kEmptyString) {
    custom_desc_->clear();
  }
  clear_has_custom_desc();
}
inline const ::std::string& CSOEconItem::custom_desc() const {
  return *custom_desc_;
}
inline void CSOEconItem::set_custom_desc(const ::std::string& value) {
  set_has_custom_desc();
  if (custom_desc_ == &::google::protobuf::internal::kEmptyString) {
    custom_desc_ = new ::std::string;
  }
  custom_desc_->assign(value);
}
inline void CSOEconItem::set_custom_desc(const char* value) {
  set_has_custom_desc();
  if (custom_desc_ == &::google::protobuf::internal::kEmptyString) {
    custom_desc_ = new ::std::string;
  }
  custom_desc_->assign(value);
}
inline void CSOEconItem::set_custom_desc(const char* value, size_t size) {
  set_has_custom_desc();
  if (custom_desc_ == &::google::protobuf::internal::kEmptyString) {
    custom_desc_ = new ::std::string;
  }
  custom_desc_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSOEconItem::mutable_custom_desc() {
  set_has_custom_desc();
  if (custom_desc_ == &::google::protobuf::internal::kEmptyString) {
    custom_desc_ = new ::std::string;
  }
  return custom_desc_;
}
inline ::std::string* CSOEconItem::release_custom_desc() {
  clear_has_custom_desc();
  if (custom_desc_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = custom_desc_;
    custom_desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated .CSOEconItemAttribute attribute = 12;
inline int CSOEconItem::attribute_size() const {
  return attribute_.size();
}
inline void CSOEconItem::clear_attribute() {
  attribute_.Clear();
}
inline const ::CSOEconItemAttribute& CSOEconItem::attribute(int index) const {
  return attribute_.Get(index);
}
inline ::CSOEconItemAttribute* CSOEconItem::mutable_attribute(int index) {
  return attribute_.Mutable(index);
}
inline ::CSOEconItemAttribute* CSOEconItem::add_attribute() {
  return attribute_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSOEconItemAttribute >&
CSOEconItem::attribute() const {
  return attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSOEconItemAttribute >*
CSOEconItem::mutable_attribute() {
  return &attribute_;
}

// optional .CSOEconItem interior_item = 13;
inline bool CSOEconItem::has_interior_item() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CSOEconItem::set_has_interior_item() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CSOEconItem::clear_has_interior_item() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CSOEconItem::clear_interior_item() {
  if (interior_item_ != NULL) interior_item_->::CSOEconItem::Clear();
  clear_has_interior_item();
}
inline const ::CSOEconItem& CSOEconItem::interior_item() const {
  return interior_item_ != NULL ? *interior_item_ : *default_instance_->interior_item_;
}
inline ::CSOEconItem* CSOEconItem::mutable_interior_item() {
  set_has_interior_item();
  if (interior_item_ == NULL) interior_item_ = new ::CSOEconItem;
  return interior_item_;
}
inline ::CSOEconItem* CSOEconItem::release_interior_item() {
  clear_has_interior_item();
  ::CSOEconItem* temp = interior_item_;
  interior_item_ = NULL;
  return temp;
}

// optional bool in_use = 14 [default = false];
inline bool CSOEconItem::has_in_use() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CSOEconItem::set_has_in_use() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CSOEconItem::clear_has_in_use() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CSOEconItem::clear_in_use() {
  in_use_ = false;
  clear_has_in_use();
}
inline bool CSOEconItem::in_use() const {
  return in_use_;
}
inline void CSOEconItem::set_in_use(bool value) {
  set_has_in_use();
  in_use_ = value;
}

// optional uint32 style = 15 [default = 0];
inline bool CSOEconItem::has_style() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CSOEconItem::set_has_style() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CSOEconItem::clear_has_style() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CSOEconItem::clear_style() {
  style_ = 0u;
  clear_has_style();
}
inline ::google::protobuf::uint32 CSOEconItem::style() const {
  return style_;
}
inline void CSOEconItem::set_style(::google::protobuf::uint32 value) {
  set_has_style();
  style_ = value;
}

// optional uint64 original_id = 16 [default = 0];
inline bool CSOEconItem::has_original_id() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CSOEconItem::set_has_original_id() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CSOEconItem::clear_has_original_id() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CSOEconItem::clear_original_id() {
  original_id_ = GOOGLE_ULONGLONG(0);
  clear_has_original_id();
}
inline ::google::protobuf::uint64 CSOEconItem::original_id() const {
  return original_id_;
}
inline void CSOEconItem::set_original_id(::google::protobuf::uint64 value) {
  set_has_original_id();
  original_id_ = value;
}

// optional bool contains_equipped_state = 17;
inline bool CSOEconItem::has_contains_equipped_state() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CSOEconItem::set_has_contains_equipped_state() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CSOEconItem::clear_has_contains_equipped_state() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CSOEconItem::clear_contains_equipped_state() {
  contains_equipped_state_ = false;
  clear_has_contains_equipped_state();
}
inline bool CSOEconItem::contains_equipped_state() const {
  return contains_equipped_state_;
}
inline void CSOEconItem::set_contains_equipped_state(bool value) {
  set_has_contains_equipped_state();
  contains_equipped_state_ = value;
}

// repeated .CSOEconItemEquipped equipped_state = 18;
inline int CSOEconItem::equipped_state_size() const {
  return equipped_state_.size();
}
inline void CSOEconItem::clear_equipped_state() {
  equipped_state_.Clear();
}
inline const ::CSOEconItemEquipped& CSOEconItem::equipped_state(int index) const {
  return equipped_state_.Get(index);
}
inline ::CSOEconItemEquipped* CSOEconItem::mutable_equipped_state(int index) {
  return equipped_state_.Mutable(index);
}
inline ::CSOEconItemEquipped* CSOEconItem::add_equipped_state() {
  return equipped_state_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSOEconItemEquipped >&
CSOEconItem::equipped_state() const {
  return equipped_state_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSOEconItemEquipped >*
CSOEconItem::mutable_equipped_state() {
  return &equipped_state_;
}

// -------------------------------------------------------------------

// CMsgAdjustItemEquippedState

// optional uint64 item_id = 1;
inline bool CMsgAdjustItemEquippedState::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAdjustItemEquippedState::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgAdjustItemEquippedState::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgAdjustItemEquippedState::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::uint64 CMsgAdjustItemEquippedState::item_id() const {
  return item_id_;
}
inline void CMsgAdjustItemEquippedState::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
}

// optional uint32 new_class = 2;
inline bool CMsgAdjustItemEquippedState::has_new_class() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgAdjustItemEquippedState::set_has_new_class() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgAdjustItemEquippedState::clear_has_new_class() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgAdjustItemEquippedState::clear_new_class() {
  new_class_ = 0u;
  clear_has_new_class();
}
inline ::google::protobuf::uint32 CMsgAdjustItemEquippedState::new_class() const {
  return new_class_;
}
inline void CMsgAdjustItemEquippedState::set_new_class(::google::protobuf::uint32 value) {
  set_has_new_class();
  new_class_ = value;
}

// optional uint32 new_slot = 3;
inline bool CMsgAdjustItemEquippedState::has_new_slot() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgAdjustItemEquippedState::set_has_new_slot() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgAdjustItemEquippedState::clear_has_new_slot() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgAdjustItemEquippedState::clear_new_slot() {
  new_slot_ = 0u;
  clear_has_new_slot();
}
inline ::google::protobuf::uint32 CMsgAdjustItemEquippedState::new_slot() const {
  return new_slot_;
}
inline void CMsgAdjustItemEquippedState::set_new_slot(::google::protobuf::uint32 value) {
  set_has_new_slot();
  new_slot_ = value;
}

// -------------------------------------------------------------------

// CMsgSortItems

// optional uint32 sort_type = 1;
inline bool CMsgSortItems::has_sort_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSortItems::set_has_sort_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSortItems::clear_has_sort_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSortItems::clear_sort_type() {
  sort_type_ = 0u;
  clear_has_sort_type();
}
inline ::google::protobuf::uint32 CMsgSortItems::sort_type() const {
  return sort_type_;
}
inline void CMsgSortItems::set_sort_type(::google::protobuf::uint32 value) {
  set_has_sort_type();
  sort_type_ = value;
}

// -------------------------------------------------------------------

// CSOEconClaimCode

// optional uint32 account_id = 1;
inline bool CSOEconClaimCode::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOEconClaimCode::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOEconClaimCode::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOEconClaimCode::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CSOEconClaimCode::account_id() const {
  return account_id_;
}
inline void CSOEconClaimCode::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
}

// optional uint32 code_type = 2;
inline bool CSOEconClaimCode::has_code_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOEconClaimCode::set_has_code_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOEconClaimCode::clear_has_code_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOEconClaimCode::clear_code_type() {
  code_type_ = 0u;
  clear_has_code_type();
}
inline ::google::protobuf::uint32 CSOEconClaimCode::code_type() const {
  return code_type_;
}
inline void CSOEconClaimCode::set_code_type(::google::protobuf::uint32 value) {
  set_has_code_type();
  code_type_ = value;
}

// optional uint32 time_acquired = 3;
inline bool CSOEconClaimCode::has_time_acquired() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSOEconClaimCode::set_has_time_acquired() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSOEconClaimCode::clear_has_time_acquired() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSOEconClaimCode::clear_time_acquired() {
  time_acquired_ = 0u;
  clear_has_time_acquired();
}
inline ::google::protobuf::uint32 CSOEconClaimCode::time_acquired() const {
  return time_acquired_;
}
inline void CSOEconClaimCode::set_time_acquired(::google::protobuf::uint32 value) {
  set_has_time_acquired();
  time_acquired_ = value;
}

// optional string code = 4;
inline bool CSOEconClaimCode::has_code() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSOEconClaimCode::set_has_code() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSOEconClaimCode::clear_has_code() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSOEconClaimCode::clear_code() {
  if (code_ != &::google::protobuf::internal::kEmptyString) {
    code_->clear();
  }
  clear_has_code();
}
inline const ::std::string& CSOEconClaimCode::code() const {
  return *code_;
}
inline void CSOEconClaimCode::set_code(const ::std::string& value) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::kEmptyString) {
    code_ = new ::std::string;
  }
  code_->assign(value);
}
inline void CSOEconClaimCode::set_code(const char* value) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::kEmptyString) {
    code_ = new ::std::string;
  }
  code_->assign(value);
}
inline void CSOEconClaimCode::set_code(const char* value, size_t size) {
  set_has_code();
  if (code_ == &::google::protobuf::internal::kEmptyString) {
    code_ = new ::std::string;
  }
  code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSOEconClaimCode::mutable_code() {
  set_has_code();
  if (code_ == &::google::protobuf::internal::kEmptyString) {
    code_ = new ::std::string;
  }
  return code_;
}
inline ::std::string* CSOEconClaimCode::release_code() {
  clear_has_code();
  if (code_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = code_;
    code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CMsgStoreGetUserData

// optional fixed32 price_sheet_version = 1;
inline bool CMsgStoreGetUserData::has_price_sheet_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgStoreGetUserData::set_has_price_sheet_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgStoreGetUserData::clear_has_price_sheet_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgStoreGetUserData::clear_price_sheet_version() {
  price_sheet_version_ = 0u;
  clear_has_price_sheet_version();
}
inline ::google::protobuf::uint32 CMsgStoreGetUserData::price_sheet_version() const {
  return price_sheet_version_;
}
inline void CMsgStoreGetUserData::set_price_sheet_version(::google::protobuf::uint32 value) {
  set_has_price_sheet_version();
  price_sheet_version_ = value;
}

// -------------------------------------------------------------------

// CMsgStoreGetUserDataResponse

// optional int32 result = 1;
inline bool CMsgStoreGetUserDataResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgStoreGetUserDataResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgStoreGetUserDataResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgStoreGetUserDataResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 CMsgStoreGetUserDataResponse::result() const {
  return result_;
}
inline void CMsgStoreGetUserDataResponse::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 currency = 2;
inline bool CMsgStoreGetUserDataResponse::has_currency() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgStoreGetUserDataResponse::set_has_currency() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgStoreGetUserDataResponse::clear_has_currency() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgStoreGetUserDataResponse::clear_currency() {
  currency_ = 0;
  clear_has_currency();
}
inline ::google::protobuf::int32 CMsgStoreGetUserDataResponse::currency() const {
  return currency_;
}
inline void CMsgStoreGetUserDataResponse::set_currency(::google::protobuf::int32 value) {
  set_has_currency();
  currency_ = value;
}

// optional string country = 3;
inline bool CMsgStoreGetUserDataResponse::has_country() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgStoreGetUserDataResponse::set_has_country() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgStoreGetUserDataResponse::clear_has_country() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgStoreGetUserDataResponse::clear_country() {
  if (country_ != &::google::protobuf::internal::kEmptyString) {
    country_->clear();
  }
  clear_has_country();
}
inline const ::std::string& CMsgStoreGetUserDataResponse::country() const {
  return *country_;
}
inline void CMsgStoreGetUserDataResponse::set_country(const ::std::string& value) {
  set_has_country();
  if (country_ == &::google::protobuf::internal::kEmptyString) {
    country_ = new ::std::string;
  }
  country_->assign(value);
}
inline void CMsgStoreGetUserDataResponse::set_country(const char* value) {
  set_has_country();
  if (country_ == &::google::protobuf::internal::kEmptyString) {
    country_ = new ::std::string;
  }
  country_->assign(value);
}
inline void CMsgStoreGetUserDataResponse::set_country(const char* value, size_t size) {
  set_has_country();
  if (country_ == &::google::protobuf::internal::kEmptyString) {
    country_ = new ::std::string;
  }
  country_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgStoreGetUserDataResponse::mutable_country() {
  set_has_country();
  if (country_ == &::google::protobuf::internal::kEmptyString) {
    country_ = new ::std::string;
  }
  return country_;
}
inline ::std::string* CMsgStoreGetUserDataResponse::release_country() {
  clear_has_country();
  if (country_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = country_;
    country_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional fixed32 price_sheet_version = 4;
inline bool CMsgStoreGetUserDataResponse::has_price_sheet_version() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgStoreGetUserDataResponse::set_has_price_sheet_version() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgStoreGetUserDataResponse::clear_has_price_sheet_version() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgStoreGetUserDataResponse::clear_price_sheet_version() {
  price_sheet_version_ = 0u;
  clear_has_price_sheet_version();
}
inline ::google::protobuf::uint32 CMsgStoreGetUserDataResponse::price_sheet_version() const {
  return price_sheet_version_;
}
inline void CMsgStoreGetUserDataResponse::set_price_sheet_version(::google::protobuf::uint32 value) {
  set_has_price_sheet_version();
  price_sheet_version_ = value;
}

// optional uint64 experiment_data = 5 [default = 0];
inline bool CMsgStoreGetUserDataResponse::has_experiment_data() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgStoreGetUserDataResponse::set_has_experiment_data() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgStoreGetUserDataResponse::clear_has_experiment_data() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgStoreGetUserDataResponse::clear_experiment_data() {
  experiment_data_ = GOOGLE_ULONGLONG(0);
  clear_has_experiment_data();
}
inline ::google::protobuf::uint64 CMsgStoreGetUserDataResponse::experiment_data() const {
  return experiment_data_;
}
inline void CMsgStoreGetUserDataResponse::set_experiment_data(::google::protobuf::uint64 value) {
  set_has_experiment_data();
  experiment_data_ = value;
}

// optional int32 featured_item_idx = 6;
inline bool CMsgStoreGetUserDataResponse::has_featured_item_idx() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgStoreGetUserDataResponse::set_has_featured_item_idx() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgStoreGetUserDataResponse::clear_has_featured_item_idx() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgStoreGetUserDataResponse::clear_featured_item_idx() {
  featured_item_idx_ = 0;
  clear_has_featured_item_idx();
}
inline ::google::protobuf::int32 CMsgStoreGetUserDataResponse::featured_item_idx() const {
  return featured_item_idx_;
}
inline void CMsgStoreGetUserDataResponse::set_featured_item_idx(::google::protobuf::int32 value) {
  set_has_featured_item_idx();
  featured_item_idx_ = value;
}

// optional bool show_hat_descriptions = 7 [default = true];
inline bool CMsgStoreGetUserDataResponse::has_show_hat_descriptions() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgStoreGetUserDataResponse::set_has_show_hat_descriptions() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgStoreGetUserDataResponse::clear_has_show_hat_descriptions() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgStoreGetUserDataResponse::clear_show_hat_descriptions() {
  show_hat_descriptions_ = true;
  clear_has_show_hat_descriptions();
}
inline bool CMsgStoreGetUserDataResponse::show_hat_descriptions() const {
  return show_hat_descriptions_;
}
inline void CMsgStoreGetUserDataResponse::set_show_hat_descriptions(bool value) {
  set_has_show_hat_descriptions();
  show_hat_descriptions_ = value;
}

// optional bytes price_sheet = 8;
inline bool CMsgStoreGetUserDataResponse::has_price_sheet() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgStoreGetUserDataResponse::set_has_price_sheet() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgStoreGetUserDataResponse::clear_has_price_sheet() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgStoreGetUserDataResponse::clear_price_sheet() {
  if (price_sheet_ != &::google::protobuf::internal::kEmptyString) {
    price_sheet_->clear();
  }
  clear_has_price_sheet();
}
inline const ::std::string& CMsgStoreGetUserDataResponse::price_sheet() const {
  return *price_sheet_;
}
inline void CMsgStoreGetUserDataResponse::set_price_sheet(const ::std::string& value) {
  set_has_price_sheet();
  if (price_sheet_ == &::google::protobuf::internal::kEmptyString) {
    price_sheet_ = new ::std::string;
  }
  price_sheet_->assign(value);
}
inline void CMsgStoreGetUserDataResponse::set_price_sheet(const char* value) {
  set_has_price_sheet();
  if (price_sheet_ == &::google::protobuf::internal::kEmptyString) {
    price_sheet_ = new ::std::string;
  }
  price_sheet_->assign(value);
}
inline void CMsgStoreGetUserDataResponse::set_price_sheet(const void* value, size_t size) {
  set_has_price_sheet();
  if (price_sheet_ == &::google::protobuf::internal::kEmptyString) {
    price_sheet_ = new ::std::string;
  }
  price_sheet_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgStoreGetUserDataResponse::mutable_price_sheet() {
  set_has_price_sheet();
  if (price_sheet_ == &::google::protobuf::internal::kEmptyString) {
    price_sheet_ = new ::std::string;
  }
  return price_sheet_;
}
inline ::std::string* CMsgStoreGetUserDataResponse::release_price_sheet() {
  clear_has_price_sheet();
  if (price_sheet_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = price_sheet_;
    price_sheet_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 default_item_sort = 9 [default = 0];
inline bool CMsgStoreGetUserDataResponse::has_default_item_sort() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgStoreGetUserDataResponse::set_has_default_item_sort() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgStoreGetUserDataResponse::clear_has_default_item_sort() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgStoreGetUserDataResponse::clear_default_item_sort() {
  default_item_sort_ = 0;
  clear_has_default_item_sort();
}
inline ::google::protobuf::int32 CMsgStoreGetUserDataResponse::default_item_sort() const {
  return default_item_sort_;
}
inline void CMsgStoreGetUserDataResponse::set_default_item_sort(::google::protobuf::int32 value) {
  set_has_default_item_sort();
  default_item_sort_ = value;
}

// repeated uint32 popular_items = 10;
inline int CMsgStoreGetUserDataResponse::popular_items_size() const {
  return popular_items_.size();
}
inline void CMsgStoreGetUserDataResponse::clear_popular_items() {
  popular_items_.Clear();
}
inline ::google::protobuf::uint32 CMsgStoreGetUserDataResponse::popular_items(int index) const {
  return popular_items_.Get(index);
}
inline void CMsgStoreGetUserDataResponse::set_popular_items(int index, ::google::protobuf::uint32 value) {
  popular_items_.Set(index, value);
}
inline void CMsgStoreGetUserDataResponse::add_popular_items(::google::protobuf::uint32 value) {
  popular_items_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgStoreGetUserDataResponse::popular_items() const {
  return popular_items_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgStoreGetUserDataResponse::mutable_popular_items() {
  return &popular_items_;
}

// -------------------------------------------------------------------

// CMsgUpdateItemSchema

// optional bytes items_game = 1;
inline bool CMsgUpdateItemSchema::has_items_game() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgUpdateItemSchema::set_has_items_game() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgUpdateItemSchema::clear_has_items_game() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgUpdateItemSchema::clear_items_game() {
  if (items_game_ != &::google::protobuf::internal::kEmptyString) {
    items_game_->clear();
  }
  clear_has_items_game();
}
inline const ::std::string& CMsgUpdateItemSchema::items_game() const {
  return *items_game_;
}
inline void CMsgUpdateItemSchema::set_items_game(const ::std::string& value) {
  set_has_items_game();
  if (items_game_ == &::google::protobuf::internal::kEmptyString) {
    items_game_ = new ::std::string;
  }
  items_game_->assign(value);
}
inline void CMsgUpdateItemSchema::set_items_game(const char* value) {
  set_has_items_game();
  if (items_game_ == &::google::protobuf::internal::kEmptyString) {
    items_game_ = new ::std::string;
  }
  items_game_->assign(value);
}
inline void CMsgUpdateItemSchema::set_items_game(const void* value, size_t size) {
  set_has_items_game();
  if (items_game_ == &::google::protobuf::internal::kEmptyString) {
    items_game_ = new ::std::string;
  }
  items_game_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgUpdateItemSchema::mutable_items_game() {
  set_has_items_game();
  if (items_game_ == &::google::protobuf::internal::kEmptyString) {
    items_game_ = new ::std::string;
  }
  return items_game_;
}
inline ::std::string* CMsgUpdateItemSchema::release_items_game() {
  clear_has_items_game();
  if (items_game_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = items_game_;
    items_game_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional fixed32 item_schema_version = 2;
inline bool CMsgUpdateItemSchema::has_item_schema_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgUpdateItemSchema::set_has_item_schema_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgUpdateItemSchema::clear_has_item_schema_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgUpdateItemSchema::clear_item_schema_version() {
  item_schema_version_ = 0u;
  clear_has_item_schema_version();
}
inline ::google::protobuf::uint32 CMsgUpdateItemSchema::item_schema_version() const {
  return item_schema_version_;
}
inline void CMsgUpdateItemSchema::set_item_schema_version(::google::protobuf::uint32 value) {
  set_has_item_schema_version();
  item_schema_version_ = value;
}

// optional string items_game_url = 3;
inline bool CMsgUpdateItemSchema::has_items_game_url() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgUpdateItemSchema::set_has_items_game_url() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgUpdateItemSchema::clear_has_items_game_url() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgUpdateItemSchema::clear_items_game_url() {
  if (items_game_url_ != &::google::protobuf::internal::kEmptyString) {
    items_game_url_->clear();
  }
  clear_has_items_game_url();
}
inline const ::std::string& CMsgUpdateItemSchema::items_game_url() const {
  return *items_game_url_;
}
inline void CMsgUpdateItemSchema::set_items_game_url(const ::std::string& value) {
  set_has_items_game_url();
  if (items_game_url_ == &::google::protobuf::internal::kEmptyString) {
    items_game_url_ = new ::std::string;
  }
  items_game_url_->assign(value);
}
inline void CMsgUpdateItemSchema::set_items_game_url(const char* value) {
  set_has_items_game_url();
  if (items_game_url_ == &::google::protobuf::internal::kEmptyString) {
    items_game_url_ = new ::std::string;
  }
  items_game_url_->assign(value);
}
inline void CMsgUpdateItemSchema::set_items_game_url(const char* value, size_t size) {
  set_has_items_game_url();
  if (items_game_url_ == &::google::protobuf::internal::kEmptyString) {
    items_game_url_ = new ::std::string;
  }
  items_game_url_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgUpdateItemSchema::mutable_items_game_url() {
  set_has_items_game_url();
  if (items_game_url_ == &::google::protobuf::internal::kEmptyString) {
    items_game_url_ = new ::std::string;
  }
  return items_game_url_;
}
inline ::std::string* CMsgUpdateItemSchema::release_items_game_url() {
  clear_has_items_game_url();
  if (items_game_url_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = items_game_url_;
    items_game_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CMsgRequestItemSchemaData

// -------------------------------------------------------------------

// CMsgGCError

// optional string error_text = 1;
inline bool CMsgGCError::has_error_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCError::set_has_error_text() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCError::clear_has_error_text() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCError::clear_error_text() {
  if (error_text_ != &::google::protobuf::internal::kEmptyString) {
    error_text_->clear();
  }
  clear_has_error_text();
}
inline const ::std::string& CMsgGCError::error_text() const {
  return *error_text_;
}
inline void CMsgGCError::set_error_text(const ::std::string& value) {
  set_has_error_text();
  if (error_text_ == &::google::protobuf::internal::kEmptyString) {
    error_text_ = new ::std::string;
  }
  error_text_->assign(value);
}
inline void CMsgGCError::set_error_text(const char* value) {
  set_has_error_text();
  if (error_text_ == &::google::protobuf::internal::kEmptyString) {
    error_text_ = new ::std::string;
  }
  error_text_->assign(value);
}
inline void CMsgGCError::set_error_text(const char* value, size_t size) {
  set_has_error_text();
  if (error_text_ == &::google::protobuf::internal::kEmptyString) {
    error_text_ = new ::std::string;
  }
  error_text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgGCError::mutable_error_text() {
  set_has_error_text();
  if (error_text_ == &::google::protobuf::internal::kEmptyString) {
    error_text_ = new ::std::string;
  }
  return error_text_;
}
inline ::std::string* CMsgGCError::release_error_text() {
  clear_has_error_text();
  if (error_text_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = error_text_;
    error_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CMsgRequestInventoryRefresh

// -------------------------------------------------------------------

// CMsgConVarValue

// optional string name = 1;
inline bool CMsgConVarValue::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgConVarValue::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgConVarValue::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgConVarValue::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CMsgConVarValue::name() const {
  return *name_;
}
inline void CMsgConVarValue::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMsgConVarValue::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMsgConVarValue::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgConVarValue::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CMsgConVarValue::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string value = 2;
inline bool CMsgConVarValue::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgConVarValue::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgConVarValue::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgConVarValue::clear_value() {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    value_->clear();
  }
  clear_has_value();
}
inline const ::std::string& CMsgConVarValue::value() const {
  return *value_;
}
inline void CMsgConVarValue::set_value(const ::std::string& value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void CMsgConVarValue::set_value(const char* value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void CMsgConVarValue::set_value(const char* value, size_t size) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgConVarValue::mutable_value() {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  return value_;
}
inline ::std::string* CMsgConVarValue::release_value() {
  clear_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = value_;
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CMsgReplicateConVars

// repeated .CMsgConVarValue convars = 1;
inline int CMsgReplicateConVars::convars_size() const {
  return convars_.size();
}
inline void CMsgReplicateConVars::clear_convars() {
  convars_.Clear();
}
inline const ::CMsgConVarValue& CMsgReplicateConVars::convars(int index) const {
  return convars_.Get(index);
}
inline ::CMsgConVarValue* CMsgReplicateConVars::mutable_convars(int index) {
  return convars_.Mutable(index);
}
inline ::CMsgConVarValue* CMsgReplicateConVars::add_convars() {
  return convars_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgConVarValue >&
CMsgReplicateConVars::convars() const {
  return convars_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgConVarValue >*
CMsgReplicateConVars::mutable_convars() {
  return &convars_;
}

// -------------------------------------------------------------------

// CMsgUseItem

// optional uint64 item_id = 1;
inline bool CMsgUseItem::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgUseItem::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgUseItem::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgUseItem::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::uint64 CMsgUseItem::item_id() const {
  return item_id_;
}
inline void CMsgUseItem::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
}

// optional fixed64 target_steam_id = 2;
inline bool CMsgUseItem::has_target_steam_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgUseItem::set_has_target_steam_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgUseItem::clear_has_target_steam_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgUseItem::clear_target_steam_id() {
  target_steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_target_steam_id();
}
inline ::google::protobuf::uint64 CMsgUseItem::target_steam_id() const {
  return target_steam_id_;
}
inline void CMsgUseItem::set_target_steam_id(::google::protobuf::uint64 value) {
  set_has_target_steam_id();
  target_steam_id_ = value;
}

// repeated uint32 gift__potential_targets = 3;
inline int CMsgUseItem::gift__potential_targets_size() const {
  return gift__potential_targets_.size();
}
inline void CMsgUseItem::clear_gift__potential_targets() {
  gift__potential_targets_.Clear();
}
inline ::google::protobuf::uint32 CMsgUseItem::gift__potential_targets(int index) const {
  return gift__potential_targets_.Get(index);
}
inline void CMsgUseItem::set_gift__potential_targets(int index, ::google::protobuf::uint32 value) {
  gift__potential_targets_.Set(index, value);
}
inline void CMsgUseItem::add_gift__potential_targets(::google::protobuf::uint32 value) {
  gift__potential_targets_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgUseItem::gift__potential_targets() const {
  return gift__potential_targets_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgUseItem::mutable_gift__potential_targets() {
  return &gift__potential_targets_;
}

// optional uint32 duel__class_lock = 4;
inline bool CMsgUseItem::has_duel__class_lock() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgUseItem::set_has_duel__class_lock() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgUseItem::clear_has_duel__class_lock() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgUseItem::clear_duel__class_lock() {
  duel__class_lock_ = 0u;
  clear_has_duel__class_lock();
}
inline ::google::protobuf::uint32 CMsgUseItem::duel__class_lock() const {
  return duel__class_lock_;
}
inline void CMsgUseItem::set_duel__class_lock(::google::protobuf::uint32 value) {
  set_has_duel__class_lock();
  duel__class_lock_ = value;
}

// optional fixed64 initiator_steam_id = 5;
inline bool CMsgUseItem::has_initiator_steam_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgUseItem::set_has_initiator_steam_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgUseItem::clear_has_initiator_steam_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgUseItem::clear_initiator_steam_id() {
  initiator_steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_initiator_steam_id();
}
inline ::google::protobuf::uint64 CMsgUseItem::initiator_steam_id() const {
  return initiator_steam_id_;
}
inline void CMsgUseItem::set_initiator_steam_id(::google::protobuf::uint64 value) {
  set_has_initiator_steam_id();
  initiator_steam_id_ = value;
}

// -------------------------------------------------------------------

// CMsgConsumableExhausted

// optional int32 item_def_id = 1;
inline bool CMsgConsumableExhausted::has_item_def_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgConsumableExhausted::set_has_item_def_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgConsumableExhausted::clear_has_item_def_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgConsumableExhausted::clear_item_def_id() {
  item_def_id_ = 0;
  clear_has_item_def_id();
}
inline ::google::protobuf::int32 CMsgConsumableExhausted::item_def_id() const {
  return item_def_id_;
}
inline void CMsgConsumableExhausted::set_item_def_id(::google::protobuf::int32 value) {
  set_has_item_def_id();
  item_def_id_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgGameServerInfo_ServerType>() {
  return ::CMsgGameServerInfo_ServerType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_base_5fgcmessages_2eproto__INCLUDED
