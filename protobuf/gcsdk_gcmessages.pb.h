// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gcsdk_gcmessages.proto

#ifndef PROTOBUF_gcsdk_5fgcmessages_2eproto__INCLUDED
#define PROTOBUF_gcsdk_5fgcmessages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();

class CMsgSOSingleObject;
class CMsgSOMultipleObjects;
class CMsgSOMultipleObjects_SingleObject;
class CMsgSOCacheSubscribed;
class CMsgSOCacheSubscribed_SubscribedType;
class CMsgSOCacheUnsubscribed;
class CMsgSOCacheSubscriptionCheck;
class CMsgSOCacheSubscriptionRefresh;
class CMsgSOCacheVersion;
class CMsgAccountDetails;

// ===================================================================

class CMsgSOSingleObject : public ::google::protobuf::Message {
 public:
  CMsgSOSingleObject();
  virtual ~CMsgSOSingleObject();

  CMsgSOSingleObject(const CMsgSOSingleObject& from);

  inline CMsgSOSingleObject& operator=(const CMsgSOSingleObject& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSOSingleObject& default_instance();

  void Swap(CMsgSOSingleObject* other);

  // implements Message ----------------------------------------------

  CMsgSOSingleObject* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSOSingleObject& from);
  void MergeFrom(const CMsgSOSingleObject& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 owner = 1;
  inline bool has_owner() const;
  inline void clear_owner();
  static const int kOwnerFieldNumber = 1;
  inline ::google::protobuf::uint64 owner() const;
  inline void set_owner(::google::protobuf::uint64 value);

  // optional int32 type_id = 2;
  inline bool has_type_id() const;
  inline void clear_type_id();
  static const int kTypeIdFieldNumber = 2;
  inline ::google::protobuf::int32 type_id() const;
  inline void set_type_id(::google::protobuf::int32 value);

  // optional bytes object_data = 3;
  inline bool has_object_data() const;
  inline void clear_object_data();
  static const int kObjectDataFieldNumber = 3;
  inline const ::std::string& object_data() const;
  inline void set_object_data(const ::std::string& value);
  inline void set_object_data(const char* value);
  inline void set_object_data(const void* value, size_t size);
  inline ::std::string* mutable_object_data();
  inline ::std::string* release_object_data();
  inline void set_allocated_object_data(::std::string* object_data);

  // optional fixed64 version = 4;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 4;
  inline ::google::protobuf::uint64 version() const;
  inline void set_version(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgSOSingleObject)
 private:
  inline void set_has_owner();
  inline void clear_has_owner();
  inline void set_has_type_id();
  inline void clear_has_type_id();
  inline void set_has_object_data();
  inline void clear_has_object_data();
  inline void set_has_version();
  inline void clear_has_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 owner_;
  ::std::string* object_data_;
  ::google::protobuf::uint64 version_;
  ::google::protobuf::int32 type_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgSOSingleObject* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSOMultipleObjects_SingleObject : public ::google::protobuf::Message {
 public:
  CMsgSOMultipleObjects_SingleObject();
  virtual ~CMsgSOMultipleObjects_SingleObject();

  CMsgSOMultipleObjects_SingleObject(const CMsgSOMultipleObjects_SingleObject& from);

  inline CMsgSOMultipleObjects_SingleObject& operator=(const CMsgSOMultipleObjects_SingleObject& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSOMultipleObjects_SingleObject& default_instance();

  void Swap(CMsgSOMultipleObjects_SingleObject* other);

  // implements Message ----------------------------------------------

  CMsgSOMultipleObjects_SingleObject* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSOMultipleObjects_SingleObject& from);
  void MergeFrom(const CMsgSOMultipleObjects_SingleObject& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type_id = 1;
  inline bool has_type_id() const;
  inline void clear_type_id();
  static const int kTypeIdFieldNumber = 1;
  inline ::google::protobuf::int32 type_id() const;
  inline void set_type_id(::google::protobuf::int32 value);

  // optional bytes object_data = 2;
  inline bool has_object_data() const;
  inline void clear_object_data();
  static const int kObjectDataFieldNumber = 2;
  inline const ::std::string& object_data() const;
  inline void set_object_data(const ::std::string& value);
  inline void set_object_data(const char* value);
  inline void set_object_data(const void* value, size_t size);
  inline ::std::string* mutable_object_data();
  inline ::std::string* release_object_data();
  inline void set_allocated_object_data(::std::string* object_data);

  // @@protoc_insertion_point(class_scope:CMsgSOMultipleObjects.SingleObject)
 private:
  inline void set_has_type_id();
  inline void clear_has_type_id();
  inline void set_has_object_data();
  inline void clear_has_object_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* object_data_;
  ::google::protobuf::int32 type_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgSOMultipleObjects_SingleObject* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSOMultipleObjects : public ::google::protobuf::Message {
 public:
  CMsgSOMultipleObjects();
  virtual ~CMsgSOMultipleObjects();

  CMsgSOMultipleObjects(const CMsgSOMultipleObjects& from);

  inline CMsgSOMultipleObjects& operator=(const CMsgSOMultipleObjects& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSOMultipleObjects& default_instance();

  void Swap(CMsgSOMultipleObjects* other);

  // implements Message ----------------------------------------------

  CMsgSOMultipleObjects* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSOMultipleObjects& from);
  void MergeFrom(const CMsgSOMultipleObjects& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgSOMultipleObjects_SingleObject SingleObject;

  // accessors -------------------------------------------------------

  // optional fixed64 owner = 1;
  inline bool has_owner() const;
  inline void clear_owner();
  static const int kOwnerFieldNumber = 1;
  inline ::google::protobuf::uint64 owner() const;
  inline void set_owner(::google::protobuf::uint64 value);

  // repeated .CMsgSOMultipleObjects.SingleObject objects = 2;
  inline int objects_size() const;
  inline void clear_objects();
  static const int kObjectsFieldNumber = 2;
  inline const ::CMsgSOMultipleObjects_SingleObject& objects(int index) const;
  inline ::CMsgSOMultipleObjects_SingleObject* mutable_objects(int index);
  inline ::CMsgSOMultipleObjects_SingleObject* add_objects();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgSOMultipleObjects_SingleObject >&
      objects() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgSOMultipleObjects_SingleObject >*
      mutable_objects();

  // optional fixed64 version = 3;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 3;
  inline ::google::protobuf::uint64 version() const;
  inline void set_version(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgSOMultipleObjects)
 private:
  inline void set_has_owner();
  inline void clear_has_owner();
  inline void set_has_version();
  inline void clear_has_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 owner_;
  ::google::protobuf::RepeatedPtrField< ::CMsgSOMultipleObjects_SingleObject > objects_;
  ::google::protobuf::uint64 version_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgSOMultipleObjects* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSOCacheSubscribed_SubscribedType : public ::google::protobuf::Message {
 public:
  CMsgSOCacheSubscribed_SubscribedType();
  virtual ~CMsgSOCacheSubscribed_SubscribedType();

  CMsgSOCacheSubscribed_SubscribedType(const CMsgSOCacheSubscribed_SubscribedType& from);

  inline CMsgSOCacheSubscribed_SubscribedType& operator=(const CMsgSOCacheSubscribed_SubscribedType& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSOCacheSubscribed_SubscribedType& default_instance();

  void Swap(CMsgSOCacheSubscribed_SubscribedType* other);

  // implements Message ----------------------------------------------

  CMsgSOCacheSubscribed_SubscribedType* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSOCacheSubscribed_SubscribedType& from);
  void MergeFrom(const CMsgSOCacheSubscribed_SubscribedType& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type_id = 1;
  inline bool has_type_id() const;
  inline void clear_type_id();
  static const int kTypeIdFieldNumber = 1;
  inline ::google::protobuf::int32 type_id() const;
  inline void set_type_id(::google::protobuf::int32 value);

  // repeated bytes object_data = 2;
  inline int object_data_size() const;
  inline void clear_object_data();
  static const int kObjectDataFieldNumber = 2;
  inline const ::std::string& object_data(int index) const;
  inline ::std::string* mutable_object_data(int index);
  inline void set_object_data(int index, const ::std::string& value);
  inline void set_object_data(int index, const char* value);
  inline void set_object_data(int index, const void* value, size_t size);
  inline ::std::string* add_object_data();
  inline void add_object_data(const ::std::string& value);
  inline void add_object_data(const char* value);
  inline void add_object_data(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& object_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_object_data();

  // @@protoc_insertion_point(class_scope:CMsgSOCacheSubscribed.SubscribedType)
 private:
  inline void set_has_type_id();
  inline void clear_has_type_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::std::string> object_data_;
  ::google::protobuf::int32 type_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgSOCacheSubscribed_SubscribedType* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSOCacheSubscribed : public ::google::protobuf::Message {
 public:
  CMsgSOCacheSubscribed();
  virtual ~CMsgSOCacheSubscribed();

  CMsgSOCacheSubscribed(const CMsgSOCacheSubscribed& from);

  inline CMsgSOCacheSubscribed& operator=(const CMsgSOCacheSubscribed& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSOCacheSubscribed& default_instance();

  void Swap(CMsgSOCacheSubscribed* other);

  // implements Message ----------------------------------------------

  CMsgSOCacheSubscribed* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSOCacheSubscribed& from);
  void MergeFrom(const CMsgSOCacheSubscribed& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgSOCacheSubscribed_SubscribedType SubscribedType;

  // accessors -------------------------------------------------------

  // optional fixed64 owner = 1;
  inline bool has_owner() const;
  inline void clear_owner();
  static const int kOwnerFieldNumber = 1;
  inline ::google::protobuf::uint64 owner() const;
  inline void set_owner(::google::protobuf::uint64 value);

  // repeated .CMsgSOCacheSubscribed.SubscribedType objects = 2;
  inline int objects_size() const;
  inline void clear_objects();
  static const int kObjectsFieldNumber = 2;
  inline const ::CMsgSOCacheSubscribed_SubscribedType& objects(int index) const;
  inline ::CMsgSOCacheSubscribed_SubscribedType* mutable_objects(int index);
  inline ::CMsgSOCacheSubscribed_SubscribedType* add_objects();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgSOCacheSubscribed_SubscribedType >&
      objects() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgSOCacheSubscribed_SubscribedType >*
      mutable_objects();

  // optional fixed64 version = 3;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 3;
  inline ::google::protobuf::uint64 version() const;
  inline void set_version(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgSOCacheSubscribed)
 private:
  inline void set_has_owner();
  inline void clear_has_owner();
  inline void set_has_version();
  inline void clear_has_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 owner_;
  ::google::protobuf::RepeatedPtrField< ::CMsgSOCacheSubscribed_SubscribedType > objects_;
  ::google::protobuf::uint64 version_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgSOCacheSubscribed* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSOCacheUnsubscribed : public ::google::protobuf::Message {
 public:
  CMsgSOCacheUnsubscribed();
  virtual ~CMsgSOCacheUnsubscribed();

  CMsgSOCacheUnsubscribed(const CMsgSOCacheUnsubscribed& from);

  inline CMsgSOCacheUnsubscribed& operator=(const CMsgSOCacheUnsubscribed& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSOCacheUnsubscribed& default_instance();

  void Swap(CMsgSOCacheUnsubscribed* other);

  // implements Message ----------------------------------------------

  CMsgSOCacheUnsubscribed* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSOCacheUnsubscribed& from);
  void MergeFrom(const CMsgSOCacheUnsubscribed& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 owner = 1;
  inline bool has_owner() const;
  inline void clear_owner();
  static const int kOwnerFieldNumber = 1;
  inline ::google::protobuf::uint64 owner() const;
  inline void set_owner(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgSOCacheUnsubscribed)
 private:
  inline void set_has_owner();
  inline void clear_has_owner();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 owner_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgSOCacheUnsubscribed* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSOCacheSubscriptionCheck : public ::google::protobuf::Message {
 public:
  CMsgSOCacheSubscriptionCheck();
  virtual ~CMsgSOCacheSubscriptionCheck();

  CMsgSOCacheSubscriptionCheck(const CMsgSOCacheSubscriptionCheck& from);

  inline CMsgSOCacheSubscriptionCheck& operator=(const CMsgSOCacheSubscriptionCheck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSOCacheSubscriptionCheck& default_instance();

  void Swap(CMsgSOCacheSubscriptionCheck* other);

  // implements Message ----------------------------------------------

  CMsgSOCacheSubscriptionCheck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSOCacheSubscriptionCheck& from);
  void MergeFrom(const CMsgSOCacheSubscriptionCheck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 owner = 1;
  inline bool has_owner() const;
  inline void clear_owner();
  static const int kOwnerFieldNumber = 1;
  inline ::google::protobuf::uint64 owner() const;
  inline void set_owner(::google::protobuf::uint64 value);

  // optional fixed64 version = 2;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 2;
  inline ::google::protobuf::uint64 version() const;
  inline void set_version(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgSOCacheSubscriptionCheck)
 private:
  inline void set_has_owner();
  inline void clear_has_owner();
  inline void set_has_version();
  inline void clear_has_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 owner_;
  ::google::protobuf::uint64 version_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgSOCacheSubscriptionCheck* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSOCacheSubscriptionRefresh : public ::google::protobuf::Message {
 public:
  CMsgSOCacheSubscriptionRefresh();
  virtual ~CMsgSOCacheSubscriptionRefresh();

  CMsgSOCacheSubscriptionRefresh(const CMsgSOCacheSubscriptionRefresh& from);

  inline CMsgSOCacheSubscriptionRefresh& operator=(const CMsgSOCacheSubscriptionRefresh& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSOCacheSubscriptionRefresh& default_instance();

  void Swap(CMsgSOCacheSubscriptionRefresh* other);

  // implements Message ----------------------------------------------

  CMsgSOCacheSubscriptionRefresh* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSOCacheSubscriptionRefresh& from);
  void MergeFrom(const CMsgSOCacheSubscriptionRefresh& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 owner = 1;
  inline bool has_owner() const;
  inline void clear_owner();
  static const int kOwnerFieldNumber = 1;
  inline ::google::protobuf::uint64 owner() const;
  inline void set_owner(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgSOCacheSubscriptionRefresh)
 private:
  inline void set_has_owner();
  inline void clear_has_owner();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 owner_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgSOCacheSubscriptionRefresh* default_instance_;
};
// -------------------------------------------------------------------

class CMsgSOCacheVersion : public ::google::protobuf::Message {
 public:
  CMsgSOCacheVersion();
  virtual ~CMsgSOCacheVersion();

  CMsgSOCacheVersion(const CMsgSOCacheVersion& from);

  inline CMsgSOCacheVersion& operator=(const CMsgSOCacheVersion& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSOCacheVersion& default_instance();

  void Swap(CMsgSOCacheVersion* other);

  // implements Message ----------------------------------------------

  CMsgSOCacheVersion* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgSOCacheVersion& from);
  void MergeFrom(const CMsgSOCacheVersion& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 version = 1;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 1;
  inline ::google::protobuf::uint64 version() const;
  inline void set_version(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgSOCacheVersion)
 private:
  inline void set_has_version();
  inline void clear_has_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 version_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgSOCacheVersion* default_instance_;
};
// -------------------------------------------------------------------

class CMsgAccountDetails : public ::google::protobuf::Message {
 public:
  CMsgAccountDetails();
  virtual ~CMsgAccountDetails();

  CMsgAccountDetails(const CMsgAccountDetails& from);

  inline CMsgAccountDetails& operator=(const CMsgAccountDetails& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgAccountDetails& default_instance();

  void Swap(CMsgAccountDetails* other);

  // implements Message ----------------------------------------------

  CMsgAccountDetails* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgAccountDetails& from);
  void MergeFrom(const CMsgAccountDetails& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool valid = 1;
  inline bool has_valid() const;
  inline void clear_valid();
  static const int kValidFieldNumber = 1;
  inline bool valid() const;
  inline void set_valid(bool value);

  // optional string account_name = 2;
  inline bool has_account_name() const;
  inline void clear_account_name();
  static const int kAccountNameFieldNumber = 2;
  inline const ::std::string& account_name() const;
  inline void set_account_name(const ::std::string& value);
  inline void set_account_name(const char* value);
  inline void set_account_name(const char* value, size_t size);
  inline ::std::string* mutable_account_name();
  inline ::std::string* release_account_name();
  inline void set_allocated_account_name(::std::string* account_name);

  // optional bool public_profile = 4;
  inline bool has_public_profile() const;
  inline void clear_public_profile();
  static const int kPublicProfileFieldNumber = 4;
  inline bool public_profile() const;
  inline void set_public_profile(bool value);

  // optional bool public_inventory = 5;
  inline bool has_public_inventory() const;
  inline void clear_public_inventory();
  static const int kPublicInventoryFieldNumber = 5;
  inline bool public_inventory() const;
  inline void set_public_inventory(bool value);

  // optional bool vac_banned = 6;
  inline bool has_vac_banned() const;
  inline void clear_vac_banned();
  static const int kVacBannedFieldNumber = 6;
  inline bool vac_banned() const;
  inline void set_vac_banned(bool value);

  // optional bool cyber_cafe = 7;
  inline bool has_cyber_cafe() const;
  inline void clear_cyber_cafe();
  static const int kCyberCafeFieldNumber = 7;
  inline bool cyber_cafe() const;
  inline void set_cyber_cafe(bool value);

  // optional bool school_account = 8;
  inline bool has_school_account() const;
  inline void clear_school_account();
  static const int kSchoolAccountFieldNumber = 8;
  inline bool school_account() const;
  inline void set_school_account(bool value);

  // optional bool free_trial_account = 9;
  inline bool has_free_trial_account() const;
  inline void clear_free_trial_account();
  static const int kFreeTrialAccountFieldNumber = 9;
  inline bool free_trial_account() const;
  inline void set_free_trial_account(bool value);

  // optional bool subscribed = 10;
  inline bool has_subscribed() const;
  inline void clear_subscribed();
  static const int kSubscribedFieldNumber = 10;
  inline bool subscribed() const;
  inline void set_subscribed(bool value);

  // optional bool low_violence = 11;
  inline bool has_low_violence() const;
  inline void clear_low_violence();
  static const int kLowViolenceFieldNumber = 11;
  inline bool low_violence() const;
  inline void set_low_violence(bool value);

  // optional bool limited = 12;
  inline bool has_limited() const;
  inline void clear_limited();
  static const int kLimitedFieldNumber = 12;
  inline bool limited() const;
  inline void set_limited(bool value);

  // optional bool trusted = 13;
  inline bool has_trusted() const;
  inline void clear_trusted();
  static const int kTrustedFieldNumber = 13;
  inline bool trusted() const;
  inline void set_trusted(bool value);

  // optional uint32 package = 14;
  inline bool has_package() const;
  inline void clear_package();
  static const int kPackageFieldNumber = 14;
  inline ::google::protobuf::uint32 package() const;
  inline void set_package(::google::protobuf::uint32 value);

  // optional fixed32 time_cached = 15;
  inline bool has_time_cached() const;
  inline void clear_time_cached();
  static const int kTimeCachedFieldNumber = 15;
  inline ::google::protobuf::uint32 time_cached() const;
  inline void set_time_cached(::google::protobuf::uint32 value);

  // optional bool account_locked = 16;
  inline bool has_account_locked() const;
  inline void clear_account_locked();
  static const int kAccountLockedFieldNumber = 16;
  inline bool account_locked() const;
  inline void set_account_locked(bool value);

  // optional bool community_banned = 17;
  inline bool has_community_banned() const;
  inline void clear_community_banned();
  static const int kCommunityBannedFieldNumber = 17;
  inline bool community_banned() const;
  inline void set_community_banned(bool value);

  // optional bool trade_banned = 18;
  inline bool has_trade_banned() const;
  inline void clear_trade_banned();
  static const int kTradeBannedFieldNumber = 18;
  inline bool trade_banned() const;
  inline void set_trade_banned(bool value);

  // optional bool eligible_for_community_market = 19;
  inline bool has_eligible_for_community_market() const;
  inline void clear_eligible_for_community_market();
  static const int kEligibleForCommunityMarketFieldNumber = 19;
  inline bool eligible_for_community_market() const;
  inline void set_eligible_for_community_market(bool value);

  // @@protoc_insertion_point(class_scope:CMsgAccountDetails)
 private:
  inline void set_has_valid();
  inline void clear_has_valid();
  inline void set_has_account_name();
  inline void clear_has_account_name();
  inline void set_has_public_profile();
  inline void clear_has_public_profile();
  inline void set_has_public_inventory();
  inline void clear_has_public_inventory();
  inline void set_has_vac_banned();
  inline void clear_has_vac_banned();
  inline void set_has_cyber_cafe();
  inline void clear_has_cyber_cafe();
  inline void set_has_school_account();
  inline void clear_has_school_account();
  inline void set_has_free_trial_account();
  inline void clear_has_free_trial_account();
  inline void set_has_subscribed();
  inline void clear_has_subscribed();
  inline void set_has_low_violence();
  inline void clear_has_low_violence();
  inline void set_has_limited();
  inline void clear_has_limited();
  inline void set_has_trusted();
  inline void clear_has_trusted();
  inline void set_has_package();
  inline void clear_has_package();
  inline void set_has_time_cached();
  inline void clear_has_time_cached();
  inline void set_has_account_locked();
  inline void clear_has_account_locked();
  inline void set_has_community_banned();
  inline void clear_has_community_banned();
  inline void set_has_trade_banned();
  inline void clear_has_trade_banned();
  inline void set_has_eligible_for_community_market();
  inline void clear_has_eligible_for_community_market();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* account_name_;
  bool valid_;
  bool public_profile_;
  bool public_inventory_;
  bool vac_banned_;
  bool cyber_cafe_;
  bool school_account_;
  bool free_trial_account_;
  bool subscribed_;
  bool low_violence_;
  bool limited_;
  bool trusted_;
  bool account_locked_;
  ::google::protobuf::uint32 package_;
  ::google::protobuf::uint32 time_cached_;
  bool community_banned_;
  bool trade_banned_;
  bool eligible_for_community_market_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(18 + 31) / 32];

  friend void  protobuf_AddDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_AssignDesc_gcsdk_5fgcmessages_2eproto();
  friend void protobuf_ShutdownFile_gcsdk_5fgcmessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgAccountDetails* default_instance_;
};
// ===================================================================


// ===================================================================

// CMsgSOSingleObject

// optional fixed64 owner = 1;
inline bool CMsgSOSingleObject::has_owner() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSOSingleObject::set_has_owner() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSOSingleObject::clear_has_owner() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSOSingleObject::clear_owner() {
  owner_ = GOOGLE_ULONGLONG(0);
  clear_has_owner();
}
inline ::google::protobuf::uint64 CMsgSOSingleObject::owner() const {
  return owner_;
}
inline void CMsgSOSingleObject::set_owner(::google::protobuf::uint64 value) {
  set_has_owner();
  owner_ = value;
}

// optional int32 type_id = 2;
inline bool CMsgSOSingleObject::has_type_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSOSingleObject::set_has_type_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSOSingleObject::clear_has_type_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSOSingleObject::clear_type_id() {
  type_id_ = 0;
  clear_has_type_id();
}
inline ::google::protobuf::int32 CMsgSOSingleObject::type_id() const {
  return type_id_;
}
inline void CMsgSOSingleObject::set_type_id(::google::protobuf::int32 value) {
  set_has_type_id();
  type_id_ = value;
}

// optional bytes object_data = 3;
inline bool CMsgSOSingleObject::has_object_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSOSingleObject::set_has_object_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSOSingleObject::clear_has_object_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSOSingleObject::clear_object_data() {
  if (object_data_ != &::google::protobuf::internal::kEmptyString) {
    object_data_->clear();
  }
  clear_has_object_data();
}
inline const ::std::string& CMsgSOSingleObject::object_data() const {
  return *object_data_;
}
inline void CMsgSOSingleObject::set_object_data(const ::std::string& value) {
  set_has_object_data();
  if (object_data_ == &::google::protobuf::internal::kEmptyString) {
    object_data_ = new ::std::string;
  }
  object_data_->assign(value);
}
inline void CMsgSOSingleObject::set_object_data(const char* value) {
  set_has_object_data();
  if (object_data_ == &::google::protobuf::internal::kEmptyString) {
    object_data_ = new ::std::string;
  }
  object_data_->assign(value);
}
inline void CMsgSOSingleObject::set_object_data(const void* value, size_t size) {
  set_has_object_data();
  if (object_data_ == &::google::protobuf::internal::kEmptyString) {
    object_data_ = new ::std::string;
  }
  object_data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgSOSingleObject::mutable_object_data() {
  set_has_object_data();
  if (object_data_ == &::google::protobuf::internal::kEmptyString) {
    object_data_ = new ::std::string;
  }
  return object_data_;
}
inline ::std::string* CMsgSOSingleObject::release_object_data() {
  clear_has_object_data();
  if (object_data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = object_data_;
    object_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgSOSingleObject::set_allocated_object_data(::std::string* object_data) {
  if (object_data_ != &::google::protobuf::internal::kEmptyString) {
    delete object_data_;
  }
  if (object_data) {
    set_has_object_data();
    object_data_ = object_data;
  } else {
    clear_has_object_data();
    object_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional fixed64 version = 4;
inline bool CMsgSOSingleObject::has_version() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSOSingleObject::set_has_version() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSOSingleObject::clear_has_version() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSOSingleObject::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
  clear_has_version();
}
inline ::google::protobuf::uint64 CMsgSOSingleObject::version() const {
  return version_;
}
inline void CMsgSOSingleObject::set_version(::google::protobuf::uint64 value) {
  set_has_version();
  version_ = value;
}

// -------------------------------------------------------------------

// CMsgSOMultipleObjects_SingleObject

// optional int32 type_id = 1;
inline bool CMsgSOMultipleObjects_SingleObject::has_type_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSOMultipleObjects_SingleObject::set_has_type_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSOMultipleObjects_SingleObject::clear_has_type_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSOMultipleObjects_SingleObject::clear_type_id() {
  type_id_ = 0;
  clear_has_type_id();
}
inline ::google::protobuf::int32 CMsgSOMultipleObjects_SingleObject::type_id() const {
  return type_id_;
}
inline void CMsgSOMultipleObjects_SingleObject::set_type_id(::google::protobuf::int32 value) {
  set_has_type_id();
  type_id_ = value;
}

// optional bytes object_data = 2;
inline bool CMsgSOMultipleObjects_SingleObject::has_object_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSOMultipleObjects_SingleObject::set_has_object_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSOMultipleObjects_SingleObject::clear_has_object_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSOMultipleObjects_SingleObject::clear_object_data() {
  if (object_data_ != &::google::protobuf::internal::kEmptyString) {
    object_data_->clear();
  }
  clear_has_object_data();
}
inline const ::std::string& CMsgSOMultipleObjects_SingleObject::object_data() const {
  return *object_data_;
}
inline void CMsgSOMultipleObjects_SingleObject::set_object_data(const ::std::string& value) {
  set_has_object_data();
  if (object_data_ == &::google::protobuf::internal::kEmptyString) {
    object_data_ = new ::std::string;
  }
  object_data_->assign(value);
}
inline void CMsgSOMultipleObjects_SingleObject::set_object_data(const char* value) {
  set_has_object_data();
  if (object_data_ == &::google::protobuf::internal::kEmptyString) {
    object_data_ = new ::std::string;
  }
  object_data_->assign(value);
}
inline void CMsgSOMultipleObjects_SingleObject::set_object_data(const void* value, size_t size) {
  set_has_object_data();
  if (object_data_ == &::google::protobuf::internal::kEmptyString) {
    object_data_ = new ::std::string;
  }
  object_data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgSOMultipleObjects_SingleObject::mutable_object_data() {
  set_has_object_data();
  if (object_data_ == &::google::protobuf::internal::kEmptyString) {
    object_data_ = new ::std::string;
  }
  return object_data_;
}
inline ::std::string* CMsgSOMultipleObjects_SingleObject::release_object_data() {
  clear_has_object_data();
  if (object_data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = object_data_;
    object_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgSOMultipleObjects_SingleObject::set_allocated_object_data(::std::string* object_data) {
  if (object_data_ != &::google::protobuf::internal::kEmptyString) {
    delete object_data_;
  }
  if (object_data) {
    set_has_object_data();
    object_data_ = object_data;
  } else {
    clear_has_object_data();
    object_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgSOMultipleObjects

// optional fixed64 owner = 1;
inline bool CMsgSOMultipleObjects::has_owner() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSOMultipleObjects::set_has_owner() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSOMultipleObjects::clear_has_owner() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSOMultipleObjects::clear_owner() {
  owner_ = GOOGLE_ULONGLONG(0);
  clear_has_owner();
}
inline ::google::protobuf::uint64 CMsgSOMultipleObjects::owner() const {
  return owner_;
}
inline void CMsgSOMultipleObjects::set_owner(::google::protobuf::uint64 value) {
  set_has_owner();
  owner_ = value;
}

// repeated .CMsgSOMultipleObjects.SingleObject objects = 2;
inline int CMsgSOMultipleObjects::objects_size() const {
  return objects_.size();
}
inline void CMsgSOMultipleObjects::clear_objects() {
  objects_.Clear();
}
inline const ::CMsgSOMultipleObjects_SingleObject& CMsgSOMultipleObjects::objects(int index) const {
  return objects_.Get(index);
}
inline ::CMsgSOMultipleObjects_SingleObject* CMsgSOMultipleObjects::mutable_objects(int index) {
  return objects_.Mutable(index);
}
inline ::CMsgSOMultipleObjects_SingleObject* CMsgSOMultipleObjects::add_objects() {
  return objects_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSOMultipleObjects_SingleObject >&
CMsgSOMultipleObjects::objects() const {
  return objects_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSOMultipleObjects_SingleObject >*
CMsgSOMultipleObjects::mutable_objects() {
  return &objects_;
}

// optional fixed64 version = 3;
inline bool CMsgSOMultipleObjects::has_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSOMultipleObjects::set_has_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSOMultipleObjects::clear_has_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSOMultipleObjects::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
  clear_has_version();
}
inline ::google::protobuf::uint64 CMsgSOMultipleObjects::version() const {
  return version_;
}
inline void CMsgSOMultipleObjects::set_version(::google::protobuf::uint64 value) {
  set_has_version();
  version_ = value;
}

// -------------------------------------------------------------------

// CMsgSOCacheSubscribed_SubscribedType

// optional int32 type_id = 1;
inline bool CMsgSOCacheSubscribed_SubscribedType::has_type_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSOCacheSubscribed_SubscribedType::set_has_type_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSOCacheSubscribed_SubscribedType::clear_has_type_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSOCacheSubscribed_SubscribedType::clear_type_id() {
  type_id_ = 0;
  clear_has_type_id();
}
inline ::google::protobuf::int32 CMsgSOCacheSubscribed_SubscribedType::type_id() const {
  return type_id_;
}
inline void CMsgSOCacheSubscribed_SubscribedType::set_type_id(::google::protobuf::int32 value) {
  set_has_type_id();
  type_id_ = value;
}

// repeated bytes object_data = 2;
inline int CMsgSOCacheSubscribed_SubscribedType::object_data_size() const {
  return object_data_.size();
}
inline void CMsgSOCacheSubscribed_SubscribedType::clear_object_data() {
  object_data_.Clear();
}
inline const ::std::string& CMsgSOCacheSubscribed_SubscribedType::object_data(int index) const {
  return object_data_.Get(index);
}
inline ::std::string* CMsgSOCacheSubscribed_SubscribedType::mutable_object_data(int index) {
  return object_data_.Mutable(index);
}
inline void CMsgSOCacheSubscribed_SubscribedType::set_object_data(int index, const ::std::string& value) {
  object_data_.Mutable(index)->assign(value);
}
inline void CMsgSOCacheSubscribed_SubscribedType::set_object_data(int index, const char* value) {
  object_data_.Mutable(index)->assign(value);
}
inline void CMsgSOCacheSubscribed_SubscribedType::set_object_data(int index, const void* value, size_t size) {
  object_data_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgSOCacheSubscribed_SubscribedType::add_object_data() {
  return object_data_.Add();
}
inline void CMsgSOCacheSubscribed_SubscribedType::add_object_data(const ::std::string& value) {
  object_data_.Add()->assign(value);
}
inline void CMsgSOCacheSubscribed_SubscribedType::add_object_data(const char* value) {
  object_data_.Add()->assign(value);
}
inline void CMsgSOCacheSubscribed_SubscribedType::add_object_data(const void* value, size_t size) {
  object_data_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMsgSOCacheSubscribed_SubscribedType::object_data() const {
  return object_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CMsgSOCacheSubscribed_SubscribedType::mutable_object_data() {
  return &object_data_;
}

// -------------------------------------------------------------------

// CMsgSOCacheSubscribed

// optional fixed64 owner = 1;
inline bool CMsgSOCacheSubscribed::has_owner() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSOCacheSubscribed::set_has_owner() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSOCacheSubscribed::clear_has_owner() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSOCacheSubscribed::clear_owner() {
  owner_ = GOOGLE_ULONGLONG(0);
  clear_has_owner();
}
inline ::google::protobuf::uint64 CMsgSOCacheSubscribed::owner() const {
  return owner_;
}
inline void CMsgSOCacheSubscribed::set_owner(::google::protobuf::uint64 value) {
  set_has_owner();
  owner_ = value;
}

// repeated .CMsgSOCacheSubscribed.SubscribedType objects = 2;
inline int CMsgSOCacheSubscribed::objects_size() const {
  return objects_.size();
}
inline void CMsgSOCacheSubscribed::clear_objects() {
  objects_.Clear();
}
inline const ::CMsgSOCacheSubscribed_SubscribedType& CMsgSOCacheSubscribed::objects(int index) const {
  return objects_.Get(index);
}
inline ::CMsgSOCacheSubscribed_SubscribedType* CMsgSOCacheSubscribed::mutable_objects(int index) {
  return objects_.Mutable(index);
}
inline ::CMsgSOCacheSubscribed_SubscribedType* CMsgSOCacheSubscribed::add_objects() {
  return objects_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSOCacheSubscribed_SubscribedType >&
CMsgSOCacheSubscribed::objects() const {
  return objects_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSOCacheSubscribed_SubscribedType >*
CMsgSOCacheSubscribed::mutable_objects() {
  return &objects_;
}

// optional fixed64 version = 3;
inline bool CMsgSOCacheSubscribed::has_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSOCacheSubscribed::set_has_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSOCacheSubscribed::clear_has_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSOCacheSubscribed::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
  clear_has_version();
}
inline ::google::protobuf::uint64 CMsgSOCacheSubscribed::version() const {
  return version_;
}
inline void CMsgSOCacheSubscribed::set_version(::google::protobuf::uint64 value) {
  set_has_version();
  version_ = value;
}

// -------------------------------------------------------------------

// CMsgSOCacheUnsubscribed

// optional fixed64 owner = 1;
inline bool CMsgSOCacheUnsubscribed::has_owner() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSOCacheUnsubscribed::set_has_owner() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSOCacheUnsubscribed::clear_has_owner() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSOCacheUnsubscribed::clear_owner() {
  owner_ = GOOGLE_ULONGLONG(0);
  clear_has_owner();
}
inline ::google::protobuf::uint64 CMsgSOCacheUnsubscribed::owner() const {
  return owner_;
}
inline void CMsgSOCacheUnsubscribed::set_owner(::google::protobuf::uint64 value) {
  set_has_owner();
  owner_ = value;
}

// -------------------------------------------------------------------

// CMsgSOCacheSubscriptionCheck

// optional fixed64 owner = 1;
inline bool CMsgSOCacheSubscriptionCheck::has_owner() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSOCacheSubscriptionCheck::set_has_owner() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSOCacheSubscriptionCheck::clear_has_owner() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSOCacheSubscriptionCheck::clear_owner() {
  owner_ = GOOGLE_ULONGLONG(0);
  clear_has_owner();
}
inline ::google::protobuf::uint64 CMsgSOCacheSubscriptionCheck::owner() const {
  return owner_;
}
inline void CMsgSOCacheSubscriptionCheck::set_owner(::google::protobuf::uint64 value) {
  set_has_owner();
  owner_ = value;
}

// optional fixed64 version = 2;
inline bool CMsgSOCacheSubscriptionCheck::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSOCacheSubscriptionCheck::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSOCacheSubscriptionCheck::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSOCacheSubscriptionCheck::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
  clear_has_version();
}
inline ::google::protobuf::uint64 CMsgSOCacheSubscriptionCheck::version() const {
  return version_;
}
inline void CMsgSOCacheSubscriptionCheck::set_version(::google::protobuf::uint64 value) {
  set_has_version();
  version_ = value;
}

// -------------------------------------------------------------------

// CMsgSOCacheSubscriptionRefresh

// optional fixed64 owner = 1;
inline bool CMsgSOCacheSubscriptionRefresh::has_owner() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSOCacheSubscriptionRefresh::set_has_owner() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSOCacheSubscriptionRefresh::clear_has_owner() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSOCacheSubscriptionRefresh::clear_owner() {
  owner_ = GOOGLE_ULONGLONG(0);
  clear_has_owner();
}
inline ::google::protobuf::uint64 CMsgSOCacheSubscriptionRefresh::owner() const {
  return owner_;
}
inline void CMsgSOCacheSubscriptionRefresh::set_owner(::google::protobuf::uint64 value) {
  set_has_owner();
  owner_ = value;
}

// -------------------------------------------------------------------

// CMsgSOCacheVersion

// optional fixed64 version = 1;
inline bool CMsgSOCacheVersion::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSOCacheVersion::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSOCacheVersion::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSOCacheVersion::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
  clear_has_version();
}
inline ::google::protobuf::uint64 CMsgSOCacheVersion::version() const {
  return version_;
}
inline void CMsgSOCacheVersion::set_version(::google::protobuf::uint64 value) {
  set_has_version();
  version_ = value;
}

// -------------------------------------------------------------------

// CMsgAccountDetails

// optional bool valid = 1;
inline bool CMsgAccountDetails::has_valid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAccountDetails::set_has_valid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgAccountDetails::clear_has_valid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgAccountDetails::clear_valid() {
  valid_ = false;
  clear_has_valid();
}
inline bool CMsgAccountDetails::valid() const {
  return valid_;
}
inline void CMsgAccountDetails::set_valid(bool value) {
  set_has_valid();
  valid_ = value;
}

// optional string account_name = 2;
inline bool CMsgAccountDetails::has_account_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgAccountDetails::set_has_account_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgAccountDetails::clear_has_account_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgAccountDetails::clear_account_name() {
  if (account_name_ != &::google::protobuf::internal::kEmptyString) {
    account_name_->clear();
  }
  clear_has_account_name();
}
inline const ::std::string& CMsgAccountDetails::account_name() const {
  return *account_name_;
}
inline void CMsgAccountDetails::set_account_name(const ::std::string& value) {
  set_has_account_name();
  if (account_name_ == &::google::protobuf::internal::kEmptyString) {
    account_name_ = new ::std::string;
  }
  account_name_->assign(value);
}
inline void CMsgAccountDetails::set_account_name(const char* value) {
  set_has_account_name();
  if (account_name_ == &::google::protobuf::internal::kEmptyString) {
    account_name_ = new ::std::string;
  }
  account_name_->assign(value);
}
inline void CMsgAccountDetails::set_account_name(const char* value, size_t size) {
  set_has_account_name();
  if (account_name_ == &::google::protobuf::internal::kEmptyString) {
    account_name_ = new ::std::string;
  }
  account_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgAccountDetails::mutable_account_name() {
  set_has_account_name();
  if (account_name_ == &::google::protobuf::internal::kEmptyString) {
    account_name_ = new ::std::string;
  }
  return account_name_;
}
inline ::std::string* CMsgAccountDetails::release_account_name() {
  clear_has_account_name();
  if (account_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = account_name_;
    account_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgAccountDetails::set_allocated_account_name(::std::string* account_name) {
  if (account_name_ != &::google::protobuf::internal::kEmptyString) {
    delete account_name_;
  }
  if (account_name) {
    set_has_account_name();
    account_name_ = account_name;
  } else {
    clear_has_account_name();
    account_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool public_profile = 4;
inline bool CMsgAccountDetails::has_public_profile() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgAccountDetails::set_has_public_profile() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgAccountDetails::clear_has_public_profile() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgAccountDetails::clear_public_profile() {
  public_profile_ = false;
  clear_has_public_profile();
}
inline bool CMsgAccountDetails::public_profile() const {
  return public_profile_;
}
inline void CMsgAccountDetails::set_public_profile(bool value) {
  set_has_public_profile();
  public_profile_ = value;
}

// optional bool public_inventory = 5;
inline bool CMsgAccountDetails::has_public_inventory() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgAccountDetails::set_has_public_inventory() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgAccountDetails::clear_has_public_inventory() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgAccountDetails::clear_public_inventory() {
  public_inventory_ = false;
  clear_has_public_inventory();
}
inline bool CMsgAccountDetails::public_inventory() const {
  return public_inventory_;
}
inline void CMsgAccountDetails::set_public_inventory(bool value) {
  set_has_public_inventory();
  public_inventory_ = value;
}

// optional bool vac_banned = 6;
inline bool CMsgAccountDetails::has_vac_banned() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgAccountDetails::set_has_vac_banned() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgAccountDetails::clear_has_vac_banned() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgAccountDetails::clear_vac_banned() {
  vac_banned_ = false;
  clear_has_vac_banned();
}
inline bool CMsgAccountDetails::vac_banned() const {
  return vac_banned_;
}
inline void CMsgAccountDetails::set_vac_banned(bool value) {
  set_has_vac_banned();
  vac_banned_ = value;
}

// optional bool cyber_cafe = 7;
inline bool CMsgAccountDetails::has_cyber_cafe() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgAccountDetails::set_has_cyber_cafe() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgAccountDetails::clear_has_cyber_cafe() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgAccountDetails::clear_cyber_cafe() {
  cyber_cafe_ = false;
  clear_has_cyber_cafe();
}
inline bool CMsgAccountDetails::cyber_cafe() const {
  return cyber_cafe_;
}
inline void CMsgAccountDetails::set_cyber_cafe(bool value) {
  set_has_cyber_cafe();
  cyber_cafe_ = value;
}

// optional bool school_account = 8;
inline bool CMsgAccountDetails::has_school_account() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgAccountDetails::set_has_school_account() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgAccountDetails::clear_has_school_account() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgAccountDetails::clear_school_account() {
  school_account_ = false;
  clear_has_school_account();
}
inline bool CMsgAccountDetails::school_account() const {
  return school_account_;
}
inline void CMsgAccountDetails::set_school_account(bool value) {
  set_has_school_account();
  school_account_ = value;
}

// optional bool free_trial_account = 9;
inline bool CMsgAccountDetails::has_free_trial_account() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgAccountDetails::set_has_free_trial_account() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgAccountDetails::clear_has_free_trial_account() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgAccountDetails::clear_free_trial_account() {
  free_trial_account_ = false;
  clear_has_free_trial_account();
}
inline bool CMsgAccountDetails::free_trial_account() const {
  return free_trial_account_;
}
inline void CMsgAccountDetails::set_free_trial_account(bool value) {
  set_has_free_trial_account();
  free_trial_account_ = value;
}

// optional bool subscribed = 10;
inline bool CMsgAccountDetails::has_subscribed() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgAccountDetails::set_has_subscribed() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgAccountDetails::clear_has_subscribed() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgAccountDetails::clear_subscribed() {
  subscribed_ = false;
  clear_has_subscribed();
}
inline bool CMsgAccountDetails::subscribed() const {
  return subscribed_;
}
inline void CMsgAccountDetails::set_subscribed(bool value) {
  set_has_subscribed();
  subscribed_ = value;
}

// optional bool low_violence = 11;
inline bool CMsgAccountDetails::has_low_violence() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgAccountDetails::set_has_low_violence() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgAccountDetails::clear_has_low_violence() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgAccountDetails::clear_low_violence() {
  low_violence_ = false;
  clear_has_low_violence();
}
inline bool CMsgAccountDetails::low_violence() const {
  return low_violence_;
}
inline void CMsgAccountDetails::set_low_violence(bool value) {
  set_has_low_violence();
  low_violence_ = value;
}

// optional bool limited = 12;
inline bool CMsgAccountDetails::has_limited() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgAccountDetails::set_has_limited() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgAccountDetails::clear_has_limited() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgAccountDetails::clear_limited() {
  limited_ = false;
  clear_has_limited();
}
inline bool CMsgAccountDetails::limited() const {
  return limited_;
}
inline void CMsgAccountDetails::set_limited(bool value) {
  set_has_limited();
  limited_ = value;
}

// optional bool trusted = 13;
inline bool CMsgAccountDetails::has_trusted() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgAccountDetails::set_has_trusted() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgAccountDetails::clear_has_trusted() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgAccountDetails::clear_trusted() {
  trusted_ = false;
  clear_has_trusted();
}
inline bool CMsgAccountDetails::trusted() const {
  return trusted_;
}
inline void CMsgAccountDetails::set_trusted(bool value) {
  set_has_trusted();
  trusted_ = value;
}

// optional uint32 package = 14;
inline bool CMsgAccountDetails::has_package() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgAccountDetails::set_has_package() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgAccountDetails::clear_has_package() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgAccountDetails::clear_package() {
  package_ = 0u;
  clear_has_package();
}
inline ::google::protobuf::uint32 CMsgAccountDetails::package() const {
  return package_;
}
inline void CMsgAccountDetails::set_package(::google::protobuf::uint32 value) {
  set_has_package();
  package_ = value;
}

// optional fixed32 time_cached = 15;
inline bool CMsgAccountDetails::has_time_cached() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgAccountDetails::set_has_time_cached() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgAccountDetails::clear_has_time_cached() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgAccountDetails::clear_time_cached() {
  time_cached_ = 0u;
  clear_has_time_cached();
}
inline ::google::protobuf::uint32 CMsgAccountDetails::time_cached() const {
  return time_cached_;
}
inline void CMsgAccountDetails::set_time_cached(::google::protobuf::uint32 value) {
  set_has_time_cached();
  time_cached_ = value;
}

// optional bool account_locked = 16;
inline bool CMsgAccountDetails::has_account_locked() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgAccountDetails::set_has_account_locked() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgAccountDetails::clear_has_account_locked() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgAccountDetails::clear_account_locked() {
  account_locked_ = false;
  clear_has_account_locked();
}
inline bool CMsgAccountDetails::account_locked() const {
  return account_locked_;
}
inline void CMsgAccountDetails::set_account_locked(bool value) {
  set_has_account_locked();
  account_locked_ = value;
}

// optional bool community_banned = 17;
inline bool CMsgAccountDetails::has_community_banned() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgAccountDetails::set_has_community_banned() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMsgAccountDetails::clear_has_community_banned() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMsgAccountDetails::clear_community_banned() {
  community_banned_ = false;
  clear_has_community_banned();
}
inline bool CMsgAccountDetails::community_banned() const {
  return community_banned_;
}
inline void CMsgAccountDetails::set_community_banned(bool value) {
  set_has_community_banned();
  community_banned_ = value;
}

// optional bool trade_banned = 18;
inline bool CMsgAccountDetails::has_trade_banned() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgAccountDetails::set_has_trade_banned() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CMsgAccountDetails::clear_has_trade_banned() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CMsgAccountDetails::clear_trade_banned() {
  trade_banned_ = false;
  clear_has_trade_banned();
}
inline bool CMsgAccountDetails::trade_banned() const {
  return trade_banned_;
}
inline void CMsgAccountDetails::set_trade_banned(bool value) {
  set_has_trade_banned();
  trade_banned_ = value;
}

// optional bool eligible_for_community_market = 19;
inline bool CMsgAccountDetails::has_eligible_for_community_market() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgAccountDetails::set_has_eligible_for_community_market() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CMsgAccountDetails::clear_has_eligible_for_community_market() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CMsgAccountDetails::clear_eligible_for_community_market() {
  eligible_for_community_market_ = false;
  clear_has_eligible_for_community_market();
}
inline bool CMsgAccountDetails::eligible_for_community_market() const {
  return eligible_for_community_market_;
}
inline void CMsgAccountDetails::set_eligible_for_community_market(bool value) {
  set_has_eligible_for_community_market();
  eligible_for_community_market_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_gcsdk_5fgcmessages_2eproto__INCLUDED
