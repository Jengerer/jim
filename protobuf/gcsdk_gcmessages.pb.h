// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gcsdk_gcmessages.proto

#ifndef PROTOBUF_gcsdk_5fgcmessages_2eproto__INCLUDED
#define PROTOBUF_gcsdk_5fgcmessages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "steammessages.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_gcsdk_5fgcmessages_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[29];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsCMsgSOIDOwnerImpl();
void InitDefaultsCMsgSOIDOwner();
void InitDefaultsCMsgSOSingleObjectImpl();
void InitDefaultsCMsgSOSingleObject();
void InitDefaultsCMsgSOMultipleObjects_SingleObjectImpl();
void InitDefaultsCMsgSOMultipleObjects_SingleObject();
void InitDefaultsCMsgSOMultipleObjectsImpl();
void InitDefaultsCMsgSOMultipleObjects();
void InitDefaultsCMsgSOCacheSubscribed_SubscribedTypeImpl();
void InitDefaultsCMsgSOCacheSubscribed_SubscribedType();
void InitDefaultsCMsgSOCacheSubscribedImpl();
void InitDefaultsCMsgSOCacheSubscribed();
void InitDefaultsCMsgSOCacheSubscribedUpToDateImpl();
void InitDefaultsCMsgSOCacheSubscribedUpToDate();
void InitDefaultsCMsgSOCacheUnsubscribedImpl();
void InitDefaultsCMsgSOCacheUnsubscribed();
void InitDefaultsCMsgSOCacheSubscriptionCheckImpl();
void InitDefaultsCMsgSOCacheSubscriptionCheck();
void InitDefaultsCMsgSOCacheSubscriptionRefreshImpl();
void InitDefaultsCMsgSOCacheSubscriptionRefresh();
void InitDefaultsCMsgSOCacheVersionImpl();
void InitDefaultsCMsgSOCacheVersion();
void InitDefaultsCMsgGCMultiplexMessageImpl();
void InitDefaultsCMsgGCMultiplexMessage();
void InitDefaultsCGCToGCMsgMasterAckImpl();
void InitDefaultsCGCToGCMsgMasterAck();
void InitDefaultsCGCToGCMsgMasterAck_ResponseImpl();
void InitDefaultsCGCToGCMsgMasterAck_Response();
void InitDefaultsCGCToGCMsgMasterStartupComplete_GCInfoImpl();
void InitDefaultsCGCToGCMsgMasterStartupComplete_GCInfo();
void InitDefaultsCGCToGCMsgMasterStartupCompleteImpl();
void InitDefaultsCGCToGCMsgMasterStartupComplete();
void InitDefaultsCGCToGCMsgRoutedImpl();
void InitDefaultsCGCToGCMsgRouted();
void InitDefaultsCGCToGCMsgRoutedReplyImpl();
void InitDefaultsCGCToGCMsgRoutedReply();
void InitDefaultsCMsgGCUpdateSubGCSessionInfo_CMsgUpdateImpl();
void InitDefaultsCMsgGCUpdateSubGCSessionInfo_CMsgUpdate();
void InitDefaultsCMsgGCUpdateSubGCSessionInfoImpl();
void InitDefaultsCMsgGCUpdateSubGCSessionInfo();
void InitDefaultsCMsgGCRequestSubGCSessionInfoImpl();
void InitDefaultsCMsgGCRequestSubGCSessionInfo();
void InitDefaultsCMsgGCRequestSubGCSessionInfoResponseImpl();
void InitDefaultsCMsgGCRequestSubGCSessionInfoResponse();
void InitDefaultsCMsgGCToGCIncrementRecruitmentLevelImpl();
void InitDefaultsCMsgGCToGCIncrementRecruitmentLevel();
void InitDefaultsCMsgSOCacheHaveVersionImpl();
void InitDefaultsCMsgSOCacheHaveVersion();
void InitDefaultsCMsgConnectionStatusImpl();
void InitDefaultsCMsgConnectionStatus();
void InitDefaultsCMsgGCToGCSOCacheSubscribe_CMsgHaveVersionsImpl();
void InitDefaultsCMsgGCToGCSOCacheSubscribe_CMsgHaveVersions();
void InitDefaultsCMsgGCToGCSOCacheSubscribeImpl();
void InitDefaultsCMsgGCToGCSOCacheSubscribe();
void InitDefaultsCMsgGCToGCSOCacheUnsubscribeImpl();
void InitDefaultsCMsgGCToGCSOCacheUnsubscribe();
void InitDefaultsCMsgGCClientPingImpl();
void InitDefaultsCMsgGCClientPing();
inline void InitDefaults() {
  InitDefaultsCMsgSOIDOwner();
  InitDefaultsCMsgSOSingleObject();
  InitDefaultsCMsgSOMultipleObjects_SingleObject();
  InitDefaultsCMsgSOMultipleObjects();
  InitDefaultsCMsgSOCacheSubscribed_SubscribedType();
  InitDefaultsCMsgSOCacheSubscribed();
  InitDefaultsCMsgSOCacheSubscribedUpToDate();
  InitDefaultsCMsgSOCacheUnsubscribed();
  InitDefaultsCMsgSOCacheSubscriptionCheck();
  InitDefaultsCMsgSOCacheSubscriptionRefresh();
  InitDefaultsCMsgSOCacheVersion();
  InitDefaultsCMsgGCMultiplexMessage();
  InitDefaultsCGCToGCMsgMasterAck();
  InitDefaultsCGCToGCMsgMasterAck_Response();
  InitDefaultsCGCToGCMsgMasterStartupComplete_GCInfo();
  InitDefaultsCGCToGCMsgMasterStartupComplete();
  InitDefaultsCGCToGCMsgRouted();
  InitDefaultsCGCToGCMsgRoutedReply();
  InitDefaultsCMsgGCUpdateSubGCSessionInfo_CMsgUpdate();
  InitDefaultsCMsgGCUpdateSubGCSessionInfo();
  InitDefaultsCMsgGCRequestSubGCSessionInfo();
  InitDefaultsCMsgGCRequestSubGCSessionInfoResponse();
  InitDefaultsCMsgGCToGCIncrementRecruitmentLevel();
  InitDefaultsCMsgSOCacheHaveVersion();
  InitDefaultsCMsgConnectionStatus();
  InitDefaultsCMsgGCToGCSOCacheSubscribe_CMsgHaveVersions();
  InitDefaultsCMsgGCToGCSOCacheSubscribe();
  InitDefaultsCMsgGCToGCSOCacheUnsubscribe();
  InitDefaultsCMsgGCClientPing();
}
}  // namespace protobuf_gcsdk_5fgcmessages_2eproto
class CGCToGCMsgMasterAck;
class CGCToGCMsgMasterAckDefaultTypeInternal;
extern CGCToGCMsgMasterAckDefaultTypeInternal _CGCToGCMsgMasterAck_default_instance_;
class CGCToGCMsgMasterAck_Response;
class CGCToGCMsgMasterAck_ResponseDefaultTypeInternal;
extern CGCToGCMsgMasterAck_ResponseDefaultTypeInternal _CGCToGCMsgMasterAck_Response_default_instance_;
class CGCToGCMsgMasterStartupComplete;
class CGCToGCMsgMasterStartupCompleteDefaultTypeInternal;
extern CGCToGCMsgMasterStartupCompleteDefaultTypeInternal _CGCToGCMsgMasterStartupComplete_default_instance_;
class CGCToGCMsgMasterStartupComplete_GCInfo;
class CGCToGCMsgMasterStartupComplete_GCInfoDefaultTypeInternal;
extern CGCToGCMsgMasterStartupComplete_GCInfoDefaultTypeInternal _CGCToGCMsgMasterStartupComplete_GCInfo_default_instance_;
class CGCToGCMsgRouted;
class CGCToGCMsgRoutedDefaultTypeInternal;
extern CGCToGCMsgRoutedDefaultTypeInternal _CGCToGCMsgRouted_default_instance_;
class CGCToGCMsgRoutedReply;
class CGCToGCMsgRoutedReplyDefaultTypeInternal;
extern CGCToGCMsgRoutedReplyDefaultTypeInternal _CGCToGCMsgRoutedReply_default_instance_;
class CMsgConnectionStatus;
class CMsgConnectionStatusDefaultTypeInternal;
extern CMsgConnectionStatusDefaultTypeInternal _CMsgConnectionStatus_default_instance_;
class CMsgGCClientPing;
class CMsgGCClientPingDefaultTypeInternal;
extern CMsgGCClientPingDefaultTypeInternal _CMsgGCClientPing_default_instance_;
class CMsgGCMultiplexMessage;
class CMsgGCMultiplexMessageDefaultTypeInternal;
extern CMsgGCMultiplexMessageDefaultTypeInternal _CMsgGCMultiplexMessage_default_instance_;
class CMsgGCRequestSubGCSessionInfo;
class CMsgGCRequestSubGCSessionInfoDefaultTypeInternal;
extern CMsgGCRequestSubGCSessionInfoDefaultTypeInternal _CMsgGCRequestSubGCSessionInfo_default_instance_;
class CMsgGCRequestSubGCSessionInfoResponse;
class CMsgGCRequestSubGCSessionInfoResponseDefaultTypeInternal;
extern CMsgGCRequestSubGCSessionInfoResponseDefaultTypeInternal _CMsgGCRequestSubGCSessionInfoResponse_default_instance_;
class CMsgGCToGCIncrementRecruitmentLevel;
class CMsgGCToGCIncrementRecruitmentLevelDefaultTypeInternal;
extern CMsgGCToGCIncrementRecruitmentLevelDefaultTypeInternal _CMsgGCToGCIncrementRecruitmentLevel_default_instance_;
class CMsgGCToGCSOCacheSubscribe;
class CMsgGCToGCSOCacheSubscribeDefaultTypeInternal;
extern CMsgGCToGCSOCacheSubscribeDefaultTypeInternal _CMsgGCToGCSOCacheSubscribe_default_instance_;
class CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions;
class CMsgGCToGCSOCacheSubscribe_CMsgHaveVersionsDefaultTypeInternal;
extern CMsgGCToGCSOCacheSubscribe_CMsgHaveVersionsDefaultTypeInternal _CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions_default_instance_;
class CMsgGCToGCSOCacheUnsubscribe;
class CMsgGCToGCSOCacheUnsubscribeDefaultTypeInternal;
extern CMsgGCToGCSOCacheUnsubscribeDefaultTypeInternal _CMsgGCToGCSOCacheUnsubscribe_default_instance_;
class CMsgGCUpdateSubGCSessionInfo;
class CMsgGCUpdateSubGCSessionInfoDefaultTypeInternal;
extern CMsgGCUpdateSubGCSessionInfoDefaultTypeInternal _CMsgGCUpdateSubGCSessionInfo_default_instance_;
class CMsgGCUpdateSubGCSessionInfo_CMsgUpdate;
class CMsgGCUpdateSubGCSessionInfo_CMsgUpdateDefaultTypeInternal;
extern CMsgGCUpdateSubGCSessionInfo_CMsgUpdateDefaultTypeInternal _CMsgGCUpdateSubGCSessionInfo_CMsgUpdate_default_instance_;
class CMsgSOCacheHaveVersion;
class CMsgSOCacheHaveVersionDefaultTypeInternal;
extern CMsgSOCacheHaveVersionDefaultTypeInternal _CMsgSOCacheHaveVersion_default_instance_;
class CMsgSOCacheSubscribed;
class CMsgSOCacheSubscribedDefaultTypeInternal;
extern CMsgSOCacheSubscribedDefaultTypeInternal _CMsgSOCacheSubscribed_default_instance_;
class CMsgSOCacheSubscribedUpToDate;
class CMsgSOCacheSubscribedUpToDateDefaultTypeInternal;
extern CMsgSOCacheSubscribedUpToDateDefaultTypeInternal _CMsgSOCacheSubscribedUpToDate_default_instance_;
class CMsgSOCacheSubscribed_SubscribedType;
class CMsgSOCacheSubscribed_SubscribedTypeDefaultTypeInternal;
extern CMsgSOCacheSubscribed_SubscribedTypeDefaultTypeInternal _CMsgSOCacheSubscribed_SubscribedType_default_instance_;
class CMsgSOCacheSubscriptionCheck;
class CMsgSOCacheSubscriptionCheckDefaultTypeInternal;
extern CMsgSOCacheSubscriptionCheckDefaultTypeInternal _CMsgSOCacheSubscriptionCheck_default_instance_;
class CMsgSOCacheSubscriptionRefresh;
class CMsgSOCacheSubscriptionRefreshDefaultTypeInternal;
extern CMsgSOCacheSubscriptionRefreshDefaultTypeInternal _CMsgSOCacheSubscriptionRefresh_default_instance_;
class CMsgSOCacheUnsubscribed;
class CMsgSOCacheUnsubscribedDefaultTypeInternal;
extern CMsgSOCacheUnsubscribedDefaultTypeInternal _CMsgSOCacheUnsubscribed_default_instance_;
class CMsgSOCacheVersion;
class CMsgSOCacheVersionDefaultTypeInternal;
extern CMsgSOCacheVersionDefaultTypeInternal _CMsgSOCacheVersion_default_instance_;
class CMsgSOIDOwner;
class CMsgSOIDOwnerDefaultTypeInternal;
extern CMsgSOIDOwnerDefaultTypeInternal _CMsgSOIDOwner_default_instance_;
class CMsgSOMultipleObjects;
class CMsgSOMultipleObjectsDefaultTypeInternal;
extern CMsgSOMultipleObjectsDefaultTypeInternal _CMsgSOMultipleObjects_default_instance_;
class CMsgSOMultipleObjects_SingleObject;
class CMsgSOMultipleObjects_SingleObjectDefaultTypeInternal;
extern CMsgSOMultipleObjects_SingleObjectDefaultTypeInternal _CMsgSOMultipleObjects_SingleObject_default_instance_;
class CMsgSOSingleObject;
class CMsgSOSingleObjectDefaultTypeInternal;
extern CMsgSOSingleObjectDefaultTypeInternal _CMsgSOSingleObject_default_instance_;

enum PartnerAccountType {
  PARTNER_NONE = 0,
  PARTNER_PERFECT_WORLD = 1,
  PARTNER_NEXON = 2
};
bool PartnerAccountType_IsValid(int value);
const PartnerAccountType PartnerAccountType_MIN = PARTNER_NONE;
const PartnerAccountType PartnerAccountType_MAX = PARTNER_NEXON;
const int PartnerAccountType_ARRAYSIZE = PartnerAccountType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PartnerAccountType_descriptor();
inline const ::std::string& PartnerAccountType_Name(PartnerAccountType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PartnerAccountType_descriptor(), value);
}
inline bool PartnerAccountType_Parse(
    const ::std::string& name, PartnerAccountType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PartnerAccountType>(
    PartnerAccountType_descriptor(), name, value);
}
enum GCConnectionStatus {
  GCConnectionStatus_HAVE_SESSION = 0,
  GCConnectionStatus_GC_GOING_DOWN = 1,
  GCConnectionStatus_NO_SESSION = 2,
  GCConnectionStatus_NO_SESSION_IN_LOGON_QUEUE = 3,
  GCConnectionStatus_NO_STEAM = 4,
  GCConnectionStatus_SUSPENDED = 5
};
bool GCConnectionStatus_IsValid(int value);
const GCConnectionStatus GCConnectionStatus_MIN = GCConnectionStatus_HAVE_SESSION;
const GCConnectionStatus GCConnectionStatus_MAX = GCConnectionStatus_SUSPENDED;
const int GCConnectionStatus_ARRAYSIZE = GCConnectionStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* GCConnectionStatus_descriptor();
inline const ::std::string& GCConnectionStatus_Name(GCConnectionStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    GCConnectionStatus_descriptor(), value);
}
inline bool GCConnectionStatus_Parse(
    const ::std::string& name, GCConnectionStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GCConnectionStatus>(
    GCConnectionStatus_descriptor(), name, value);
}
// ===================================================================

class CMsgSOIDOwner : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSOIDOwner) */ {
 public:
  CMsgSOIDOwner();
  virtual ~CMsgSOIDOwner();

  CMsgSOIDOwner(const CMsgSOIDOwner& from);

  inline CMsgSOIDOwner& operator=(const CMsgSOIDOwner& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSOIDOwner(CMsgSOIDOwner&& from) noexcept
    : CMsgSOIDOwner() {
    *this = ::std::move(from);
  }

  inline CMsgSOIDOwner& operator=(CMsgSOIDOwner&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSOIDOwner& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSOIDOwner* internal_default_instance() {
    return reinterpret_cast<const CMsgSOIDOwner*>(
               &_CMsgSOIDOwner_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CMsgSOIDOwner* other);
  friend void swap(CMsgSOIDOwner& a, CMsgSOIDOwner& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSOIDOwner* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSOIDOwner* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSOIDOwner& from);
  void MergeFrom(const CMsgSOIDOwner& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSOIDOwner* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // optional uint32 type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSOIDOwner)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_id();
  void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 type_;
  friend struct ::protobuf_gcsdk_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOIDOwnerImpl();
};
// -------------------------------------------------------------------

class CMsgSOSingleObject : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSOSingleObject) */ {
 public:
  CMsgSOSingleObject();
  virtual ~CMsgSOSingleObject();

  CMsgSOSingleObject(const CMsgSOSingleObject& from);

  inline CMsgSOSingleObject& operator=(const CMsgSOSingleObject& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSOSingleObject(CMsgSOSingleObject&& from) noexcept
    : CMsgSOSingleObject() {
    *this = ::std::move(from);
  }

  inline CMsgSOSingleObject& operator=(CMsgSOSingleObject&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSOSingleObject& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSOSingleObject* internal_default_instance() {
    return reinterpret_cast<const CMsgSOSingleObject*>(
               &_CMsgSOSingleObject_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CMsgSOSingleObject* other);
  friend void swap(CMsgSOSingleObject& a, CMsgSOSingleObject& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSOSingleObject* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSOSingleObject* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSOSingleObject& from);
  void MergeFrom(const CMsgSOSingleObject& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSOSingleObject* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes object_data = 3;
  bool has_object_data() const;
  void clear_object_data();
  static const int kObjectDataFieldNumber = 3;
  const ::std::string& object_data() const;
  void set_object_data(const ::std::string& value);
  #if LANG_CXX11
  void set_object_data(::std::string&& value);
  #endif
  void set_object_data(const char* value);
  void set_object_data(const void* value, size_t size);
  ::std::string* mutable_object_data();
  ::std::string* release_object_data();
  void set_allocated_object_data(::std::string* object_data);

  // optional .CMsgSOIDOwner owner_soid = 5;
  bool has_owner_soid() const;
  void clear_owner_soid();
  static const int kOwnerSoidFieldNumber = 5;
  const ::CMsgSOIDOwner& owner_soid() const;
  ::CMsgSOIDOwner* release_owner_soid();
  ::CMsgSOIDOwner* mutable_owner_soid();
  void set_allocated_owner_soid(::CMsgSOIDOwner* owner_soid);

  // optional fixed64 owner = 1;
  bool has_owner() const;
  void clear_owner();
  static const int kOwnerFieldNumber = 1;
  ::google::protobuf::uint64 owner() const;
  void set_owner(::google::protobuf::uint64 value);

  // optional fixed64 version = 4;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 4;
  ::google::protobuf::uint64 version() const;
  void set_version(::google::protobuf::uint64 value);

  // optional int32 type_id = 2;
  bool has_type_id() const;
  void clear_type_id();
  static const int kTypeIdFieldNumber = 2;
  ::google::protobuf::int32 type_id() const;
  void set_type_id(::google::protobuf::int32 value);

  // optional uint32 service_id = 6;
  bool has_service_id() const;
  void clear_service_id();
  static const int kServiceIdFieldNumber = 6;
  ::google::protobuf::uint32 service_id() const;
  void set_service_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSOSingleObject)
 private:
  void set_has_owner();
  void clear_has_owner();
  void set_has_type_id();
  void clear_has_type_id();
  void set_has_object_data();
  void clear_has_object_data();
  void set_has_version();
  void clear_has_version();
  void set_has_owner_soid();
  void clear_has_owner_soid();
  void set_has_service_id();
  void clear_has_service_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr object_data_;
  ::CMsgSOIDOwner* owner_soid_;
  ::google::protobuf::uint64 owner_;
  ::google::protobuf::uint64 version_;
  ::google::protobuf::int32 type_id_;
  ::google::protobuf::uint32 service_id_;
  friend struct ::protobuf_gcsdk_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOSingleObjectImpl();
};
// -------------------------------------------------------------------

class CMsgSOMultipleObjects_SingleObject : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSOMultipleObjects.SingleObject) */ {
 public:
  CMsgSOMultipleObjects_SingleObject();
  virtual ~CMsgSOMultipleObjects_SingleObject();

  CMsgSOMultipleObjects_SingleObject(const CMsgSOMultipleObjects_SingleObject& from);

  inline CMsgSOMultipleObjects_SingleObject& operator=(const CMsgSOMultipleObjects_SingleObject& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSOMultipleObjects_SingleObject(CMsgSOMultipleObjects_SingleObject&& from) noexcept
    : CMsgSOMultipleObjects_SingleObject() {
    *this = ::std::move(from);
  }

  inline CMsgSOMultipleObjects_SingleObject& operator=(CMsgSOMultipleObjects_SingleObject&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSOMultipleObjects_SingleObject& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSOMultipleObjects_SingleObject* internal_default_instance() {
    return reinterpret_cast<const CMsgSOMultipleObjects_SingleObject*>(
               &_CMsgSOMultipleObjects_SingleObject_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CMsgSOMultipleObjects_SingleObject* other);
  friend void swap(CMsgSOMultipleObjects_SingleObject& a, CMsgSOMultipleObjects_SingleObject& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSOMultipleObjects_SingleObject* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSOMultipleObjects_SingleObject* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSOMultipleObjects_SingleObject& from);
  void MergeFrom(const CMsgSOMultipleObjects_SingleObject& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSOMultipleObjects_SingleObject* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes object_data = 2;
  bool has_object_data() const;
  void clear_object_data();
  static const int kObjectDataFieldNumber = 2;
  const ::std::string& object_data() const;
  void set_object_data(const ::std::string& value);
  #if LANG_CXX11
  void set_object_data(::std::string&& value);
  #endif
  void set_object_data(const char* value);
  void set_object_data(const void* value, size_t size);
  ::std::string* mutable_object_data();
  ::std::string* release_object_data();
  void set_allocated_object_data(::std::string* object_data);

  // optional int32 type_id = 1;
  bool has_type_id() const;
  void clear_type_id();
  static const int kTypeIdFieldNumber = 1;
  ::google::protobuf::int32 type_id() const;
  void set_type_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgSOMultipleObjects.SingleObject)
 private:
  void set_has_type_id();
  void clear_has_type_id();
  void set_has_object_data();
  void clear_has_object_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr object_data_;
  ::google::protobuf::int32 type_id_;
  friend struct ::protobuf_gcsdk_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOMultipleObjects_SingleObjectImpl();
};
// -------------------------------------------------------------------

class CMsgSOMultipleObjects : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSOMultipleObjects) */ {
 public:
  CMsgSOMultipleObjects();
  virtual ~CMsgSOMultipleObjects();

  CMsgSOMultipleObjects(const CMsgSOMultipleObjects& from);

  inline CMsgSOMultipleObjects& operator=(const CMsgSOMultipleObjects& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSOMultipleObjects(CMsgSOMultipleObjects&& from) noexcept
    : CMsgSOMultipleObjects() {
    *this = ::std::move(from);
  }

  inline CMsgSOMultipleObjects& operator=(CMsgSOMultipleObjects&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSOMultipleObjects& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSOMultipleObjects* internal_default_instance() {
    return reinterpret_cast<const CMsgSOMultipleObjects*>(
               &_CMsgSOMultipleObjects_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(CMsgSOMultipleObjects* other);
  friend void swap(CMsgSOMultipleObjects& a, CMsgSOMultipleObjects& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSOMultipleObjects* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSOMultipleObjects* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSOMultipleObjects& from);
  void MergeFrom(const CMsgSOMultipleObjects& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSOMultipleObjects* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgSOMultipleObjects_SingleObject SingleObject;

  // accessors -------------------------------------------------------

  // repeated .CMsgSOMultipleObjects.SingleObject objects = 2;
  int objects_size() const;
  void clear_objects();
  static const int kObjectsFieldNumber = 2;
  const ::CMsgSOMultipleObjects_SingleObject& objects(int index) const;
  ::CMsgSOMultipleObjects_SingleObject* mutable_objects(int index);
  ::CMsgSOMultipleObjects_SingleObject* add_objects();
  ::google::protobuf::RepeatedPtrField< ::CMsgSOMultipleObjects_SingleObject >*
      mutable_objects();
  const ::google::protobuf::RepeatedPtrField< ::CMsgSOMultipleObjects_SingleObject >&
      objects() const;

  // optional .CMsgSOIDOwner owner_soid = 6;
  bool has_owner_soid() const;
  void clear_owner_soid();
  static const int kOwnerSoidFieldNumber = 6;
  const ::CMsgSOIDOwner& owner_soid() const;
  ::CMsgSOIDOwner* release_owner_soid();
  ::CMsgSOIDOwner* mutable_owner_soid();
  void set_allocated_owner_soid(::CMsgSOIDOwner* owner_soid);

  // optional fixed64 owner = 1;
  bool has_owner() const;
  void clear_owner();
  static const int kOwnerFieldNumber = 1;
  ::google::protobuf::uint64 owner() const;
  void set_owner(::google::protobuf::uint64 value);

  // optional fixed64 version = 3;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 3;
  ::google::protobuf::uint64 version() const;
  void set_version(::google::protobuf::uint64 value);

  // optional uint32 service_id = 7;
  bool has_service_id() const;
  void clear_service_id();
  static const int kServiceIdFieldNumber = 7;
  ::google::protobuf::uint32 service_id() const;
  void set_service_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSOMultipleObjects)
 private:
  void set_has_owner();
  void clear_has_owner();
  void set_has_version();
  void clear_has_version();
  void set_has_owner_soid();
  void clear_has_owner_soid();
  void set_has_service_id();
  void clear_has_service_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgSOMultipleObjects_SingleObject > objects_;
  ::CMsgSOIDOwner* owner_soid_;
  ::google::protobuf::uint64 owner_;
  ::google::protobuf::uint64 version_;
  ::google::protobuf::uint32 service_id_;
  friend struct ::protobuf_gcsdk_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOMultipleObjectsImpl();
};
// -------------------------------------------------------------------

class CMsgSOCacheSubscribed_SubscribedType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSOCacheSubscribed.SubscribedType) */ {
 public:
  CMsgSOCacheSubscribed_SubscribedType();
  virtual ~CMsgSOCacheSubscribed_SubscribedType();

  CMsgSOCacheSubscribed_SubscribedType(const CMsgSOCacheSubscribed_SubscribedType& from);

  inline CMsgSOCacheSubscribed_SubscribedType& operator=(const CMsgSOCacheSubscribed_SubscribedType& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSOCacheSubscribed_SubscribedType(CMsgSOCacheSubscribed_SubscribedType&& from) noexcept
    : CMsgSOCacheSubscribed_SubscribedType() {
    *this = ::std::move(from);
  }

  inline CMsgSOCacheSubscribed_SubscribedType& operator=(CMsgSOCacheSubscribed_SubscribedType&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSOCacheSubscribed_SubscribedType& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSOCacheSubscribed_SubscribedType* internal_default_instance() {
    return reinterpret_cast<const CMsgSOCacheSubscribed_SubscribedType*>(
               &_CMsgSOCacheSubscribed_SubscribedType_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(CMsgSOCacheSubscribed_SubscribedType* other);
  friend void swap(CMsgSOCacheSubscribed_SubscribedType& a, CMsgSOCacheSubscribed_SubscribedType& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSOCacheSubscribed_SubscribedType* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSOCacheSubscribed_SubscribedType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSOCacheSubscribed_SubscribedType& from);
  void MergeFrom(const CMsgSOCacheSubscribed_SubscribedType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSOCacheSubscribed_SubscribedType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes object_data = 2;
  int object_data_size() const;
  void clear_object_data();
  static const int kObjectDataFieldNumber = 2;
  const ::std::string& object_data(int index) const;
  ::std::string* mutable_object_data(int index);
  void set_object_data(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_object_data(int index, ::std::string&& value);
  #endif
  void set_object_data(int index, const char* value);
  void set_object_data(int index, const void* value, size_t size);
  ::std::string* add_object_data();
  void add_object_data(const ::std::string& value);
  #if LANG_CXX11
  void add_object_data(::std::string&& value);
  #endif
  void add_object_data(const char* value);
  void add_object_data(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& object_data() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_object_data();

  // optional int32 type_id = 1;
  bool has_type_id() const;
  void clear_type_id();
  static const int kTypeIdFieldNumber = 1;
  ::google::protobuf::int32 type_id() const;
  void set_type_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgSOCacheSubscribed.SubscribedType)
 private:
  void set_has_type_id();
  void clear_has_type_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> object_data_;
  ::google::protobuf::int32 type_id_;
  friend struct ::protobuf_gcsdk_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOCacheSubscribed_SubscribedTypeImpl();
};
// -------------------------------------------------------------------

class CMsgSOCacheSubscribed : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSOCacheSubscribed) */ {
 public:
  CMsgSOCacheSubscribed();
  virtual ~CMsgSOCacheSubscribed();

  CMsgSOCacheSubscribed(const CMsgSOCacheSubscribed& from);

  inline CMsgSOCacheSubscribed& operator=(const CMsgSOCacheSubscribed& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSOCacheSubscribed(CMsgSOCacheSubscribed&& from) noexcept
    : CMsgSOCacheSubscribed() {
    *this = ::std::move(from);
  }

  inline CMsgSOCacheSubscribed& operator=(CMsgSOCacheSubscribed&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSOCacheSubscribed& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSOCacheSubscribed* internal_default_instance() {
    return reinterpret_cast<const CMsgSOCacheSubscribed*>(
               &_CMsgSOCacheSubscribed_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(CMsgSOCacheSubscribed* other);
  friend void swap(CMsgSOCacheSubscribed& a, CMsgSOCacheSubscribed& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSOCacheSubscribed* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSOCacheSubscribed* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSOCacheSubscribed& from);
  void MergeFrom(const CMsgSOCacheSubscribed& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSOCacheSubscribed* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgSOCacheSubscribed_SubscribedType SubscribedType;

  // accessors -------------------------------------------------------

  // repeated .CMsgSOCacheSubscribed.SubscribedType objects = 2;
  int objects_size() const;
  void clear_objects();
  static const int kObjectsFieldNumber = 2;
  const ::CMsgSOCacheSubscribed_SubscribedType& objects(int index) const;
  ::CMsgSOCacheSubscribed_SubscribedType* mutable_objects(int index);
  ::CMsgSOCacheSubscribed_SubscribedType* add_objects();
  ::google::protobuf::RepeatedPtrField< ::CMsgSOCacheSubscribed_SubscribedType >*
      mutable_objects();
  const ::google::protobuf::RepeatedPtrField< ::CMsgSOCacheSubscribed_SubscribedType >&
      objects() const;

  // repeated uint32 service_list = 6;
  int service_list_size() const;
  void clear_service_list();
  static const int kServiceListFieldNumber = 6;
  ::google::protobuf::uint32 service_list(int index) const;
  void set_service_list(int index, ::google::protobuf::uint32 value);
  void add_service_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      service_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_service_list();

  // optional .CMsgSOIDOwner owner_soid = 4;
  bool has_owner_soid() const;
  void clear_owner_soid();
  static const int kOwnerSoidFieldNumber = 4;
  const ::CMsgSOIDOwner& owner_soid() const;
  ::CMsgSOIDOwner* release_owner_soid();
  ::CMsgSOIDOwner* mutable_owner_soid();
  void set_allocated_owner_soid(::CMsgSOIDOwner* owner_soid);

  // optional fixed64 owner = 1;
  bool has_owner() const;
  void clear_owner();
  static const int kOwnerFieldNumber = 1;
  ::google::protobuf::uint64 owner() const;
  void set_owner(::google::protobuf::uint64 value);

  // optional fixed64 version = 3;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 3;
  ::google::protobuf::uint64 version() const;
  void set_version(::google::protobuf::uint64 value);

  // optional fixed64 sync_version = 7;
  bool has_sync_version() const;
  void clear_sync_version();
  static const int kSyncVersionFieldNumber = 7;
  ::google::protobuf::uint64 sync_version() const;
  void set_sync_version(::google::protobuf::uint64 value);

  // optional uint32 service_id = 5;
  bool has_service_id() const;
  void clear_service_id();
  static const int kServiceIdFieldNumber = 5;
  ::google::protobuf::uint32 service_id() const;
  void set_service_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSOCacheSubscribed)
 private:
  void set_has_owner();
  void clear_has_owner();
  void set_has_version();
  void clear_has_version();
  void set_has_owner_soid();
  void clear_has_owner_soid();
  void set_has_service_id();
  void clear_has_service_id();
  void set_has_sync_version();
  void clear_has_sync_version();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgSOCacheSubscribed_SubscribedType > objects_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > service_list_;
  ::CMsgSOIDOwner* owner_soid_;
  ::google::protobuf::uint64 owner_;
  ::google::protobuf::uint64 version_;
  ::google::protobuf::uint64 sync_version_;
  ::google::protobuf::uint32 service_id_;
  friend struct ::protobuf_gcsdk_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOCacheSubscribedImpl();
};
// -------------------------------------------------------------------

class CMsgSOCacheSubscribedUpToDate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSOCacheSubscribedUpToDate) */ {
 public:
  CMsgSOCacheSubscribedUpToDate();
  virtual ~CMsgSOCacheSubscribedUpToDate();

  CMsgSOCacheSubscribedUpToDate(const CMsgSOCacheSubscribedUpToDate& from);

  inline CMsgSOCacheSubscribedUpToDate& operator=(const CMsgSOCacheSubscribedUpToDate& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSOCacheSubscribedUpToDate(CMsgSOCacheSubscribedUpToDate&& from) noexcept
    : CMsgSOCacheSubscribedUpToDate() {
    *this = ::std::move(from);
  }

  inline CMsgSOCacheSubscribedUpToDate& operator=(CMsgSOCacheSubscribedUpToDate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSOCacheSubscribedUpToDate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSOCacheSubscribedUpToDate* internal_default_instance() {
    return reinterpret_cast<const CMsgSOCacheSubscribedUpToDate*>(
               &_CMsgSOCacheSubscribedUpToDate_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(CMsgSOCacheSubscribedUpToDate* other);
  friend void swap(CMsgSOCacheSubscribedUpToDate& a, CMsgSOCacheSubscribedUpToDate& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSOCacheSubscribedUpToDate* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSOCacheSubscribedUpToDate* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSOCacheSubscribedUpToDate& from);
  void MergeFrom(const CMsgSOCacheSubscribedUpToDate& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSOCacheSubscribedUpToDate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 service_list = 4;
  int service_list_size() const;
  void clear_service_list();
  static const int kServiceListFieldNumber = 4;
  ::google::protobuf::uint32 service_list(int index) const;
  void set_service_list(int index, ::google::protobuf::uint32 value);
  void add_service_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      service_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_service_list();

  // optional .CMsgSOIDOwner owner_soid = 2;
  bool has_owner_soid() const;
  void clear_owner_soid();
  static const int kOwnerSoidFieldNumber = 2;
  const ::CMsgSOIDOwner& owner_soid() const;
  ::CMsgSOIDOwner* release_owner_soid();
  ::CMsgSOIDOwner* mutable_owner_soid();
  void set_allocated_owner_soid(::CMsgSOIDOwner* owner_soid);

  // optional fixed64 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::uint64 version() const;
  void set_version(::google::protobuf::uint64 value);

  // optional fixed64 sync_version = 5;
  bool has_sync_version() const;
  void clear_sync_version();
  static const int kSyncVersionFieldNumber = 5;
  ::google::protobuf::uint64 sync_version() const;
  void set_sync_version(::google::protobuf::uint64 value);

  // optional uint32 service_id = 3;
  bool has_service_id() const;
  void clear_service_id();
  static const int kServiceIdFieldNumber = 3;
  ::google::protobuf::uint32 service_id() const;
  void set_service_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSOCacheSubscribedUpToDate)
 private:
  void set_has_version();
  void clear_has_version();
  void set_has_owner_soid();
  void clear_has_owner_soid();
  void set_has_service_id();
  void clear_has_service_id();
  void set_has_sync_version();
  void clear_has_sync_version();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > service_list_;
  ::CMsgSOIDOwner* owner_soid_;
  ::google::protobuf::uint64 version_;
  ::google::protobuf::uint64 sync_version_;
  ::google::protobuf::uint32 service_id_;
  friend struct ::protobuf_gcsdk_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOCacheSubscribedUpToDateImpl();
};
// -------------------------------------------------------------------

class CMsgSOCacheUnsubscribed : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSOCacheUnsubscribed) */ {
 public:
  CMsgSOCacheUnsubscribed();
  virtual ~CMsgSOCacheUnsubscribed();

  CMsgSOCacheUnsubscribed(const CMsgSOCacheUnsubscribed& from);

  inline CMsgSOCacheUnsubscribed& operator=(const CMsgSOCacheUnsubscribed& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSOCacheUnsubscribed(CMsgSOCacheUnsubscribed&& from) noexcept
    : CMsgSOCacheUnsubscribed() {
    *this = ::std::move(from);
  }

  inline CMsgSOCacheUnsubscribed& operator=(CMsgSOCacheUnsubscribed&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSOCacheUnsubscribed& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSOCacheUnsubscribed* internal_default_instance() {
    return reinterpret_cast<const CMsgSOCacheUnsubscribed*>(
               &_CMsgSOCacheUnsubscribed_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(CMsgSOCacheUnsubscribed* other);
  friend void swap(CMsgSOCacheUnsubscribed& a, CMsgSOCacheUnsubscribed& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSOCacheUnsubscribed* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSOCacheUnsubscribed* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSOCacheUnsubscribed& from);
  void MergeFrom(const CMsgSOCacheUnsubscribed& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSOCacheUnsubscribed* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 owner = 1;
  bool has_owner() const;
  void clear_owner();
  static const int kOwnerFieldNumber = 1;
  ::google::protobuf::uint64 owner() const;
  void set_owner(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgSOCacheUnsubscribed)
 private:
  void set_has_owner();
  void clear_has_owner();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 owner_;
  friend struct ::protobuf_gcsdk_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOCacheUnsubscribedImpl();
};
// -------------------------------------------------------------------

class CMsgSOCacheSubscriptionCheck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSOCacheSubscriptionCheck) */ {
 public:
  CMsgSOCacheSubscriptionCheck();
  virtual ~CMsgSOCacheSubscriptionCheck();

  CMsgSOCacheSubscriptionCheck(const CMsgSOCacheSubscriptionCheck& from);

  inline CMsgSOCacheSubscriptionCheck& operator=(const CMsgSOCacheSubscriptionCheck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSOCacheSubscriptionCheck(CMsgSOCacheSubscriptionCheck&& from) noexcept
    : CMsgSOCacheSubscriptionCheck() {
    *this = ::std::move(from);
  }

  inline CMsgSOCacheSubscriptionCheck& operator=(CMsgSOCacheSubscriptionCheck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSOCacheSubscriptionCheck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSOCacheSubscriptionCheck* internal_default_instance() {
    return reinterpret_cast<const CMsgSOCacheSubscriptionCheck*>(
               &_CMsgSOCacheSubscriptionCheck_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(CMsgSOCacheSubscriptionCheck* other);
  friend void swap(CMsgSOCacheSubscriptionCheck& a, CMsgSOCacheSubscriptionCheck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSOCacheSubscriptionCheck* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSOCacheSubscriptionCheck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSOCacheSubscriptionCheck& from);
  void MergeFrom(const CMsgSOCacheSubscriptionCheck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSOCacheSubscriptionCheck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 service_list = 5;
  int service_list_size() const;
  void clear_service_list();
  static const int kServiceListFieldNumber = 5;
  ::google::protobuf::uint32 service_list(int index) const;
  void set_service_list(int index, ::google::protobuf::uint32 value);
  void add_service_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      service_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_service_list();

  // optional .CMsgSOIDOwner owner_soid = 3;
  bool has_owner_soid() const;
  void clear_owner_soid();
  static const int kOwnerSoidFieldNumber = 3;
  const ::CMsgSOIDOwner& owner_soid() const;
  ::CMsgSOIDOwner* release_owner_soid();
  ::CMsgSOIDOwner* mutable_owner_soid();
  void set_allocated_owner_soid(::CMsgSOIDOwner* owner_soid);

  // optional fixed64 owner = 1;
  bool has_owner() const;
  void clear_owner();
  static const int kOwnerFieldNumber = 1;
  ::google::protobuf::uint64 owner() const;
  void set_owner(::google::protobuf::uint64 value);

  // optional fixed64 version = 2;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  ::google::protobuf::uint64 version() const;
  void set_version(::google::protobuf::uint64 value);

  // optional fixed64 sync_version = 6;
  bool has_sync_version() const;
  void clear_sync_version();
  static const int kSyncVersionFieldNumber = 6;
  ::google::protobuf::uint64 sync_version() const;
  void set_sync_version(::google::protobuf::uint64 value);

  // optional uint32 service_id = 4;
  bool has_service_id() const;
  void clear_service_id();
  static const int kServiceIdFieldNumber = 4;
  ::google::protobuf::uint32 service_id() const;
  void set_service_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSOCacheSubscriptionCheck)
 private:
  void set_has_owner();
  void clear_has_owner();
  void set_has_version();
  void clear_has_version();
  void set_has_owner_soid();
  void clear_has_owner_soid();
  void set_has_service_id();
  void clear_has_service_id();
  void set_has_sync_version();
  void clear_has_sync_version();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > service_list_;
  ::CMsgSOIDOwner* owner_soid_;
  ::google::protobuf::uint64 owner_;
  ::google::protobuf::uint64 version_;
  ::google::protobuf::uint64 sync_version_;
  ::google::protobuf::uint32 service_id_;
  friend struct ::protobuf_gcsdk_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOCacheSubscriptionCheckImpl();
};
// -------------------------------------------------------------------

class CMsgSOCacheSubscriptionRefresh : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSOCacheSubscriptionRefresh) */ {
 public:
  CMsgSOCacheSubscriptionRefresh();
  virtual ~CMsgSOCacheSubscriptionRefresh();

  CMsgSOCacheSubscriptionRefresh(const CMsgSOCacheSubscriptionRefresh& from);

  inline CMsgSOCacheSubscriptionRefresh& operator=(const CMsgSOCacheSubscriptionRefresh& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSOCacheSubscriptionRefresh(CMsgSOCacheSubscriptionRefresh&& from) noexcept
    : CMsgSOCacheSubscriptionRefresh() {
    *this = ::std::move(from);
  }

  inline CMsgSOCacheSubscriptionRefresh& operator=(CMsgSOCacheSubscriptionRefresh&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSOCacheSubscriptionRefresh& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSOCacheSubscriptionRefresh* internal_default_instance() {
    return reinterpret_cast<const CMsgSOCacheSubscriptionRefresh*>(
               &_CMsgSOCacheSubscriptionRefresh_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(CMsgSOCacheSubscriptionRefresh* other);
  friend void swap(CMsgSOCacheSubscriptionRefresh& a, CMsgSOCacheSubscriptionRefresh& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSOCacheSubscriptionRefresh* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSOCacheSubscriptionRefresh* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSOCacheSubscriptionRefresh& from);
  void MergeFrom(const CMsgSOCacheSubscriptionRefresh& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSOCacheSubscriptionRefresh* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgSOIDOwner owner_soid = 2;
  bool has_owner_soid() const;
  void clear_owner_soid();
  static const int kOwnerSoidFieldNumber = 2;
  const ::CMsgSOIDOwner& owner_soid() const;
  ::CMsgSOIDOwner* release_owner_soid();
  ::CMsgSOIDOwner* mutable_owner_soid();
  void set_allocated_owner_soid(::CMsgSOIDOwner* owner_soid);

  // optional fixed64 owner = 1;
  bool has_owner() const;
  void clear_owner();
  static const int kOwnerFieldNumber = 1;
  ::google::protobuf::uint64 owner() const;
  void set_owner(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgSOCacheSubscriptionRefresh)
 private:
  void set_has_owner();
  void clear_has_owner();
  void set_has_owner_soid();
  void clear_has_owner_soid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::CMsgSOIDOwner* owner_soid_;
  ::google::protobuf::uint64 owner_;
  friend struct ::protobuf_gcsdk_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOCacheSubscriptionRefreshImpl();
};
// -------------------------------------------------------------------

class CMsgSOCacheVersion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSOCacheVersion) */ {
 public:
  CMsgSOCacheVersion();
  virtual ~CMsgSOCacheVersion();

  CMsgSOCacheVersion(const CMsgSOCacheVersion& from);

  inline CMsgSOCacheVersion& operator=(const CMsgSOCacheVersion& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSOCacheVersion(CMsgSOCacheVersion&& from) noexcept
    : CMsgSOCacheVersion() {
    *this = ::std::move(from);
  }

  inline CMsgSOCacheVersion& operator=(CMsgSOCacheVersion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSOCacheVersion& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSOCacheVersion* internal_default_instance() {
    return reinterpret_cast<const CMsgSOCacheVersion*>(
               &_CMsgSOCacheVersion_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(CMsgSOCacheVersion* other);
  friend void swap(CMsgSOCacheVersion& a, CMsgSOCacheVersion& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSOCacheVersion* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSOCacheVersion* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSOCacheVersion& from);
  void MergeFrom(const CMsgSOCacheVersion& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSOCacheVersion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::uint64 version() const;
  void set_version(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgSOCacheVersion)
 private:
  void set_has_version();
  void clear_has_version();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 version_;
  friend struct ::protobuf_gcsdk_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOCacheVersionImpl();
};
// -------------------------------------------------------------------

class CMsgGCMultiplexMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGCMultiplexMessage) */ {
 public:
  CMsgGCMultiplexMessage();
  virtual ~CMsgGCMultiplexMessage();

  CMsgGCMultiplexMessage(const CMsgGCMultiplexMessage& from);

  inline CMsgGCMultiplexMessage& operator=(const CMsgGCMultiplexMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCMultiplexMessage(CMsgGCMultiplexMessage&& from) noexcept
    : CMsgGCMultiplexMessage() {
    *this = ::std::move(from);
  }

  inline CMsgGCMultiplexMessage& operator=(CMsgGCMultiplexMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCMultiplexMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCMultiplexMessage* internal_default_instance() {
    return reinterpret_cast<const CMsgGCMultiplexMessage*>(
               &_CMsgGCMultiplexMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(CMsgGCMultiplexMessage* other);
  friend void swap(CMsgGCMultiplexMessage& a, CMsgGCMultiplexMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCMultiplexMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCMultiplexMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCMultiplexMessage& from);
  void MergeFrom(const CMsgGCMultiplexMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCMultiplexMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 steamids = 3;
  int steamids_size() const;
  void clear_steamids();
  static const int kSteamidsFieldNumber = 3;
  ::google::protobuf::uint64 steamids(int index) const;
  void set_steamids(int index, ::google::protobuf::uint64 value);
  void add_steamids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      steamids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_steamids();

  // optional bytes payload = 2;
  bool has_payload() const;
  void clear_payload();
  static const int kPayloadFieldNumber = 2;
  const ::std::string& payload() const;
  void set_payload(const ::std::string& value);
  #if LANG_CXX11
  void set_payload(::std::string&& value);
  #endif
  void set_payload(const char* value);
  void set_payload(const void* value, size_t size);
  ::std::string* mutable_payload();
  ::std::string* release_payload();
  void set_allocated_payload(::std::string* payload);

  // optional uint32 msgtype = 1;
  bool has_msgtype() const;
  void clear_msgtype();
  static const int kMsgtypeFieldNumber = 1;
  ::google::protobuf::uint32 msgtype() const;
  void set_msgtype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCMultiplexMessage)
 private:
  void set_has_msgtype();
  void clear_has_msgtype();
  void set_has_payload();
  void clear_has_payload();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > steamids_;
  ::google::protobuf::internal::ArenaStringPtr payload_;
  ::google::protobuf::uint32 msgtype_;
  friend struct ::protobuf_gcsdk_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgGCMultiplexMessageImpl();
};
// -------------------------------------------------------------------

class CGCToGCMsgMasterAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CGCToGCMsgMasterAck) */ {
 public:
  CGCToGCMsgMasterAck();
  virtual ~CGCToGCMsgMasterAck();

  CGCToGCMsgMasterAck(const CGCToGCMsgMasterAck& from);

  inline CGCToGCMsgMasterAck& operator=(const CGCToGCMsgMasterAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CGCToGCMsgMasterAck(CGCToGCMsgMasterAck&& from) noexcept
    : CGCToGCMsgMasterAck() {
    *this = ::std::move(from);
  }

  inline CGCToGCMsgMasterAck& operator=(CGCToGCMsgMasterAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCToGCMsgMasterAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CGCToGCMsgMasterAck* internal_default_instance() {
    return reinterpret_cast<const CGCToGCMsgMasterAck*>(
               &_CGCToGCMsgMasterAck_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(CGCToGCMsgMasterAck* other);
  friend void swap(CGCToGCMsgMasterAck& a, CGCToGCMsgMasterAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CGCToGCMsgMasterAck* New() const PROTOBUF_FINAL { return New(NULL); }

  CGCToGCMsgMasterAck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CGCToGCMsgMasterAck& from);
  void MergeFrom(const CGCToGCMsgMasterAck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CGCToGCMsgMasterAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 type_instances = 5;
  int type_instances_size() const;
  void clear_type_instances();
  static const int kTypeInstancesFieldNumber = 5;
  ::google::protobuf::uint32 type_instances(int index) const;
  void set_type_instances(int index, ::google::protobuf::uint32 value);
  void add_type_instances(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      type_instances() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_type_instances();

  // optional string machine_name = 3;
  bool has_machine_name() const;
  void clear_machine_name();
  static const int kMachineNameFieldNumber = 3;
  const ::std::string& machine_name() const;
  void set_machine_name(const ::std::string& value);
  #if LANG_CXX11
  void set_machine_name(::std::string&& value);
  #endif
  void set_machine_name(const char* value);
  void set_machine_name(const char* value, size_t size);
  ::std::string* mutable_machine_name();
  ::std::string* release_machine_name();
  void set_allocated_machine_name(::std::string* machine_name);

  // optional string process_name = 4;
  bool has_process_name() const;
  void clear_process_name();
  static const int kProcessNameFieldNumber = 4;
  const ::std::string& process_name() const;
  void set_process_name(const ::std::string& value);
  #if LANG_CXX11
  void set_process_name(::std::string&& value);
  #endif
  void set_process_name(const char* value);
  void set_process_name(const char* value, size_t size);
  ::std::string* mutable_process_name();
  ::std::string* release_process_name();
  void set_allocated_process_name(::std::string* process_name);

  // optional uint32 dir_index = 1;
  bool has_dir_index() const;
  void clear_dir_index();
  static const int kDirIndexFieldNumber = 1;
  ::google::protobuf::uint32 dir_index() const;
  void set_dir_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CGCToGCMsgMasterAck)
 private:
  void set_has_dir_index();
  void clear_has_dir_index();
  void set_has_machine_name();
  void clear_has_machine_name();
  void set_has_process_name();
  void clear_has_process_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > type_instances_;
  ::google::protobuf::internal::ArenaStringPtr machine_name_;
  ::google::protobuf::internal::ArenaStringPtr process_name_;
  ::google::protobuf::uint32 dir_index_;
  friend struct ::protobuf_gcsdk_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCGCToGCMsgMasterAckImpl();
};
// -------------------------------------------------------------------

class CGCToGCMsgMasterAck_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CGCToGCMsgMasterAck_Response) */ {
 public:
  CGCToGCMsgMasterAck_Response();
  virtual ~CGCToGCMsgMasterAck_Response();

  CGCToGCMsgMasterAck_Response(const CGCToGCMsgMasterAck_Response& from);

  inline CGCToGCMsgMasterAck_Response& operator=(const CGCToGCMsgMasterAck_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CGCToGCMsgMasterAck_Response(CGCToGCMsgMasterAck_Response&& from) noexcept
    : CGCToGCMsgMasterAck_Response() {
    *this = ::std::move(from);
  }

  inline CGCToGCMsgMasterAck_Response& operator=(CGCToGCMsgMasterAck_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCToGCMsgMasterAck_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CGCToGCMsgMasterAck_Response* internal_default_instance() {
    return reinterpret_cast<const CGCToGCMsgMasterAck_Response*>(
               &_CGCToGCMsgMasterAck_Response_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(CGCToGCMsgMasterAck_Response* other);
  friend void swap(CGCToGCMsgMasterAck_Response& a, CGCToGCMsgMasterAck_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CGCToGCMsgMasterAck_Response* New() const PROTOBUF_FINAL { return New(NULL); }

  CGCToGCMsgMasterAck_Response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CGCToGCMsgMasterAck_Response& from);
  void MergeFrom(const CGCToGCMsgMasterAck_Response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CGCToGCMsgMasterAck_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 eresult = 1 [default = 2];
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 1;
  ::google::protobuf::int32 eresult() const;
  void set_eresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CGCToGCMsgMasterAck_Response)
 private:
  void set_has_eresult();
  void clear_has_eresult();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 eresult_;
  friend struct ::protobuf_gcsdk_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCGCToGCMsgMasterAck_ResponseImpl();
};
// -------------------------------------------------------------------

class CGCToGCMsgMasterStartupComplete_GCInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CGCToGCMsgMasterStartupComplete.GCInfo) */ {
 public:
  CGCToGCMsgMasterStartupComplete_GCInfo();
  virtual ~CGCToGCMsgMasterStartupComplete_GCInfo();

  CGCToGCMsgMasterStartupComplete_GCInfo(const CGCToGCMsgMasterStartupComplete_GCInfo& from);

  inline CGCToGCMsgMasterStartupComplete_GCInfo& operator=(const CGCToGCMsgMasterStartupComplete_GCInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CGCToGCMsgMasterStartupComplete_GCInfo(CGCToGCMsgMasterStartupComplete_GCInfo&& from) noexcept
    : CGCToGCMsgMasterStartupComplete_GCInfo() {
    *this = ::std::move(from);
  }

  inline CGCToGCMsgMasterStartupComplete_GCInfo& operator=(CGCToGCMsgMasterStartupComplete_GCInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCToGCMsgMasterStartupComplete_GCInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CGCToGCMsgMasterStartupComplete_GCInfo* internal_default_instance() {
    return reinterpret_cast<const CGCToGCMsgMasterStartupComplete_GCInfo*>(
               &_CGCToGCMsgMasterStartupComplete_GCInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(CGCToGCMsgMasterStartupComplete_GCInfo* other);
  friend void swap(CGCToGCMsgMasterStartupComplete_GCInfo& a, CGCToGCMsgMasterStartupComplete_GCInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CGCToGCMsgMasterStartupComplete_GCInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CGCToGCMsgMasterStartupComplete_GCInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CGCToGCMsgMasterStartupComplete_GCInfo& from);
  void MergeFrom(const CGCToGCMsgMasterStartupComplete_GCInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CGCToGCMsgMasterStartupComplete_GCInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string machine_name = 2;
  bool has_machine_name() const;
  void clear_machine_name();
  static const int kMachineNameFieldNumber = 2;
  const ::std::string& machine_name() const;
  void set_machine_name(const ::std::string& value);
  #if LANG_CXX11
  void set_machine_name(::std::string&& value);
  #endif
  void set_machine_name(const char* value);
  void set_machine_name(const char* value, size_t size);
  ::std::string* mutable_machine_name();
  ::std::string* release_machine_name();
  void set_allocated_machine_name(::std::string* machine_name);

  // optional uint32 dir_index = 1;
  bool has_dir_index() const;
  void clear_dir_index();
  static const int kDirIndexFieldNumber = 1;
  ::google::protobuf::uint32 dir_index() const;
  void set_dir_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CGCToGCMsgMasterStartupComplete.GCInfo)
 private:
  void set_has_dir_index();
  void clear_has_dir_index();
  void set_has_machine_name();
  void clear_has_machine_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr machine_name_;
  ::google::protobuf::uint32 dir_index_;
  friend struct ::protobuf_gcsdk_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCGCToGCMsgMasterStartupComplete_GCInfoImpl();
};
// -------------------------------------------------------------------

class CGCToGCMsgMasterStartupComplete : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CGCToGCMsgMasterStartupComplete) */ {
 public:
  CGCToGCMsgMasterStartupComplete();
  virtual ~CGCToGCMsgMasterStartupComplete();

  CGCToGCMsgMasterStartupComplete(const CGCToGCMsgMasterStartupComplete& from);

  inline CGCToGCMsgMasterStartupComplete& operator=(const CGCToGCMsgMasterStartupComplete& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CGCToGCMsgMasterStartupComplete(CGCToGCMsgMasterStartupComplete&& from) noexcept
    : CGCToGCMsgMasterStartupComplete() {
    *this = ::std::move(from);
  }

  inline CGCToGCMsgMasterStartupComplete& operator=(CGCToGCMsgMasterStartupComplete&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCToGCMsgMasterStartupComplete& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CGCToGCMsgMasterStartupComplete* internal_default_instance() {
    return reinterpret_cast<const CGCToGCMsgMasterStartupComplete*>(
               &_CGCToGCMsgMasterStartupComplete_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(CGCToGCMsgMasterStartupComplete* other);
  friend void swap(CGCToGCMsgMasterStartupComplete& a, CGCToGCMsgMasterStartupComplete& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CGCToGCMsgMasterStartupComplete* New() const PROTOBUF_FINAL { return New(NULL); }

  CGCToGCMsgMasterStartupComplete* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CGCToGCMsgMasterStartupComplete& from);
  void MergeFrom(const CGCToGCMsgMasterStartupComplete& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CGCToGCMsgMasterStartupComplete* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CGCToGCMsgMasterStartupComplete_GCInfo GCInfo;

  // accessors -------------------------------------------------------

  // repeated .CGCToGCMsgMasterStartupComplete.GCInfo gc_info = 1;
  int gc_info_size() const;
  void clear_gc_info();
  static const int kGcInfoFieldNumber = 1;
  const ::CGCToGCMsgMasterStartupComplete_GCInfo& gc_info(int index) const;
  ::CGCToGCMsgMasterStartupComplete_GCInfo* mutable_gc_info(int index);
  ::CGCToGCMsgMasterStartupComplete_GCInfo* add_gc_info();
  ::google::protobuf::RepeatedPtrField< ::CGCToGCMsgMasterStartupComplete_GCInfo >*
      mutable_gc_info();
  const ::google::protobuf::RepeatedPtrField< ::CGCToGCMsgMasterStartupComplete_GCInfo >&
      gc_info() const;

  // @@protoc_insertion_point(class_scope:CGCToGCMsgMasterStartupComplete)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CGCToGCMsgMasterStartupComplete_GCInfo > gc_info_;
  friend struct ::protobuf_gcsdk_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCGCToGCMsgMasterStartupCompleteImpl();
};
// -------------------------------------------------------------------

class CGCToGCMsgRouted : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CGCToGCMsgRouted) */ {
 public:
  CGCToGCMsgRouted();
  virtual ~CGCToGCMsgRouted();

  CGCToGCMsgRouted(const CGCToGCMsgRouted& from);

  inline CGCToGCMsgRouted& operator=(const CGCToGCMsgRouted& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CGCToGCMsgRouted(CGCToGCMsgRouted&& from) noexcept
    : CGCToGCMsgRouted() {
    *this = ::std::move(from);
  }

  inline CGCToGCMsgRouted& operator=(CGCToGCMsgRouted&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCToGCMsgRouted& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CGCToGCMsgRouted* internal_default_instance() {
    return reinterpret_cast<const CGCToGCMsgRouted*>(
               &_CGCToGCMsgRouted_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(CGCToGCMsgRouted* other);
  friend void swap(CGCToGCMsgRouted& a, CGCToGCMsgRouted& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CGCToGCMsgRouted* New() const PROTOBUF_FINAL { return New(NULL); }

  CGCToGCMsgRouted* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CGCToGCMsgRouted& from);
  void MergeFrom(const CGCToGCMsgRouted& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CGCToGCMsgRouted* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes net_message = 3;
  bool has_net_message() const;
  void clear_net_message();
  static const int kNetMessageFieldNumber = 3;
  const ::std::string& net_message() const;
  void set_net_message(const ::std::string& value);
  #if LANG_CXX11
  void set_net_message(::std::string&& value);
  #endif
  void set_net_message(const char* value);
  void set_net_message(const void* value, size_t size);
  ::std::string* mutable_net_message();
  ::std::string* release_net_message();
  void set_allocated_net_message(::std::string* net_message);

  // optional fixed64 sender_id = 2;
  bool has_sender_id() const;
  void clear_sender_id();
  static const int kSenderIdFieldNumber = 2;
  ::google::protobuf::uint64 sender_id() const;
  void set_sender_id(::google::protobuf::uint64 value);

  // optional uint32 msg_type = 1;
  bool has_msg_type() const;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 1;
  ::google::protobuf::uint32 msg_type() const;
  void set_msg_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CGCToGCMsgRouted)
 private:
  void set_has_msg_type();
  void clear_has_msg_type();
  void set_has_sender_id();
  void clear_has_sender_id();
  void set_has_net_message();
  void clear_has_net_message();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr net_message_;
  ::google::protobuf::uint64 sender_id_;
  ::google::protobuf::uint32 msg_type_;
  friend struct ::protobuf_gcsdk_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCGCToGCMsgRoutedImpl();
};
// -------------------------------------------------------------------

class CGCToGCMsgRoutedReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CGCToGCMsgRoutedReply) */ {
 public:
  CGCToGCMsgRoutedReply();
  virtual ~CGCToGCMsgRoutedReply();

  CGCToGCMsgRoutedReply(const CGCToGCMsgRoutedReply& from);

  inline CGCToGCMsgRoutedReply& operator=(const CGCToGCMsgRoutedReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CGCToGCMsgRoutedReply(CGCToGCMsgRoutedReply&& from) noexcept
    : CGCToGCMsgRoutedReply() {
    *this = ::std::move(from);
  }

  inline CGCToGCMsgRoutedReply& operator=(CGCToGCMsgRoutedReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CGCToGCMsgRoutedReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CGCToGCMsgRoutedReply* internal_default_instance() {
    return reinterpret_cast<const CGCToGCMsgRoutedReply*>(
               &_CGCToGCMsgRoutedReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(CGCToGCMsgRoutedReply* other);
  friend void swap(CGCToGCMsgRoutedReply& a, CGCToGCMsgRoutedReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CGCToGCMsgRoutedReply* New() const PROTOBUF_FINAL { return New(NULL); }

  CGCToGCMsgRoutedReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CGCToGCMsgRoutedReply& from);
  void MergeFrom(const CGCToGCMsgRoutedReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CGCToGCMsgRoutedReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes net_message = 2;
  bool has_net_message() const;
  void clear_net_message();
  static const int kNetMessageFieldNumber = 2;
  const ::std::string& net_message() const;
  void set_net_message(const ::std::string& value);
  #if LANG_CXX11
  void set_net_message(::std::string&& value);
  #endif
  void set_net_message(const char* value);
  void set_net_message(const void* value, size_t size);
  ::std::string* mutable_net_message();
  ::std::string* release_net_message();
  void set_allocated_net_message(::std::string* net_message);

  // optional uint32 msg_type = 1;
  bool has_msg_type() const;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 1;
  ::google::protobuf::uint32 msg_type() const;
  void set_msg_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CGCToGCMsgRoutedReply)
 private:
  void set_has_msg_type();
  void clear_has_msg_type();
  void set_has_net_message();
  void clear_has_net_message();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr net_message_;
  ::google::protobuf::uint32 msg_type_;
  friend struct ::protobuf_gcsdk_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCGCToGCMsgRoutedReplyImpl();
};
// -------------------------------------------------------------------

class CMsgGCUpdateSubGCSessionInfo_CMsgUpdate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGCUpdateSubGCSessionInfo.CMsgUpdate) */ {
 public:
  CMsgGCUpdateSubGCSessionInfo_CMsgUpdate();
  virtual ~CMsgGCUpdateSubGCSessionInfo_CMsgUpdate();

  CMsgGCUpdateSubGCSessionInfo_CMsgUpdate(const CMsgGCUpdateSubGCSessionInfo_CMsgUpdate& from);

  inline CMsgGCUpdateSubGCSessionInfo_CMsgUpdate& operator=(const CMsgGCUpdateSubGCSessionInfo_CMsgUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCUpdateSubGCSessionInfo_CMsgUpdate(CMsgGCUpdateSubGCSessionInfo_CMsgUpdate&& from) noexcept
    : CMsgGCUpdateSubGCSessionInfo_CMsgUpdate() {
    *this = ::std::move(from);
  }

  inline CMsgGCUpdateSubGCSessionInfo_CMsgUpdate& operator=(CMsgGCUpdateSubGCSessionInfo_CMsgUpdate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCUpdateSubGCSessionInfo_CMsgUpdate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCUpdateSubGCSessionInfo_CMsgUpdate* internal_default_instance() {
    return reinterpret_cast<const CMsgGCUpdateSubGCSessionInfo_CMsgUpdate*>(
               &_CMsgGCUpdateSubGCSessionInfo_CMsgUpdate_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(CMsgGCUpdateSubGCSessionInfo_CMsgUpdate* other);
  friend void swap(CMsgGCUpdateSubGCSessionInfo_CMsgUpdate& a, CMsgGCUpdateSubGCSessionInfo_CMsgUpdate& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCUpdateSubGCSessionInfo_CMsgUpdate* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCUpdateSubGCSessionInfo_CMsgUpdate* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCUpdateSubGCSessionInfo_CMsgUpdate& from);
  void MergeFrom(const CMsgGCUpdateSubGCSessionInfo_CMsgUpdate& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCUpdateSubGCSessionInfo_CMsgUpdate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional fixed32 ip = 2;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 2;
  ::google::protobuf::uint32 ip() const;
  void set_ip(::google::protobuf::uint32 value);

  // optional bool trusted = 3;
  bool has_trusted() const;
  void clear_trusted();
  static const int kTrustedFieldNumber = 3;
  bool trusted() const;
  void set_trusted(bool value);

  // @@protoc_insertion_point(class_scope:CMsgGCUpdateSubGCSessionInfo.CMsgUpdate)
 private:
  void set_has_steamid();
  void clear_has_steamid();
  void set_has_ip();
  void clear_has_ip();
  void set_has_trusted();
  void clear_has_trusted();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::uint32 ip_;
  bool trusted_;
  friend struct ::protobuf_gcsdk_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgGCUpdateSubGCSessionInfo_CMsgUpdateImpl();
};
// -------------------------------------------------------------------

class CMsgGCUpdateSubGCSessionInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGCUpdateSubGCSessionInfo) */ {
 public:
  CMsgGCUpdateSubGCSessionInfo();
  virtual ~CMsgGCUpdateSubGCSessionInfo();

  CMsgGCUpdateSubGCSessionInfo(const CMsgGCUpdateSubGCSessionInfo& from);

  inline CMsgGCUpdateSubGCSessionInfo& operator=(const CMsgGCUpdateSubGCSessionInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCUpdateSubGCSessionInfo(CMsgGCUpdateSubGCSessionInfo&& from) noexcept
    : CMsgGCUpdateSubGCSessionInfo() {
    *this = ::std::move(from);
  }

  inline CMsgGCUpdateSubGCSessionInfo& operator=(CMsgGCUpdateSubGCSessionInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCUpdateSubGCSessionInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCUpdateSubGCSessionInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgGCUpdateSubGCSessionInfo*>(
               &_CMsgGCUpdateSubGCSessionInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(CMsgGCUpdateSubGCSessionInfo* other);
  friend void swap(CMsgGCUpdateSubGCSessionInfo& a, CMsgGCUpdateSubGCSessionInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCUpdateSubGCSessionInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCUpdateSubGCSessionInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCUpdateSubGCSessionInfo& from);
  void MergeFrom(const CMsgGCUpdateSubGCSessionInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCUpdateSubGCSessionInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgGCUpdateSubGCSessionInfo_CMsgUpdate CMsgUpdate;

  // accessors -------------------------------------------------------

  // repeated .CMsgGCUpdateSubGCSessionInfo.CMsgUpdate updates = 1;
  int updates_size() const;
  void clear_updates();
  static const int kUpdatesFieldNumber = 1;
  const ::CMsgGCUpdateSubGCSessionInfo_CMsgUpdate& updates(int index) const;
  ::CMsgGCUpdateSubGCSessionInfo_CMsgUpdate* mutable_updates(int index);
  ::CMsgGCUpdateSubGCSessionInfo_CMsgUpdate* add_updates();
  ::google::protobuf::RepeatedPtrField< ::CMsgGCUpdateSubGCSessionInfo_CMsgUpdate >*
      mutable_updates();
  const ::google::protobuf::RepeatedPtrField< ::CMsgGCUpdateSubGCSessionInfo_CMsgUpdate >&
      updates() const;

  // @@protoc_insertion_point(class_scope:CMsgGCUpdateSubGCSessionInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGCUpdateSubGCSessionInfo_CMsgUpdate > updates_;
  friend struct ::protobuf_gcsdk_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgGCUpdateSubGCSessionInfoImpl();
};
// -------------------------------------------------------------------

class CMsgGCRequestSubGCSessionInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGCRequestSubGCSessionInfo) */ {
 public:
  CMsgGCRequestSubGCSessionInfo();
  virtual ~CMsgGCRequestSubGCSessionInfo();

  CMsgGCRequestSubGCSessionInfo(const CMsgGCRequestSubGCSessionInfo& from);

  inline CMsgGCRequestSubGCSessionInfo& operator=(const CMsgGCRequestSubGCSessionInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCRequestSubGCSessionInfo(CMsgGCRequestSubGCSessionInfo&& from) noexcept
    : CMsgGCRequestSubGCSessionInfo() {
    *this = ::std::move(from);
  }

  inline CMsgGCRequestSubGCSessionInfo& operator=(CMsgGCRequestSubGCSessionInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCRequestSubGCSessionInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCRequestSubGCSessionInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgGCRequestSubGCSessionInfo*>(
               &_CMsgGCRequestSubGCSessionInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(CMsgGCRequestSubGCSessionInfo* other);
  friend void swap(CMsgGCRequestSubGCSessionInfo& a, CMsgGCRequestSubGCSessionInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCRequestSubGCSessionInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCRequestSubGCSessionInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCRequestSubGCSessionInfo& from);
  void MergeFrom(const CMsgGCRequestSubGCSessionInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCRequestSubGCSessionInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgGCRequestSubGCSessionInfo)
 private:
  void set_has_steamid();
  void clear_has_steamid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 steamid_;
  friend struct ::protobuf_gcsdk_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgGCRequestSubGCSessionInfoImpl();
};
// -------------------------------------------------------------------

class CMsgGCRequestSubGCSessionInfoResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGCRequestSubGCSessionInfoResponse) */ {
 public:
  CMsgGCRequestSubGCSessionInfoResponse();
  virtual ~CMsgGCRequestSubGCSessionInfoResponse();

  CMsgGCRequestSubGCSessionInfoResponse(const CMsgGCRequestSubGCSessionInfoResponse& from);

  inline CMsgGCRequestSubGCSessionInfoResponse& operator=(const CMsgGCRequestSubGCSessionInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCRequestSubGCSessionInfoResponse(CMsgGCRequestSubGCSessionInfoResponse&& from) noexcept
    : CMsgGCRequestSubGCSessionInfoResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCRequestSubGCSessionInfoResponse& operator=(CMsgGCRequestSubGCSessionInfoResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCRequestSubGCSessionInfoResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCRequestSubGCSessionInfoResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCRequestSubGCSessionInfoResponse*>(
               &_CMsgGCRequestSubGCSessionInfoResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(CMsgGCRequestSubGCSessionInfoResponse* other);
  friend void swap(CMsgGCRequestSubGCSessionInfoResponse& a, CMsgGCRequestSubGCSessionInfoResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCRequestSubGCSessionInfoResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCRequestSubGCSessionInfoResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCRequestSubGCSessionInfoResponse& from);
  void MergeFrom(const CMsgGCRequestSubGCSessionInfoResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCRequestSubGCSessionInfoResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed32 ip = 1;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 1;
  ::google::protobuf::uint32 ip() const;
  void set_ip(::google::protobuf::uint32 value);

  // optional bool trusted = 2;
  bool has_trusted() const;
  void clear_trusted();
  static const int kTrustedFieldNumber = 2;
  bool trusted() const;
  void set_trusted(bool value);

  // @@protoc_insertion_point(class_scope:CMsgGCRequestSubGCSessionInfoResponse)
 private:
  void set_has_ip();
  void clear_has_ip();
  void set_has_trusted();
  void clear_has_trusted();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 ip_;
  bool trusted_;
  friend struct ::protobuf_gcsdk_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgGCRequestSubGCSessionInfoResponseImpl();
};
// -------------------------------------------------------------------

class CMsgGCToGCIncrementRecruitmentLevel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCIncrementRecruitmentLevel) */ {
 public:
  CMsgGCToGCIncrementRecruitmentLevel();
  virtual ~CMsgGCToGCIncrementRecruitmentLevel();

  CMsgGCToGCIncrementRecruitmentLevel(const CMsgGCToGCIncrementRecruitmentLevel& from);

  inline CMsgGCToGCIncrementRecruitmentLevel& operator=(const CMsgGCToGCIncrementRecruitmentLevel& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToGCIncrementRecruitmentLevel(CMsgGCToGCIncrementRecruitmentLevel&& from) noexcept
    : CMsgGCToGCIncrementRecruitmentLevel() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCIncrementRecruitmentLevel& operator=(CMsgGCToGCIncrementRecruitmentLevel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToGCIncrementRecruitmentLevel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToGCIncrementRecruitmentLevel* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCIncrementRecruitmentLevel*>(
               &_CMsgGCToGCIncrementRecruitmentLevel_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(CMsgGCToGCIncrementRecruitmentLevel* other);
  friend void swap(CMsgGCToGCIncrementRecruitmentLevel& a, CMsgGCToGCIncrementRecruitmentLevel& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToGCIncrementRecruitmentLevel* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToGCIncrementRecruitmentLevel* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToGCIncrementRecruitmentLevel& from);
  void MergeFrom(const CMsgGCToGCIncrementRecruitmentLevel& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToGCIncrementRecruitmentLevel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgGCToGCIncrementRecruitmentLevel)
 private:
  void set_has_steamid();
  void clear_has_steamid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 steamid_;
  friend struct ::protobuf_gcsdk_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgGCToGCIncrementRecruitmentLevelImpl();
};
// -------------------------------------------------------------------

class CMsgSOCacheHaveVersion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgSOCacheHaveVersion) */ {
 public:
  CMsgSOCacheHaveVersion();
  virtual ~CMsgSOCacheHaveVersion();

  CMsgSOCacheHaveVersion(const CMsgSOCacheHaveVersion& from);

  inline CMsgSOCacheHaveVersion& operator=(const CMsgSOCacheHaveVersion& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgSOCacheHaveVersion(CMsgSOCacheHaveVersion&& from) noexcept
    : CMsgSOCacheHaveVersion() {
    *this = ::std::move(from);
  }

  inline CMsgSOCacheHaveVersion& operator=(CMsgSOCacheHaveVersion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSOCacheHaveVersion& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgSOCacheHaveVersion* internal_default_instance() {
    return reinterpret_cast<const CMsgSOCacheHaveVersion*>(
               &_CMsgSOCacheHaveVersion_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(CMsgSOCacheHaveVersion* other);
  friend void swap(CMsgSOCacheHaveVersion& a, CMsgSOCacheHaveVersion& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgSOCacheHaveVersion* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSOCacheHaveVersion* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSOCacheHaveVersion& from);
  void MergeFrom(const CMsgSOCacheHaveVersion& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSOCacheHaveVersion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgSOIDOwner soid = 1;
  bool has_soid() const;
  void clear_soid();
  static const int kSoidFieldNumber = 1;
  const ::CMsgSOIDOwner& soid() const;
  ::CMsgSOIDOwner* release_soid();
  ::CMsgSOIDOwner* mutable_soid();
  void set_allocated_soid(::CMsgSOIDOwner* soid);

  // optional fixed64 version = 2;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  ::google::protobuf::uint64 version() const;
  void set_version(::google::protobuf::uint64 value);

  // optional uint32 service_id = 3;
  bool has_service_id() const;
  void clear_service_id();
  static const int kServiceIdFieldNumber = 3;
  ::google::protobuf::uint32 service_id() const;
  void set_service_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgSOCacheHaveVersion)
 private:
  void set_has_soid();
  void clear_has_soid();
  void set_has_version();
  void clear_has_version();
  void set_has_service_id();
  void clear_has_service_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::CMsgSOIDOwner* soid_;
  ::google::protobuf::uint64 version_;
  ::google::protobuf::uint32 service_id_;
  friend struct ::protobuf_gcsdk_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgSOCacheHaveVersionImpl();
};
// -------------------------------------------------------------------

class CMsgConnectionStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgConnectionStatus) */ {
 public:
  CMsgConnectionStatus();
  virtual ~CMsgConnectionStatus();

  CMsgConnectionStatus(const CMsgConnectionStatus& from);

  inline CMsgConnectionStatus& operator=(const CMsgConnectionStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgConnectionStatus(CMsgConnectionStatus&& from) noexcept
    : CMsgConnectionStatus() {
    *this = ::std::move(from);
  }

  inline CMsgConnectionStatus& operator=(CMsgConnectionStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgConnectionStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgConnectionStatus* internal_default_instance() {
    return reinterpret_cast<const CMsgConnectionStatus*>(
               &_CMsgConnectionStatus_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(CMsgConnectionStatus* other);
  friend void swap(CMsgConnectionStatus& a, CMsgConnectionStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgConnectionStatus* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgConnectionStatus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgConnectionStatus& from);
  void MergeFrom(const CMsgConnectionStatus& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgConnectionStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GCConnectionStatus status = 1 [default = GCConnectionStatus_HAVE_SESSION];
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::GCConnectionStatus status() const;
  void set_status(::GCConnectionStatus value);

  // optional uint32 client_session_need = 2;
  bool has_client_session_need() const;
  void clear_client_session_need();
  static const int kClientSessionNeedFieldNumber = 2;
  ::google::protobuf::uint32 client_session_need() const;
  void set_client_session_need(::google::protobuf::uint32 value);

  // optional int32 queue_position = 3;
  bool has_queue_position() const;
  void clear_queue_position();
  static const int kQueuePositionFieldNumber = 3;
  ::google::protobuf::int32 queue_position() const;
  void set_queue_position(::google::protobuf::int32 value);

  // optional int32 queue_size = 4;
  bool has_queue_size() const;
  void clear_queue_size();
  static const int kQueueSizeFieldNumber = 4;
  ::google::protobuf::int32 queue_size() const;
  void set_queue_size(::google::protobuf::int32 value);

  // optional int32 wait_seconds = 5;
  bool has_wait_seconds() const;
  void clear_wait_seconds();
  static const int kWaitSecondsFieldNumber = 5;
  ::google::protobuf::int32 wait_seconds() const;
  void set_wait_seconds(::google::protobuf::int32 value);

  // optional int32 estimated_wait_seconds_remaining = 6;
  bool has_estimated_wait_seconds_remaining() const;
  void clear_estimated_wait_seconds_remaining();
  static const int kEstimatedWaitSecondsRemainingFieldNumber = 6;
  ::google::protobuf::int32 estimated_wait_seconds_remaining() const;
  void set_estimated_wait_seconds_remaining(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgConnectionStatus)
 private:
  void set_has_status();
  void clear_has_status();
  void set_has_client_session_need();
  void clear_has_client_session_need();
  void set_has_queue_position();
  void clear_has_queue_position();
  void set_has_queue_size();
  void clear_has_queue_size();
  void set_has_wait_seconds();
  void clear_has_wait_seconds();
  void set_has_estimated_wait_seconds_remaining();
  void clear_has_estimated_wait_seconds_remaining();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int status_;
  ::google::protobuf::uint32 client_session_need_;
  ::google::protobuf::int32 queue_position_;
  ::google::protobuf::int32 queue_size_;
  ::google::protobuf::int32 wait_seconds_;
  ::google::protobuf::int32 estimated_wait_seconds_remaining_;
  friend struct ::protobuf_gcsdk_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgConnectionStatusImpl();
};
// -------------------------------------------------------------------

class CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCSOCacheSubscribe.CMsgHaveVersions) */ {
 public:
  CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions();
  virtual ~CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions();

  CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions(const CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions& from);

  inline CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions& operator=(const CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions(CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions&& from) noexcept
    : CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions& operator=(CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions*>(
               &_CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions* other);
  friend void swap(CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions& a, CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions& from);
  void MergeFrom(const CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 version = 2;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  ::google::protobuf::uint64 version() const;
  void set_version(::google::protobuf::uint64 value);

  // optional uint32 service_id = 1;
  bool has_service_id() const;
  void clear_service_id();
  static const int kServiceIdFieldNumber = 1;
  ::google::protobuf::uint32 service_id() const;
  void set_service_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCToGCSOCacheSubscribe.CMsgHaveVersions)
 private:
  void set_has_service_id();
  void clear_has_service_id();
  void set_has_version();
  void clear_has_version();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 version_;
  ::google::protobuf::uint32 service_id_;
  friend struct ::protobuf_gcsdk_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgGCToGCSOCacheSubscribe_CMsgHaveVersionsImpl();
};
// -------------------------------------------------------------------

class CMsgGCToGCSOCacheSubscribe : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCSOCacheSubscribe) */ {
 public:
  CMsgGCToGCSOCacheSubscribe();
  virtual ~CMsgGCToGCSOCacheSubscribe();

  CMsgGCToGCSOCacheSubscribe(const CMsgGCToGCSOCacheSubscribe& from);

  inline CMsgGCToGCSOCacheSubscribe& operator=(const CMsgGCToGCSOCacheSubscribe& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToGCSOCacheSubscribe(CMsgGCToGCSOCacheSubscribe&& from) noexcept
    : CMsgGCToGCSOCacheSubscribe() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCSOCacheSubscribe& operator=(CMsgGCToGCSOCacheSubscribe&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToGCSOCacheSubscribe& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToGCSOCacheSubscribe* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCSOCacheSubscribe*>(
               &_CMsgGCToGCSOCacheSubscribe_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(CMsgGCToGCSOCacheSubscribe* other);
  friend void swap(CMsgGCToGCSOCacheSubscribe& a, CMsgGCToGCSOCacheSubscribe& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToGCSOCacheSubscribe* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToGCSOCacheSubscribe* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToGCSOCacheSubscribe& from);
  void MergeFrom(const CMsgGCToGCSOCacheSubscribe& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToGCSOCacheSubscribe* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions CMsgHaveVersions;

  // accessors -------------------------------------------------------

  // repeated .CMsgGCToGCSOCacheSubscribe.CMsgHaveVersions have_versions = 4;
  int have_versions_size() const;
  void clear_have_versions();
  static const int kHaveVersionsFieldNumber = 4;
  const ::CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions& have_versions(int index) const;
  ::CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions* mutable_have_versions(int index);
  ::CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions* add_have_versions();
  ::google::protobuf::RepeatedPtrField< ::CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions >*
      mutable_have_versions();
  const ::google::protobuf::RepeatedPtrField< ::CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions >&
      have_versions() const;

  // optional fixed64 subscriber = 1;
  bool has_subscriber() const;
  void clear_subscriber();
  static const int kSubscriberFieldNumber = 1;
  ::google::protobuf::uint64 subscriber() const;
  void set_subscriber(::google::protobuf::uint64 value);

  // optional fixed64 subscribe_to = 2;
  bool has_subscribe_to() const;
  void clear_subscribe_to();
  static const int kSubscribeToFieldNumber = 2;
  ::google::protobuf::uint64 subscribe_to() const;
  void set_subscribe_to(::google::protobuf::uint64 value);

  // optional fixed64 sync_version = 3;
  bool has_sync_version() const;
  void clear_sync_version();
  static const int kSyncVersionFieldNumber = 3;
  ::google::protobuf::uint64 sync_version() const;
  void set_sync_version(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgGCToGCSOCacheSubscribe)
 private:
  void set_has_subscriber();
  void clear_has_subscriber();
  void set_has_subscribe_to();
  void clear_has_subscribe_to();
  void set_has_sync_version();
  void clear_has_sync_version();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions > have_versions_;
  ::google::protobuf::uint64 subscriber_;
  ::google::protobuf::uint64 subscribe_to_;
  ::google::protobuf::uint64 sync_version_;
  friend struct ::protobuf_gcsdk_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgGCToGCSOCacheSubscribeImpl();
};
// -------------------------------------------------------------------

class CMsgGCToGCSOCacheUnsubscribe : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCSOCacheUnsubscribe) */ {
 public:
  CMsgGCToGCSOCacheUnsubscribe();
  virtual ~CMsgGCToGCSOCacheUnsubscribe();

  CMsgGCToGCSOCacheUnsubscribe(const CMsgGCToGCSOCacheUnsubscribe& from);

  inline CMsgGCToGCSOCacheUnsubscribe& operator=(const CMsgGCToGCSOCacheUnsubscribe& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCToGCSOCacheUnsubscribe(CMsgGCToGCSOCacheUnsubscribe&& from) noexcept
    : CMsgGCToGCSOCacheUnsubscribe() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCSOCacheUnsubscribe& operator=(CMsgGCToGCSOCacheUnsubscribe&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToGCSOCacheUnsubscribe& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCToGCSOCacheUnsubscribe* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCSOCacheUnsubscribe*>(
               &_CMsgGCToGCSOCacheUnsubscribe_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(CMsgGCToGCSOCacheUnsubscribe* other);
  friend void swap(CMsgGCToGCSOCacheUnsubscribe& a, CMsgGCToGCSOCacheUnsubscribe& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToGCSOCacheUnsubscribe* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToGCSOCacheUnsubscribe* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToGCSOCacheUnsubscribe& from);
  void MergeFrom(const CMsgGCToGCSOCacheUnsubscribe& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToGCSOCacheUnsubscribe* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 subscriber = 1;
  bool has_subscriber() const;
  void clear_subscriber();
  static const int kSubscriberFieldNumber = 1;
  ::google::protobuf::uint64 subscriber() const;
  void set_subscriber(::google::protobuf::uint64 value);

  // optional fixed64 unsubscribe_from = 2;
  bool has_unsubscribe_from() const;
  void clear_unsubscribe_from();
  static const int kUnsubscribeFromFieldNumber = 2;
  ::google::protobuf::uint64 unsubscribe_from() const;
  void set_unsubscribe_from(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgGCToGCSOCacheUnsubscribe)
 private:
  void set_has_subscriber();
  void clear_has_subscriber();
  void set_has_unsubscribe_from();
  void clear_has_unsubscribe_from();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 subscriber_;
  ::google::protobuf::uint64 unsubscribe_from_;
  friend struct ::protobuf_gcsdk_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgGCToGCSOCacheUnsubscribeImpl();
};
// -------------------------------------------------------------------

class CMsgGCClientPing : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CMsgGCClientPing) */ {
 public:
  CMsgGCClientPing();
  virtual ~CMsgGCClientPing();

  CMsgGCClientPing(const CMsgGCClientPing& from);

  inline CMsgGCClientPing& operator=(const CMsgGCClientPing& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CMsgGCClientPing(CMsgGCClientPing&& from) noexcept
    : CMsgGCClientPing() {
    *this = ::std::move(from);
  }

  inline CMsgGCClientPing& operator=(CMsgGCClientPing&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCClientPing& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CMsgGCClientPing* internal_default_instance() {
    return reinterpret_cast<const CMsgGCClientPing*>(
               &_CMsgGCClientPing_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(CMsgGCClientPing* other);
  friend void swap(CMsgGCClientPing& a, CMsgGCClientPing& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCClientPing* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCClientPing* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCClientPing& from);
  void MergeFrom(const CMsgGCClientPing& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCClientPing* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgGCClientPing)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct ::protobuf_gcsdk_5fgcmessages_2eproto::TableStruct;
  friend void ::protobuf_gcsdk_5fgcmessages_2eproto::InitDefaultsCMsgGCClientPingImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CMsgSOIDOwner

// optional uint32 type = 1;
inline bool CMsgSOIDOwner::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSOIDOwner::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSOIDOwner::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSOIDOwner::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CMsgSOIDOwner::type() const {
  // @@protoc_insertion_point(field_get:CMsgSOIDOwner.type)
  return type_;
}
inline void CMsgSOIDOwner::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:CMsgSOIDOwner.type)
}

// optional uint64 id = 2;
inline bool CMsgSOIDOwner::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSOIDOwner::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSOIDOwner::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSOIDOwner::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 CMsgSOIDOwner::id() const {
  // @@protoc_insertion_point(field_get:CMsgSOIDOwner.id)
  return id_;
}
inline void CMsgSOIDOwner::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSOIDOwner.id)
}

// -------------------------------------------------------------------

// CMsgSOSingleObject

// optional fixed64 owner = 1;
inline bool CMsgSOSingleObject::has_owner() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSOSingleObject::set_has_owner() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSOSingleObject::clear_has_owner() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSOSingleObject::clear_owner() {
  owner_ = GOOGLE_ULONGLONG(0);
  clear_has_owner();
}
inline ::google::protobuf::uint64 CMsgSOSingleObject::owner() const {
  // @@protoc_insertion_point(field_get:CMsgSOSingleObject.owner)
  return owner_;
}
inline void CMsgSOSingleObject::set_owner(::google::protobuf::uint64 value) {
  set_has_owner();
  owner_ = value;
  // @@protoc_insertion_point(field_set:CMsgSOSingleObject.owner)
}

// optional int32 type_id = 2;
inline bool CMsgSOSingleObject::has_type_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSOSingleObject::set_has_type_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgSOSingleObject::clear_has_type_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgSOSingleObject::clear_type_id() {
  type_id_ = 0;
  clear_has_type_id();
}
inline ::google::protobuf::int32 CMsgSOSingleObject::type_id() const {
  // @@protoc_insertion_point(field_get:CMsgSOSingleObject.type_id)
  return type_id_;
}
inline void CMsgSOSingleObject::set_type_id(::google::protobuf::int32 value) {
  set_has_type_id();
  type_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSOSingleObject.type_id)
}

// optional bytes object_data = 3;
inline bool CMsgSOSingleObject::has_object_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSOSingleObject::set_has_object_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSOSingleObject::clear_has_object_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSOSingleObject::clear_object_data() {
  object_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_object_data();
}
inline const ::std::string& CMsgSOSingleObject::object_data() const {
  // @@protoc_insertion_point(field_get:CMsgSOSingleObject.object_data)
  return object_data_.GetNoArena();
}
inline void CMsgSOSingleObject::set_object_data(const ::std::string& value) {
  set_has_object_data();
  object_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgSOSingleObject.object_data)
}
#if LANG_CXX11
inline void CMsgSOSingleObject::set_object_data(::std::string&& value) {
  set_has_object_data();
  object_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgSOSingleObject.object_data)
}
#endif
inline void CMsgSOSingleObject::set_object_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_object_data();
  object_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgSOSingleObject.object_data)
}
inline void CMsgSOSingleObject::set_object_data(const void* value, size_t size) {
  set_has_object_data();
  object_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgSOSingleObject.object_data)
}
inline ::std::string* CMsgSOSingleObject::mutable_object_data() {
  set_has_object_data();
  // @@protoc_insertion_point(field_mutable:CMsgSOSingleObject.object_data)
  return object_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgSOSingleObject::release_object_data() {
  // @@protoc_insertion_point(field_release:CMsgSOSingleObject.object_data)
  clear_has_object_data();
  return object_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgSOSingleObject::set_allocated_object_data(::std::string* object_data) {
  if (object_data != NULL) {
    set_has_object_data();
  } else {
    clear_has_object_data();
  }
  object_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), object_data);
  // @@protoc_insertion_point(field_set_allocated:CMsgSOSingleObject.object_data)
}

// optional fixed64 version = 4;
inline bool CMsgSOSingleObject::has_version() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSOSingleObject::set_has_version() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSOSingleObject::clear_has_version() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSOSingleObject::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
  clear_has_version();
}
inline ::google::protobuf::uint64 CMsgSOSingleObject::version() const {
  // @@protoc_insertion_point(field_get:CMsgSOSingleObject.version)
  return version_;
}
inline void CMsgSOSingleObject::set_version(::google::protobuf::uint64 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:CMsgSOSingleObject.version)
}

// optional .CMsgSOIDOwner owner_soid = 5;
inline bool CMsgSOSingleObject::has_owner_soid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSOSingleObject::set_has_owner_soid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSOSingleObject::clear_has_owner_soid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSOSingleObject::clear_owner_soid() {
  if (owner_soid_ != NULL) owner_soid_->Clear();
  clear_has_owner_soid();
}
inline const ::CMsgSOIDOwner& CMsgSOSingleObject::owner_soid() const {
  const ::CMsgSOIDOwner* p = owner_soid_;
  // @@protoc_insertion_point(field_get:CMsgSOSingleObject.owner_soid)
  return p != NULL ? *p : *reinterpret_cast<const ::CMsgSOIDOwner*>(
      &::_CMsgSOIDOwner_default_instance_);
}
inline ::CMsgSOIDOwner* CMsgSOSingleObject::release_owner_soid() {
  // @@protoc_insertion_point(field_release:CMsgSOSingleObject.owner_soid)
  clear_has_owner_soid();
  ::CMsgSOIDOwner* temp = owner_soid_;
  owner_soid_ = NULL;
  return temp;
}
inline ::CMsgSOIDOwner* CMsgSOSingleObject::mutable_owner_soid() {
  set_has_owner_soid();
  if (owner_soid_ == NULL) {
    owner_soid_ = new ::CMsgSOIDOwner;
  }
  // @@protoc_insertion_point(field_mutable:CMsgSOSingleObject.owner_soid)
  return owner_soid_;
}
inline void CMsgSOSingleObject::set_allocated_owner_soid(::CMsgSOIDOwner* owner_soid) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete owner_soid_;
  }
  if (owner_soid) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      owner_soid = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, owner_soid, submessage_arena);
    }
    set_has_owner_soid();
  } else {
    clear_has_owner_soid();
  }
  owner_soid_ = owner_soid;
  // @@protoc_insertion_point(field_set_allocated:CMsgSOSingleObject.owner_soid)
}

// optional uint32 service_id = 6;
inline bool CMsgSOSingleObject::has_service_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgSOSingleObject::set_has_service_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgSOSingleObject::clear_has_service_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgSOSingleObject::clear_service_id() {
  service_id_ = 0u;
  clear_has_service_id();
}
inline ::google::protobuf::uint32 CMsgSOSingleObject::service_id() const {
  // @@protoc_insertion_point(field_get:CMsgSOSingleObject.service_id)
  return service_id_;
}
inline void CMsgSOSingleObject::set_service_id(::google::protobuf::uint32 value) {
  set_has_service_id();
  service_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSOSingleObject.service_id)
}

// -------------------------------------------------------------------

// CMsgSOMultipleObjects_SingleObject

// optional int32 type_id = 1;
inline bool CMsgSOMultipleObjects_SingleObject::has_type_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSOMultipleObjects_SingleObject::set_has_type_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSOMultipleObjects_SingleObject::clear_has_type_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSOMultipleObjects_SingleObject::clear_type_id() {
  type_id_ = 0;
  clear_has_type_id();
}
inline ::google::protobuf::int32 CMsgSOMultipleObjects_SingleObject::type_id() const {
  // @@protoc_insertion_point(field_get:CMsgSOMultipleObjects.SingleObject.type_id)
  return type_id_;
}
inline void CMsgSOMultipleObjects_SingleObject::set_type_id(::google::protobuf::int32 value) {
  set_has_type_id();
  type_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSOMultipleObjects.SingleObject.type_id)
}

// optional bytes object_data = 2;
inline bool CMsgSOMultipleObjects_SingleObject::has_object_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSOMultipleObjects_SingleObject::set_has_object_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSOMultipleObjects_SingleObject::clear_has_object_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSOMultipleObjects_SingleObject::clear_object_data() {
  object_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_object_data();
}
inline const ::std::string& CMsgSOMultipleObjects_SingleObject::object_data() const {
  // @@protoc_insertion_point(field_get:CMsgSOMultipleObjects.SingleObject.object_data)
  return object_data_.GetNoArena();
}
inline void CMsgSOMultipleObjects_SingleObject::set_object_data(const ::std::string& value) {
  set_has_object_data();
  object_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgSOMultipleObjects.SingleObject.object_data)
}
#if LANG_CXX11
inline void CMsgSOMultipleObjects_SingleObject::set_object_data(::std::string&& value) {
  set_has_object_data();
  object_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgSOMultipleObjects.SingleObject.object_data)
}
#endif
inline void CMsgSOMultipleObjects_SingleObject::set_object_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_object_data();
  object_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgSOMultipleObjects.SingleObject.object_data)
}
inline void CMsgSOMultipleObjects_SingleObject::set_object_data(const void* value, size_t size) {
  set_has_object_data();
  object_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgSOMultipleObjects.SingleObject.object_data)
}
inline ::std::string* CMsgSOMultipleObjects_SingleObject::mutable_object_data() {
  set_has_object_data();
  // @@protoc_insertion_point(field_mutable:CMsgSOMultipleObjects.SingleObject.object_data)
  return object_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgSOMultipleObjects_SingleObject::release_object_data() {
  // @@protoc_insertion_point(field_release:CMsgSOMultipleObjects.SingleObject.object_data)
  clear_has_object_data();
  return object_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgSOMultipleObjects_SingleObject::set_allocated_object_data(::std::string* object_data) {
  if (object_data != NULL) {
    set_has_object_data();
  } else {
    clear_has_object_data();
  }
  object_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), object_data);
  // @@protoc_insertion_point(field_set_allocated:CMsgSOMultipleObjects.SingleObject.object_data)
}

// -------------------------------------------------------------------

// CMsgSOMultipleObjects

// optional fixed64 owner = 1;
inline bool CMsgSOMultipleObjects::has_owner() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSOMultipleObjects::set_has_owner() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSOMultipleObjects::clear_has_owner() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSOMultipleObjects::clear_owner() {
  owner_ = GOOGLE_ULONGLONG(0);
  clear_has_owner();
}
inline ::google::protobuf::uint64 CMsgSOMultipleObjects::owner() const {
  // @@protoc_insertion_point(field_get:CMsgSOMultipleObjects.owner)
  return owner_;
}
inline void CMsgSOMultipleObjects::set_owner(::google::protobuf::uint64 value) {
  set_has_owner();
  owner_ = value;
  // @@protoc_insertion_point(field_set:CMsgSOMultipleObjects.owner)
}

// repeated .CMsgSOMultipleObjects.SingleObject objects = 2;
inline int CMsgSOMultipleObjects::objects_size() const {
  return objects_.size();
}
inline void CMsgSOMultipleObjects::clear_objects() {
  objects_.Clear();
}
inline const ::CMsgSOMultipleObjects_SingleObject& CMsgSOMultipleObjects::objects(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSOMultipleObjects.objects)
  return objects_.Get(index);
}
inline ::CMsgSOMultipleObjects_SingleObject* CMsgSOMultipleObjects::mutable_objects(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSOMultipleObjects.objects)
  return objects_.Mutable(index);
}
inline ::CMsgSOMultipleObjects_SingleObject* CMsgSOMultipleObjects::add_objects() {
  // @@protoc_insertion_point(field_add:CMsgSOMultipleObjects.objects)
  return objects_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSOMultipleObjects_SingleObject >*
CMsgSOMultipleObjects::mutable_objects() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSOMultipleObjects.objects)
  return &objects_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSOMultipleObjects_SingleObject >&
CMsgSOMultipleObjects::objects() const {
  // @@protoc_insertion_point(field_list:CMsgSOMultipleObjects.objects)
  return objects_;
}

// optional fixed64 version = 3;
inline bool CMsgSOMultipleObjects::has_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSOMultipleObjects::set_has_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSOMultipleObjects::clear_has_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSOMultipleObjects::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
  clear_has_version();
}
inline ::google::protobuf::uint64 CMsgSOMultipleObjects::version() const {
  // @@protoc_insertion_point(field_get:CMsgSOMultipleObjects.version)
  return version_;
}
inline void CMsgSOMultipleObjects::set_version(::google::protobuf::uint64 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:CMsgSOMultipleObjects.version)
}

// optional .CMsgSOIDOwner owner_soid = 6;
inline bool CMsgSOMultipleObjects::has_owner_soid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSOMultipleObjects::set_has_owner_soid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSOMultipleObjects::clear_has_owner_soid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSOMultipleObjects::clear_owner_soid() {
  if (owner_soid_ != NULL) owner_soid_->Clear();
  clear_has_owner_soid();
}
inline const ::CMsgSOIDOwner& CMsgSOMultipleObjects::owner_soid() const {
  const ::CMsgSOIDOwner* p = owner_soid_;
  // @@protoc_insertion_point(field_get:CMsgSOMultipleObjects.owner_soid)
  return p != NULL ? *p : *reinterpret_cast<const ::CMsgSOIDOwner*>(
      &::_CMsgSOIDOwner_default_instance_);
}
inline ::CMsgSOIDOwner* CMsgSOMultipleObjects::release_owner_soid() {
  // @@protoc_insertion_point(field_release:CMsgSOMultipleObjects.owner_soid)
  clear_has_owner_soid();
  ::CMsgSOIDOwner* temp = owner_soid_;
  owner_soid_ = NULL;
  return temp;
}
inline ::CMsgSOIDOwner* CMsgSOMultipleObjects::mutable_owner_soid() {
  set_has_owner_soid();
  if (owner_soid_ == NULL) {
    owner_soid_ = new ::CMsgSOIDOwner;
  }
  // @@protoc_insertion_point(field_mutable:CMsgSOMultipleObjects.owner_soid)
  return owner_soid_;
}
inline void CMsgSOMultipleObjects::set_allocated_owner_soid(::CMsgSOIDOwner* owner_soid) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete owner_soid_;
  }
  if (owner_soid) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      owner_soid = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, owner_soid, submessage_arena);
    }
    set_has_owner_soid();
  } else {
    clear_has_owner_soid();
  }
  owner_soid_ = owner_soid;
  // @@protoc_insertion_point(field_set_allocated:CMsgSOMultipleObjects.owner_soid)
}

// optional uint32 service_id = 7;
inline bool CMsgSOMultipleObjects::has_service_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSOMultipleObjects::set_has_service_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSOMultipleObjects::clear_has_service_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSOMultipleObjects::clear_service_id() {
  service_id_ = 0u;
  clear_has_service_id();
}
inline ::google::protobuf::uint32 CMsgSOMultipleObjects::service_id() const {
  // @@protoc_insertion_point(field_get:CMsgSOMultipleObjects.service_id)
  return service_id_;
}
inline void CMsgSOMultipleObjects::set_service_id(::google::protobuf::uint32 value) {
  set_has_service_id();
  service_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSOMultipleObjects.service_id)
}

// -------------------------------------------------------------------

// CMsgSOCacheSubscribed_SubscribedType

// optional int32 type_id = 1;
inline bool CMsgSOCacheSubscribed_SubscribedType::has_type_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSOCacheSubscribed_SubscribedType::set_has_type_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSOCacheSubscribed_SubscribedType::clear_has_type_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSOCacheSubscribed_SubscribedType::clear_type_id() {
  type_id_ = 0;
  clear_has_type_id();
}
inline ::google::protobuf::int32 CMsgSOCacheSubscribed_SubscribedType::type_id() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscribed.SubscribedType.type_id)
  return type_id_;
}
inline void CMsgSOCacheSubscribed_SubscribedType::set_type_id(::google::protobuf::int32 value) {
  set_has_type_id();
  type_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSOCacheSubscribed.SubscribedType.type_id)
}

// repeated bytes object_data = 2;
inline int CMsgSOCacheSubscribed_SubscribedType::object_data_size() const {
  return object_data_.size();
}
inline void CMsgSOCacheSubscribed_SubscribedType::clear_object_data() {
  object_data_.Clear();
}
inline const ::std::string& CMsgSOCacheSubscribed_SubscribedType::object_data(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscribed.SubscribedType.object_data)
  return object_data_.Get(index);
}
inline ::std::string* CMsgSOCacheSubscribed_SubscribedType::mutable_object_data(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSOCacheSubscribed.SubscribedType.object_data)
  return object_data_.Mutable(index);
}
inline void CMsgSOCacheSubscribed_SubscribedType::set_object_data(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:CMsgSOCacheSubscribed.SubscribedType.object_data)
  object_data_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CMsgSOCacheSubscribed_SubscribedType::set_object_data(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:CMsgSOCacheSubscribed.SubscribedType.object_data)
  object_data_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CMsgSOCacheSubscribed_SubscribedType::set_object_data(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  object_data_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgSOCacheSubscribed.SubscribedType.object_data)
}
inline void CMsgSOCacheSubscribed_SubscribedType::set_object_data(int index, const void* value, size_t size) {
  object_data_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgSOCacheSubscribed.SubscribedType.object_data)
}
inline ::std::string* CMsgSOCacheSubscribed_SubscribedType::add_object_data() {
  // @@protoc_insertion_point(field_add_mutable:CMsgSOCacheSubscribed.SubscribedType.object_data)
  return object_data_.Add();
}
inline void CMsgSOCacheSubscribed_SubscribedType::add_object_data(const ::std::string& value) {
  object_data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CMsgSOCacheSubscribed.SubscribedType.object_data)
}
#if LANG_CXX11
inline void CMsgSOCacheSubscribed_SubscribedType::add_object_data(::std::string&& value) {
  object_data_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CMsgSOCacheSubscribed.SubscribedType.object_data)
}
#endif
inline void CMsgSOCacheSubscribed_SubscribedType::add_object_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  object_data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CMsgSOCacheSubscribed.SubscribedType.object_data)
}
inline void CMsgSOCacheSubscribed_SubscribedType::add_object_data(const void* value, size_t size) {
  object_data_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CMsgSOCacheSubscribed.SubscribedType.object_data)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMsgSOCacheSubscribed_SubscribedType::object_data() const {
  // @@protoc_insertion_point(field_list:CMsgSOCacheSubscribed.SubscribedType.object_data)
  return object_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CMsgSOCacheSubscribed_SubscribedType::mutable_object_data() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSOCacheSubscribed.SubscribedType.object_data)
  return &object_data_;
}

// -------------------------------------------------------------------

// CMsgSOCacheSubscribed

// optional fixed64 owner = 1;
inline bool CMsgSOCacheSubscribed::has_owner() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSOCacheSubscribed::set_has_owner() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSOCacheSubscribed::clear_has_owner() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSOCacheSubscribed::clear_owner() {
  owner_ = GOOGLE_ULONGLONG(0);
  clear_has_owner();
}
inline ::google::protobuf::uint64 CMsgSOCacheSubscribed::owner() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscribed.owner)
  return owner_;
}
inline void CMsgSOCacheSubscribed::set_owner(::google::protobuf::uint64 value) {
  set_has_owner();
  owner_ = value;
  // @@protoc_insertion_point(field_set:CMsgSOCacheSubscribed.owner)
}

// repeated .CMsgSOCacheSubscribed.SubscribedType objects = 2;
inline int CMsgSOCacheSubscribed::objects_size() const {
  return objects_.size();
}
inline void CMsgSOCacheSubscribed::clear_objects() {
  objects_.Clear();
}
inline const ::CMsgSOCacheSubscribed_SubscribedType& CMsgSOCacheSubscribed::objects(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscribed.objects)
  return objects_.Get(index);
}
inline ::CMsgSOCacheSubscribed_SubscribedType* CMsgSOCacheSubscribed::mutable_objects(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSOCacheSubscribed.objects)
  return objects_.Mutable(index);
}
inline ::CMsgSOCacheSubscribed_SubscribedType* CMsgSOCacheSubscribed::add_objects() {
  // @@protoc_insertion_point(field_add:CMsgSOCacheSubscribed.objects)
  return objects_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgSOCacheSubscribed_SubscribedType >*
CMsgSOCacheSubscribed::mutable_objects() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSOCacheSubscribed.objects)
  return &objects_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgSOCacheSubscribed_SubscribedType >&
CMsgSOCacheSubscribed::objects() const {
  // @@protoc_insertion_point(field_list:CMsgSOCacheSubscribed.objects)
  return objects_;
}

// optional fixed64 version = 3;
inline bool CMsgSOCacheSubscribed::has_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSOCacheSubscribed::set_has_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSOCacheSubscribed::clear_has_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSOCacheSubscribed::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
  clear_has_version();
}
inline ::google::protobuf::uint64 CMsgSOCacheSubscribed::version() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscribed.version)
  return version_;
}
inline void CMsgSOCacheSubscribed::set_version(::google::protobuf::uint64 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:CMsgSOCacheSubscribed.version)
}

// optional .CMsgSOIDOwner owner_soid = 4;
inline bool CMsgSOCacheSubscribed::has_owner_soid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSOCacheSubscribed::set_has_owner_soid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSOCacheSubscribed::clear_has_owner_soid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSOCacheSubscribed::clear_owner_soid() {
  if (owner_soid_ != NULL) owner_soid_->Clear();
  clear_has_owner_soid();
}
inline const ::CMsgSOIDOwner& CMsgSOCacheSubscribed::owner_soid() const {
  const ::CMsgSOIDOwner* p = owner_soid_;
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscribed.owner_soid)
  return p != NULL ? *p : *reinterpret_cast<const ::CMsgSOIDOwner*>(
      &::_CMsgSOIDOwner_default_instance_);
}
inline ::CMsgSOIDOwner* CMsgSOCacheSubscribed::release_owner_soid() {
  // @@protoc_insertion_point(field_release:CMsgSOCacheSubscribed.owner_soid)
  clear_has_owner_soid();
  ::CMsgSOIDOwner* temp = owner_soid_;
  owner_soid_ = NULL;
  return temp;
}
inline ::CMsgSOIDOwner* CMsgSOCacheSubscribed::mutable_owner_soid() {
  set_has_owner_soid();
  if (owner_soid_ == NULL) {
    owner_soid_ = new ::CMsgSOIDOwner;
  }
  // @@protoc_insertion_point(field_mutable:CMsgSOCacheSubscribed.owner_soid)
  return owner_soid_;
}
inline void CMsgSOCacheSubscribed::set_allocated_owner_soid(::CMsgSOIDOwner* owner_soid) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete owner_soid_;
  }
  if (owner_soid) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      owner_soid = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, owner_soid, submessage_arena);
    }
    set_has_owner_soid();
  } else {
    clear_has_owner_soid();
  }
  owner_soid_ = owner_soid;
  // @@protoc_insertion_point(field_set_allocated:CMsgSOCacheSubscribed.owner_soid)
}

// optional uint32 service_id = 5;
inline bool CMsgSOCacheSubscribed::has_service_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSOCacheSubscribed::set_has_service_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgSOCacheSubscribed::clear_has_service_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgSOCacheSubscribed::clear_service_id() {
  service_id_ = 0u;
  clear_has_service_id();
}
inline ::google::protobuf::uint32 CMsgSOCacheSubscribed::service_id() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscribed.service_id)
  return service_id_;
}
inline void CMsgSOCacheSubscribed::set_service_id(::google::protobuf::uint32 value) {
  set_has_service_id();
  service_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSOCacheSubscribed.service_id)
}

// repeated uint32 service_list = 6;
inline int CMsgSOCacheSubscribed::service_list_size() const {
  return service_list_.size();
}
inline void CMsgSOCacheSubscribed::clear_service_list() {
  service_list_.Clear();
}
inline ::google::protobuf::uint32 CMsgSOCacheSubscribed::service_list(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscribed.service_list)
  return service_list_.Get(index);
}
inline void CMsgSOCacheSubscribed::set_service_list(int index, ::google::protobuf::uint32 value) {
  service_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSOCacheSubscribed.service_list)
}
inline void CMsgSOCacheSubscribed::add_service_list(::google::protobuf::uint32 value) {
  service_list_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgSOCacheSubscribed.service_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgSOCacheSubscribed::service_list() const {
  // @@protoc_insertion_point(field_list:CMsgSOCacheSubscribed.service_list)
  return service_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgSOCacheSubscribed::mutable_service_list() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSOCacheSubscribed.service_list)
  return &service_list_;
}

// optional fixed64 sync_version = 7;
inline bool CMsgSOCacheSubscribed::has_sync_version() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSOCacheSubscribed::set_has_sync_version() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSOCacheSubscribed::clear_has_sync_version() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSOCacheSubscribed::clear_sync_version() {
  sync_version_ = GOOGLE_ULONGLONG(0);
  clear_has_sync_version();
}
inline ::google::protobuf::uint64 CMsgSOCacheSubscribed::sync_version() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscribed.sync_version)
  return sync_version_;
}
inline void CMsgSOCacheSubscribed::set_sync_version(::google::protobuf::uint64 value) {
  set_has_sync_version();
  sync_version_ = value;
  // @@protoc_insertion_point(field_set:CMsgSOCacheSubscribed.sync_version)
}

// -------------------------------------------------------------------

// CMsgSOCacheSubscribedUpToDate

// optional fixed64 version = 1;
inline bool CMsgSOCacheSubscribedUpToDate::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSOCacheSubscribedUpToDate::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSOCacheSubscribedUpToDate::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSOCacheSubscribedUpToDate::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
  clear_has_version();
}
inline ::google::protobuf::uint64 CMsgSOCacheSubscribedUpToDate::version() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscribedUpToDate.version)
  return version_;
}
inline void CMsgSOCacheSubscribedUpToDate::set_version(::google::protobuf::uint64 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:CMsgSOCacheSubscribedUpToDate.version)
}

// optional .CMsgSOIDOwner owner_soid = 2;
inline bool CMsgSOCacheSubscribedUpToDate::has_owner_soid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSOCacheSubscribedUpToDate::set_has_owner_soid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSOCacheSubscribedUpToDate::clear_has_owner_soid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSOCacheSubscribedUpToDate::clear_owner_soid() {
  if (owner_soid_ != NULL) owner_soid_->Clear();
  clear_has_owner_soid();
}
inline const ::CMsgSOIDOwner& CMsgSOCacheSubscribedUpToDate::owner_soid() const {
  const ::CMsgSOIDOwner* p = owner_soid_;
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscribedUpToDate.owner_soid)
  return p != NULL ? *p : *reinterpret_cast<const ::CMsgSOIDOwner*>(
      &::_CMsgSOIDOwner_default_instance_);
}
inline ::CMsgSOIDOwner* CMsgSOCacheSubscribedUpToDate::release_owner_soid() {
  // @@protoc_insertion_point(field_release:CMsgSOCacheSubscribedUpToDate.owner_soid)
  clear_has_owner_soid();
  ::CMsgSOIDOwner* temp = owner_soid_;
  owner_soid_ = NULL;
  return temp;
}
inline ::CMsgSOIDOwner* CMsgSOCacheSubscribedUpToDate::mutable_owner_soid() {
  set_has_owner_soid();
  if (owner_soid_ == NULL) {
    owner_soid_ = new ::CMsgSOIDOwner;
  }
  // @@protoc_insertion_point(field_mutable:CMsgSOCacheSubscribedUpToDate.owner_soid)
  return owner_soid_;
}
inline void CMsgSOCacheSubscribedUpToDate::set_allocated_owner_soid(::CMsgSOIDOwner* owner_soid) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete owner_soid_;
  }
  if (owner_soid) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      owner_soid = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, owner_soid, submessage_arena);
    }
    set_has_owner_soid();
  } else {
    clear_has_owner_soid();
  }
  owner_soid_ = owner_soid;
  // @@protoc_insertion_point(field_set_allocated:CMsgSOCacheSubscribedUpToDate.owner_soid)
}

// optional uint32 service_id = 3;
inline bool CMsgSOCacheSubscribedUpToDate::has_service_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSOCacheSubscribedUpToDate::set_has_service_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSOCacheSubscribedUpToDate::clear_has_service_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSOCacheSubscribedUpToDate::clear_service_id() {
  service_id_ = 0u;
  clear_has_service_id();
}
inline ::google::protobuf::uint32 CMsgSOCacheSubscribedUpToDate::service_id() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscribedUpToDate.service_id)
  return service_id_;
}
inline void CMsgSOCacheSubscribedUpToDate::set_service_id(::google::protobuf::uint32 value) {
  set_has_service_id();
  service_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSOCacheSubscribedUpToDate.service_id)
}

// repeated uint32 service_list = 4;
inline int CMsgSOCacheSubscribedUpToDate::service_list_size() const {
  return service_list_.size();
}
inline void CMsgSOCacheSubscribedUpToDate::clear_service_list() {
  service_list_.Clear();
}
inline ::google::protobuf::uint32 CMsgSOCacheSubscribedUpToDate::service_list(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscribedUpToDate.service_list)
  return service_list_.Get(index);
}
inline void CMsgSOCacheSubscribedUpToDate::set_service_list(int index, ::google::protobuf::uint32 value) {
  service_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSOCacheSubscribedUpToDate.service_list)
}
inline void CMsgSOCacheSubscribedUpToDate::add_service_list(::google::protobuf::uint32 value) {
  service_list_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgSOCacheSubscribedUpToDate.service_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgSOCacheSubscribedUpToDate::service_list() const {
  // @@protoc_insertion_point(field_list:CMsgSOCacheSubscribedUpToDate.service_list)
  return service_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgSOCacheSubscribedUpToDate::mutable_service_list() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSOCacheSubscribedUpToDate.service_list)
  return &service_list_;
}

// optional fixed64 sync_version = 5;
inline bool CMsgSOCacheSubscribedUpToDate::has_sync_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSOCacheSubscribedUpToDate::set_has_sync_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSOCacheSubscribedUpToDate::clear_has_sync_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSOCacheSubscribedUpToDate::clear_sync_version() {
  sync_version_ = GOOGLE_ULONGLONG(0);
  clear_has_sync_version();
}
inline ::google::protobuf::uint64 CMsgSOCacheSubscribedUpToDate::sync_version() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscribedUpToDate.sync_version)
  return sync_version_;
}
inline void CMsgSOCacheSubscribedUpToDate::set_sync_version(::google::protobuf::uint64 value) {
  set_has_sync_version();
  sync_version_ = value;
  // @@protoc_insertion_point(field_set:CMsgSOCacheSubscribedUpToDate.sync_version)
}

// -------------------------------------------------------------------

// CMsgSOCacheUnsubscribed

// optional fixed64 owner = 1;
inline bool CMsgSOCacheUnsubscribed::has_owner() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSOCacheUnsubscribed::set_has_owner() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSOCacheUnsubscribed::clear_has_owner() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSOCacheUnsubscribed::clear_owner() {
  owner_ = GOOGLE_ULONGLONG(0);
  clear_has_owner();
}
inline ::google::protobuf::uint64 CMsgSOCacheUnsubscribed::owner() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheUnsubscribed.owner)
  return owner_;
}
inline void CMsgSOCacheUnsubscribed::set_owner(::google::protobuf::uint64 value) {
  set_has_owner();
  owner_ = value;
  // @@protoc_insertion_point(field_set:CMsgSOCacheUnsubscribed.owner)
}

// -------------------------------------------------------------------

// CMsgSOCacheSubscriptionCheck

// optional fixed64 owner = 1;
inline bool CMsgSOCacheSubscriptionCheck::has_owner() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSOCacheSubscriptionCheck::set_has_owner() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSOCacheSubscriptionCheck::clear_has_owner() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSOCacheSubscriptionCheck::clear_owner() {
  owner_ = GOOGLE_ULONGLONG(0);
  clear_has_owner();
}
inline ::google::protobuf::uint64 CMsgSOCacheSubscriptionCheck::owner() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscriptionCheck.owner)
  return owner_;
}
inline void CMsgSOCacheSubscriptionCheck::set_owner(::google::protobuf::uint64 value) {
  set_has_owner();
  owner_ = value;
  // @@protoc_insertion_point(field_set:CMsgSOCacheSubscriptionCheck.owner)
}

// optional fixed64 version = 2;
inline bool CMsgSOCacheSubscriptionCheck::has_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSOCacheSubscriptionCheck::set_has_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSOCacheSubscriptionCheck::clear_has_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSOCacheSubscriptionCheck::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
  clear_has_version();
}
inline ::google::protobuf::uint64 CMsgSOCacheSubscriptionCheck::version() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscriptionCheck.version)
  return version_;
}
inline void CMsgSOCacheSubscriptionCheck::set_version(::google::protobuf::uint64 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:CMsgSOCacheSubscriptionCheck.version)
}

// optional .CMsgSOIDOwner owner_soid = 3;
inline bool CMsgSOCacheSubscriptionCheck::has_owner_soid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSOCacheSubscriptionCheck::set_has_owner_soid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSOCacheSubscriptionCheck::clear_has_owner_soid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSOCacheSubscriptionCheck::clear_owner_soid() {
  if (owner_soid_ != NULL) owner_soid_->Clear();
  clear_has_owner_soid();
}
inline const ::CMsgSOIDOwner& CMsgSOCacheSubscriptionCheck::owner_soid() const {
  const ::CMsgSOIDOwner* p = owner_soid_;
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscriptionCheck.owner_soid)
  return p != NULL ? *p : *reinterpret_cast<const ::CMsgSOIDOwner*>(
      &::_CMsgSOIDOwner_default_instance_);
}
inline ::CMsgSOIDOwner* CMsgSOCacheSubscriptionCheck::release_owner_soid() {
  // @@protoc_insertion_point(field_release:CMsgSOCacheSubscriptionCheck.owner_soid)
  clear_has_owner_soid();
  ::CMsgSOIDOwner* temp = owner_soid_;
  owner_soid_ = NULL;
  return temp;
}
inline ::CMsgSOIDOwner* CMsgSOCacheSubscriptionCheck::mutable_owner_soid() {
  set_has_owner_soid();
  if (owner_soid_ == NULL) {
    owner_soid_ = new ::CMsgSOIDOwner;
  }
  // @@protoc_insertion_point(field_mutable:CMsgSOCacheSubscriptionCheck.owner_soid)
  return owner_soid_;
}
inline void CMsgSOCacheSubscriptionCheck::set_allocated_owner_soid(::CMsgSOIDOwner* owner_soid) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete owner_soid_;
  }
  if (owner_soid) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      owner_soid = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, owner_soid, submessage_arena);
    }
    set_has_owner_soid();
  } else {
    clear_has_owner_soid();
  }
  owner_soid_ = owner_soid;
  // @@protoc_insertion_point(field_set_allocated:CMsgSOCacheSubscriptionCheck.owner_soid)
}

// optional uint32 service_id = 4;
inline bool CMsgSOCacheSubscriptionCheck::has_service_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSOCacheSubscriptionCheck::set_has_service_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgSOCacheSubscriptionCheck::clear_has_service_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgSOCacheSubscriptionCheck::clear_service_id() {
  service_id_ = 0u;
  clear_has_service_id();
}
inline ::google::protobuf::uint32 CMsgSOCacheSubscriptionCheck::service_id() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscriptionCheck.service_id)
  return service_id_;
}
inline void CMsgSOCacheSubscriptionCheck::set_service_id(::google::protobuf::uint32 value) {
  set_has_service_id();
  service_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSOCacheSubscriptionCheck.service_id)
}

// repeated uint32 service_list = 5;
inline int CMsgSOCacheSubscriptionCheck::service_list_size() const {
  return service_list_.size();
}
inline void CMsgSOCacheSubscriptionCheck::clear_service_list() {
  service_list_.Clear();
}
inline ::google::protobuf::uint32 CMsgSOCacheSubscriptionCheck::service_list(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscriptionCheck.service_list)
  return service_list_.Get(index);
}
inline void CMsgSOCacheSubscriptionCheck::set_service_list(int index, ::google::protobuf::uint32 value) {
  service_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSOCacheSubscriptionCheck.service_list)
}
inline void CMsgSOCacheSubscriptionCheck::add_service_list(::google::protobuf::uint32 value) {
  service_list_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgSOCacheSubscriptionCheck.service_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgSOCacheSubscriptionCheck::service_list() const {
  // @@protoc_insertion_point(field_list:CMsgSOCacheSubscriptionCheck.service_list)
  return service_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgSOCacheSubscriptionCheck::mutable_service_list() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSOCacheSubscriptionCheck.service_list)
  return &service_list_;
}

// optional fixed64 sync_version = 6;
inline bool CMsgSOCacheSubscriptionCheck::has_sync_version() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSOCacheSubscriptionCheck::set_has_sync_version() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSOCacheSubscriptionCheck::clear_has_sync_version() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSOCacheSubscriptionCheck::clear_sync_version() {
  sync_version_ = GOOGLE_ULONGLONG(0);
  clear_has_sync_version();
}
inline ::google::protobuf::uint64 CMsgSOCacheSubscriptionCheck::sync_version() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscriptionCheck.sync_version)
  return sync_version_;
}
inline void CMsgSOCacheSubscriptionCheck::set_sync_version(::google::protobuf::uint64 value) {
  set_has_sync_version();
  sync_version_ = value;
  // @@protoc_insertion_point(field_set:CMsgSOCacheSubscriptionCheck.sync_version)
}

// -------------------------------------------------------------------

// CMsgSOCacheSubscriptionRefresh

// optional fixed64 owner = 1;
inline bool CMsgSOCacheSubscriptionRefresh::has_owner() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSOCacheSubscriptionRefresh::set_has_owner() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSOCacheSubscriptionRefresh::clear_has_owner() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSOCacheSubscriptionRefresh::clear_owner() {
  owner_ = GOOGLE_ULONGLONG(0);
  clear_has_owner();
}
inline ::google::protobuf::uint64 CMsgSOCacheSubscriptionRefresh::owner() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscriptionRefresh.owner)
  return owner_;
}
inline void CMsgSOCacheSubscriptionRefresh::set_owner(::google::protobuf::uint64 value) {
  set_has_owner();
  owner_ = value;
  // @@protoc_insertion_point(field_set:CMsgSOCacheSubscriptionRefresh.owner)
}

// optional .CMsgSOIDOwner owner_soid = 2;
inline bool CMsgSOCacheSubscriptionRefresh::has_owner_soid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSOCacheSubscriptionRefresh::set_has_owner_soid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSOCacheSubscriptionRefresh::clear_has_owner_soid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSOCacheSubscriptionRefresh::clear_owner_soid() {
  if (owner_soid_ != NULL) owner_soid_->Clear();
  clear_has_owner_soid();
}
inline const ::CMsgSOIDOwner& CMsgSOCacheSubscriptionRefresh::owner_soid() const {
  const ::CMsgSOIDOwner* p = owner_soid_;
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscriptionRefresh.owner_soid)
  return p != NULL ? *p : *reinterpret_cast<const ::CMsgSOIDOwner*>(
      &::_CMsgSOIDOwner_default_instance_);
}
inline ::CMsgSOIDOwner* CMsgSOCacheSubscriptionRefresh::release_owner_soid() {
  // @@protoc_insertion_point(field_release:CMsgSOCacheSubscriptionRefresh.owner_soid)
  clear_has_owner_soid();
  ::CMsgSOIDOwner* temp = owner_soid_;
  owner_soid_ = NULL;
  return temp;
}
inline ::CMsgSOIDOwner* CMsgSOCacheSubscriptionRefresh::mutable_owner_soid() {
  set_has_owner_soid();
  if (owner_soid_ == NULL) {
    owner_soid_ = new ::CMsgSOIDOwner;
  }
  // @@protoc_insertion_point(field_mutable:CMsgSOCacheSubscriptionRefresh.owner_soid)
  return owner_soid_;
}
inline void CMsgSOCacheSubscriptionRefresh::set_allocated_owner_soid(::CMsgSOIDOwner* owner_soid) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete owner_soid_;
  }
  if (owner_soid) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      owner_soid = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, owner_soid, submessage_arena);
    }
    set_has_owner_soid();
  } else {
    clear_has_owner_soid();
  }
  owner_soid_ = owner_soid;
  // @@protoc_insertion_point(field_set_allocated:CMsgSOCacheSubscriptionRefresh.owner_soid)
}

// -------------------------------------------------------------------

// CMsgSOCacheVersion

// optional fixed64 version = 1;
inline bool CMsgSOCacheVersion::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSOCacheVersion::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSOCacheVersion::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSOCacheVersion::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
  clear_has_version();
}
inline ::google::protobuf::uint64 CMsgSOCacheVersion::version() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheVersion.version)
  return version_;
}
inline void CMsgSOCacheVersion::set_version(::google::protobuf::uint64 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:CMsgSOCacheVersion.version)
}

// -------------------------------------------------------------------

// CMsgGCMultiplexMessage

// optional uint32 msgtype = 1;
inline bool CMsgGCMultiplexMessage::has_msgtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCMultiplexMessage::set_has_msgtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCMultiplexMessage::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCMultiplexMessage::clear_msgtype() {
  msgtype_ = 0u;
  clear_has_msgtype();
}
inline ::google::protobuf::uint32 CMsgGCMultiplexMessage::msgtype() const {
  // @@protoc_insertion_point(field_get:CMsgGCMultiplexMessage.msgtype)
  return msgtype_;
}
inline void CMsgGCMultiplexMessage::set_msgtype(::google::protobuf::uint32 value) {
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCMultiplexMessage.msgtype)
}

// optional bytes payload = 2;
inline bool CMsgGCMultiplexMessage::has_payload() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCMultiplexMessage::set_has_payload() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCMultiplexMessage::clear_has_payload() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCMultiplexMessage::clear_payload() {
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_payload();
}
inline const ::std::string& CMsgGCMultiplexMessage::payload() const {
  // @@protoc_insertion_point(field_get:CMsgGCMultiplexMessage.payload)
  return payload_.GetNoArena();
}
inline void CMsgGCMultiplexMessage::set_payload(const ::std::string& value) {
  set_has_payload();
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CMsgGCMultiplexMessage.payload)
}
#if LANG_CXX11
inline void CMsgGCMultiplexMessage::set_payload(::std::string&& value) {
  set_has_payload();
  payload_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CMsgGCMultiplexMessage.payload)
}
#endif
inline void CMsgGCMultiplexMessage::set_payload(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_payload();
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CMsgGCMultiplexMessage.payload)
}
inline void CMsgGCMultiplexMessage::set_payload(const void* value, size_t size) {
  set_has_payload();
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CMsgGCMultiplexMessage.payload)
}
inline ::std::string* CMsgGCMultiplexMessage::mutable_payload() {
  set_has_payload();
  // @@protoc_insertion_point(field_mutable:CMsgGCMultiplexMessage.payload)
  return payload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCMultiplexMessage::release_payload() {
  // @@protoc_insertion_point(field_release:CMsgGCMultiplexMessage.payload)
  clear_has_payload();
  return payload_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCMultiplexMessage::set_allocated_payload(::std::string* payload) {
  if (payload != NULL) {
    set_has_payload();
  } else {
    clear_has_payload();
  }
  payload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload);
  // @@protoc_insertion_point(field_set_allocated:CMsgGCMultiplexMessage.payload)
}

// repeated fixed64 steamids = 3;
inline int CMsgGCMultiplexMessage::steamids_size() const {
  return steamids_.size();
}
inline void CMsgGCMultiplexMessage::clear_steamids() {
  steamids_.Clear();
}
inline ::google::protobuf::uint64 CMsgGCMultiplexMessage::steamids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCMultiplexMessage.steamids)
  return steamids_.Get(index);
}
inline void CMsgGCMultiplexMessage::set_steamids(int index, ::google::protobuf::uint64 value) {
  steamids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCMultiplexMessage.steamids)
}
inline void CMsgGCMultiplexMessage::add_steamids(::google::protobuf::uint64 value) {
  steamids_.Add(value);
  // @@protoc_insertion_point(field_add:CMsgGCMultiplexMessage.steamids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgGCMultiplexMessage::steamids() const {
  // @@protoc_insertion_point(field_list:CMsgGCMultiplexMessage.steamids)
  return steamids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgGCMultiplexMessage::mutable_steamids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCMultiplexMessage.steamids)
  return &steamids_;
}

// -------------------------------------------------------------------

// CGCToGCMsgMasterAck

// optional uint32 dir_index = 1;
inline bool CGCToGCMsgMasterAck::has_dir_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGCToGCMsgMasterAck::set_has_dir_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGCToGCMsgMasterAck::clear_has_dir_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGCToGCMsgMasterAck::clear_dir_index() {
  dir_index_ = 0u;
  clear_has_dir_index();
}
inline ::google::protobuf::uint32 CGCToGCMsgMasterAck::dir_index() const {
  // @@protoc_insertion_point(field_get:CGCToGCMsgMasterAck.dir_index)
  return dir_index_;
}
inline void CGCToGCMsgMasterAck::set_dir_index(::google::protobuf::uint32 value) {
  set_has_dir_index();
  dir_index_ = value;
  // @@protoc_insertion_point(field_set:CGCToGCMsgMasterAck.dir_index)
}

// optional string machine_name = 3;
inline bool CGCToGCMsgMasterAck::has_machine_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCToGCMsgMasterAck::set_has_machine_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCToGCMsgMasterAck::clear_has_machine_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCToGCMsgMasterAck::clear_machine_name() {
  machine_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_machine_name();
}
inline const ::std::string& CGCToGCMsgMasterAck::machine_name() const {
  // @@protoc_insertion_point(field_get:CGCToGCMsgMasterAck.machine_name)
  return machine_name_.GetNoArena();
}
inline void CGCToGCMsgMasterAck::set_machine_name(const ::std::string& value) {
  set_has_machine_name();
  machine_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CGCToGCMsgMasterAck.machine_name)
}
#if LANG_CXX11
inline void CGCToGCMsgMasterAck::set_machine_name(::std::string&& value) {
  set_has_machine_name();
  machine_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CGCToGCMsgMasterAck.machine_name)
}
#endif
inline void CGCToGCMsgMasterAck::set_machine_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_machine_name();
  machine_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CGCToGCMsgMasterAck.machine_name)
}
inline void CGCToGCMsgMasterAck::set_machine_name(const char* value, size_t size) {
  set_has_machine_name();
  machine_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CGCToGCMsgMasterAck.machine_name)
}
inline ::std::string* CGCToGCMsgMasterAck::mutable_machine_name() {
  set_has_machine_name();
  // @@protoc_insertion_point(field_mutable:CGCToGCMsgMasterAck.machine_name)
  return machine_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CGCToGCMsgMasterAck::release_machine_name() {
  // @@protoc_insertion_point(field_release:CGCToGCMsgMasterAck.machine_name)
  clear_has_machine_name();
  return machine_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CGCToGCMsgMasterAck::set_allocated_machine_name(::std::string* machine_name) {
  if (machine_name != NULL) {
    set_has_machine_name();
  } else {
    clear_has_machine_name();
  }
  machine_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), machine_name);
  // @@protoc_insertion_point(field_set_allocated:CGCToGCMsgMasterAck.machine_name)
}

// optional string process_name = 4;
inline bool CGCToGCMsgMasterAck::has_process_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCToGCMsgMasterAck::set_has_process_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGCToGCMsgMasterAck::clear_has_process_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGCToGCMsgMasterAck::clear_process_name() {
  process_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_process_name();
}
inline const ::std::string& CGCToGCMsgMasterAck::process_name() const {
  // @@protoc_insertion_point(field_get:CGCToGCMsgMasterAck.process_name)
  return process_name_.GetNoArena();
}
inline void CGCToGCMsgMasterAck::set_process_name(const ::std::string& value) {
  set_has_process_name();
  process_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CGCToGCMsgMasterAck.process_name)
}
#if LANG_CXX11
inline void CGCToGCMsgMasterAck::set_process_name(::std::string&& value) {
  set_has_process_name();
  process_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CGCToGCMsgMasterAck.process_name)
}
#endif
inline void CGCToGCMsgMasterAck::set_process_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_process_name();
  process_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CGCToGCMsgMasterAck.process_name)
}
inline void CGCToGCMsgMasterAck::set_process_name(const char* value, size_t size) {
  set_has_process_name();
  process_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CGCToGCMsgMasterAck.process_name)
}
inline ::std::string* CGCToGCMsgMasterAck::mutable_process_name() {
  set_has_process_name();
  // @@protoc_insertion_point(field_mutable:CGCToGCMsgMasterAck.process_name)
  return process_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CGCToGCMsgMasterAck::release_process_name() {
  // @@protoc_insertion_point(field_release:CGCToGCMsgMasterAck.process_name)
  clear_has_process_name();
  return process_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CGCToGCMsgMasterAck::set_allocated_process_name(::std::string* process_name) {
  if (process_name != NULL) {
    set_has_process_name();
  } else {
    clear_has_process_name();
  }
  process_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), process_name);
  // @@protoc_insertion_point(field_set_allocated:CGCToGCMsgMasterAck.process_name)
}

// repeated uint32 type_instances = 5;
inline int CGCToGCMsgMasterAck::type_instances_size() const {
  return type_instances_.size();
}
inline void CGCToGCMsgMasterAck::clear_type_instances() {
  type_instances_.Clear();
}
inline ::google::protobuf::uint32 CGCToGCMsgMasterAck::type_instances(int index) const {
  // @@protoc_insertion_point(field_get:CGCToGCMsgMasterAck.type_instances)
  return type_instances_.Get(index);
}
inline void CGCToGCMsgMasterAck::set_type_instances(int index, ::google::protobuf::uint32 value) {
  type_instances_.Set(index, value);
  // @@protoc_insertion_point(field_set:CGCToGCMsgMasterAck.type_instances)
}
inline void CGCToGCMsgMasterAck::add_type_instances(::google::protobuf::uint32 value) {
  type_instances_.Add(value);
  // @@protoc_insertion_point(field_add:CGCToGCMsgMasterAck.type_instances)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CGCToGCMsgMasterAck::type_instances() const {
  // @@protoc_insertion_point(field_list:CGCToGCMsgMasterAck.type_instances)
  return type_instances_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CGCToGCMsgMasterAck::mutable_type_instances() {
  // @@protoc_insertion_point(field_mutable_list:CGCToGCMsgMasterAck.type_instances)
  return &type_instances_;
}

// -------------------------------------------------------------------

// CGCToGCMsgMasterAck_Response

// optional int32 eresult = 1 [default = 2];
inline bool CGCToGCMsgMasterAck_Response::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCToGCMsgMasterAck_Response::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCToGCMsgMasterAck_Response::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCToGCMsgMasterAck_Response::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
inline ::google::protobuf::int32 CGCToGCMsgMasterAck_Response::eresult() const {
  // @@protoc_insertion_point(field_get:CGCToGCMsgMasterAck_Response.eresult)
  return eresult_;
}
inline void CGCToGCMsgMasterAck_Response::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:CGCToGCMsgMasterAck_Response.eresult)
}

// -------------------------------------------------------------------

// CGCToGCMsgMasterStartupComplete_GCInfo

// optional uint32 dir_index = 1;
inline bool CGCToGCMsgMasterStartupComplete_GCInfo::has_dir_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCToGCMsgMasterStartupComplete_GCInfo::set_has_dir_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGCToGCMsgMasterStartupComplete_GCInfo::clear_has_dir_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGCToGCMsgMasterStartupComplete_GCInfo::clear_dir_index() {
  dir_index_ = 0u;
  clear_has_dir_index();
}
inline ::google::protobuf::uint32 CGCToGCMsgMasterStartupComplete_GCInfo::dir_index() const {
  // @@protoc_insertion_point(field_get:CGCToGCMsgMasterStartupComplete.GCInfo.dir_index)
  return dir_index_;
}
inline void CGCToGCMsgMasterStartupComplete_GCInfo::set_dir_index(::google::protobuf::uint32 value) {
  set_has_dir_index();
  dir_index_ = value;
  // @@protoc_insertion_point(field_set:CGCToGCMsgMasterStartupComplete.GCInfo.dir_index)
}

// optional string machine_name = 2;
inline bool CGCToGCMsgMasterStartupComplete_GCInfo::has_machine_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCToGCMsgMasterStartupComplete_GCInfo::set_has_machine_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCToGCMsgMasterStartupComplete_GCInfo::clear_has_machine_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCToGCMsgMasterStartupComplete_GCInfo::clear_machine_name() {
  machine_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_machine_name();
}
inline const ::std::string& CGCToGCMsgMasterStartupComplete_GCInfo::machine_name() const {
  // @@protoc_insertion_point(field_get:CGCToGCMsgMasterStartupComplete.GCInfo.machine_name)
  return machine_name_.GetNoArena();
}
inline void CGCToGCMsgMasterStartupComplete_GCInfo::set_machine_name(const ::std::string& value) {
  set_has_machine_name();
  machine_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CGCToGCMsgMasterStartupComplete.GCInfo.machine_name)
}
#if LANG_CXX11
inline void CGCToGCMsgMasterStartupComplete_GCInfo::set_machine_name(::std::string&& value) {
  set_has_machine_name();
  machine_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CGCToGCMsgMasterStartupComplete.GCInfo.machine_name)
}
#endif
inline void CGCToGCMsgMasterStartupComplete_GCInfo::set_machine_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_machine_name();
  machine_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CGCToGCMsgMasterStartupComplete.GCInfo.machine_name)
}
inline void CGCToGCMsgMasterStartupComplete_GCInfo::set_machine_name(const char* value, size_t size) {
  set_has_machine_name();
  machine_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CGCToGCMsgMasterStartupComplete.GCInfo.machine_name)
}
inline ::std::string* CGCToGCMsgMasterStartupComplete_GCInfo::mutable_machine_name() {
  set_has_machine_name();
  // @@protoc_insertion_point(field_mutable:CGCToGCMsgMasterStartupComplete.GCInfo.machine_name)
  return machine_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CGCToGCMsgMasterStartupComplete_GCInfo::release_machine_name() {
  // @@protoc_insertion_point(field_release:CGCToGCMsgMasterStartupComplete.GCInfo.machine_name)
  clear_has_machine_name();
  return machine_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CGCToGCMsgMasterStartupComplete_GCInfo::set_allocated_machine_name(::std::string* machine_name) {
  if (machine_name != NULL) {
    set_has_machine_name();
  } else {
    clear_has_machine_name();
  }
  machine_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), machine_name);
  // @@protoc_insertion_point(field_set_allocated:CGCToGCMsgMasterStartupComplete.GCInfo.machine_name)
}

// -------------------------------------------------------------------

// CGCToGCMsgMasterStartupComplete

// repeated .CGCToGCMsgMasterStartupComplete.GCInfo gc_info = 1;
inline int CGCToGCMsgMasterStartupComplete::gc_info_size() const {
  return gc_info_.size();
}
inline void CGCToGCMsgMasterStartupComplete::clear_gc_info() {
  gc_info_.Clear();
}
inline const ::CGCToGCMsgMasterStartupComplete_GCInfo& CGCToGCMsgMasterStartupComplete::gc_info(int index) const {
  // @@protoc_insertion_point(field_get:CGCToGCMsgMasterStartupComplete.gc_info)
  return gc_info_.Get(index);
}
inline ::CGCToGCMsgMasterStartupComplete_GCInfo* CGCToGCMsgMasterStartupComplete::mutable_gc_info(int index) {
  // @@protoc_insertion_point(field_mutable:CGCToGCMsgMasterStartupComplete.gc_info)
  return gc_info_.Mutable(index);
}
inline ::CGCToGCMsgMasterStartupComplete_GCInfo* CGCToGCMsgMasterStartupComplete::add_gc_info() {
  // @@protoc_insertion_point(field_add:CGCToGCMsgMasterStartupComplete.gc_info)
  return gc_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CGCToGCMsgMasterStartupComplete_GCInfo >*
CGCToGCMsgMasterStartupComplete::mutable_gc_info() {
  // @@protoc_insertion_point(field_mutable_list:CGCToGCMsgMasterStartupComplete.gc_info)
  return &gc_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CGCToGCMsgMasterStartupComplete_GCInfo >&
CGCToGCMsgMasterStartupComplete::gc_info() const {
  // @@protoc_insertion_point(field_list:CGCToGCMsgMasterStartupComplete.gc_info)
  return gc_info_;
}

// -------------------------------------------------------------------

// CGCToGCMsgRouted

// optional uint32 msg_type = 1;
inline bool CGCToGCMsgRouted::has_msg_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CGCToGCMsgRouted::set_has_msg_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CGCToGCMsgRouted::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CGCToGCMsgRouted::clear_msg_type() {
  msg_type_ = 0u;
  clear_has_msg_type();
}
inline ::google::protobuf::uint32 CGCToGCMsgRouted::msg_type() const {
  // @@protoc_insertion_point(field_get:CGCToGCMsgRouted.msg_type)
  return msg_type_;
}
inline void CGCToGCMsgRouted::set_msg_type(::google::protobuf::uint32 value) {
  set_has_msg_type();
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:CGCToGCMsgRouted.msg_type)
}

// optional fixed64 sender_id = 2;
inline bool CGCToGCMsgRouted::has_sender_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCToGCMsgRouted::set_has_sender_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGCToGCMsgRouted::clear_has_sender_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGCToGCMsgRouted::clear_sender_id() {
  sender_id_ = GOOGLE_ULONGLONG(0);
  clear_has_sender_id();
}
inline ::google::protobuf::uint64 CGCToGCMsgRouted::sender_id() const {
  // @@protoc_insertion_point(field_get:CGCToGCMsgRouted.sender_id)
  return sender_id_;
}
inline void CGCToGCMsgRouted::set_sender_id(::google::protobuf::uint64 value) {
  set_has_sender_id();
  sender_id_ = value;
  // @@protoc_insertion_point(field_set:CGCToGCMsgRouted.sender_id)
}

// optional bytes net_message = 3;
inline bool CGCToGCMsgRouted::has_net_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCToGCMsgRouted::set_has_net_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCToGCMsgRouted::clear_has_net_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCToGCMsgRouted::clear_net_message() {
  net_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_net_message();
}
inline const ::std::string& CGCToGCMsgRouted::net_message() const {
  // @@protoc_insertion_point(field_get:CGCToGCMsgRouted.net_message)
  return net_message_.GetNoArena();
}
inline void CGCToGCMsgRouted::set_net_message(const ::std::string& value) {
  set_has_net_message();
  net_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CGCToGCMsgRouted.net_message)
}
#if LANG_CXX11
inline void CGCToGCMsgRouted::set_net_message(::std::string&& value) {
  set_has_net_message();
  net_message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CGCToGCMsgRouted.net_message)
}
#endif
inline void CGCToGCMsgRouted::set_net_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_net_message();
  net_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CGCToGCMsgRouted.net_message)
}
inline void CGCToGCMsgRouted::set_net_message(const void* value, size_t size) {
  set_has_net_message();
  net_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CGCToGCMsgRouted.net_message)
}
inline ::std::string* CGCToGCMsgRouted::mutable_net_message() {
  set_has_net_message();
  // @@protoc_insertion_point(field_mutable:CGCToGCMsgRouted.net_message)
  return net_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CGCToGCMsgRouted::release_net_message() {
  // @@protoc_insertion_point(field_release:CGCToGCMsgRouted.net_message)
  clear_has_net_message();
  return net_message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CGCToGCMsgRouted::set_allocated_net_message(::std::string* net_message) {
  if (net_message != NULL) {
    set_has_net_message();
  } else {
    clear_has_net_message();
  }
  net_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), net_message);
  // @@protoc_insertion_point(field_set_allocated:CGCToGCMsgRouted.net_message)
}

// -------------------------------------------------------------------

// CGCToGCMsgRoutedReply

// optional uint32 msg_type = 1;
inline bool CGCToGCMsgRoutedReply::has_msg_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CGCToGCMsgRoutedReply::set_has_msg_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CGCToGCMsgRoutedReply::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CGCToGCMsgRoutedReply::clear_msg_type() {
  msg_type_ = 0u;
  clear_has_msg_type();
}
inline ::google::protobuf::uint32 CGCToGCMsgRoutedReply::msg_type() const {
  // @@protoc_insertion_point(field_get:CGCToGCMsgRoutedReply.msg_type)
  return msg_type_;
}
inline void CGCToGCMsgRoutedReply::set_msg_type(::google::protobuf::uint32 value) {
  set_has_msg_type();
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:CGCToGCMsgRoutedReply.msg_type)
}

// optional bytes net_message = 2;
inline bool CGCToGCMsgRoutedReply::has_net_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CGCToGCMsgRoutedReply::set_has_net_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CGCToGCMsgRoutedReply::clear_has_net_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CGCToGCMsgRoutedReply::clear_net_message() {
  net_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_net_message();
}
inline const ::std::string& CGCToGCMsgRoutedReply::net_message() const {
  // @@protoc_insertion_point(field_get:CGCToGCMsgRoutedReply.net_message)
  return net_message_.GetNoArena();
}
inline void CGCToGCMsgRoutedReply::set_net_message(const ::std::string& value) {
  set_has_net_message();
  net_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CGCToGCMsgRoutedReply.net_message)
}
#if LANG_CXX11
inline void CGCToGCMsgRoutedReply::set_net_message(::std::string&& value) {
  set_has_net_message();
  net_message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CGCToGCMsgRoutedReply.net_message)
}
#endif
inline void CGCToGCMsgRoutedReply::set_net_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_net_message();
  net_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CGCToGCMsgRoutedReply.net_message)
}
inline void CGCToGCMsgRoutedReply::set_net_message(const void* value, size_t size) {
  set_has_net_message();
  net_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CGCToGCMsgRoutedReply.net_message)
}
inline ::std::string* CGCToGCMsgRoutedReply::mutable_net_message() {
  set_has_net_message();
  // @@protoc_insertion_point(field_mutable:CGCToGCMsgRoutedReply.net_message)
  return net_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CGCToGCMsgRoutedReply::release_net_message() {
  // @@protoc_insertion_point(field_release:CGCToGCMsgRoutedReply.net_message)
  clear_has_net_message();
  return net_message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CGCToGCMsgRoutedReply::set_allocated_net_message(::std::string* net_message) {
  if (net_message != NULL) {
    set_has_net_message();
  } else {
    clear_has_net_message();
  }
  net_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), net_message);
  // @@protoc_insertion_point(field_set_allocated:CGCToGCMsgRoutedReply.net_message)
}

// -------------------------------------------------------------------

// CMsgGCUpdateSubGCSessionInfo_CMsgUpdate

// optional fixed64 steamid = 1;
inline bool CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::steamid() const {
  // @@protoc_insertion_point(field_get:CMsgGCUpdateSubGCSessionInfo.CMsgUpdate.steamid)
  return steamid_;
}
inline void CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCUpdateSubGCSessionInfo.CMsgUpdate.steamid)
}

// optional fixed32 ip = 2;
inline bool CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::has_ip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::set_has_ip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::clear_has_ip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::clear_ip() {
  ip_ = 0u;
  clear_has_ip();
}
inline ::google::protobuf::uint32 CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::ip() const {
  // @@protoc_insertion_point(field_get:CMsgGCUpdateSubGCSessionInfo.CMsgUpdate.ip)
  return ip_;
}
inline void CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::set_ip(::google::protobuf::uint32 value) {
  set_has_ip();
  ip_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCUpdateSubGCSessionInfo.CMsgUpdate.ip)
}

// optional bool trusted = 3;
inline bool CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::has_trusted() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::set_has_trusted() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::clear_has_trusted() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::clear_trusted() {
  trusted_ = false;
  clear_has_trusted();
}
inline bool CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::trusted() const {
  // @@protoc_insertion_point(field_get:CMsgGCUpdateSubGCSessionInfo.CMsgUpdate.trusted)
  return trusted_;
}
inline void CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::set_trusted(bool value) {
  set_has_trusted();
  trusted_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCUpdateSubGCSessionInfo.CMsgUpdate.trusted)
}

// -------------------------------------------------------------------

// CMsgGCUpdateSubGCSessionInfo

// repeated .CMsgGCUpdateSubGCSessionInfo.CMsgUpdate updates = 1;
inline int CMsgGCUpdateSubGCSessionInfo::updates_size() const {
  return updates_.size();
}
inline void CMsgGCUpdateSubGCSessionInfo::clear_updates() {
  updates_.Clear();
}
inline const ::CMsgGCUpdateSubGCSessionInfo_CMsgUpdate& CMsgGCUpdateSubGCSessionInfo::updates(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCUpdateSubGCSessionInfo.updates)
  return updates_.Get(index);
}
inline ::CMsgGCUpdateSubGCSessionInfo_CMsgUpdate* CMsgGCUpdateSubGCSessionInfo::mutable_updates(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCUpdateSubGCSessionInfo.updates)
  return updates_.Mutable(index);
}
inline ::CMsgGCUpdateSubGCSessionInfo_CMsgUpdate* CMsgGCUpdateSubGCSessionInfo::add_updates() {
  // @@protoc_insertion_point(field_add:CMsgGCUpdateSubGCSessionInfo.updates)
  return updates_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGCUpdateSubGCSessionInfo_CMsgUpdate >*
CMsgGCUpdateSubGCSessionInfo::mutable_updates() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCUpdateSubGCSessionInfo.updates)
  return &updates_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCUpdateSubGCSessionInfo_CMsgUpdate >&
CMsgGCUpdateSubGCSessionInfo::updates() const {
  // @@protoc_insertion_point(field_list:CMsgGCUpdateSubGCSessionInfo.updates)
  return updates_;
}

// -------------------------------------------------------------------

// CMsgGCRequestSubGCSessionInfo

// optional fixed64 steamid = 1;
inline bool CMsgGCRequestSubGCSessionInfo::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCRequestSubGCSessionInfo::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCRequestSubGCSessionInfo::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCRequestSubGCSessionInfo::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CMsgGCRequestSubGCSessionInfo::steamid() const {
  // @@protoc_insertion_point(field_get:CMsgGCRequestSubGCSessionInfo.steamid)
  return steamid_;
}
inline void CMsgGCRequestSubGCSessionInfo::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCRequestSubGCSessionInfo.steamid)
}

// -------------------------------------------------------------------

// CMsgGCRequestSubGCSessionInfoResponse

// optional fixed32 ip = 1;
inline bool CMsgGCRequestSubGCSessionInfoResponse::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCRequestSubGCSessionInfoResponse::set_has_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCRequestSubGCSessionInfoResponse::clear_has_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCRequestSubGCSessionInfoResponse::clear_ip() {
  ip_ = 0u;
  clear_has_ip();
}
inline ::google::protobuf::uint32 CMsgGCRequestSubGCSessionInfoResponse::ip() const {
  // @@protoc_insertion_point(field_get:CMsgGCRequestSubGCSessionInfoResponse.ip)
  return ip_;
}
inline void CMsgGCRequestSubGCSessionInfoResponse::set_ip(::google::protobuf::uint32 value) {
  set_has_ip();
  ip_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCRequestSubGCSessionInfoResponse.ip)
}

// optional bool trusted = 2;
inline bool CMsgGCRequestSubGCSessionInfoResponse::has_trusted() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCRequestSubGCSessionInfoResponse::set_has_trusted() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCRequestSubGCSessionInfoResponse::clear_has_trusted() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCRequestSubGCSessionInfoResponse::clear_trusted() {
  trusted_ = false;
  clear_has_trusted();
}
inline bool CMsgGCRequestSubGCSessionInfoResponse::trusted() const {
  // @@protoc_insertion_point(field_get:CMsgGCRequestSubGCSessionInfoResponse.trusted)
  return trusted_;
}
inline void CMsgGCRequestSubGCSessionInfoResponse::set_trusted(bool value) {
  set_has_trusted();
  trusted_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCRequestSubGCSessionInfoResponse.trusted)
}

// -------------------------------------------------------------------

// CMsgGCToGCIncrementRecruitmentLevel

// optional fixed64 steamid = 1;
inline bool CMsgGCToGCIncrementRecruitmentLevel::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToGCIncrementRecruitmentLevel::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToGCIncrementRecruitmentLevel::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToGCIncrementRecruitmentLevel::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CMsgGCToGCIncrementRecruitmentLevel::steamid() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCIncrementRecruitmentLevel.steamid)
  return steamid_;
}
inline void CMsgGCToGCIncrementRecruitmentLevel::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToGCIncrementRecruitmentLevel.steamid)
}

// -------------------------------------------------------------------

// CMsgSOCacheHaveVersion

// optional .CMsgSOIDOwner soid = 1;
inline bool CMsgSOCacheHaveVersion::has_soid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSOCacheHaveVersion::set_has_soid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSOCacheHaveVersion::clear_has_soid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSOCacheHaveVersion::clear_soid() {
  if (soid_ != NULL) soid_->Clear();
  clear_has_soid();
}
inline const ::CMsgSOIDOwner& CMsgSOCacheHaveVersion::soid() const {
  const ::CMsgSOIDOwner* p = soid_;
  // @@protoc_insertion_point(field_get:CMsgSOCacheHaveVersion.soid)
  return p != NULL ? *p : *reinterpret_cast<const ::CMsgSOIDOwner*>(
      &::_CMsgSOIDOwner_default_instance_);
}
inline ::CMsgSOIDOwner* CMsgSOCacheHaveVersion::release_soid() {
  // @@protoc_insertion_point(field_release:CMsgSOCacheHaveVersion.soid)
  clear_has_soid();
  ::CMsgSOIDOwner* temp = soid_;
  soid_ = NULL;
  return temp;
}
inline ::CMsgSOIDOwner* CMsgSOCacheHaveVersion::mutable_soid() {
  set_has_soid();
  if (soid_ == NULL) {
    soid_ = new ::CMsgSOIDOwner;
  }
  // @@protoc_insertion_point(field_mutable:CMsgSOCacheHaveVersion.soid)
  return soid_;
}
inline void CMsgSOCacheHaveVersion::set_allocated_soid(::CMsgSOIDOwner* soid) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete soid_;
  }
  if (soid) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      soid = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, soid, submessage_arena);
    }
    set_has_soid();
  } else {
    clear_has_soid();
  }
  soid_ = soid;
  // @@protoc_insertion_point(field_set_allocated:CMsgSOCacheHaveVersion.soid)
}

// optional fixed64 version = 2;
inline bool CMsgSOCacheHaveVersion::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSOCacheHaveVersion::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSOCacheHaveVersion::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSOCacheHaveVersion::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
  clear_has_version();
}
inline ::google::protobuf::uint64 CMsgSOCacheHaveVersion::version() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheHaveVersion.version)
  return version_;
}
inline void CMsgSOCacheHaveVersion::set_version(::google::protobuf::uint64 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:CMsgSOCacheHaveVersion.version)
}

// optional uint32 service_id = 3;
inline bool CMsgSOCacheHaveVersion::has_service_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSOCacheHaveVersion::set_has_service_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSOCacheHaveVersion::clear_has_service_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSOCacheHaveVersion::clear_service_id() {
  service_id_ = 0u;
  clear_has_service_id();
}
inline ::google::protobuf::uint32 CMsgSOCacheHaveVersion::service_id() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheHaveVersion.service_id)
  return service_id_;
}
inline void CMsgSOCacheHaveVersion::set_service_id(::google::protobuf::uint32 value) {
  set_has_service_id();
  service_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgSOCacheHaveVersion.service_id)
}

// -------------------------------------------------------------------

// CMsgConnectionStatus

// optional .GCConnectionStatus status = 1 [default = GCConnectionStatus_HAVE_SESSION];
inline bool CMsgConnectionStatus::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgConnectionStatus::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgConnectionStatus::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgConnectionStatus::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::GCConnectionStatus CMsgConnectionStatus::status() const {
  // @@protoc_insertion_point(field_get:CMsgConnectionStatus.status)
  return static_cast< ::GCConnectionStatus >(status_);
}
inline void CMsgConnectionStatus::set_status(::GCConnectionStatus value) {
  assert(::GCConnectionStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:CMsgConnectionStatus.status)
}

// optional uint32 client_session_need = 2;
inline bool CMsgConnectionStatus::has_client_session_need() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgConnectionStatus::set_has_client_session_need() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgConnectionStatus::clear_has_client_session_need() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgConnectionStatus::clear_client_session_need() {
  client_session_need_ = 0u;
  clear_has_client_session_need();
}
inline ::google::protobuf::uint32 CMsgConnectionStatus::client_session_need() const {
  // @@protoc_insertion_point(field_get:CMsgConnectionStatus.client_session_need)
  return client_session_need_;
}
inline void CMsgConnectionStatus::set_client_session_need(::google::protobuf::uint32 value) {
  set_has_client_session_need();
  client_session_need_ = value;
  // @@protoc_insertion_point(field_set:CMsgConnectionStatus.client_session_need)
}

// optional int32 queue_position = 3;
inline bool CMsgConnectionStatus::has_queue_position() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgConnectionStatus::set_has_queue_position() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgConnectionStatus::clear_has_queue_position() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgConnectionStatus::clear_queue_position() {
  queue_position_ = 0;
  clear_has_queue_position();
}
inline ::google::protobuf::int32 CMsgConnectionStatus::queue_position() const {
  // @@protoc_insertion_point(field_get:CMsgConnectionStatus.queue_position)
  return queue_position_;
}
inline void CMsgConnectionStatus::set_queue_position(::google::protobuf::int32 value) {
  set_has_queue_position();
  queue_position_ = value;
  // @@protoc_insertion_point(field_set:CMsgConnectionStatus.queue_position)
}

// optional int32 queue_size = 4;
inline bool CMsgConnectionStatus::has_queue_size() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgConnectionStatus::set_has_queue_size() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgConnectionStatus::clear_has_queue_size() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgConnectionStatus::clear_queue_size() {
  queue_size_ = 0;
  clear_has_queue_size();
}
inline ::google::protobuf::int32 CMsgConnectionStatus::queue_size() const {
  // @@protoc_insertion_point(field_get:CMsgConnectionStatus.queue_size)
  return queue_size_;
}
inline void CMsgConnectionStatus::set_queue_size(::google::protobuf::int32 value) {
  set_has_queue_size();
  queue_size_ = value;
  // @@protoc_insertion_point(field_set:CMsgConnectionStatus.queue_size)
}

// optional int32 wait_seconds = 5;
inline bool CMsgConnectionStatus::has_wait_seconds() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgConnectionStatus::set_has_wait_seconds() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgConnectionStatus::clear_has_wait_seconds() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgConnectionStatus::clear_wait_seconds() {
  wait_seconds_ = 0;
  clear_has_wait_seconds();
}
inline ::google::protobuf::int32 CMsgConnectionStatus::wait_seconds() const {
  // @@protoc_insertion_point(field_get:CMsgConnectionStatus.wait_seconds)
  return wait_seconds_;
}
inline void CMsgConnectionStatus::set_wait_seconds(::google::protobuf::int32 value) {
  set_has_wait_seconds();
  wait_seconds_ = value;
  // @@protoc_insertion_point(field_set:CMsgConnectionStatus.wait_seconds)
}

// optional int32 estimated_wait_seconds_remaining = 6;
inline bool CMsgConnectionStatus::has_estimated_wait_seconds_remaining() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgConnectionStatus::set_has_estimated_wait_seconds_remaining() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgConnectionStatus::clear_has_estimated_wait_seconds_remaining() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgConnectionStatus::clear_estimated_wait_seconds_remaining() {
  estimated_wait_seconds_remaining_ = 0;
  clear_has_estimated_wait_seconds_remaining();
}
inline ::google::protobuf::int32 CMsgConnectionStatus::estimated_wait_seconds_remaining() const {
  // @@protoc_insertion_point(field_get:CMsgConnectionStatus.estimated_wait_seconds_remaining)
  return estimated_wait_seconds_remaining_;
}
inline void CMsgConnectionStatus::set_estimated_wait_seconds_remaining(::google::protobuf::int32 value) {
  set_has_estimated_wait_seconds_remaining();
  estimated_wait_seconds_remaining_ = value;
  // @@protoc_insertion_point(field_set:CMsgConnectionStatus.estimated_wait_seconds_remaining)
}

// -------------------------------------------------------------------

// CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions

// optional uint32 service_id = 1;
inline bool CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions::has_service_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions::set_has_service_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions::clear_has_service_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions::clear_service_id() {
  service_id_ = 0u;
  clear_has_service_id();
}
inline ::google::protobuf::uint32 CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions::service_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCSOCacheSubscribe.CMsgHaveVersions.service_id)
  return service_id_;
}
inline void CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions::set_service_id(::google::protobuf::uint32 value) {
  set_has_service_id();
  service_id_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToGCSOCacheSubscribe.CMsgHaveVersions.service_id)
}

// optional uint64 version = 2;
inline bool CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
  clear_has_version();
}
inline ::google::protobuf::uint64 CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions::version() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCSOCacheSubscribe.CMsgHaveVersions.version)
  return version_;
}
inline void CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions::set_version(::google::protobuf::uint64 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToGCSOCacheSubscribe.CMsgHaveVersions.version)
}

// -------------------------------------------------------------------

// CMsgGCToGCSOCacheSubscribe

// optional fixed64 subscriber = 1;
inline bool CMsgGCToGCSOCacheSubscribe::has_subscriber() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToGCSOCacheSubscribe::set_has_subscriber() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToGCSOCacheSubscribe::clear_has_subscriber() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToGCSOCacheSubscribe::clear_subscriber() {
  subscriber_ = GOOGLE_ULONGLONG(0);
  clear_has_subscriber();
}
inline ::google::protobuf::uint64 CMsgGCToGCSOCacheSubscribe::subscriber() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCSOCacheSubscribe.subscriber)
  return subscriber_;
}
inline void CMsgGCToGCSOCacheSubscribe::set_subscriber(::google::protobuf::uint64 value) {
  set_has_subscriber();
  subscriber_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToGCSOCacheSubscribe.subscriber)
}

// optional fixed64 subscribe_to = 2;
inline bool CMsgGCToGCSOCacheSubscribe::has_subscribe_to() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToGCSOCacheSubscribe::set_has_subscribe_to() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToGCSOCacheSubscribe::clear_has_subscribe_to() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToGCSOCacheSubscribe::clear_subscribe_to() {
  subscribe_to_ = GOOGLE_ULONGLONG(0);
  clear_has_subscribe_to();
}
inline ::google::protobuf::uint64 CMsgGCToGCSOCacheSubscribe::subscribe_to() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCSOCacheSubscribe.subscribe_to)
  return subscribe_to_;
}
inline void CMsgGCToGCSOCacheSubscribe::set_subscribe_to(::google::protobuf::uint64 value) {
  set_has_subscribe_to();
  subscribe_to_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToGCSOCacheSubscribe.subscribe_to)
}

// optional fixed64 sync_version = 3;
inline bool CMsgGCToGCSOCacheSubscribe::has_sync_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToGCSOCacheSubscribe::set_has_sync_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToGCSOCacheSubscribe::clear_has_sync_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToGCSOCacheSubscribe::clear_sync_version() {
  sync_version_ = GOOGLE_ULONGLONG(0);
  clear_has_sync_version();
}
inline ::google::protobuf::uint64 CMsgGCToGCSOCacheSubscribe::sync_version() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCSOCacheSubscribe.sync_version)
  return sync_version_;
}
inline void CMsgGCToGCSOCacheSubscribe::set_sync_version(::google::protobuf::uint64 value) {
  set_has_sync_version();
  sync_version_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToGCSOCacheSubscribe.sync_version)
}

// repeated .CMsgGCToGCSOCacheSubscribe.CMsgHaveVersions have_versions = 4;
inline int CMsgGCToGCSOCacheSubscribe::have_versions_size() const {
  return have_versions_.size();
}
inline void CMsgGCToGCSOCacheSubscribe::clear_have_versions() {
  have_versions_.Clear();
}
inline const ::CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions& CMsgGCToGCSOCacheSubscribe::have_versions(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCSOCacheSubscribe.have_versions)
  return have_versions_.Get(index);
}
inline ::CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions* CMsgGCToGCSOCacheSubscribe::mutable_have_versions(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCToGCSOCacheSubscribe.have_versions)
  return have_versions_.Mutable(index);
}
inline ::CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions* CMsgGCToGCSOCacheSubscribe::add_have_versions() {
  // @@protoc_insertion_point(field_add:CMsgGCToGCSOCacheSubscribe.have_versions)
  return have_versions_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions >*
CMsgGCToGCSOCacheSubscribe::mutable_have_versions() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToGCSOCacheSubscribe.have_versions)
  return &have_versions_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions >&
CMsgGCToGCSOCacheSubscribe::have_versions() const {
  // @@protoc_insertion_point(field_list:CMsgGCToGCSOCacheSubscribe.have_versions)
  return have_versions_;
}

// -------------------------------------------------------------------

// CMsgGCToGCSOCacheUnsubscribe

// optional fixed64 subscriber = 1;
inline bool CMsgGCToGCSOCacheUnsubscribe::has_subscriber() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToGCSOCacheUnsubscribe::set_has_subscriber() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToGCSOCacheUnsubscribe::clear_has_subscriber() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToGCSOCacheUnsubscribe::clear_subscriber() {
  subscriber_ = GOOGLE_ULONGLONG(0);
  clear_has_subscriber();
}
inline ::google::protobuf::uint64 CMsgGCToGCSOCacheUnsubscribe::subscriber() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCSOCacheUnsubscribe.subscriber)
  return subscriber_;
}
inline void CMsgGCToGCSOCacheUnsubscribe::set_subscriber(::google::protobuf::uint64 value) {
  set_has_subscriber();
  subscriber_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToGCSOCacheUnsubscribe.subscriber)
}

// optional fixed64 unsubscribe_from = 2;
inline bool CMsgGCToGCSOCacheUnsubscribe::has_unsubscribe_from() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToGCSOCacheUnsubscribe::set_has_unsubscribe_from() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToGCSOCacheUnsubscribe::clear_has_unsubscribe_from() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToGCSOCacheUnsubscribe::clear_unsubscribe_from() {
  unsubscribe_from_ = GOOGLE_ULONGLONG(0);
  clear_has_unsubscribe_from();
}
inline ::google::protobuf::uint64 CMsgGCToGCSOCacheUnsubscribe::unsubscribe_from() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCSOCacheUnsubscribe.unsubscribe_from)
  return unsubscribe_from_;
}
inline void CMsgGCToGCSOCacheUnsubscribe::set_unsubscribe_from(::google::protobuf::uint64 value) {
  set_has_unsubscribe_from();
  unsubscribe_from_ = value;
  // @@protoc_insertion_point(field_set:CMsgGCToGCSOCacheUnsubscribe.unsubscribe_from)
}

// -------------------------------------------------------------------

// CMsgGCClientPing

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::PartnerAccountType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PartnerAccountType>() {
  return ::PartnerAccountType_descriptor();
}
template <> struct is_proto_enum< ::GCConnectionStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GCConnectionStatus>() {
  return ::GCConnectionStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_gcsdk_5fgcmessages_2eproto__INCLUDED
